
kernel.elf:     file format elf64-x86-64


Disassembly of section .text:

ffffffff80200000 <_code>:
ffffffff80200000:	02 b0 ad 1b 03 00    	add    0x31bad(%rax),%dh
ffffffff80200006:	01 00                	add    %eax,(%rax)
ffffffff80200008:	fb                   	sti    
ffffffff80200009:	4f 51                	rex.WRXB push %r9
ffffffff8020000b:	e4 00                	in     $0x0,%al
ffffffff8020000d:	00 20                	add    %ah,(%rax)
ffffffff8020000f:	00 00                	add    %al,(%rax)
ffffffff80200011:	00 20                	add    %ah,(%rax)
ffffffff80200013:	00 00                	add    %al,(%rax)
ffffffff80200015:	50                   	push   %rax
ffffffff80200016:	23 00                	and    (%rax),%eax
ffffffff80200018:	00 90 34 00 20 00    	add    %dl,0x200034(%rax)
ffffffff8020001e:	20 00                	and    %al,(%rax)

ffffffff80200020 <bootstrap>:
ffffffff80200020:	fa                   	cli    
ffffffff80200021:	0f 01 15 10 30 22 00 	lgdt   0x223010(%rip)        # ffffffff80423038 <_end+0xda038>
ffffffff80200028:	bc 00 80 22 00       	mov    $0x228000,%esp
ffffffff8020002d:	6a 00                	pushq  $0x0
ffffffff8020002f:	9d                   	popfq  
ffffffff80200030:	50                   	push   %rax
ffffffff80200031:	53                   	push   %rbx
ffffffff80200032:	31 c0                	xor    %eax,%eax
ffffffff80200034:	bf 00 50 23 00       	mov    $0x235000,%edi
ffffffff80200039:	b9 00 90 34 00       	mov    $0x349000,%ecx
ffffffff8020003e:	29 f9                	sub    %edi,%ecx
ffffffff80200040:	fc                   	cld    
ffffffff80200041:	f3 aa                	rep stos %al,%es:(%rdi)
ffffffff80200043:	5e                   	pop    %rsi
ffffffff80200044:	5f                   	pop    %rdi
ffffffff80200045:	0f 20 c0             	mov    %cr0,%rax
ffffffff80200048:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
ffffffff8020004d:	0f 22 c0             	mov    %rax,%cr0
ffffffff80200050:	0f 20 e0             	mov    %cr4,%rax
ffffffff80200053:	83 c8 20             	or     $0x20,%eax
ffffffff80200056:	0f 22 e0             	mov    %rax,%cr4
ffffffff80200059:	b8 00 40 22 00       	mov    $0x224000,%eax
ffffffff8020005e:	0f 22 d8             	mov    %rax,%cr3
ffffffff80200061:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
ffffffff80200066:	0f 32                	rdmsr  
ffffffff80200068:	0d 01 01 00 00       	or     $0x101,%eax
ffffffff8020006d:	0f 30                	wrmsr  
ffffffff8020006f:	0f 20 c0             	mov    %cr0,%rax
ffffffff80200072:	0d 00 00 00 80       	or     $0x80000000,%eax
ffffffff80200077:	0f 22 c0             	mov    %rax,%cr0
ffffffff8020007a:	ea                   	(bad)  
ffffffff8020007b:	26 80 22 00          	andb   $0x0,%es:(%rdx)
ffffffff8020007f:	08 00                	or     %al,(%rax)

ffffffff80200081 <_mem_get>:
ffffffff80200081:	c3                   	retq   

ffffffff80200082 <_mem_get_vma>:
ffffffff80200082:	31 c0                	xor    %eax,%eax
ffffffff80200084:	c3                   	retq   

ffffffff80200085 <malloc>:
ffffffff80200085:	48 63 05 74 4f 03 00 	movslq 0x34f74(%rip),%rax        # ffffffff80235000 <all>
ffffffff8020008c:	48 8d 15 6d 84 04 00 	lea    0x4846d(%rip),%rdx        # ffffffff80248500 <allocated>
ffffffff80200093:	01 c7                	add    %eax,%edi
ffffffff80200095:	48 01 d0             	add    %rdx,%rax
ffffffff80200098:	89 3d 62 4f 03 00    	mov    %edi,0x34f62(%rip)        # ffffffff80235000 <all>
ffffffff8020009e:	c3                   	retq   

ffffffff8020009f <free>:
ffffffff8020009f:	c3                   	retq   

ffffffff802000a0 <__stack_chk_fail>:
ffffffff802000a0:	c3                   	retq   

ffffffff802000a1 <floor>:
ffffffff802000a1:	c3                   	retq   

ffffffff802000a2 <ceil>:
ffffffff802000a2:	c3                   	retq   

ffffffff802000a3 <memcpy>:
ffffffff802000a3:	c3                   	retq   

ffffffff802000a4 <memset>:
ffffffff802000a4:	c3                   	retq   

ffffffff802000a5 <memmove>:
ffffffff802000a5:	c3                   	retq   

ffffffff802000a6 <strcmp>:
ffffffff802000a6:	c3                   	retq   

ffffffff802000a7 <memcmp>:
ffffffff802000a7:	c3                   	retq   

ffffffff802000a8 <strlen>:
ffffffff802000a8:	c3                   	retq   

ffffffff802000a9 <__isoc99_sscanf>:
ffffffff802000a9:	c3                   	retq   

ffffffff802000aa <fputs>:
ffffffff802000aa:	c3                   	retq   

ffffffff802000ab <fprintf>:
ffffffff802000ab:	c3                   	retq   

ffffffff802000ac <fwrite>:
ffffffff802000ac:	c3                   	retq   

ffffffff802000ad <snprintf>:
ffffffff802000ad:	c3                   	retq   

ffffffff802000ae <fputc>:
ffffffff802000ae:	c3                   	retq   

ffffffff802000af <fmin>:
ffffffff802000af:	c3                   	retq   

ffffffff802000b0 <log1p>:
ffffffff802000b0:	c3                   	retq   

ffffffff802000b1 <closedir>:
ffffffff802000b1:	c3                   	retq   

ffffffff802000b2 <close>:
ffffffff802000b2:	c3                   	retq   

ffffffff802000b3 <atan>:
ffffffff802000b3:	c3                   	retq   

ffffffff802000b4 <atan2>:
ffffffff802000b4:	c3                   	retq   

ffffffff802000b5 <tan>:
ffffffff802000b5:	c3                   	retq   

ffffffff802000b6 <sin>:
ffffffff802000b6:	c3                   	retq   

ffffffff802000b7 <lseek64>:
ffffffff802000b7:	c3                   	retq   

ffffffff802000b8 <dlsym>:
ffffffff802000b8:	c3                   	retq   

ffffffff802000b9 <dlclose>:
ffffffff802000b9:	c3                   	retq   

ffffffff802000ba <expm1>:
ffffffff802000ba:	c3                   	retq   

ffffffff802000bb <hypot>:
ffffffff802000bb:	c3                   	retq   

ffffffff802000bc <readdir64>:
ffffffff802000bc:	c3                   	retq   

ffffffff802000bd <nextafter>:
ffffffff802000bd:	c3                   	retq   

ffffffff802000be <round>:
ffffffff802000be:	c3                   	retq   

ffffffff802000bf <sigaltstack>:
ffffffff802000bf:	c3                   	retq   

ffffffff802000c0 <unlink>:
ffffffff802000c0:	c3                   	retq   

ffffffff802000c1 <exit>:
ffffffff802000c1:	c3                   	retq   

ffffffff802000c2 <realloc>:
ffffffff802000c2:	c3                   	retq   

ffffffff802000c3 <mmap64>:
ffffffff802000c3:	c3                   	retq   

ffffffff802000c4 <munmap>:
ffffffff802000c4:	c3                   	retq   

ffffffff802000c5 <vfprintf>:
ffffffff802000c5:	c3                   	retq   

ffffffff802000c6 <fflush>:
ffffffff802000c6:	c3                   	retq   

ffffffff802000c7 <abort>:
ffffffff802000c7:	c3                   	retq   

ffffffff802000c8 <getrlimit64>:
ffffffff802000c8:	c3                   	retq   

ffffffff802000c9 <sigemptyset>:
ffffffff802000c9:	c3                   	retq   

ffffffff802000ca <sigaction>:
ffffffff802000ca:	c3                   	retq   

ffffffff802000cb <sigaddset>:
ffffffff802000cb:	c3                   	retq   

ffffffff802000cc <sigismember>:
ffffffff802000cc:	c3                   	retq   

ffffffff802000cd <sigdelset>:
ffffffff802000cd:	c3                   	retq   

ffffffff802000ce <sigprocmask>:
ffffffff802000ce:	c3                   	retq   

ffffffff802000cf <__sigsetjmp>:
ffffffff802000cf:	c3                   	retq   

ffffffff802000d0 <open64>:
ffffffff802000d0:	c3                   	retq   

ffffffff802000d1 <__xstat64>:
ffffffff802000d1:	c3                   	retq   

ffffffff802000d2 <log10>:
ffffffff802000d2:	c3                   	retq   

ffffffff802000d3 <readlink>:
ffffffff802000d3:	c3                   	retq   

ffffffff802000d4 <uselocale>:
ffffffff802000d4:	c3                   	retq   

ffffffff802000d5 <exp>:
ffffffff802000d5:	c3                   	retq   

ffffffff802000d6 <ldexp>:
ffffffff802000d6:	c3                   	retq   

ffffffff802000d7 <fma>:
ffffffff802000d7:	c3                   	retq   

ffffffff802000d8 <acos>:
ffffffff802000d8:	c3                   	retq   

ffffffff802000d9 <asin>:
ffffffff802000d9:	c3                   	retq   

ffffffff802000da <tanh>:
ffffffff802000da:	c3                   	retq   

ffffffff802000db <cosh>:
ffffffff802000db:	c3                   	retq   

ffffffff802000dc <cos>:
ffffffff802000dc:	c3                   	retq   

ffffffff802000dd <sinh>:
ffffffff802000dd:	c3                   	retq   

ffffffff802000de <pow>:
ffffffff802000de:	c3                   	retq   

ffffffff802000df <sqrt>:
ffffffff802000df:	c3                   	retq   

ffffffff802000e0 <modf>:
ffffffff802000e0:	c3                   	retq   

ffffffff802000e1 <log>:
ffffffff802000e1:	c3                   	retq   

ffffffff802000e2 <isatty>:
ffffffff802000e2:	c3                   	retq   

ffffffff802000e3 <read>:
ffffffff802000e3:	c3                   	retq   

ffffffff802000e4 <write>:
ffffffff802000e4:	c3                   	retq   

ffffffff802000e5 <getenv>:
ffffffff802000e5:	c3                   	retq   

ffffffff802000e6 <opendir>:
ffffffff802000e6:	c3                   	retq   

ffffffff802000e7 <ioctl>:
ffffffff802000e7:	c3                   	retq   

ffffffff802000e8 <dlopen>:
ffffffff802000e8:	c3                   	retq   

ffffffff802000e9 <secure_getenv>:
ffffffff802000e9:	c3                   	retq   

ffffffff802000ea <newlocale>:
ffffffff802000ea:	c3                   	retq   

ffffffff802000eb <freelocale>:
ffffffff802000eb:	c3                   	retq   

ffffffff802000ec <fmod>:
ffffffff802000ec:	c3                   	retq   

ffffffff802000ed <frexp>:
ffffffff802000ed:	c3                   	retq   

ffffffff802000ee <strtol>:
ffffffff802000ee:	c3                   	retq   

ffffffff802000ef <strtod_l>:
ffffffff802000ef:	c3                   	retq   

ffffffff802000f0 <dlerror>:
ffffffff802000f0:	c3                   	retq   

ffffffff802000f1 <getpid>:
ffffffff802000f1:	c3                   	retq   

ffffffff802000f2 <getppid>:
ffffffff802000f2:	c3                   	retq   

ffffffff802000f3 <system>:
ffffffff802000f3:	c3                   	retq   

ffffffff802000f4 <getrusage>:
ffffffff802000f4:	c3                   	retq   

ffffffff802000f5 <gettimeofday>:
ffffffff802000f5:	c3                   	retq   

ffffffff802000f6 <getcwd>:
ffffffff802000f6:	c3                   	retq   

ffffffff802000f7 <chdir>:
ffffffff802000f7:	c3                   	retq   

ffffffff802000f8 <rename>:
ffffffff802000f8:	c3                   	retq   

ffffffff802000f9 <vsnprintf>:
ffffffff802000f9:	c3                   	retq   

ffffffff802000fa <put_char>:
ffffffff802000fa:	0f b7 05 03 4f 03 00 	movzwl 0x34f03(%rip),%eax        # ffffffff80235004 <y_pos>
ffffffff80200101:	0f b7 35 fe 4e 03 00 	movzwl 0x34efe(%rip),%esi        # ffffffff80235006 <x_pos>
ffffffff80200108:	48 d1 ff             	sar    %rdi
ffffffff8020010b:	40 0f b6 ff          	movzbl %dil,%edi
ffffffff8020010f:	89 c1                	mov    %eax,%ecx
ffffffff80200111:	6b c0 50             	imul   $0x50,%eax,%eax
ffffffff80200114:	89 f2                	mov    %esi,%edx
ffffffff80200116:	66 81 cf 00 1e       	or     $0x1e00,%di
ffffffff8020011b:	ff c2                	inc    %edx
ffffffff8020011d:	01 f0                	add    %esi,%eax
ffffffff8020011f:	48 8b 35 12 7f 02 00 	mov    0x27f12(%rip),%rsi        # ffffffff80228038 <vidmem>
ffffffff80200126:	48 98                	cltq   
ffffffff80200128:	66 89 3c 46          	mov    %di,(%rsi,%rax,2)
ffffffff8020012c:	66 83 fa 4f          	cmp    $0x4f,%dx
ffffffff80200130:	77 08                	ja     ffffffff8020013a <put_char+0x40>
ffffffff80200132:	66 89 15 cd 4e 03 00 	mov    %dx,0x34ecd(%rip)        # ffffffff80235006 <x_pos>
ffffffff80200139:	c3                   	retq   
ffffffff8020013a:	66 c7 05 c3 4e 03 00 	movw   $0x0,0x34ec3(%rip)        # ffffffff80235006 <x_pos>
ffffffff80200141:	00 00 
ffffffff80200143:	ff c1                	inc    %ecx
ffffffff80200145:	66 89 0d b8 4e 03 00 	mov    %cx,0x34eb8(%rip)        # ffffffff80235004 <y_pos>
ffffffff8020014c:	c3                   	retq   

ffffffff8020014d <skip_char>:
ffffffff8020014d:	48 d1 ff             	sar    %rdi
ffffffff80200150:	45 31 c9             	xor    %r9d,%r9d
ffffffff80200153:	49 89 f8             	mov    %rdi,%r8
ffffffff80200156:	45 39 c8             	cmp    %r9d,%r8d
ffffffff80200159:	7e 0f                	jle    ffffffff8020016a <skip_char+0x1d>
ffffffff8020015b:	bf 41 00 00 00       	mov    $0x41,%edi
ffffffff80200160:	e8 95 ff ff ff       	callq  ffffffff802000fa <put_char>
ffffffff80200165:	41 ff c1             	inc    %r9d
ffffffff80200168:	eb ec                	jmp    ffffffff80200156 <skip_char+0x9>
ffffffff8020016a:	c3                   	retq   

ffffffff8020016b <clear_screen>:
ffffffff8020016b:	48 8b 15 c6 7e 02 00 	mov    0x27ec6(%rip),%rdx        # ffffffff80228038 <vidmem>
ffffffff80200172:	31 c0                	xor    %eax,%eax
ffffffff80200174:	66 c7 04 42 20 1e    	movw   $0x1e20,(%rdx,%rax,2)
ffffffff8020017a:	48 ff c0             	inc    %rax
ffffffff8020017d:	48 3d d0 07 00 00    	cmp    $0x7d0,%rax
ffffffff80200183:	75 ef                	jne    ffffffff80200174 <clear_screen+0x9>
ffffffff80200185:	c3                   	retq   
ffffffff80200186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020018d:	00 00 00 

ffffffff80200190 <caml_program>:
ffffffff80200190:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200194:	e8 97 16 00 00       	callq  ffffffff80201830 <camlCamlinternalFormatBasics__entry>
ffffffff80200199:	48 c7 c0 40 40 24 80 	mov    $0xffffffff80244040,%rax
ffffffff802001a0:	48 83 00 01          	addq   $0x1,(%rax)
ffffffff802001a4:	e8 d7 30 00 00       	callq  ffffffff80203280 <camlStdlib__entry>
ffffffff802001a9:	48 c7 c0 40 40 24 80 	mov    $0xffffffff80244040,%rax
ffffffff802001b0:	48 83 00 01          	addq   $0x1,(%rax)
ffffffff802001b4:	e8 d7 06 00 00       	callq  ffffffff80200890 <camlMem__entry>
ffffffff802001b9:	48 c7 c0 40 40 24 80 	mov    $0xffffffff80244040,%rax
ffffffff802001c0:	48 83 00 01          	addq   $0x1,(%rax)
ffffffff802001c4:	e8 07 05 00 00       	callq  ffffffff802006d0 <camlVid__entry>
ffffffff802001c9:	48 c7 c0 40 40 24 80 	mov    $0xffffffff80244040,%rax
ffffffff802001d0:	48 83 00 01          	addq   $0x1,(%rax)
ffffffff802001d4:	e8 57 04 00 00       	callq  ffffffff80200630 <camlKmain__entry>
ffffffff802001d9:	48 c7 c0 40 40 24 80 	mov    $0xffffffff80244040,%rax
ffffffff802001e0:	48 83 00 01          	addq   $0x1,(%rax)
ffffffff802001e4:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802001eb:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802001ef:	c3                   	retq   

ffffffff802001f0 <caml_curry4>:
ffffffff802001f0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802001f4:	48 89 c7             	mov    %rax,%rdi
ffffffff802001f7:	49 83 ef 30          	sub    $0x30,%r15
ffffffff802001fb:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200202:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200205:	72 36                	jb     ffffffff8020023d <caml_curry4+0x4d>
ffffffff80200207:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020020b:	48 c7 40 f8 f7 14 00 	movq   $0x14f7,-0x8(%rax)
ffffffff80200212:	00 
ffffffff80200213:	48 c7 c6 80 02 20 80 	mov    $0xffffffff80200280,%rsi
ffffffff8020021a:	48 89 30             	mov    %rsi,(%rax)
ffffffff8020021d:	48 c7 40 08 07 00 00 	movq   $0x7,0x8(%rax)
ffffffff80200224:	00 
ffffffff80200225:	48 c7 c6 50 02 20 80 	mov    $0xffffffff80200250,%rsi
ffffffff8020022c:	48 89 70 10          	mov    %rsi,0x10(%rax)
ffffffff80200230:	48 89 78 18          	mov    %rdi,0x18(%rax)
ffffffff80200234:	48 89 58 20          	mov    %rbx,0x20(%rax)
ffffffff80200238:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020023c:	c3                   	retq   
ffffffff8020023d:	e8 0e 38 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200242:	eb b3                	jmp    ffffffff802001f7 <caml_curry4+0x7>
ffffffff80200244:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020024b:	00 00 00 00 
ffffffff8020024f:	90                   	nop

ffffffff80200250 <caml_curry4_1_app>:
ffffffff80200250:	48 89 c1             	mov    %rax,%rcx
ffffffff80200253:	49 89 d8             	mov    %rbx,%r8
ffffffff80200256:	49 89 f9             	mov    %rdi,%r9
ffffffff80200259:	48 8b 56 20          	mov    0x20(%rsi),%rdx
ffffffff8020025d:	48 8b 46 18          	mov    0x18(%rsi),%rax
ffffffff80200261:	4c 8b 62 10          	mov    0x10(%rdx),%r12
ffffffff80200265:	48 89 cb             	mov    %rcx,%rbx
ffffffff80200268:	4c 89 c7             	mov    %r8,%rdi
ffffffff8020026b:	4c 89 ce             	mov    %r9,%rsi
ffffffff8020026e:	41 ff e4             	jmpq   *%r12
ffffffff80200271:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80200278:	00 00 00 00 
ffffffff8020027c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80200280 <caml_curry4_1>:
ffffffff80200280:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200284:	48 89 c7             	mov    %rax,%rdi
ffffffff80200287:	49 83 ef 30          	sub    $0x30,%r15
ffffffff8020028b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200292:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200295:	72 36                	jb     ffffffff802002cd <caml_curry4_1+0x4d>
ffffffff80200297:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020029b:	48 c7 40 f8 f7 14 00 	movq   $0x14f7,-0x8(%rax)
ffffffff802002a2:	00 
ffffffff802002a3:	48 c7 c6 00 03 20 80 	mov    $0xffffffff80200300,%rsi
ffffffff802002aa:	48 89 30             	mov    %rsi,(%rax)
ffffffff802002ad:	48 c7 40 08 05 00 00 	movq   $0x5,0x8(%rax)
ffffffff802002b4:	00 
ffffffff802002b5:	48 c7 c6 e0 02 20 80 	mov    $0xffffffff802002e0,%rsi
ffffffff802002bc:	48 89 70 10          	mov    %rsi,0x10(%rax)
ffffffff802002c0:	48 89 78 18          	mov    %rdi,0x18(%rax)
ffffffff802002c4:	48 89 58 20          	mov    %rbx,0x20(%rax)
ffffffff802002c8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802002cc:	c3                   	retq   
ffffffff802002cd:	e8 7e 37 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802002d2:	eb b3                	jmp    ffffffff80200287 <caml_curry4_1+0x7>
ffffffff802002d4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802002db:	00 00 00 00 
ffffffff802002df:	90                   	nop

ffffffff802002e0 <caml_curry4_2_app>:
ffffffff802002e0:	48 89 c1             	mov    %rax,%rcx
ffffffff802002e3:	48 89 de             	mov    %rbx,%rsi
ffffffff802002e6:	48 8b 47 20          	mov    0x20(%rdi),%rax
ffffffff802002ea:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff802002ee:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
ffffffff802002f2:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff802002f6:	4c 8b 42 10          	mov    0x10(%rdx),%r8
ffffffff802002fa:	48 89 cf             	mov    %rcx,%rdi
ffffffff802002fd:	41 ff e0             	jmpq   *%r8

ffffffff80200300 <caml_curry4_2>:
ffffffff80200300:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200304:	48 89 c7             	mov    %rax,%rdi
ffffffff80200307:	49 83 ef 28          	sub    $0x28,%r15
ffffffff8020030b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200312:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200315:	72 2b                	jb     ffffffff80200342 <caml_curry4_2+0x42>
ffffffff80200317:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020031b:	48 c7 40 f8 f7 10 00 	movq   $0x10f7,-0x8(%rax)
ffffffff80200322:	00 
ffffffff80200323:	48 c7 c6 50 03 20 80 	mov    $0xffffffff80200350,%rsi
ffffffff8020032a:	48 89 30             	mov    %rsi,(%rax)
ffffffff8020032d:	48 c7 40 08 03 00 00 	movq   $0x3,0x8(%rax)
ffffffff80200334:	00 
ffffffff80200335:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff80200339:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff8020033d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200341:	c3                   	retq   
ffffffff80200342:	e8 09 37 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200347:	eb be                	jmp    ffffffff80200307 <caml_curry4_2+0x7>
ffffffff80200349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80200350 <caml_curry4_3>:
ffffffff80200350:	48 89 c6             	mov    %rax,%rsi
ffffffff80200353:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff80200357:	48 8b 48 20          	mov    0x20(%rax),%rcx
ffffffff8020035b:	48 8b 51 20          	mov    0x20(%rcx),%rdx
ffffffff8020035f:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
ffffffff80200363:	48 8b 58 18          	mov    0x18(%rax),%rbx
ffffffff80200367:	48 8b 41 18          	mov    0x18(%rcx),%rax
ffffffff8020036b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
ffffffff8020036f:	ff e1                	jmpq   *%rcx
ffffffff80200371:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80200378:	00 00 00 00 
ffffffff8020037c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80200380 <caml_curry3>:
ffffffff80200380:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200384:	48 89 c7             	mov    %rax,%rdi
ffffffff80200387:	49 83 ef 30          	sub    $0x30,%r15
ffffffff8020038b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200392:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200395:	72 36                	jb     ffffffff802003cd <caml_curry3+0x4d>
ffffffff80200397:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020039b:	48 c7 40 f8 f7 14 00 	movq   $0x14f7,-0x8(%rax)
ffffffff802003a2:	00 
ffffffff802003a3:	48 c7 c6 00 04 20 80 	mov    $0xffffffff80200400,%rsi
ffffffff802003aa:	48 89 30             	mov    %rsi,(%rax)
ffffffff802003ad:	48 c7 40 08 05 00 00 	movq   $0x5,0x8(%rax)
ffffffff802003b4:	00 
ffffffff802003b5:	48 c7 c6 e0 03 20 80 	mov    $0xffffffff802003e0,%rsi
ffffffff802003bc:	48 89 70 10          	mov    %rsi,0x10(%rax)
ffffffff802003c0:	48 89 78 18          	mov    %rdi,0x18(%rax)
ffffffff802003c4:	48 89 58 20          	mov    %rbx,0x20(%rax)
ffffffff802003c8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802003cc:	c3                   	retq   
ffffffff802003cd:	e8 7e 36 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802003d2:	eb b3                	jmp    ffffffff80200387 <caml_curry3+0x7>
ffffffff802003d4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802003db:	00 00 00 00 
ffffffff802003df:	90                   	nop

ffffffff802003e0 <caml_curry3_1_app>:
ffffffff802003e0:	48 89 c2             	mov    %rax,%rdx
ffffffff802003e3:	48 89 d9             	mov    %rbx,%rcx
ffffffff802003e6:	48 8b 77 20          	mov    0x20(%rdi),%rsi
ffffffff802003ea:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff802003ee:	4c 8b 46 10          	mov    0x10(%rsi),%r8
ffffffff802003f2:	48 89 d3             	mov    %rdx,%rbx
ffffffff802003f5:	48 89 cf             	mov    %rcx,%rdi
ffffffff802003f8:	41 ff e0             	jmpq   *%r8
ffffffff802003fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80200400 <caml_curry3_1>:
ffffffff80200400:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200404:	48 89 c7             	mov    %rax,%rdi
ffffffff80200407:	49 83 ef 28          	sub    $0x28,%r15
ffffffff8020040b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200412:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200415:	72 2b                	jb     ffffffff80200442 <caml_curry3_1+0x42>
ffffffff80200417:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020041b:	48 c7 40 f8 f7 10 00 	movq   $0x10f7,-0x8(%rax)
ffffffff80200422:	00 
ffffffff80200423:	48 c7 c6 50 04 20 80 	mov    $0xffffffff80200450,%rsi
ffffffff8020042a:	48 89 30             	mov    %rsi,(%rax)
ffffffff8020042d:	48 c7 40 08 03 00 00 	movq   $0x3,0x8(%rax)
ffffffff80200434:	00 
ffffffff80200435:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff80200439:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff8020043d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200441:	c3                   	retq   
ffffffff80200442:	e8 09 36 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200447:	eb be                	jmp    ffffffff80200407 <caml_curry3_1+0x7>
ffffffff80200449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80200450 <caml_curry3_2>:
ffffffff80200450:	48 89 c7             	mov    %rax,%rdi
ffffffff80200453:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff80200457:	48 8b 70 20          	mov    0x20(%rax),%rsi
ffffffff8020045b:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
ffffffff8020045f:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80200463:	48 8b 56 10          	mov    0x10(%rsi),%rdx
ffffffff80200467:	ff e2                	jmpq   *%rdx
ffffffff80200469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80200470 <caml_curry2>:
ffffffff80200470:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200474:	48 89 c7             	mov    %rax,%rdi
ffffffff80200477:	49 83 ef 28          	sub    $0x28,%r15
ffffffff8020047b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200482:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200485:	72 2b                	jb     ffffffff802004b2 <caml_curry2+0x42>
ffffffff80200487:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020048b:	48 c7 40 f8 f7 10 00 	movq   $0x10f7,-0x8(%rax)
ffffffff80200492:	00 
ffffffff80200493:	48 c7 c6 c0 04 20 80 	mov    $0xffffffff802004c0,%rsi
ffffffff8020049a:	48 89 30             	mov    %rsi,(%rax)
ffffffff8020049d:	48 c7 40 08 03 00 00 	movq   $0x3,0x8(%rax)
ffffffff802004a4:	00 
ffffffff802004a5:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff802004a9:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff802004ad:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802004b1:	c3                   	retq   
ffffffff802004b2:	e8 99 35 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802004b7:	eb be                	jmp    ffffffff80200477 <caml_curry2+0x7>
ffffffff802004b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802004c0 <caml_curry2_1>:
ffffffff802004c0:	48 89 c6             	mov    %rax,%rsi
ffffffff802004c3:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
ffffffff802004c7:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff802004cb:	48 8b 57 10          	mov    0x10(%rdi),%rdx
ffffffff802004cf:	48 89 f3             	mov    %rsi,%rbx
ffffffff802004d2:	ff e2                	jmpq   *%rdx
ffffffff802004d4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802004db:	00 00 00 00 
ffffffff802004df:	90                   	nop

ffffffff802004e0 <caml_apply3>:
ffffffff802004e0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff802004e4:	48 8b 56 08          	mov    0x8(%rsi),%rdx
ffffffff802004e8:	48 83 fa 07          	cmp    $0x7,%rdx
ffffffff802004ec:	75 0a                	jne    ffffffff802004f8 <caml_apply3+0x18>
ffffffff802004ee:	48 8b 56 10          	mov    0x10(%rsi),%rdx
ffffffff802004f2:	48 83 c4 18          	add    $0x18,%rsp
ffffffff802004f6:	ff e2                	jmpq   *%rdx
ffffffff802004f8:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff802004fd:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff80200501:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff80200504:	48 89 f3             	mov    %rsi,%rbx
ffffffff80200507:	ff d7                	callq  *%rdi
ffffffff80200509:	48 89 c3             	mov    %rax,%rbx
ffffffff8020050c:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff8020050f:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80200513:	ff d7                	callq  *%rdi
ffffffff80200515:	48 89 c3             	mov    %rax,%rbx
ffffffff80200518:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff8020051b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80200520:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80200524:	ff e7                	jmpq   *%rdi
ffffffff80200526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020052d:	00 00 00 

ffffffff80200530 <caml_apply2>:
ffffffff80200530:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200534:	48 8b 77 08          	mov    0x8(%rdi),%rsi
ffffffff80200538:	48 83 fe 05          	cmp    $0x5,%rsi
ffffffff8020053c:	75 0a                	jne    ffffffff80200548 <caml_apply2+0x18>
ffffffff8020053e:	48 8b 77 10          	mov    0x10(%rdi),%rsi
ffffffff80200542:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200546:	ff e6                	jmpq   *%rsi
ffffffff80200548:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff8020054c:	48 8b 37             	mov    (%rdi),%rsi
ffffffff8020054f:	48 89 fb             	mov    %rdi,%rbx
ffffffff80200552:	ff d6                	callq  *%rsi
ffffffff80200554:	48 89 c3             	mov    %rax,%rbx
ffffffff80200557:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff8020055a:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8020055e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200562:	ff e7                	jmpq   *%rdi

ffffffff80200564 <caml_startup__code_end>:
ffffffff80200564:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020056b:	00 00 00 
ffffffff8020056e:	66 90                	xchg   %ax,%ax

ffffffff80200570 <camlKmain__kmain_83>:
ffffffff80200570:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200574:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
ffffffff8020057b:	e8 eb fb ff ff       	callq  ffffffff8020016b <clear_screen>
ffffffff80200580:	48 c7 c0 68 8b 22 80 	mov    $0xffffffff80228b68,%rax
ffffffff80200587:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8020058b:	48 c7 c3 6c 00 00 00 	mov    $0x6c,%rbx
ffffffff80200592:	88 18                	mov    %bl,(%rax)
ffffffff80200594:	48 c7 c7 91 00 00 00 	mov    $0x91,%rdi
ffffffff8020059b:	e8 5a fb ff ff       	callq  ffffffff802000fa <put_char>
ffffffff802005a0:	48 c7 c7 cb 00 00 00 	mov    $0xcb,%rdi
ffffffff802005a7:	e8 4e fb ff ff       	callq  ffffffff802000fa <put_char>
ffffffff802005ac:	48 c7 c7 d9 00 00 00 	mov    $0xd9,%rdi
ffffffff802005b3:	e8 42 fb ff ff       	callq  ffffffff802000fa <put_char>
ffffffff802005b8:	48 c7 c7 d9 00 00 00 	mov    $0xd9,%rdi
ffffffff802005bf:	e8 36 fb ff ff       	callq  ffffffff802000fa <put_char>
ffffffff802005c4:	48 c7 c7 df 00 00 00 	mov    $0xdf,%rdi
ffffffff802005cb:	e8 2a fb ff ff       	callq  ffffffff802000fa <put_char>
ffffffff802005d0:	48 c7 c7 05 00 00 00 	mov    $0x5,%rdi
ffffffff802005d7:	e8 71 fb ff ff       	callq  ffffffff8020014d <skip_char>
ffffffff802005dc:	48 c7 c7 af 00 00 00 	mov    $0xaf,%rdi
ffffffff802005e3:	e8 12 fb ff ff       	callq  ffffffff802000fa <put_char>
ffffffff802005e8:	48 c7 c7 df 00 00 00 	mov    $0xdf,%rdi
ffffffff802005ef:	e8 06 fb ff ff       	callq  ffffffff802000fa <put_char>
ffffffff802005f4:	48 c7 c7 e5 00 00 00 	mov    $0xe5,%rdi
ffffffff802005fb:	e8 fa fa ff ff       	callq  ffffffff802000fa <put_char>
ffffffff80200600:	48 c7 c7 d9 00 00 00 	mov    $0xd9,%rdi
ffffffff80200607:	e8 ee fa ff ff       	callq  ffffffff802000fa <put_char>
ffffffff8020060c:	48 c7 c7 c9 00 00 00 	mov    $0xc9,%rdi
ffffffff80200613:	e8 e2 fa ff ff       	callq  ffffffff802000fa <put_char>
ffffffff80200618:	48 c7 c7 43 00 00 00 	mov    $0x43,%rdi
ffffffff8020061f:	e8 d6 fa ff ff       	callq  ffffffff802000fa <put_char>
ffffffff80200624:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200628:	c3                   	retq   
ffffffff80200629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80200630 <camlKmain__entry>:
ffffffff80200630:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200634:	48 c7 c0 50 8a 22 80 	mov    $0xffffffff80228a50,%rax
ffffffff8020063b:	48 c7 c3 68 8a 22 80 	mov    $0xffffffff80228a68,%rbx
ffffffff80200642:	48 89 03             	mov    %rax,(%rbx)
ffffffff80200645:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff8020064c:	e8 1f ff ff ff       	callq  ffffffff80200570 <camlKmain__kmain_83>
ffffffff80200651:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80200658:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020065c:	c3                   	retq   

ffffffff8020065d <camlKmain__code_end>:
ffffffff8020065d:	0f 1f 00             	nopl   (%rax)

ffffffff80200660 <camlVid__set_attr_86>:
ffffffff80200660:	48 c7 c3 68 8b 22 80 	mov    $0xffffffff80228b68,%rbx
ffffffff80200667:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
ffffffff8020066b:	48 89 03             	mov    %rax,(%rbx)
ffffffff8020066e:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80200675:	c3                   	retq   
ffffffff80200676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020067d:	00 00 00 

ffffffff80200680 <camlVid__clear_88>:
ffffffff80200680:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80200687:	c3                   	retq   
ffffffff80200688:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020068f:	00 

ffffffff80200690 <camlVid__putc_90>:
ffffffff80200690:	48 c7 c3 68 8b 22 80 	mov    $0xffffffff80228b68,%rbx
ffffffff80200697:	48 8b 5b 20          	mov    0x20(%rbx),%rbx
ffffffff8020069b:	48 d1 f8             	sar    %rax
ffffffff8020069e:	88 03                	mov    %al,(%rbx)
ffffffff802006a0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802006a7:	c3                   	retq   
ffffffff802006a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802006af:	00 

ffffffff802006b0 <camlVid__put_string_92>:
ffffffff802006b0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802006b7:	c3                   	retq   
ffffffff802006b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802006bf:	00 

ffffffff802006c0 <camlVid__scroll_94>:
ffffffff802006c0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802006c7:	c3                   	retq   
ffffffff802006c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802006cf:	00 

ffffffff802006d0 <camlVid__entry>:
ffffffff802006d0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802006d4:	48 c7 c0 68 8b 22 80 	mov    $0xffffffff80228b68,%rax
ffffffff802006db:	48 c7 40 10 a1 00 00 	movq   $0xa1,0x10(%rax)
ffffffff802006e2:	00 
ffffffff802006e3:	48 c7 40 18 33 00 00 	movq   $0x33,0x18(%rax)
ffffffff802006ea:	00 
ffffffff802006eb:	48 c7 c7 01 00 17 00 	mov    $0x170001,%rdi
ffffffff802006f2:	e8 8b f9 ff ff       	callq  ffffffff80200082 <_mem_get_vma>
ffffffff802006f7:	48 c7 c3 68 8b 22 80 	mov    $0xffffffff80228b68,%rbx
ffffffff802006fe:	48 89 43 20          	mov    %rax,0x20(%rbx)
ffffffff80200702:	48 c7 c0 30 00 00 00 	mov    $0x30,%rax
ffffffff80200709:	e8 7e 35 00 00       	callq  ffffffff80203c8c <caml_allocN>
ffffffff8020070e:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200712:	48 83 c0 20          	add    $0x20,%rax
ffffffff80200716:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff8020071d:	00 
ffffffff8020071e:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
ffffffff80200725:	48 89 43 28          	mov    %rax,0x28(%rbx)
ffffffff80200729:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
ffffffff8020072d:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff80200734:	00 
ffffffff80200735:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
ffffffff8020073c:	48 89 43 30          	mov    %rax,0x30(%rbx)
ffffffff80200740:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
ffffffff80200744:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff8020074b:	00 
ffffffff8020074c:	48 c7 00 01 3c 00 00 	movq   $0x3c01,(%rax)
ffffffff80200753:	48 89 43 38          	mov    %rax,0x38(%rbx)
ffffffff80200757:	48 c7 c0 f0 8a 22 80 	mov    $0xffffffff80228af0,%rax
ffffffff8020075e:	48 89 43 40          	mov    %rax,0x40(%rbx)
ffffffff80200762:	48 c7 c0 08 8b 22 80 	mov    $0xffffffff80228b08,%rax
ffffffff80200769:	48 89 03             	mov    %rax,(%rbx)
ffffffff8020076c:	48 c7 c0 20 8b 22 80 	mov    $0xffffffff80228b20,%rax
ffffffff80200773:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff80200777:	48 c7 c0 38 8b 22 80 	mov    $0xffffffff80228b38,%rax
ffffffff8020077e:	48 89 43 48          	mov    %rax,0x48(%rbx)
ffffffff80200782:	48 c7 c0 50 8b 22 80 	mov    $0xffffffff80228b50,%rax
ffffffff80200789:	48 89 43 50          	mov    %rax,0x50(%rbx)
ffffffff8020078d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80200794:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200798:	c3                   	retq   

ffffffff80200799 <camlVid__code_end>:
ffffffff80200799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802007a0 <camlMem__fun_147>:
ffffffff802007a0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802007a4:	48 89 c7             	mov    %rax,%rdi
ffffffff802007a7:	e8 d6 f8 ff ff       	callq  ffffffff80200082 <_mem_get_vma>
ffffffff802007ac:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802007b0:	c3                   	retq   
ffffffff802007b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802007b8:	00 00 00 00 
ffffffff802007bc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802007c0 <camlMem__setc_83>:
ffffffff802007c0:	48 d1 fb             	sar    %rbx
ffffffff802007c3:	48 d1 ff             	sar    %rdi
ffffffff802007c6:	40 88 3c 18          	mov    %dil,(%rax,%rbx,1)
ffffffff802007ca:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802007d1:	c3                   	retq   
ffffffff802007d2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802007d9:	00 00 00 00 
ffffffff802007dd:	0f 1f 00             	nopl   (%rax)

ffffffff802007e0 <camlMem__setb_135>:
ffffffff802007e0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff802007e4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff802007e9:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff802007ed:	48 89 f8             	mov    %rdi,%rax
ffffffff802007f0:	e8 cb 15 00 00       	callq  ffffffff80201dc0 <camlStdlib__char_of_int_138>
ffffffff802007f5:	48 d1 f8             	sar    %rax
ffffffff802007f8:	48 8b 1c 24          	mov    (%rsp),%rbx
ffffffff802007fc:	48 d1 fb             	sar    %rbx
ffffffff802007ff:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80200804:	88 04 1f             	mov    %al,(%rdi,%rbx,1)
ffffffff80200807:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff8020080e:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80200812:	c3                   	retq   
ffffffff80200813:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020081a:	00 00 00 00 
ffffffff8020081e:	66 90                	xchg   %ax,%ax

ffffffff80200820 <camlMem__setw_139>:
ffffffff80200820:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80200824:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80200829:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff8020082e:	48 89 f8             	mov    %rdi,%rax
ffffffff80200831:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80200835:	48 c1 e8 08          	shr    $0x8,%rax
ffffffff80200839:	48 83 c8 01          	or     $0x1,%rax
ffffffff8020083d:	e8 7e 15 00 00       	callq  ffffffff80201dc0 <camlStdlib__char_of_int_138>
ffffffff80200842:	48 d1 f8             	sar    %rax
ffffffff80200845:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff8020084a:	48 8d 5c 1b ff       	lea    -0x1(%rbx,%rbx,1),%rbx
ffffffff8020084f:	48 d1 fb             	sar    %rbx
ffffffff80200852:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80200857:	88 04 1f             	mov    %al,(%rdi,%rbx,1)
ffffffff8020085a:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8020085e:	48 25 ff 01 00 00    	and    $0x1ff,%rax
ffffffff80200864:	e8 57 15 00 00       	callq  ffffffff80201dc0 <camlStdlib__char_of_int_138>
ffffffff80200869:	48 d1 f8             	sar    %rax
ffffffff8020086c:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff80200871:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80200876:	88 04 1f             	mov    %al,(%rdi,%rbx,1)
ffffffff80200879:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80200880:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80200884:	c3                   	retq   
ffffffff80200885:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020088c:	00 00 00 00 

ffffffff80200890 <camlMem__entry>:
ffffffff80200890:	48 c7 c0 78 8c 22 80 	mov    $0xffffffff80228c78,%rax
ffffffff80200897:	48 c7 c3 00 8c 22 80 	mov    $0xffffffff80228c00,%rbx
ffffffff8020089e:	48 89 18             	mov    %rbx,(%rax)
ffffffff802008a1:	48 c7 c3 18 8c 22 80 	mov    $0xffffffff80228c18,%rbx
ffffffff802008a8:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff802008ac:	48 c7 c3 38 8c 22 80 	mov    $0xffffffff80228c38,%rbx
ffffffff802008b3:	48 89 58 10          	mov    %rbx,0x10(%rax)
ffffffff802008b7:	48 c7 c3 58 8c 22 80 	mov    $0xffffffff80228c58,%rbx
ffffffff802008be:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff802008c2:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802008c9:	c3                   	retq   

ffffffff802008ca <camlMem__code_end>:
ffffffff802008ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>:
ffffffff802008d0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802008d4:	48 89 c3             	mov    %rax,%rbx
ffffffff802008d7:	f6 c3 01             	test   $0x1,%bl
ffffffff802008da:	74 0c                	je     ffffffff802008e8 <camlCamlinternalFormatBasics__erase_rel_141+0x18>
ffffffff802008dc:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802008e3:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802008e7:	c3                   	retq   
ffffffff802008e8:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff802008ec:	48 0f b6 43 f8       	movzbq -0x8(%rbx),%rax
ffffffff802008f1:	48 8d 15 08 07 02 00 	lea    0x20708(%rip),%rdx        # ffffffff80221000 <_rodata>
ffffffff802008f8:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
ffffffff802008fc:	48 01 c2             	add    %rax,%rdx
ffffffff802008ff:	ff e2                	jmpq   *%rdx
ffffffff80200901:	0f 1f 00             	nopl   (%rax)
ffffffff80200904:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200907:	e8 c4 ff ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff8020090c:	48 89 c3             	mov    %rax,%rbx
ffffffff8020090f:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200913:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff8020091a:	4c 3b 38             	cmp    (%rax),%r15
ffffffff8020091d:	0f 82 8a 03 00 00    	jb     ffffffff80200cad <camlCamlinternalFormatBasics__erase_rel_141+0x3dd>
ffffffff80200923:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200927:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff8020092e:	00 
ffffffff8020092f:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200932:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200936:	c3                   	retq   
ffffffff80200937:	90                   	nop
ffffffff80200938:	48 8b 03             	mov    (%rbx),%rax
ffffffff8020093b:	e8 90 ff ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200940:	48 89 c3             	mov    %rax,%rbx
ffffffff80200943:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200947:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff8020094e:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200951:	0f 82 4c 03 00 00    	jb     ffffffff80200ca3 <camlCamlinternalFormatBasics__erase_rel_141+0x3d3>
ffffffff80200957:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020095b:	48 c7 40 f8 01 04 00 	movq   $0x401,-0x8(%rax)
ffffffff80200962:	00 
ffffffff80200963:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200966:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020096a:	c3                   	retq   
ffffffff8020096b:	90                   	nop
ffffffff8020096c:	48 8b 03             	mov    (%rbx),%rax
ffffffff8020096f:	e8 5c ff ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200974:	48 89 c3             	mov    %rax,%rbx
ffffffff80200977:	49 83 ef 10          	sub    $0x10,%r15
ffffffff8020097b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200982:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200985:	0f 82 0e 03 00 00    	jb     ffffffff80200c99 <camlCamlinternalFormatBasics__erase_rel_141+0x3c9>
ffffffff8020098b:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020098f:	48 c7 40 f8 02 04 00 	movq   $0x402,-0x8(%rax)
ffffffff80200996:	00 
ffffffff80200997:	48 89 18             	mov    %rbx,(%rax)
ffffffff8020099a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020099e:	c3                   	retq   
ffffffff8020099f:	90                   	nop
ffffffff802009a0:	48 8b 03             	mov    (%rbx),%rax
ffffffff802009a3:	e8 28 ff ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff802009a8:	48 89 c3             	mov    %rax,%rbx
ffffffff802009ab:	49 83 ef 10          	sub    $0x10,%r15
ffffffff802009af:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802009b6:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802009b9:	0f 82 d0 02 00 00    	jb     ffffffff80200c8f <camlCamlinternalFormatBasics__erase_rel_141+0x3bf>
ffffffff802009bf:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802009c3:	48 c7 40 f8 03 04 00 	movq   $0x403,-0x8(%rax)
ffffffff802009ca:	00 
ffffffff802009cb:	48 89 18             	mov    %rbx,(%rax)
ffffffff802009ce:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802009d2:	c3                   	retq   
ffffffff802009d3:	90                   	nop
ffffffff802009d4:	48 8b 03             	mov    (%rbx),%rax
ffffffff802009d7:	e8 f4 fe ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff802009dc:	48 89 c3             	mov    %rax,%rbx
ffffffff802009df:	49 83 ef 10          	sub    $0x10,%r15
ffffffff802009e3:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802009ea:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802009ed:	0f 82 92 02 00 00    	jb     ffffffff80200c85 <camlCamlinternalFormatBasics__erase_rel_141+0x3b5>
ffffffff802009f3:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802009f7:	48 c7 40 f8 04 04 00 	movq   $0x404,-0x8(%rax)
ffffffff802009fe:	00 
ffffffff802009ff:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200a02:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200a06:	c3                   	retq   
ffffffff80200a07:	90                   	nop
ffffffff80200a08:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200a0b:	e8 c0 fe ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200a10:	48 89 c3             	mov    %rax,%rbx
ffffffff80200a13:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200a17:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200a1e:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200a21:	0f 82 54 02 00 00    	jb     ffffffff80200c7b <camlCamlinternalFormatBasics__erase_rel_141+0x3ab>
ffffffff80200a27:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200a2b:	48 c7 40 f8 05 04 00 	movq   $0x405,-0x8(%rax)
ffffffff80200a32:	00 
ffffffff80200a33:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200a36:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200a3a:	c3                   	retq   
ffffffff80200a3b:	90                   	nop
ffffffff80200a3c:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200a3f:	e8 8c fe ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200a44:	48 89 c3             	mov    %rax,%rbx
ffffffff80200a47:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200a4b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200a52:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200a55:	0f 82 16 02 00 00    	jb     ffffffff80200c71 <camlCamlinternalFormatBasics__erase_rel_141+0x3a1>
ffffffff80200a5b:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200a5f:	48 c7 40 f8 06 04 00 	movq   $0x406,-0x8(%rax)
ffffffff80200a66:	00 
ffffffff80200a67:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200a6a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200a6e:	c3                   	retq   
ffffffff80200a6f:	90                   	nop
ffffffff80200a70:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200a73:	e8 58 fe ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200a78:	48 89 c3             	mov    %rax,%rbx
ffffffff80200a7b:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200a7f:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200a86:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200a89:	0f 82 d8 01 00 00    	jb     ffffffff80200c67 <camlCamlinternalFormatBasics__erase_rel_141+0x397>
ffffffff80200a8f:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200a93:	48 c7 40 f8 07 04 00 	movq   $0x407,-0x8(%rax)
ffffffff80200a9a:	00 
ffffffff80200a9b:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200a9e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200aa2:	c3                   	retq   
ffffffff80200aa3:	90                   	nop
ffffffff80200aa4:	48 8b 43 08          	mov    0x8(%rbx),%rax
ffffffff80200aa8:	e8 23 fe ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200aad:	48 89 c3             	mov    %rax,%rbx
ffffffff80200ab0:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80200ab4:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200abb:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200abe:	0f 82 99 01 00 00    	jb     ffffffff80200c5d <camlCamlinternalFormatBasics__erase_rel_141+0x38d>
ffffffff80200ac4:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200ac8:	48 c7 40 f8 08 08 00 	movq   $0x808,-0x8(%rax)
ffffffff80200acf:	00 
ffffffff80200ad0:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80200ad4:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80200ad7:	48 89 38             	mov    %rdi,(%rax)
ffffffff80200ada:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80200ade:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200ae2:	c3                   	retq   
ffffffff80200ae3:	90                   	nop
ffffffff80200ae4:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200ae7:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80200aeb:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff80200aef:	e8 dc fd ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200af4:	48 89 c3             	mov    %rax,%rbx
ffffffff80200af7:	49 83 ef 20          	sub    $0x20,%r15
ffffffff80200afb:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200b02:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200b05:	0f 82 48 01 00 00    	jb     ffffffff80200c53 <camlCamlinternalFormatBasics__erase_rel_141+0x383>
ffffffff80200b0b:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200b0f:	48 c7 40 f8 09 0c 00 	movq   $0xc09,-0x8(%rax)
ffffffff80200b16:	00 
ffffffff80200b17:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80200b1b:	48 89 38             	mov    %rdi,(%rax)
ffffffff80200b1e:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff80200b22:	48 89 58 10          	mov    %rbx,0x10(%rax)
ffffffff80200b26:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200b2a:	c3                   	retq   
ffffffff80200b2b:	90                   	nop
ffffffff80200b2c:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200b2f:	e8 9c fd ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200b34:	48 89 c3             	mov    %rax,%rbx
ffffffff80200b37:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200b3b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200b42:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200b45:	0f 82 fe 00 00 00    	jb     ffffffff80200c49 <camlCamlinternalFormatBasics__erase_rel_141+0x379>
ffffffff80200b4b:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200b4f:	48 c7 40 f8 0a 04 00 	movq   $0x40a,-0x8(%rax)
ffffffff80200b56:	00 
ffffffff80200b57:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200b5a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200b5e:	c3                   	retq   
ffffffff80200b5f:	90                   	nop
ffffffff80200b60:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200b63:	e8 68 fd ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200b68:	48 89 c3             	mov    %rax,%rbx
ffffffff80200b6b:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200b6f:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200b76:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200b79:	0f 82 c0 00 00 00    	jb     ffffffff80200c3f <camlCamlinternalFormatBasics__erase_rel_141+0x36f>
ffffffff80200b7f:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200b83:	48 c7 40 f8 0b 04 00 	movq   $0x40b,-0x8(%rax)
ffffffff80200b8a:	00 
ffffffff80200b8b:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200b8e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200b92:	c3                   	retq   
ffffffff80200b93:	90                   	nop
ffffffff80200b94:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200b97:	e8 34 fd ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200b9c:	48 89 c3             	mov    %rax,%rbx
ffffffff80200b9f:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200ba3:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200baa:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200bad:	0f 82 82 00 00 00    	jb     ffffffff80200c35 <camlCamlinternalFormatBasics__erase_rel_141+0x365>
ffffffff80200bb3:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200bb7:	48 c7 40 f8 0c 04 00 	movq   $0x40c,-0x8(%rax)
ffffffff80200bbe:	00 
ffffffff80200bbf:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200bc2:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200bc6:	c3                   	retq   
ffffffff80200bc7:	90                   	nop
ffffffff80200bc8:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200bcb:	e8 00 fd ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200bd0:	48 89 c3             	mov    %rax,%rbx
ffffffff80200bd3:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200bd7:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200bde:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200be1:	72 4b                	jb     ffffffff80200c2e <camlCamlinternalFormatBasics__erase_rel_141+0x35e>
ffffffff80200be3:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200be7:	48 c7 40 f8 0d 04 00 	movq   $0x40d,-0x8(%rax)
ffffffff80200bee:	00 
ffffffff80200bef:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200bf2:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200bf6:	c3                   	retq   
ffffffff80200bf7:	90                   	nop
ffffffff80200bf8:	48 8b 03             	mov    (%rbx),%rax
ffffffff80200bfb:	e8 d0 fc ff ff       	callq  ffffffff802008d0 <camlCamlinternalFormatBasics__erase_rel_141>
ffffffff80200c00:	48 89 c3             	mov    %rax,%rbx
ffffffff80200c03:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200c07:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200c0e:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200c11:	72 14                	jb     ffffffff80200c27 <camlCamlinternalFormatBasics__erase_rel_141+0x357>
ffffffff80200c13:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200c17:	48 c7 40 f8 0e 04 00 	movq   $0x40e,-0x8(%rax)
ffffffff80200c1e:	00 
ffffffff80200c1f:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200c22:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200c26:	c3                   	retq   
ffffffff80200c27:	e8 24 2e 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c2c:	eb d5                	jmp    ffffffff80200c03 <camlCamlinternalFormatBasics__erase_rel_141+0x333>
ffffffff80200c2e:	e8 1d 2e 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c33:	eb 9e                	jmp    ffffffff80200bd3 <camlCamlinternalFormatBasics__erase_rel_141+0x303>
ffffffff80200c35:	e8 16 2e 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c3a:	e9 60 ff ff ff       	jmpq   ffffffff80200b9f <camlCamlinternalFormatBasics__erase_rel_141+0x2cf>
ffffffff80200c3f:	e8 0c 2e 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c44:	e9 22 ff ff ff       	jmpq   ffffffff80200b6b <camlCamlinternalFormatBasics__erase_rel_141+0x29b>
ffffffff80200c49:	e8 02 2e 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c4e:	e9 e4 fe ff ff       	jmpq   ffffffff80200b37 <camlCamlinternalFormatBasics__erase_rel_141+0x267>
ffffffff80200c53:	e8 f8 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c58:	e9 9a fe ff ff       	jmpq   ffffffff80200af7 <camlCamlinternalFormatBasics__erase_rel_141+0x227>
ffffffff80200c5d:	e8 ee 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c62:	e9 49 fe ff ff       	jmpq   ffffffff80200ab0 <camlCamlinternalFormatBasics__erase_rel_141+0x1e0>
ffffffff80200c67:	e8 e4 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c6c:	e9 0a fe ff ff       	jmpq   ffffffff80200a7b <camlCamlinternalFormatBasics__erase_rel_141+0x1ab>
ffffffff80200c71:	e8 da 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c76:	e9 cc fd ff ff       	jmpq   ffffffff80200a47 <camlCamlinternalFormatBasics__erase_rel_141+0x177>
ffffffff80200c7b:	e8 d0 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c80:	e9 8e fd ff ff       	jmpq   ffffffff80200a13 <camlCamlinternalFormatBasics__erase_rel_141+0x143>
ffffffff80200c85:	e8 c6 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c8a:	e9 50 fd ff ff       	jmpq   ffffffff802009df <camlCamlinternalFormatBasics__erase_rel_141+0x10f>
ffffffff80200c8f:	e8 bc 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c94:	e9 12 fd ff ff       	jmpq   ffffffff802009ab <camlCamlinternalFormatBasics__erase_rel_141+0xdb>
ffffffff80200c99:	e8 b2 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200c9e:	e9 d4 fc ff ff       	jmpq   ffffffff80200977 <camlCamlinternalFormatBasics__erase_rel_141+0xa7>
ffffffff80200ca3:	e8 a8 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200ca8:	e9 96 fc ff ff       	jmpq   ffffffff80200943 <camlCamlinternalFormatBasics__erase_rel_141+0x73>
ffffffff80200cad:	e8 9e 2d 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80200cb2:	e9 58 fc ff ff       	jmpq   ffffffff8020090f <camlCamlinternalFormatBasics__erase_rel_141+0x3f>
ffffffff80200cb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80200cbe:	00 00 

ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>:
ffffffff80200cc0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80200cc4:	48 89 c7             	mov    %rax,%rdi
ffffffff80200cc7:	40 f6 c7 01          	test   $0x1,%dil
ffffffff80200ccb:	74 0b                	je     ffffffff80200cd8 <camlCamlinternalFormatBasics__concat_fmtty_323+0x18>
ffffffff80200ccd:	48 89 d8             	mov    %rbx,%rax
ffffffff80200cd0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200cd4:	c3                   	retq   
ffffffff80200cd5:	0f 1f 00             	nopl   (%rax)
ffffffff80200cd8:	48 89 3c 24          	mov    %rdi,(%rsp)
ffffffff80200cdc:	48 0f b6 47 f8       	movzbq -0x8(%rdi),%rax
ffffffff80200ce1:	48 8d 15 54 03 02 00 	lea    0x20354(%rip),%rdx        # ffffffff8022103c <_rodata+0x3c>
ffffffff80200ce8:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
ffffffff80200cec:	48 01 c2             	add    %rax,%rdx
ffffffff80200cef:	ff e2                	jmpq   *%rdx
ffffffff80200cf1:	0f 1f 00             	nopl   (%rax)
ffffffff80200cf4:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200cf7:	e8 c4 ff ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200cfc:	48 89 c3             	mov    %rax,%rbx
ffffffff80200cff:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200d03:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200d0a:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200d0d:	0f 82 8a 03 00 00    	jb     ffffffff8020109d <camlCamlinternalFormatBasics__concat_fmtty_323+0x3dd>
ffffffff80200d13:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200d17:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff80200d1e:	00 
ffffffff80200d1f:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200d22:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200d26:	c3                   	retq   
ffffffff80200d27:	90                   	nop
ffffffff80200d28:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200d2b:	e8 90 ff ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200d30:	48 89 c3             	mov    %rax,%rbx
ffffffff80200d33:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200d37:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200d3e:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200d41:	0f 82 4c 03 00 00    	jb     ffffffff80201093 <camlCamlinternalFormatBasics__concat_fmtty_323+0x3d3>
ffffffff80200d47:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200d4b:	48 c7 40 f8 01 04 00 	movq   $0x401,-0x8(%rax)
ffffffff80200d52:	00 
ffffffff80200d53:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200d56:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200d5a:	c3                   	retq   
ffffffff80200d5b:	90                   	nop
ffffffff80200d5c:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200d5f:	e8 5c ff ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200d64:	48 89 c3             	mov    %rax,%rbx
ffffffff80200d67:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200d6b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200d72:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200d75:	0f 82 0e 03 00 00    	jb     ffffffff80201089 <camlCamlinternalFormatBasics__concat_fmtty_323+0x3c9>
ffffffff80200d7b:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200d7f:	48 c7 40 f8 02 04 00 	movq   $0x402,-0x8(%rax)
ffffffff80200d86:	00 
ffffffff80200d87:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200d8a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200d8e:	c3                   	retq   
ffffffff80200d8f:	90                   	nop
ffffffff80200d90:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200d93:	e8 28 ff ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200d98:	48 89 c3             	mov    %rax,%rbx
ffffffff80200d9b:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200d9f:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200da6:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200da9:	0f 82 d0 02 00 00    	jb     ffffffff8020107f <camlCamlinternalFormatBasics__concat_fmtty_323+0x3bf>
ffffffff80200daf:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200db3:	48 c7 40 f8 03 04 00 	movq   $0x403,-0x8(%rax)
ffffffff80200dba:	00 
ffffffff80200dbb:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200dbe:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200dc2:	c3                   	retq   
ffffffff80200dc3:	90                   	nop
ffffffff80200dc4:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200dc7:	e8 f4 fe ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200dcc:	48 89 c3             	mov    %rax,%rbx
ffffffff80200dcf:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200dd3:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200dda:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200ddd:	0f 82 92 02 00 00    	jb     ffffffff80201075 <camlCamlinternalFormatBasics__concat_fmtty_323+0x3b5>
ffffffff80200de3:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200de7:	48 c7 40 f8 04 04 00 	movq   $0x404,-0x8(%rax)
ffffffff80200dee:	00 
ffffffff80200def:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200df2:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200df6:	c3                   	retq   
ffffffff80200df7:	90                   	nop
ffffffff80200df8:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200dfb:	e8 c0 fe ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200e00:	48 89 c3             	mov    %rax,%rbx
ffffffff80200e03:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200e07:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200e0e:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200e11:	0f 82 54 02 00 00    	jb     ffffffff8020106b <camlCamlinternalFormatBasics__concat_fmtty_323+0x3ab>
ffffffff80200e17:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200e1b:	48 c7 40 f8 05 04 00 	movq   $0x405,-0x8(%rax)
ffffffff80200e22:	00 
ffffffff80200e23:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200e26:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200e2a:	c3                   	retq   
ffffffff80200e2b:	90                   	nop
ffffffff80200e2c:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200e2f:	e8 8c fe ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200e34:	48 89 c3             	mov    %rax,%rbx
ffffffff80200e37:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200e3b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200e42:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200e45:	0f 82 16 02 00 00    	jb     ffffffff80201061 <camlCamlinternalFormatBasics__concat_fmtty_323+0x3a1>
ffffffff80200e4b:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200e4f:	48 c7 40 f8 06 04 00 	movq   $0x406,-0x8(%rax)
ffffffff80200e56:	00 
ffffffff80200e57:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200e5a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200e5e:	c3                   	retq   
ffffffff80200e5f:	90                   	nop
ffffffff80200e60:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200e63:	e8 58 fe ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200e68:	48 89 c3             	mov    %rax,%rbx
ffffffff80200e6b:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200e6f:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200e76:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200e79:	0f 82 d8 01 00 00    	jb     ffffffff80201057 <camlCamlinternalFormatBasics__concat_fmtty_323+0x397>
ffffffff80200e7f:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200e83:	48 c7 40 f8 07 04 00 	movq   $0x407,-0x8(%rax)
ffffffff80200e8a:	00 
ffffffff80200e8b:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200e8e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200e92:	c3                   	retq   
ffffffff80200e93:	90                   	nop
ffffffff80200e94:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff80200e98:	e8 23 fe ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200e9d:	48 89 c3             	mov    %rax,%rbx
ffffffff80200ea0:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80200ea4:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200eab:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200eae:	0f 82 99 01 00 00    	jb     ffffffff8020104d <camlCamlinternalFormatBasics__concat_fmtty_323+0x38d>
ffffffff80200eb4:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200eb8:	48 c7 40 f8 08 08 00 	movq   $0x808,-0x8(%rax)
ffffffff80200ebf:	00 
ffffffff80200ec0:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80200ec4:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80200ec7:	48 89 38             	mov    %rdi,(%rax)
ffffffff80200eca:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80200ece:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200ed2:	c3                   	retq   
ffffffff80200ed3:	90                   	nop
ffffffff80200ed4:	48 8b 47 10          	mov    0x10(%rdi),%rax
ffffffff80200ed8:	e8 e3 fd ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200edd:	48 89 c3             	mov    %rax,%rbx
ffffffff80200ee0:	49 83 ef 20          	sub    $0x20,%r15
ffffffff80200ee4:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200eeb:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200eee:	0f 82 4f 01 00 00    	jb     ffffffff80201043 <camlCamlinternalFormatBasics__concat_fmtty_323+0x383>
ffffffff80200ef4:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200ef8:	48 c7 40 f8 09 0c 00 	movq   $0xc09,-0x8(%rax)
ffffffff80200eff:	00 
ffffffff80200f00:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff80200f04:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff80200f07:	48 89 38             	mov    %rdi,(%rax)
ffffffff80200f0a:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff80200f0e:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff80200f12:	48 89 58 10          	mov    %rbx,0x10(%rax)
ffffffff80200f16:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200f1a:	c3                   	retq   
ffffffff80200f1b:	90                   	nop
ffffffff80200f1c:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200f1f:	e8 9c fd ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200f24:	48 89 c3             	mov    %rax,%rbx
ffffffff80200f27:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200f2b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200f32:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200f35:	0f 82 fe 00 00 00    	jb     ffffffff80201039 <camlCamlinternalFormatBasics__concat_fmtty_323+0x379>
ffffffff80200f3b:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200f3f:	48 c7 40 f8 0a 04 00 	movq   $0x40a,-0x8(%rax)
ffffffff80200f46:	00 
ffffffff80200f47:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200f4a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200f4e:	c3                   	retq   
ffffffff80200f4f:	90                   	nop
ffffffff80200f50:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200f53:	e8 68 fd ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200f58:	48 89 c3             	mov    %rax,%rbx
ffffffff80200f5b:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200f5f:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200f66:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200f69:	0f 82 c0 00 00 00    	jb     ffffffff8020102f <camlCamlinternalFormatBasics__concat_fmtty_323+0x36f>
ffffffff80200f6f:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200f73:	48 c7 40 f8 0b 04 00 	movq   $0x40b,-0x8(%rax)
ffffffff80200f7a:	00 
ffffffff80200f7b:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200f7e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200f82:	c3                   	retq   
ffffffff80200f83:	90                   	nop
ffffffff80200f84:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200f87:	e8 34 fd ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200f8c:	48 89 c3             	mov    %rax,%rbx
ffffffff80200f8f:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200f93:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200f9a:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200f9d:	0f 82 82 00 00 00    	jb     ffffffff80201025 <camlCamlinternalFormatBasics__concat_fmtty_323+0x365>
ffffffff80200fa3:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200fa7:	48 c7 40 f8 0c 04 00 	movq   $0x40c,-0x8(%rax)
ffffffff80200fae:	00 
ffffffff80200faf:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200fb2:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200fb6:	c3                   	retq   
ffffffff80200fb7:	90                   	nop
ffffffff80200fb8:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200fbb:	e8 00 fd ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200fc0:	48 89 c3             	mov    %rax,%rbx
ffffffff80200fc3:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200fc7:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200fce:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80200fd1:	72 4b                	jb     ffffffff8020101e <camlCamlinternalFormatBasics__concat_fmtty_323+0x35e>
ffffffff80200fd3:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80200fd7:	48 c7 40 f8 0d 04 00 	movq   $0x40d,-0x8(%rax)
ffffffff80200fde:	00 
ffffffff80200fdf:	48 89 18             	mov    %rbx,(%rax)
ffffffff80200fe2:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200fe6:	c3                   	retq   
ffffffff80200fe7:	90                   	nop
ffffffff80200fe8:	48 8b 07             	mov    (%rdi),%rax
ffffffff80200feb:	e8 d0 fc ff ff       	callq  ffffffff80200cc0 <camlCamlinternalFormatBasics__concat_fmtty_323>
ffffffff80200ff0:	48 89 c3             	mov    %rax,%rbx
ffffffff80200ff3:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80200ff7:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80200ffe:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201001:	72 14                	jb     ffffffff80201017 <camlCamlinternalFormatBasics__concat_fmtty_323+0x357>
ffffffff80201003:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201007:	48 c7 40 f8 0e 04 00 	movq   $0x40e,-0x8(%rax)
ffffffff8020100e:	00 
ffffffff8020100f:	48 89 18             	mov    %rbx,(%rax)
ffffffff80201012:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201016:	c3                   	retq   
ffffffff80201017:	e8 34 2a 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020101c:	eb d5                	jmp    ffffffff80200ff3 <camlCamlinternalFormatBasics__concat_fmtty_323+0x333>
ffffffff8020101e:	e8 2d 2a 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201023:	eb 9e                	jmp    ffffffff80200fc3 <camlCamlinternalFormatBasics__concat_fmtty_323+0x303>
ffffffff80201025:	e8 26 2a 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020102a:	e9 60 ff ff ff       	jmpq   ffffffff80200f8f <camlCamlinternalFormatBasics__concat_fmtty_323+0x2cf>
ffffffff8020102f:	e8 1c 2a 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201034:	e9 22 ff ff ff       	jmpq   ffffffff80200f5b <camlCamlinternalFormatBasics__concat_fmtty_323+0x29b>
ffffffff80201039:	e8 12 2a 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020103e:	e9 e4 fe ff ff       	jmpq   ffffffff80200f27 <camlCamlinternalFormatBasics__concat_fmtty_323+0x267>
ffffffff80201043:	e8 08 2a 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201048:	e9 93 fe ff ff       	jmpq   ffffffff80200ee0 <camlCamlinternalFormatBasics__concat_fmtty_323+0x220>
ffffffff8020104d:	e8 fe 29 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201052:	e9 49 fe ff ff       	jmpq   ffffffff80200ea0 <camlCamlinternalFormatBasics__concat_fmtty_323+0x1e0>
ffffffff80201057:	e8 f4 29 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020105c:	e9 0a fe ff ff       	jmpq   ffffffff80200e6b <camlCamlinternalFormatBasics__concat_fmtty_323+0x1ab>
ffffffff80201061:	e8 ea 29 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201066:	e9 cc fd ff ff       	jmpq   ffffffff80200e37 <camlCamlinternalFormatBasics__concat_fmtty_323+0x177>
ffffffff8020106b:	e8 e0 29 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201070:	e9 8e fd ff ff       	jmpq   ffffffff80200e03 <camlCamlinternalFormatBasics__concat_fmtty_323+0x143>
ffffffff80201075:	e8 d6 29 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020107a:	e9 50 fd ff ff       	jmpq   ffffffff80200dcf <camlCamlinternalFormatBasics__concat_fmtty_323+0x10f>
ffffffff8020107f:	e8 cc 29 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201084:	e9 12 fd ff ff       	jmpq   ffffffff80200d9b <camlCamlinternalFormatBasics__concat_fmtty_323+0xdb>
ffffffff80201089:	e8 c2 29 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020108e:	e9 d4 fc ff ff       	jmpq   ffffffff80200d67 <camlCamlinternalFormatBasics__concat_fmtty_323+0xa7>
ffffffff80201093:	e8 b8 29 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201098:	e9 96 fc ff ff       	jmpq   ffffffff80200d33 <camlCamlinternalFormatBasics__concat_fmtty_323+0x73>
ffffffff8020109d:	e8 ae 29 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802010a2:	e9 58 fc ff ff       	jmpq   ffffffff80200cff <camlCamlinternalFormatBasics__concat_fmtty_323+0x3f>
ffffffff802010a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802010ae:	00 00 

ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>:
ffffffff802010b0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802010b4:	48 89 c7             	mov    %rax,%rdi
ffffffff802010b7:	40 f6 c7 01          	test   $0x1,%dil
ffffffff802010bb:	74 0b                	je     ffffffff802010c8 <camlCamlinternalFormatBasics__concat_fmt_510+0x18>
ffffffff802010bd:	48 89 d8             	mov    %rbx,%rax
ffffffff802010c0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802010c4:	c3                   	retq   
ffffffff802010c5:	0f 1f 00             	nopl   (%rax)
ffffffff802010c8:	48 89 3c 24          	mov    %rdi,(%rsp)
ffffffff802010cc:	48 0f b6 47 f8       	movzbq -0x8(%rdi),%rax
ffffffff802010d1:	48 8d 15 a0 ff 01 00 	lea    0x1ffa0(%rip),%rdx        # ffffffff80221078 <_rodata+0x78>
ffffffff802010d8:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
ffffffff802010dc:	48 01 c2             	add    %rax,%rdx
ffffffff802010df:	ff e2                	jmpq   *%rdx
ffffffff802010e1:	0f 1f 00             	nopl   (%rax)
ffffffff802010e4:	48 8b 07             	mov    (%rdi),%rax
ffffffff802010e7:	e8 c4 ff ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802010ec:	48 89 c3             	mov    %rax,%rbx
ffffffff802010ef:	49 83 ef 10          	sub    $0x10,%r15
ffffffff802010f3:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802010fa:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802010fd:	0f 82 21 07 00 00    	jb     ffffffff80201824 <camlCamlinternalFormatBasics__concat_fmt_510+0x774>
ffffffff80201103:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201107:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff8020110e:	00 
ffffffff8020110f:	48 89 18             	mov    %rbx,(%rax)
ffffffff80201112:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201116:	c3                   	retq   
ffffffff80201117:	90                   	nop
ffffffff80201118:	48 8b 07             	mov    (%rdi),%rax
ffffffff8020111b:	e8 90 ff ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201120:	48 89 c3             	mov    %rax,%rbx
ffffffff80201123:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80201127:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff8020112e:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201131:	0f 82 e3 06 00 00    	jb     ffffffff8020181a <camlCamlinternalFormatBasics__concat_fmt_510+0x76a>
ffffffff80201137:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020113b:	48 c7 40 f8 01 04 00 	movq   $0x401,-0x8(%rax)
ffffffff80201142:	00 
ffffffff80201143:	48 89 18             	mov    %rbx,(%rax)
ffffffff80201146:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020114a:	c3                   	retq   
ffffffff8020114b:	90                   	nop
ffffffff8020114c:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff80201150:	e8 5b ff ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201155:	48 89 c3             	mov    %rax,%rbx
ffffffff80201158:	49 83 ef 18          	sub    $0x18,%r15
ffffffff8020115c:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201163:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201166:	0f 82 a4 06 00 00    	jb     ffffffff80201810 <camlCamlinternalFormatBasics__concat_fmt_510+0x760>
ffffffff8020116c:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201170:	48 c7 40 f8 02 08 00 	movq   $0x802,-0x8(%rax)
ffffffff80201177:	00 
ffffffff80201178:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff8020117c:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff8020117f:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201182:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80201186:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020118a:	c3                   	retq   
ffffffff8020118b:	90                   	nop
ffffffff8020118c:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff80201190:	e8 1b ff ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201195:	48 89 c3             	mov    %rax,%rbx
ffffffff80201198:	49 83 ef 18          	sub    $0x18,%r15
ffffffff8020119c:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802011a3:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802011a6:	0f 82 5a 06 00 00    	jb     ffffffff80201806 <camlCamlinternalFormatBasics__concat_fmt_510+0x756>
ffffffff802011ac:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802011b0:	48 c7 40 f8 03 08 00 	movq   $0x803,-0x8(%rax)
ffffffff802011b7:	00 
ffffffff802011b8:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff802011bc:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff802011bf:	48 89 38             	mov    %rdi,(%rax)
ffffffff802011c2:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff802011c6:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802011ca:	c3                   	retq   
ffffffff802011cb:	90                   	nop
ffffffff802011cc:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff802011d0:	e8 db fe ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802011d5:	48 89 c3             	mov    %rax,%rbx
ffffffff802011d8:	49 83 ef 28          	sub    $0x28,%r15
ffffffff802011dc:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802011e3:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802011e6:	0f 82 10 06 00 00    	jb     ffffffff802017fc <camlCamlinternalFormatBasics__concat_fmt_510+0x74c>
ffffffff802011ec:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802011f0:	48 c7 40 f8 04 10 00 	movq   $0x1004,-0x8(%rax)
ffffffff802011f7:	00 
ffffffff802011f8:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff802011fc:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff802011ff:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201202:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff80201206:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff8020120a:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
ffffffff8020120e:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff80201212:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff80201216:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020121a:	c3                   	retq   
ffffffff8020121b:	90                   	nop
ffffffff8020121c:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff80201220:	e8 8b fe ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201225:	48 89 c3             	mov    %rax,%rbx
ffffffff80201228:	49 83 ef 28          	sub    $0x28,%r15
ffffffff8020122c:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201233:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201236:	0f 82 b6 05 00 00    	jb     ffffffff802017f2 <camlCamlinternalFormatBasics__concat_fmt_510+0x742>
ffffffff8020123c:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201240:	48 c7 40 f8 05 10 00 	movq   $0x1005,-0x8(%rax)
ffffffff80201247:	00 
ffffffff80201248:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff8020124c:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff8020124f:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201252:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff80201256:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff8020125a:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
ffffffff8020125e:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff80201262:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff80201266:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020126a:	c3                   	retq   
ffffffff8020126b:	90                   	nop
ffffffff8020126c:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff80201270:	e8 3b fe ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201275:	48 89 c3             	mov    %rax,%rbx
ffffffff80201278:	49 83 ef 28          	sub    $0x28,%r15
ffffffff8020127c:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201283:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201286:	0f 82 5c 05 00 00    	jb     ffffffff802017e8 <camlCamlinternalFormatBasics__concat_fmt_510+0x738>
ffffffff8020128c:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201290:	48 c7 40 f8 06 10 00 	movq   $0x1006,-0x8(%rax)
ffffffff80201297:	00 
ffffffff80201298:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff8020129c:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff8020129f:	48 89 38             	mov    %rdi,(%rax)
ffffffff802012a2:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff802012a6:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff802012aa:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
ffffffff802012ae:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff802012b2:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff802012b6:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802012ba:	c3                   	retq   
ffffffff802012bb:	90                   	nop
ffffffff802012bc:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff802012c0:	e8 eb fd ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802012c5:	48 89 c3             	mov    %rax,%rbx
ffffffff802012c8:	49 83 ef 28          	sub    $0x28,%r15
ffffffff802012cc:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802012d3:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802012d6:	0f 82 02 05 00 00    	jb     ffffffff802017de <camlCamlinternalFormatBasics__concat_fmt_510+0x72e>
ffffffff802012dc:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802012e0:	48 c7 40 f8 07 10 00 	movq   $0x1007,-0x8(%rax)
ffffffff802012e7:	00 
ffffffff802012e8:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff802012ec:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff802012ef:	48 89 38             	mov    %rdi,(%rax)
ffffffff802012f2:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff802012f6:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff802012fa:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
ffffffff802012fe:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff80201302:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff80201306:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020130a:	c3                   	retq   
ffffffff8020130b:	90                   	nop
ffffffff8020130c:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff80201310:	e8 9b fd ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201315:	48 89 c3             	mov    %rax,%rbx
ffffffff80201318:	49 83 ef 28          	sub    $0x28,%r15
ffffffff8020131c:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201323:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201326:	0f 82 a8 04 00 00    	jb     ffffffff802017d4 <camlCamlinternalFormatBasics__concat_fmt_510+0x724>
ffffffff8020132c:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201330:	48 c7 40 f8 08 10 00 	movq   $0x1008,-0x8(%rax)
ffffffff80201337:	00 
ffffffff80201338:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff8020133c:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff8020133f:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201342:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff80201346:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff8020134a:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
ffffffff8020134e:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff80201352:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff80201356:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020135a:	c3                   	retq   
ffffffff8020135b:	90                   	nop
ffffffff8020135c:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff80201360:	e8 4b fd ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201365:	48 89 c3             	mov    %rax,%rbx
ffffffff80201368:	49 83 ef 18          	sub    $0x18,%r15
ffffffff8020136c:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201373:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201376:	0f 82 4e 04 00 00    	jb     ffffffff802017ca <camlCamlinternalFormatBasics__concat_fmt_510+0x71a>
ffffffff8020137c:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201380:	48 c7 40 f8 09 08 00 	movq   $0x809,-0x8(%rax)
ffffffff80201387:	00 
ffffffff80201388:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff8020138c:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff8020138f:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201392:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80201396:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020139a:	c3                   	retq   
ffffffff8020139b:	90                   	nop
ffffffff8020139c:	48 8b 07             	mov    (%rdi),%rax
ffffffff8020139f:	e8 0c fd ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802013a4:	48 89 c3             	mov    %rax,%rbx
ffffffff802013a7:	49 83 ef 10          	sub    $0x10,%r15
ffffffff802013ab:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802013b2:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802013b5:	0f 82 05 04 00 00    	jb     ffffffff802017c0 <camlCamlinternalFormatBasics__concat_fmt_510+0x710>
ffffffff802013bb:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802013bf:	48 c7 40 f8 0a 04 00 	movq   $0x40a,-0x8(%rax)
ffffffff802013c6:	00 
ffffffff802013c7:	48 89 18             	mov    %rbx,(%rax)
ffffffff802013ca:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802013ce:	c3                   	retq   
ffffffff802013cf:	90                   	nop
ffffffff802013d0:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff802013d4:	e8 d7 fc ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802013d9:	48 89 c3             	mov    %rax,%rbx
ffffffff802013dc:	49 83 ef 18          	sub    $0x18,%r15
ffffffff802013e0:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802013e7:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802013ea:	0f 82 c6 03 00 00    	jb     ffffffff802017b6 <camlCamlinternalFormatBasics__concat_fmt_510+0x706>
ffffffff802013f0:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802013f4:	48 c7 40 f8 0b 08 00 	movq   $0x80b,-0x8(%rax)
ffffffff802013fb:	00 
ffffffff802013fc:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80201400:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80201403:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201406:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020140a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020140e:	c3                   	retq   
ffffffff8020140f:	90                   	nop
ffffffff80201410:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff80201414:	e8 97 fc ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201419:	48 89 c3             	mov    %rax,%rbx
ffffffff8020141c:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80201420:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201427:	4c 3b 38             	cmp    (%rax),%r15
ffffffff8020142a:	0f 82 7c 03 00 00    	jb     ffffffff802017ac <camlCamlinternalFormatBasics__concat_fmt_510+0x6fc>
ffffffff80201430:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201434:	48 c7 40 f8 0c 08 00 	movq   $0x80c,-0x8(%rax)
ffffffff8020143b:	00 
ffffffff8020143c:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80201440:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80201443:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201446:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020144a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020144e:	c3                   	retq   
ffffffff8020144f:	90                   	nop
ffffffff80201450:	48 8b 47 10          	mov    0x10(%rdi),%rax
ffffffff80201454:	e8 57 fc ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201459:	48 89 c3             	mov    %rax,%rbx
ffffffff8020145c:	49 83 ef 20          	sub    $0x20,%r15
ffffffff80201460:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201467:	4c 3b 38             	cmp    (%rax),%r15
ffffffff8020146a:	0f 82 32 03 00 00    	jb     ffffffff802017a2 <camlCamlinternalFormatBasics__concat_fmt_510+0x6f2>
ffffffff80201470:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201474:	48 c7 40 f8 0d 0c 00 	movq   $0xc0d,-0x8(%rax)
ffffffff8020147b:	00 
ffffffff8020147c:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff80201480:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff80201483:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201486:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff8020148a:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff8020148e:	48 89 58 10          	mov    %rbx,0x10(%rax)
ffffffff80201492:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201496:	c3                   	retq   
ffffffff80201497:	90                   	nop
ffffffff80201498:	48 8b 47 10          	mov    0x10(%rdi),%rax
ffffffff8020149c:	e8 0f fc ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802014a1:	48 89 c3             	mov    %rax,%rbx
ffffffff802014a4:	49 83 ef 20          	sub    $0x20,%r15
ffffffff802014a8:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802014af:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802014b2:	0f 82 e0 02 00 00    	jb     ffffffff80201798 <camlCamlinternalFormatBasics__concat_fmt_510+0x6e8>
ffffffff802014b8:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802014bc:	48 c7 40 f8 0e 0c 00 	movq   $0xc0e,-0x8(%rax)
ffffffff802014c3:	00 
ffffffff802014c4:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff802014c8:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff802014cb:	48 89 38             	mov    %rdi,(%rax)
ffffffff802014ce:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff802014d2:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff802014d6:	48 89 58 10          	mov    %rbx,0x10(%rax)
ffffffff802014da:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802014de:	c3                   	retq   
ffffffff802014df:	90                   	nop
ffffffff802014e0:	48 8b 07             	mov    (%rdi),%rax
ffffffff802014e3:	e8 c8 fb ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802014e8:	48 89 c3             	mov    %rax,%rbx
ffffffff802014eb:	49 83 ef 10          	sub    $0x10,%r15
ffffffff802014ef:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802014f6:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802014f9:	0f 82 8f 02 00 00    	jb     ffffffff8020178e <camlCamlinternalFormatBasics__concat_fmt_510+0x6de>
ffffffff802014ff:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201503:	48 c7 40 f8 0f 04 00 	movq   $0x40f,-0x8(%rax)
ffffffff8020150a:	00 
ffffffff8020150b:	48 89 18             	mov    %rbx,(%rax)
ffffffff8020150e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201512:	c3                   	retq   
ffffffff80201513:	90                   	nop
ffffffff80201514:	48 8b 07             	mov    (%rdi),%rax
ffffffff80201517:	e8 94 fb ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff8020151c:	48 89 c3             	mov    %rax,%rbx
ffffffff8020151f:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80201523:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff8020152a:	4c 3b 38             	cmp    (%rax),%r15
ffffffff8020152d:	0f 82 51 02 00 00    	jb     ffffffff80201784 <camlCamlinternalFormatBasics__concat_fmt_510+0x6d4>
ffffffff80201533:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201537:	48 c7 40 f8 10 04 00 	movq   $0x410,-0x8(%rax)
ffffffff8020153e:	00 
ffffffff8020153f:	48 89 18             	mov    %rbx,(%rax)
ffffffff80201542:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201546:	c3                   	retq   
ffffffff80201547:	90                   	nop
ffffffff80201548:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020154c:	e8 5f fb ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201551:	48 89 c3             	mov    %rax,%rbx
ffffffff80201554:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80201558:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff8020155f:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201562:	0f 82 12 02 00 00    	jb     ffffffff8020177a <camlCamlinternalFormatBasics__concat_fmt_510+0x6ca>
ffffffff80201568:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020156c:	48 c7 40 f8 11 08 00 	movq   $0x811,-0x8(%rax)
ffffffff80201573:	00 
ffffffff80201574:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80201578:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff8020157b:	48 89 38             	mov    %rdi,(%rax)
ffffffff8020157e:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80201582:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201586:	c3                   	retq   
ffffffff80201587:	90                   	nop
ffffffff80201588:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020158c:	e8 1f fb ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201591:	48 89 c3             	mov    %rax,%rbx
ffffffff80201594:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80201598:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff8020159f:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802015a2:	0f 82 c8 01 00 00    	jb     ffffffff80201770 <camlCamlinternalFormatBasics__concat_fmt_510+0x6c0>
ffffffff802015a8:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802015ac:	48 c7 40 f8 12 08 00 	movq   $0x812,-0x8(%rax)
ffffffff802015b3:	00 
ffffffff802015b4:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff802015b8:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff802015bb:	48 89 38             	mov    %rdi,(%rax)
ffffffff802015be:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff802015c2:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802015c6:	c3                   	retq   
ffffffff802015c7:	90                   	nop
ffffffff802015c8:	48 8b 07             	mov    (%rdi),%rax
ffffffff802015cb:	e8 e0 fa ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802015d0:	48 89 c3             	mov    %rax,%rbx
ffffffff802015d3:	49 83 ef 10          	sub    $0x10,%r15
ffffffff802015d7:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802015de:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802015e1:	0f 82 7f 01 00 00    	jb     ffffffff80201766 <camlCamlinternalFormatBasics__concat_fmt_510+0x6b6>
ffffffff802015e7:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802015eb:	48 c7 40 f8 13 04 00 	movq   $0x413,-0x8(%rax)
ffffffff802015f2:	00 
ffffffff802015f3:	48 89 18             	mov    %rbx,(%rax)
ffffffff802015f6:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802015fa:	c3                   	retq   
ffffffff802015fb:	90                   	nop
ffffffff802015fc:	48 8b 47 10          	mov    0x10(%rdi),%rax
ffffffff80201600:	e8 ab fa ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff80201605:	48 89 c3             	mov    %rax,%rbx
ffffffff80201608:	49 83 ef 20          	sub    $0x20,%r15
ffffffff8020160c:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201613:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201616:	0f 82 40 01 00 00    	jb     ffffffff8020175c <camlCamlinternalFormatBasics__concat_fmt_510+0x6ac>
ffffffff8020161c:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201620:	48 c7 40 f8 14 0c 00 	movq   $0xc14,-0x8(%rax)
ffffffff80201627:	00 
ffffffff80201628:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff8020162c:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff8020162f:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201632:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff80201636:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff8020163a:	48 89 58 10          	mov    %rbx,0x10(%rax)
ffffffff8020163e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201642:	c3                   	retq   
ffffffff80201643:	90                   	nop
ffffffff80201644:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff80201648:	e8 63 fa ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff8020164d:	48 89 c3             	mov    %rax,%rbx
ffffffff80201650:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80201654:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff8020165b:	4c 3b 38             	cmp    (%rax),%r15
ffffffff8020165e:	0f 82 ee 00 00 00    	jb     ffffffff80201752 <camlCamlinternalFormatBasics__concat_fmt_510+0x6a2>
ffffffff80201664:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201668:	48 c7 40 f8 15 08 00 	movq   $0x815,-0x8(%rax)
ffffffff8020166f:	00 
ffffffff80201670:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80201674:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80201677:	48 89 38             	mov    %rdi,(%rax)
ffffffff8020167a:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020167e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201682:	c3                   	retq   
ffffffff80201683:	90                   	nop
ffffffff80201684:	48 8b 07             	mov    (%rdi),%rax
ffffffff80201687:	e8 24 fa ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff8020168c:	48 89 c3             	mov    %rax,%rbx
ffffffff8020168f:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80201693:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff8020169a:	4c 3b 38             	cmp    (%rax),%r15
ffffffff8020169d:	0f 82 a5 00 00 00    	jb     ffffffff80201748 <camlCamlinternalFormatBasics__concat_fmt_510+0x698>
ffffffff802016a3:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802016a7:	48 c7 40 f8 16 04 00 	movq   $0x416,-0x8(%rax)
ffffffff802016ae:	00 
ffffffff802016af:	48 89 18             	mov    %rbx,(%rax)
ffffffff802016b2:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802016b6:	c3                   	retq   
ffffffff802016b7:	90                   	nop
ffffffff802016b8:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff802016bc:	e8 ef f9 ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802016c1:	48 89 c3             	mov    %rax,%rbx
ffffffff802016c4:	49 83 ef 18          	sub    $0x18,%r15
ffffffff802016c8:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802016cf:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802016d2:	72 6a                	jb     ffffffff8020173e <camlCamlinternalFormatBasics__concat_fmt_510+0x68e>
ffffffff802016d4:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802016d8:	48 c7 40 f8 17 08 00 	movq   $0x817,-0x8(%rax)
ffffffff802016df:	00 
ffffffff802016e0:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff802016e4:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff802016e7:	48 89 38             	mov    %rdi,(%rax)
ffffffff802016ea:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff802016ee:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802016f2:	c3                   	retq   
ffffffff802016f3:	90                   	nop
ffffffff802016f4:	48 8b 47 10          	mov    0x10(%rdi),%rax
ffffffff802016f8:	e8 b3 f9 ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802016fd:	48 89 c3             	mov    %rax,%rbx
ffffffff80201700:	49 83 ef 20          	sub    $0x20,%r15
ffffffff80201704:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff8020170b:	4c 3b 38             	cmp    (%rax),%r15
ffffffff8020170e:	72 27                	jb     ffffffff80201737 <camlCamlinternalFormatBasics__concat_fmt_510+0x687>
ffffffff80201710:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201714:	48 c7 40 f8 18 0c 00 	movq   $0xc18,-0x8(%rax)
ffffffff8020171b:	00 
ffffffff8020171c:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff80201720:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff80201723:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201726:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
ffffffff8020172a:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff8020172e:	48 89 58 10          	mov    %rbx,0x10(%rax)
ffffffff80201732:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201736:	c3                   	retq   
ffffffff80201737:	e8 14 23 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020173c:	eb c2                	jmp    ffffffff80201700 <camlCamlinternalFormatBasics__concat_fmt_510+0x650>
ffffffff8020173e:	e8 0d 23 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201743:	e9 7c ff ff ff       	jmpq   ffffffff802016c4 <camlCamlinternalFormatBasics__concat_fmt_510+0x614>
ffffffff80201748:	e8 03 23 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020174d:	e9 3d ff ff ff       	jmpq   ffffffff8020168f <camlCamlinternalFormatBasics__concat_fmt_510+0x5df>
ffffffff80201752:	e8 f9 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201757:	e9 f4 fe ff ff       	jmpq   ffffffff80201650 <camlCamlinternalFormatBasics__concat_fmt_510+0x5a0>
ffffffff8020175c:	e8 ef 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201761:	e9 a2 fe ff ff       	jmpq   ffffffff80201608 <camlCamlinternalFormatBasics__concat_fmt_510+0x558>
ffffffff80201766:	e8 e5 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020176b:	e9 63 fe ff ff       	jmpq   ffffffff802015d3 <camlCamlinternalFormatBasics__concat_fmt_510+0x523>
ffffffff80201770:	e8 db 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201775:	e9 1a fe ff ff       	jmpq   ffffffff80201594 <camlCamlinternalFormatBasics__concat_fmt_510+0x4e4>
ffffffff8020177a:	e8 d1 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020177f:	e9 d0 fd ff ff       	jmpq   ffffffff80201554 <camlCamlinternalFormatBasics__concat_fmt_510+0x4a4>
ffffffff80201784:	e8 c7 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201789:	e9 91 fd ff ff       	jmpq   ffffffff8020151f <camlCamlinternalFormatBasics__concat_fmt_510+0x46f>
ffffffff8020178e:	e8 bd 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201793:	e9 53 fd ff ff       	jmpq   ffffffff802014eb <camlCamlinternalFormatBasics__concat_fmt_510+0x43b>
ffffffff80201798:	e8 b3 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020179d:	e9 02 fd ff ff       	jmpq   ffffffff802014a4 <camlCamlinternalFormatBasics__concat_fmt_510+0x3f4>
ffffffff802017a2:	e8 a9 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802017a7:	e9 b0 fc ff ff       	jmpq   ffffffff8020145c <camlCamlinternalFormatBasics__concat_fmt_510+0x3ac>
ffffffff802017ac:	e8 9f 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802017b1:	e9 66 fc ff ff       	jmpq   ffffffff8020141c <camlCamlinternalFormatBasics__concat_fmt_510+0x36c>
ffffffff802017b6:	e8 95 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802017bb:	e9 1c fc ff ff       	jmpq   ffffffff802013dc <camlCamlinternalFormatBasics__concat_fmt_510+0x32c>
ffffffff802017c0:	e8 8b 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802017c5:	e9 dd fb ff ff       	jmpq   ffffffff802013a7 <camlCamlinternalFormatBasics__concat_fmt_510+0x2f7>
ffffffff802017ca:	e8 81 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802017cf:	e9 94 fb ff ff       	jmpq   ffffffff80201368 <camlCamlinternalFormatBasics__concat_fmt_510+0x2b8>
ffffffff802017d4:	e8 77 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802017d9:	e9 3a fb ff ff       	jmpq   ffffffff80201318 <camlCamlinternalFormatBasics__concat_fmt_510+0x268>
ffffffff802017de:	e8 6d 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802017e3:	e9 e0 fa ff ff       	jmpq   ffffffff802012c8 <camlCamlinternalFormatBasics__concat_fmt_510+0x218>
ffffffff802017e8:	e8 63 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802017ed:	e9 86 fa ff ff       	jmpq   ffffffff80201278 <camlCamlinternalFormatBasics__concat_fmt_510+0x1c8>
ffffffff802017f2:	e8 59 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802017f7:	e9 2c fa ff ff       	jmpq   ffffffff80201228 <camlCamlinternalFormatBasics__concat_fmt_510+0x178>
ffffffff802017fc:	e8 4f 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201801:	e9 d2 f9 ff ff       	jmpq   ffffffff802011d8 <camlCamlinternalFormatBasics__concat_fmt_510+0x128>
ffffffff80201806:	e8 45 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020180b:	e9 88 f9 ff ff       	jmpq   ffffffff80201198 <camlCamlinternalFormatBasics__concat_fmt_510+0xe8>
ffffffff80201810:	e8 3b 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201815:	e9 3e f9 ff ff       	jmpq   ffffffff80201158 <camlCamlinternalFormatBasics__concat_fmt_510+0xa8>
ffffffff8020181a:	e8 31 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020181f:	e9 ff f8 ff ff       	jmpq   ffffffff80201123 <camlCamlinternalFormatBasics__concat_fmt_510+0x73>
ffffffff80201824:	e8 27 22 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201829:	e9 c1 f8 ff ff       	jmpq   ffffffff802010ef <camlCamlinternalFormatBasics__concat_fmt_510+0x3f>
ffffffff8020182e:	66 90                	xchg   %ax,%ax

ffffffff80201830 <camlCamlinternalFormatBasics__entry>:
ffffffff80201830:	48 c7 c0 60 8d 22 80 	mov    $0xffffffff80228d60,%rax
ffffffff80201837:	48 c7 c3 b8 8d 22 80 	mov    $0xffffffff80228db8,%rbx
ffffffff8020183e:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff80201842:	48 c7 c0 78 8d 22 80 	mov    $0xffffffff80228d78,%rax
ffffffff80201849:	48 89 03             	mov    %rax,(%rbx)
ffffffff8020184c:	48 c7 c0 98 8d 22 80 	mov    $0xffffffff80228d98,%rax
ffffffff80201853:	48 89 43 10          	mov    %rax,0x10(%rbx)
ffffffff80201857:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff8020185e:	c3                   	retq   

ffffffff8020185f <camlCamlinternalFormatBasics__code_end>:
ffffffff8020185f:	90                   	nop

ffffffff80201860 <camlStdlib__fun_766>:
ffffffff80201860:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201864:	48 89 c7             	mov    %rax,%rdi
ffffffff80201867:	48 89 de             	mov    %rbx,%rsi
ffffffff8020186a:	48 c7 c0 90 cf 20 80 	mov    $0xffffffff8020cf90,%rax
ffffffff80201871:	e8 56 24 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201876:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020187d:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201880:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201884:	c3                   	retq   
ffffffff80201885:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020188c:	00 00 00 00 

ffffffff80201890 <camlStdlib__fun_768>:
ffffffff80201890:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201894:	48 89 c7             	mov    %rax,%rdi
ffffffff80201897:	48 c7 c0 d0 ce 20 80 	mov    $0xffffffff8020ced0,%rax
ffffffff8020189e:	e8 29 24 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802018a3:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802018aa:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802018ad:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802018b1:	c3                   	retq   
ffffffff802018b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802018b9:	00 00 00 00 
ffffffff802018bd:	0f 1f 00             	nopl   (%rax)

ffffffff802018c0 <camlStdlib__fun_770>:
ffffffff802018c0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802018c4:	48 89 c7             	mov    %rax,%rdi
ffffffff802018c7:	48 c7 c0 30 cf 20 80 	mov    $0xffffffff8020cf30,%rax
ffffffff802018ce:	e8 f9 23 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802018d3:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802018da:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802018dd:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802018e1:	c3                   	retq   
ffffffff802018e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802018e9:	00 00 00 00 
ffffffff802018ed:	0f 1f 00             	nopl   (%rax)

ffffffff802018f0 <camlStdlib__fun_772>:
ffffffff802018f0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802018f4:	48 89 c7             	mov    %rax,%rdi
ffffffff802018f7:	48 c7 c0 60 db 20 80 	mov    $0xffffffff8020db60,%rax
ffffffff802018fe:	e8 c9 23 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201903:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020190a:	4d 8b 3b             	mov    (%r11),%r15
ffffffff8020190d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201911:	c3                   	retq   
ffffffff80201912:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201919:	00 00 00 00 
ffffffff8020191d:	0f 1f 00             	nopl   (%rax)

ffffffff80201920 <camlStdlib__fun_774>:
ffffffff80201920:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201924:	48 89 c7             	mov    %rax,%rdi
ffffffff80201927:	48 89 de             	mov    %rbx,%rsi
ffffffff8020192a:	48 c7 c0 e0 d9 20 80 	mov    $0xffffffff8020d9e0,%rax
ffffffff80201931:	e8 96 23 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201936:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020193d:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201940:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201944:	c3                   	retq   
ffffffff80201945:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020194c:	00 00 00 00 

ffffffff80201950 <camlStdlib__fun_776>:
ffffffff80201950:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201954:	48 89 c7             	mov    %rax,%rdi
ffffffff80201957:	48 c7 c0 c0 a2 20 80 	mov    $0xffffffff8020a2c0,%rax
ffffffff8020195e:	e8 69 23 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201963:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020196a:	4d 8b 3b             	mov    (%r11),%r15
ffffffff8020196d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201971:	c3                   	retq   
ffffffff80201972:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201979:	00 00 00 00 
ffffffff8020197d:	0f 1f 00             	nopl   (%rax)

ffffffff80201980 <camlStdlib__fun_778>:
ffffffff80201980:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201984:	48 89 c7             	mov    %rax,%rdi
ffffffff80201987:	48 c7 c0 a0 d7 20 80 	mov    $0xffffffff8020d7a0,%rax
ffffffff8020198e:	e8 39 23 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201993:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020199a:	4d 8b 3b             	mov    (%r11),%r15
ffffffff8020199d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802019a1:	c3                   	retq   
ffffffff802019a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802019a9:	00 00 00 00 
ffffffff802019ad:	0f 1f 00             	nopl   (%rax)

ffffffff802019b0 <camlStdlib__fun_780>:
ffffffff802019b0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802019b4:	48 89 c7             	mov    %rax,%rdi
ffffffff802019b7:	48 c7 c0 d0 d6 20 80 	mov    $0xffffffff8020d6d0,%rax
ffffffff802019be:	e8 09 23 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802019c3:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802019ca:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802019cd:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802019d1:	c3                   	retq   
ffffffff802019d2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802019d9:	00 00 00 00 
ffffffff802019dd:	0f 1f 00             	nopl   (%rax)

ffffffff802019e0 <camlStdlib__fun_782>:
ffffffff802019e0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802019e4:	48 89 c7             	mov    %rax,%rdi
ffffffff802019e7:	48 c7 c0 d0 d6 20 80 	mov    $0xffffffff8020d6d0,%rax
ffffffff802019ee:	e8 d9 22 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802019f3:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802019fa:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802019fd:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201a01:	c3                   	retq   
ffffffff80201a02:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201a09:	00 00 00 00 
ffffffff80201a0d:	0f 1f 00             	nopl   (%rax)

ffffffff80201a10 <camlStdlib__fun_784>:
ffffffff80201a10:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201a14:	48 89 c7             	mov    %rax,%rdi
ffffffff80201a17:	48 89 de             	mov    %rbx,%rsi
ffffffff80201a1a:	48 c7 c0 90 cf 20 80 	mov    $0xffffffff8020cf90,%rax
ffffffff80201a21:	e8 a6 22 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201a26:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201a2d:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201a30:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201a34:	c3                   	retq   
ffffffff80201a35:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201a3c:	00 00 00 00 

ffffffff80201a40 <camlStdlib__fun_786>:
ffffffff80201a40:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201a44:	48 89 c7             	mov    %rax,%rdi
ffffffff80201a47:	48 c7 c0 30 cf 20 80 	mov    $0xffffffff8020cf30,%rax
ffffffff80201a4e:	e8 79 22 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201a53:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201a5a:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201a5d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201a61:	c3                   	retq   
ffffffff80201a62:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201a69:	00 00 00 00 
ffffffff80201a6d:	0f 1f 00             	nopl   (%rax)

ffffffff80201a70 <camlStdlib__fun_788>:
ffffffff80201a70:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201a74:	48 89 c7             	mov    %rax,%rdi
ffffffff80201a77:	48 c7 c0 60 d6 20 80 	mov    $0xffffffff8020d660,%rax
ffffffff80201a7e:	e8 49 22 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201a83:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201a8a:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201a8d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201a91:	c3                   	retq   
ffffffff80201a92:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201a99:	00 00 00 00 
ffffffff80201a9d:	0f 1f 00             	nopl   (%rax)

ffffffff80201aa0 <camlStdlib__fun_790>:
ffffffff80201aa0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201aa4:	48 89 c7             	mov    %rax,%rdi
ffffffff80201aa7:	48 89 de             	mov    %rbx,%rsi
ffffffff80201aaa:	48 c7 c0 e0 d4 20 80 	mov    $0xffffffff8020d4e0,%rax
ffffffff80201ab1:	e8 16 22 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201ab6:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201abd:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201ac0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201ac4:	c3                   	retq   
ffffffff80201ac5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201acc:	00 00 00 00 

ffffffff80201ad0 <camlStdlib__fun_792>:
ffffffff80201ad0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201ad4:	48 89 c7             	mov    %rax,%rdi
ffffffff80201ad7:	48 89 de             	mov    %rbx,%rsi
ffffffff80201ada:	48 c7 c0 10 d2 20 80 	mov    $0xffffffff8020d210,%rax
ffffffff80201ae1:	e8 e6 21 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201ae6:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201aed:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201af0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201af4:	c3                   	retq   
ffffffff80201af5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201afc:	00 00 00 00 

ffffffff80201b00 <camlStdlib__fun_794>:
ffffffff80201b00:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201b04:	48 89 c7             	mov    %rax,%rdi
ffffffff80201b07:	48 89 de             	mov    %rbx,%rsi
ffffffff80201b0a:	48 c7 c0 30 d1 20 80 	mov    $0xffffffff8020d130,%rax
ffffffff80201b11:	e8 b6 21 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201b16:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201b1d:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201b20:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201b24:	c3                   	retq   
ffffffff80201b25:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201b2c:	00 00 00 00 

ffffffff80201b30 <camlStdlib__fun_796>:
ffffffff80201b30:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201b34:	48 89 c7             	mov    %rax,%rdi
ffffffff80201b37:	48 89 de             	mov    %rbx,%rsi
ffffffff80201b3a:	48 c7 c0 30 d1 20 80 	mov    $0xffffffff8020d130,%rax
ffffffff80201b41:	e8 86 21 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201b46:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201b4d:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201b50:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201b54:	c3                   	retq   
ffffffff80201b55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201b5c:	00 00 00 00 

ffffffff80201b60 <camlStdlib__fun_798>:
ffffffff80201b60:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201b64:	48 89 c7             	mov    %rax,%rdi
ffffffff80201b67:	48 c7 c0 70 d0 20 80 	mov    $0xffffffff8020d070,%rax
ffffffff80201b6e:	e8 59 21 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201b73:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201b7a:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201b7d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201b81:	c3                   	retq   
ffffffff80201b82:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201b89:	00 00 00 00 
ffffffff80201b8d:	0f 1f 00             	nopl   (%rax)

ffffffff80201b90 <camlStdlib__failwith_6>:
ffffffff80201b90:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201b94:	48 89 c3             	mov    %rax,%rbx
ffffffff80201b97:	48 c7 c0 10 50 23 80 	mov    $0xffffffff80235010,%rax
ffffffff80201b9e:	48 31 ff             	xor    %rdi,%rdi
ffffffff80201ba1:	89 38                	mov    %edi,(%rax)
ffffffff80201ba3:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80201ba7:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201bae:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201bb1:	72 1f                	jb     ffffffff80201bd2 <camlStdlib__failwith_6+0x42>
ffffffff80201bb3:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201bb7:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
ffffffff80201bbe:	00 
ffffffff80201bbf:	48 c7 c7 a8 80 22 80 	mov    $0xffffffff802280a8,%rdi
ffffffff80201bc6:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201bc9:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80201bcd:	e8 ea 21 00 00       	callq  ffffffff80203dbc <caml_raise_exn>
ffffffff80201bd2:	e8 79 1e 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201bd7:	eb ca                	jmp    ffffffff80201ba3 <camlStdlib__failwith_6+0x13>
ffffffff80201bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80201be0 <camlStdlib__invalid_arg_8>:
ffffffff80201be0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201be4:	48 89 c3             	mov    %rax,%rbx
ffffffff80201be7:	48 c7 c0 10 50 23 80 	mov    $0xffffffff80235010,%rax
ffffffff80201bee:	48 31 ff             	xor    %rdi,%rdi
ffffffff80201bf1:	89 38                	mov    %edi,(%rax)
ffffffff80201bf3:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80201bf7:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201bfe:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201c01:	72 1f                	jb     ffffffff80201c22 <camlStdlib__invalid_arg_8+0x42>
ffffffff80201c03:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201c07:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
ffffffff80201c0e:	00 
ffffffff80201c0f:	48 c7 c7 d0 80 22 80 	mov    $0xffffffff802280d0,%rdi
ffffffff80201c16:	48 89 38             	mov    %rdi,(%rax)
ffffffff80201c19:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80201c1d:	e8 9a 21 00 00       	callq  ffffffff80203dbc <caml_raise_exn>
ffffffff80201c22:	e8 29 1e 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201c27:	eb ca                	jmp    ffffffff80201bf3 <camlStdlib__invalid_arg_8+0x13>
ffffffff80201c29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80201c30 <camlStdlib__min_40>:
ffffffff80201c30:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80201c34:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80201c39:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff80201c3d:	48 89 c7             	mov    %rax,%rdi
ffffffff80201c40:	48 89 de             	mov    %rbx,%rsi
ffffffff80201c43:	48 c7 c0 00 58 20 80 	mov    $0xffffffff80205800,%rax
ffffffff80201c4a:	e8 7d 20 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201c4f:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201c56:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201c59:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80201c5d:	74 0d                	je     ffffffff80201c6c <camlStdlib__min_40+0x3c>
ffffffff80201c5f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80201c64:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80201c68:	c3                   	retq   
ffffffff80201c69:	0f 1f 00             	nopl   (%rax)
ffffffff80201c6c:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80201c70:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80201c74:	c3                   	retq   
ffffffff80201c75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201c7c:	00 00 00 00 

ffffffff80201c80 <camlStdlib__max_43>:
ffffffff80201c80:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80201c84:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80201c89:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff80201c8d:	48 89 c7             	mov    %rax,%rdi
ffffffff80201c90:	48 89 de             	mov    %rbx,%rsi
ffffffff80201c93:	48 c7 c0 50 58 20 80 	mov    $0xffffffff80205850,%rax
ffffffff80201c9a:	e8 2d 20 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201c9f:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201ca6:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201ca9:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80201cad:	74 0d                	je     ffffffff80201cbc <camlStdlib__max_43+0x3c>
ffffffff80201caf:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80201cb4:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80201cb8:	c3                   	retq   
ffffffff80201cb9:	0f 1f 00             	nopl   (%rax)
ffffffff80201cbc:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80201cc0:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80201cc4:	c3                   	retq   
ffffffff80201cc5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201ccc:	00 00 00 00 

ffffffff80201cd0 <camlStdlib__abs_62>:
ffffffff80201cd0:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80201cd4:	7c 02                	jl     ffffffff80201cd8 <camlStdlib__abs_62+0x8>
ffffffff80201cd6:	c3                   	retq   
ffffffff80201cd7:	90                   	nop
ffffffff80201cd8:	48 c7 c3 02 00 00 00 	mov    $0x2,%rbx
ffffffff80201cdf:	48 29 c3             	sub    %rax,%rbx
ffffffff80201ce2:	48 89 d8             	mov    %rbx,%rax
ffffffff80201ce5:	c3                   	retq   
ffffffff80201ce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80201ced:	00 00 00 

ffffffff80201cf0 <camlStdlib__lnot_67>:
ffffffff80201cf0:	48 83 f0 ff          	xor    $0xffffffffffffffff,%rax
ffffffff80201cf4:	48 83 c8 01          	or     $0x1,%rax
ffffffff80201cf8:	c3                   	retq   
ffffffff80201cf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80201d00 <camlStdlib__$5e_130>:
ffffffff80201d00:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80201d04:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80201d08:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80201d0d:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
ffffffff80201d11:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff80201d15:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
ffffffff80201d1c:	ff 
ffffffff80201d1d:	48 0f b6 04 38       	movzbq (%rax,%rdi,1),%rax
ffffffff80201d22:	48 29 c7             	sub    %rax,%rdi
ffffffff80201d25:	48 8d 44 3f 01       	lea    0x1(%rdi,%rdi,1),%rax
ffffffff80201d2a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80201d2f:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
ffffffff80201d33:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff80201d37:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
ffffffff80201d3e:	ff 
ffffffff80201d3f:	48 0f b6 1c 3b       	movzbq (%rbx,%rdi,1),%rbx
ffffffff80201d44:	48 29 df             	sub    %rbx,%rdi
ffffffff80201d47:	48 8d 5c 3f 01       	lea    0x1(%rdi,%rdi,1),%rbx
ffffffff80201d4c:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff80201d51:	48 8d 7c 18 ff       	lea    -0x1(%rax,%rbx,1),%rdi
ffffffff80201d56:	48 c7 c0 60 4e 21 80 	mov    $0xffffffff80214e60,%rax
ffffffff80201d5d:	e8 6a 1f 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201d62:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201d69:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201d6c:	48 89 c3             	mov    %rax,%rbx
ffffffff80201d6f:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
ffffffff80201d76:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
ffffffff80201d7d:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80201d81:	48 89 da             	mov    %rbx,%rdx
ffffffff80201d84:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
ffffffff80201d89:	4d 89 e0             	mov    %r12,%r8
ffffffff80201d8c:	e8 5f 36 01 00       	callq  ffffffff802153f0 <caml_blit_string>
ffffffff80201d91:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
ffffffff80201d98:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80201d9d:	48 89 da             	mov    %rbx,%rdx
ffffffff80201da0:	4c 89 e1             	mov    %r12,%rcx
ffffffff80201da3:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
ffffffff80201da8:	e8 43 36 01 00       	callq  ffffffff802153f0 <caml_blit_string>
ffffffff80201dad:	48 89 d8             	mov    %rbx,%rax
ffffffff80201db0:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80201db4:	c3                   	retq   
ffffffff80201db5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201dbc:	00 00 00 00 

ffffffff80201dc0 <camlStdlib__char_of_int_138>:
ffffffff80201dc0:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80201dc4:	7c 0a                	jl     ffffffff80201dd0 <camlStdlib__char_of_int_138+0x10>
ffffffff80201dc6:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
ffffffff80201dcc:	7f 02                	jg     ffffffff80201dd0 <camlStdlib__char_of_int_138+0x10>
ffffffff80201dce:	c3                   	retq   
ffffffff80201dcf:	90                   	nop
ffffffff80201dd0:	48 c7 c0 50 a7 22 80 	mov    $0xffffffff8022a750,%rax
ffffffff80201dd7:	e9 04 fe ff ff       	jmpq   ffffffff80201be0 <camlStdlib__invalid_arg_8>
ffffffff80201ddc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80201de0 <camlStdlib__string_of_bool_155>:
ffffffff80201de0:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80201de4:	74 0a                	je     ffffffff80201df0 <camlStdlib__string_of_bool_155+0x10>
ffffffff80201de6:	48 c7 c0 68 a7 22 80 	mov    $0xffffffff8022a768,%rax
ffffffff80201ded:	c3                   	retq   
ffffffff80201dee:	66 90                	xchg   %ax,%ax
ffffffff80201df0:	48 c7 c0 78 a7 22 80 	mov    $0xffffffff8022a778,%rax
ffffffff80201df7:	c3                   	retq   
ffffffff80201df8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80201dff:	00 

ffffffff80201e00 <camlStdlib__bool_of_string_157>:
ffffffff80201e00:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
ffffffff80201e04:	48 c1 eb 0a          	shr    $0xa,%rbx
ffffffff80201e08:	48 83 fb 02          	cmp    $0x2,%rbx
ffffffff80201e0c:	7d 32                	jge    ffffffff80201e40 <camlStdlib__bool_of_string_157+0x40>
ffffffff80201e0e:	48 8b 00             	mov    (%rax),%rax
ffffffff80201e11:	48 bb 66 61 6c 73 65 	movabs $0x2000065736c6166,%rbx
ffffffff80201e18:	00 00 02 
ffffffff80201e1b:	48 39 d8             	cmp    %rbx,%rax
ffffffff80201e1e:	75 08                	jne    ffffffff80201e28 <camlStdlib__bool_of_string_157+0x28>
ffffffff80201e20:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80201e27:	c3                   	retq   
ffffffff80201e28:	48 bb 74 72 75 65 00 	movabs $0x300000065757274,%rbx
ffffffff80201e2f:	00 00 03 
ffffffff80201e32:	48 39 d8             	cmp    %rbx,%rax
ffffffff80201e35:	75 09                	jne    ffffffff80201e40 <camlStdlib__bool_of_string_157+0x40>
ffffffff80201e37:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
ffffffff80201e3e:	c3                   	retq   
ffffffff80201e3f:	90                   	nop
ffffffff80201e40:	48 c7 c0 88 a7 22 80 	mov    $0xffffffff8022a788,%rax
ffffffff80201e47:	e9 94 fd ff ff       	jmpq   ffffffff80201be0 <camlStdlib__invalid_arg_8>
ffffffff80201e4c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80201e50 <camlStdlib__bool_of_string_opt_159>:
ffffffff80201e50:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
ffffffff80201e54:	48 c1 eb 0a          	shr    $0xa,%rbx
ffffffff80201e58:	48 83 fb 02          	cmp    $0x2,%rbx
ffffffff80201e5c:	7d 32                	jge    ffffffff80201e90 <camlStdlib__bool_of_string_opt_159+0x40>
ffffffff80201e5e:	48 8b 00             	mov    (%rax),%rax
ffffffff80201e61:	48 bb 66 61 6c 73 65 	movabs $0x2000065736c6166,%rbx
ffffffff80201e68:	00 00 02 
ffffffff80201e6b:	48 39 d8             	cmp    %rbx,%rax
ffffffff80201e6e:	75 08                	jne    ffffffff80201e78 <camlStdlib__bool_of_string_opt_159+0x28>
ffffffff80201e70:	48 c7 c0 a0 a7 22 80 	mov    $0xffffffff8022a7a0,%rax
ffffffff80201e77:	c3                   	retq   
ffffffff80201e78:	48 bb 74 72 75 65 00 	movabs $0x300000065757274,%rbx
ffffffff80201e7f:	00 00 03 
ffffffff80201e82:	48 39 d8             	cmp    %rbx,%rax
ffffffff80201e85:	75 09                	jne    ffffffff80201e90 <camlStdlib__bool_of_string_opt_159+0x40>
ffffffff80201e87:	48 c7 c0 b0 a7 22 80 	mov    $0xffffffff8022a7b0,%rax
ffffffff80201e8e:	c3                   	retq   
ffffffff80201e8f:	90                   	nop
ffffffff80201e90:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80201e97:	c3                   	retq   
ffffffff80201e98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80201e9f:	00 

ffffffff80201ea0 <camlStdlib__string_of_int_161>:
ffffffff80201ea0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201ea4:	48 c7 c7 c0 a7 22 80 	mov    $0xffffffff8022a7c0,%rdi
ffffffff80201eab:	48 89 c6             	mov    %rax,%rsi
ffffffff80201eae:	48 c7 c0 00 b1 20 80 	mov    $0xffffffff8020b100,%rax
ffffffff80201eb5:	e8 12 1e 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201eba:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201ec1:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201ec4:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201ec8:	c3                   	retq   
ffffffff80201ec9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80201ed0 <camlStdlib__int_of_string_opt_164>:
ffffffff80201ed0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201ed4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201ed8:	4c 89 34 24          	mov    %r14,(%rsp)
ffffffff80201edc:	4c 8d 35 4d 00 00 00 	lea    0x4d(%rip),%r14        # ffffffff80201f30 <camlStdlib__int_of_string_opt_164+0x60>
ffffffff80201ee3:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
ffffffff80201ee8:	49 89 e6             	mov    %rsp,%r14
ffffffff80201eeb:	48 89 c7             	mov    %rax,%rdi
ffffffff80201eee:	48 c7 c0 e0 b0 20 80 	mov    $0xffffffff8020b0e0,%rax
ffffffff80201ef5:	e8 d2 1d 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80201efa:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80201f01:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80201f04:	48 89 c3             	mov    %rax,%rbx
ffffffff80201f07:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80201f0b:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201f12:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201f15:	72 46                	jb     ffffffff80201f5d <camlStdlib__int_of_string_opt_164+0x8d>
ffffffff80201f17:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80201f1b:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff80201f22:	00 
ffffffff80201f23:	48 89 18             	mov    %rbx,(%rax)
ffffffff80201f26:	41 5e                	pop    %r14
ffffffff80201f28:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201f2c:	eb 2a                	jmp    ffffffff80201f58 <camlStdlib__int_of_string_opt_164+0x88>
ffffffff80201f2e:	66 90                	xchg   %ax,%ax
ffffffff80201f30:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff80201f37:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
ffffffff80201f3b:	48 8b 38             	mov    (%rax),%rdi
ffffffff80201f3e:	48 39 df             	cmp    %rbx,%rdi
ffffffff80201f41:	75 0d                	jne    ffffffff80201f50 <camlStdlib__int_of_string_opt_164+0x80>
ffffffff80201f43:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80201f4a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201f4e:	c3                   	retq   
ffffffff80201f4f:	90                   	nop
ffffffff80201f50:	e8 67 1e 00 00       	callq  ffffffff80203dbc <caml_raise_exn>
ffffffff80201f55:	0f 1f 00             	nopl   (%rax)
ffffffff80201f58:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201f5c:	c3                   	retq   
ffffffff80201f5d:	e8 ee 1a 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201f62:	eb a3                	jmp    ffffffff80201f07 <camlStdlib__int_of_string_opt_164+0x37>
ffffffff80201f64:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201f6b:	00 00 00 00 
ffffffff80201f6f:	90                   	nop

ffffffff80201f70 <camlStdlib__valid_float_lexem_167>:
ffffffff80201f70:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201f74:	48 89 c7             	mov    %rax,%rdi
ffffffff80201f77:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80201f7b:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80201f7f:	48 8d 04 c5 ff ff ff 	lea    -0x1(,%rax,8),%rax
ffffffff80201f86:	ff 
ffffffff80201f87:	48 0f b6 1c 07       	movzbq (%rdi,%rax,1),%rbx
ffffffff80201f8c:	48 29 d8             	sub    %rbx,%rax
ffffffff80201f8f:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff80201f94:	49 83 ef 28          	sub    $0x28,%r15
ffffffff80201f98:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80201f9f:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80201fa2:	72 36                	jb     ffffffff80201fda <camlStdlib__valid_float_lexem_167+0x6a>
ffffffff80201fa4:	49 8d 5f 08          	lea    0x8(%r15),%rbx
ffffffff80201fa8:	48 c7 43 f8 f7 10 00 	movq   $0x10f7,-0x8(%rbx)
ffffffff80201faf:	00 
ffffffff80201fb0:	48 c7 c0 f0 1f 20 80 	mov    $0xffffffff80201ff0,%rax
ffffffff80201fb7:	48 89 03             	mov    %rax,(%rbx)
ffffffff80201fba:	48 c7 43 08 03 00 00 	movq   $0x3,0x8(%rbx)
ffffffff80201fc1:	00 
ffffffff80201fc2:	48 89 7b 10          	mov    %rdi,0x10(%rbx)
ffffffff80201fc6:	48 89 73 18          	mov    %rsi,0x18(%rbx)
ffffffff80201fca:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80201fd1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201fd5:	e9 16 00 00 00       	jmpq   ffffffff80201ff0 <camlStdlib__loop_170>
ffffffff80201fda:	e8 71 1a 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80201fdf:	eb b3                	jmp    ffffffff80201f94 <camlStdlib__valid_float_lexem_167+0x24>
ffffffff80201fe1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80201fe8:	00 00 00 00 
ffffffff80201fec:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80201ff0 <camlStdlib__loop_170>:
ffffffff80201ff0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80201ff4:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
ffffffff80201ff8:	48 39 f8             	cmp    %rdi,%rax
ffffffff80201ffb:	7c 17                	jl     ffffffff80202014 <camlStdlib__loop_170+0x24>
ffffffff80201ffd:	48 c7 c7 d0 a7 22 80 	mov    $0xffffffff8022a7d0,%rdi
ffffffff80202004:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff80202008:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020200b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020200f:	e9 ec fc ff ff       	jmpq   ffffffff80201d00 <camlStdlib__$5e_130>
ffffffff80202014:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
ffffffff80202018:	48 89 c6             	mov    %rax,%rsi
ffffffff8020201b:	48 d1 fe             	sar    %rsi
ffffffff8020201e:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
ffffffff80202022:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80202026:	48 8d 14 d5 ff ff ff 	lea    -0x1(,%rdx,8),%rdx
ffffffff8020202d:	ff 
ffffffff8020202e:	48 0f b6 0c 17       	movzbq (%rdi,%rdx,1),%rcx
ffffffff80202033:	48 29 ca             	sub    %rcx,%rdx
ffffffff80202036:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80202039:	76 2f                	jbe    ffffffff8020206a <camlStdlib__loop_170+0x7a>
ffffffff8020203b:	48 0f b6 3c 37       	movzbq (%rdi,%rsi,1),%rdi
ffffffff80202040:	48 8d 7c 3f 01       	lea    0x1(%rdi,%rdi,1),%rdi
ffffffff80202045:	48 83 ff 61          	cmp    $0x61,%rdi
ffffffff80202049:	7c 09                	jl     ffffffff80202054 <camlStdlib__loop_170+0x64>
ffffffff8020204b:	48 83 ff 75          	cmp    $0x75,%rdi
ffffffff8020204f:	7c 13                	jl     ffffffff80202064 <camlStdlib__loop_170+0x74>
ffffffff80202051:	eb 07                	jmp    ffffffff8020205a <camlStdlib__loop_170+0x6a>
ffffffff80202053:	90                   	nop
ffffffff80202054:	48 83 ff 5b          	cmp    $0x5b,%rdi
ffffffff80202058:	74 0a                	je     ffffffff80202064 <camlStdlib__loop_170+0x74>
ffffffff8020205a:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8020205e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202062:	c3                   	retq   
ffffffff80202063:	90                   	nop
ffffffff80202064:	48 83 c0 02          	add    $0x2,%rax
ffffffff80202068:	eb 8a                	jmp    ffffffff80201ff4 <camlStdlib__loop_170+0x4>
ffffffff8020206a:	e8 69 1e 00 00       	callq  ffffffff80203ed8 <caml_ml_array_bound_error>
ffffffff8020206f:	90                   	nop

ffffffff80202070 <camlStdlib__string_of_float_172>:
ffffffff80202070:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202074:	48 c7 c7 e0 a7 22 80 	mov    $0xffffffff8022a7e0,%rdi
ffffffff8020207b:	48 89 c6             	mov    %rax,%rsi
ffffffff8020207e:	48 c7 c0 c0 76 20 80 	mov    $0xffffffff802076c0,%rax
ffffffff80202085:	e8 42 1c 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff8020208a:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202091:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202094:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202098:	e9 d3 fe ff ff       	jmpq   ffffffff80201f70 <camlStdlib__valid_float_lexem_167>
ffffffff8020209d:	0f 1f 00             	nopl   (%rax)

ffffffff802020a0 <camlStdlib__float_of_string_opt_175>:
ffffffff802020a0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802020a4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802020a8:	4c 89 34 24          	mov    %r14,(%rsp)
ffffffff802020ac:	4c 8d 35 4d 00 00 00 	lea    0x4d(%rip),%r14        # ffffffff80202100 <camlStdlib__float_of_string_opt_175+0x60>
ffffffff802020b3:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
ffffffff802020b8:	49 89 e6             	mov    %rsp,%r14
ffffffff802020bb:	48 89 c7             	mov    %rax,%rdi
ffffffff802020be:	48 c7 c0 50 7a 20 80 	mov    $0xffffffff80207a50,%rax
ffffffff802020c5:	e8 02 1c 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802020ca:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802020d1:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802020d4:	48 89 c3             	mov    %rax,%rbx
ffffffff802020d7:	49 83 ef 10          	sub    $0x10,%r15
ffffffff802020db:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802020e2:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802020e5:	72 46                	jb     ffffffff8020212d <camlStdlib__float_of_string_opt_175+0x8d>
ffffffff802020e7:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802020eb:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff802020f2:	00 
ffffffff802020f3:	48 89 18             	mov    %rbx,(%rax)
ffffffff802020f6:	41 5e                	pop    %r14
ffffffff802020f8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802020fc:	eb 2a                	jmp    ffffffff80202128 <camlStdlib__float_of_string_opt_175+0x88>
ffffffff802020fe:	66 90                	xchg   %ax,%ax
ffffffff80202100:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff80202107:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
ffffffff8020210b:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020210e:	48 39 df             	cmp    %rbx,%rdi
ffffffff80202111:	75 0d                	jne    ffffffff80202120 <camlStdlib__float_of_string_opt_175+0x80>
ffffffff80202113:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff8020211a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020211e:	c3                   	retq   
ffffffff8020211f:	90                   	nop
ffffffff80202120:	e8 97 1c 00 00       	callq  ffffffff80203dbc <caml_raise_exn>
ffffffff80202125:	0f 1f 00             	nopl   (%rax)
ffffffff80202128:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020212c:	c3                   	retq   
ffffffff8020212d:	e8 1e 19 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80202132:	eb a3                	jmp    ffffffff802020d7 <camlStdlib__float_of_string_opt_175+0x37>
ffffffff80202134:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020213b:	00 00 00 00 
ffffffff8020213f:	90                   	nop

ffffffff80202140 <camlStdlib__$40_177>:
ffffffff80202140:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202144:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80202148:	74 42                	je     ffffffff8020218c <camlStdlib__$40_177+0x4c>
ffffffff8020214a:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8020214e:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80202152:	e8 e9 ff ff ff       	callq  ffffffff80202140 <camlStdlib__$40_177>
ffffffff80202157:	48 89 c3             	mov    %rax,%rbx
ffffffff8020215a:	49 83 ef 18          	sub    $0x18,%r15
ffffffff8020215e:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80202165:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80202168:	72 2a                	jb     ffffffff80202194 <camlStdlib__$40_177+0x54>
ffffffff8020216a:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020216e:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
ffffffff80202175:	00 
ffffffff80202176:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff8020217a:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff8020217d:	48 89 38             	mov    %rdi,(%rax)
ffffffff80202180:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80202184:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202188:	c3                   	retq   
ffffffff80202189:	0f 1f 00             	nopl   (%rax)
ffffffff8020218c:	48 89 d8             	mov    %rbx,%rax
ffffffff8020218f:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202193:	c3                   	retq   
ffffffff80202194:	e8 b7 18 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80202199:	eb bf                	jmp    ffffffff8020215a <camlStdlib__$40_177+0x1a>
ffffffff8020219b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802021a0 <camlStdlib__open_out_gen_201>:
ffffffff802021a0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff802021a4:	48 89 3c 24          	mov    %rdi,(%rsp)
ffffffff802021a8:	48 89 c6             	mov    %rax,%rsi
ffffffff802021ab:	48 89 da             	mov    %rbx,%rdx
ffffffff802021ae:	48 c7 c0 50 59 21 80 	mov    $0xffffffff80215950,%rax
ffffffff802021b5:	e8 12 1b 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802021ba:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802021c1:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802021c4:	48 89 c7             	mov    %rax,%rdi
ffffffff802021c7:	48 c7 c0 c0 cc 20 80 	mov    $0xffffffff8020ccc0,%rax
ffffffff802021ce:	e8 f9 1a 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802021d3:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802021da:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802021dd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff802021e2:	48 89 c7             	mov    %rax,%rdi
ffffffff802021e5:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff802021e9:	48 c7 c0 00 cd 20 80 	mov    $0xffffffff8020cd00,%rax
ffffffff802021f0:	e8 d7 1a 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802021f5:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802021fc:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802021ff:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80202204:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80202208:	c3                   	retq   
ffffffff80202209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80202210 <camlStdlib__open_out_206>:
ffffffff80202210:	48 89 c7             	mov    %rax,%rdi
ffffffff80202213:	48 c7 c3 6d 03 00 00 	mov    $0x36d,%rbx
ffffffff8020221a:	48 c7 c0 38 a8 22 80 	mov    $0xffffffff8022a838,%rax
ffffffff80202221:	e9 7a ff ff ff       	jmpq   ffffffff802021a0 <camlStdlib__open_out_gen_201>
ffffffff80202226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020222d:	00 00 00 

ffffffff80202230 <camlStdlib__open_out_bin_208>:
ffffffff80202230:	48 89 c7             	mov    %rax,%rdi
ffffffff80202233:	48 c7 c3 6d 03 00 00 	mov    $0x36d,%rbx
ffffffff8020223a:	48 c7 c0 98 a8 22 80 	mov    $0xffffffff8022a898,%rax
ffffffff80202241:	e9 5a ff ff ff       	jmpq   ffffffff802021a0 <camlStdlib__open_out_gen_201>
ffffffff80202246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020224d:	00 00 00 

ffffffff80202250 <camlStdlib__flush_all_212>:
ffffffff80202250:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202254:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
ffffffff8020225b:	48 c7 c0 60 cd 20 80 	mov    $0xffffffff8020cd60,%rax
ffffffff80202262:	e8 65 1a 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202267:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020226e:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202271:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202275:	e9 06 00 00 00       	jmpq   ffffffff80202280 <camlStdlib__iter_213>
ffffffff8020227a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80202280 <camlStdlib__iter_213>:
ffffffff80202280:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202284:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80202288:	74 62                	je     ffffffff802022ec <camlStdlib__iter_213+0x6c>
ffffffff8020228a:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8020228e:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202292:	4c 89 34 24          	mov    %r14,(%rsp)
ffffffff80202296:	4c 8d 35 2b 00 00 00 	lea    0x2b(%rip),%r14        # ffffffff802022c8 <camlStdlib__iter_213+0x48>
ffffffff8020229d:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
ffffffff802022a2:	49 89 e6             	mov    %rsp,%r14
ffffffff802022a5:	48 8b 38             	mov    (%rax),%rdi
ffffffff802022a8:	48 c7 c0 70 d0 20 80 	mov    $0xffffffff8020d070,%rax
ffffffff802022af:	e8 18 1a 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802022b4:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802022bb:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802022be:	41 5e                	pop    %r14
ffffffff802022c0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802022c4:	eb 1a                	jmp    ffffffff802022e0 <camlStdlib__iter_213+0x60>
ffffffff802022c6:	66 90                	xchg   %ax,%ax
ffffffff802022c8:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff802022cf:	48 8b 5b 50          	mov    0x50(%rbx),%rbx
ffffffff802022d3:	48 8b 38             	mov    (%rax),%rdi
ffffffff802022d6:	48 39 df             	cmp    %rbx,%rdi
ffffffff802022d9:	74 05                	je     ffffffff802022e0 <camlStdlib__iter_213+0x60>
ffffffff802022db:	e8 dc 1a 00 00       	callq  ffffffff80203dbc <caml_raise_exn>
ffffffff802022e0:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802022e4:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff802022e8:	eb 9a                	jmp    ffffffff80202284 <camlStdlib__iter_213+0x4>
ffffffff802022ea:	66 90                	xchg   %ax,%ax
ffffffff802022ec:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802022f3:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802022f7:	c3                   	retq   
ffffffff802022f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802022ff:	00 

ffffffff80202300 <camlStdlib__output_bytes_221>:
ffffffff80202300:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202304:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
ffffffff80202308:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff8020230c:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
ffffffff80202313:	ff 
ffffffff80202314:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
ffffffff80202319:	48 29 f7             	sub    %rsi,%rdi
ffffffff8020231c:	48 8d 4c 3f 01       	lea    0x1(%rdi,%rdi,1),%rcx
ffffffff80202321:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
ffffffff80202328:	48 89 c7             	mov    %rax,%rdi
ffffffff8020232b:	48 89 de             	mov    %rbx,%rsi
ffffffff8020232e:	48 c7 c0 c0 d3 20 80 	mov    $0xffffffff8020d3c0,%rax
ffffffff80202335:	e8 92 19 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff8020233a:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202341:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202344:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202348:	c3                   	retq   
ffffffff80202349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80202350 <camlStdlib__output_string_224>:
ffffffff80202350:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202354:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
ffffffff80202358:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff8020235c:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
ffffffff80202363:	ff 
ffffffff80202364:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
ffffffff80202369:	48 29 f7             	sub    %rsi,%rdi
ffffffff8020236c:	48 8d 4c 3f 01       	lea    0x1(%rdi,%rdi,1),%rcx
ffffffff80202371:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
ffffffff80202378:	48 89 c7             	mov    %rax,%rdi
ffffffff8020237b:	48 89 de             	mov    %rbx,%rsi
ffffffff8020237e:	48 c7 c0 d0 d4 20 80 	mov    $0xffffffff8020d4d0,%rax
ffffffff80202385:	e8 42 19 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff8020238a:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202391:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202394:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202398:	c3                   	retq   
ffffffff80202399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802023a0 <camlStdlib__output_227>:
ffffffff802023a0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802023a4:	48 89 fa             	mov    %rdi,%rdx
ffffffff802023a7:	48 89 f1             	mov    %rsi,%rcx
ffffffff802023aa:	48 83 fa 01          	cmp    $0x1,%rdx
ffffffff802023ae:	7c 50                	jl     ffffffff80202400 <camlStdlib__output_227+0x60>
ffffffff802023b0:	48 83 f9 01          	cmp    $0x1,%rcx
ffffffff802023b4:	7c 4a                	jl     ffffffff80202400 <camlStdlib__output_227+0x60>
ffffffff802023b6:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
ffffffff802023ba:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff802023be:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
ffffffff802023c5:	ff 
ffffffff802023c6:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
ffffffff802023cb:	48 29 f7             	sub    %rsi,%rdi
ffffffff802023ce:	48 d1 e7             	shl    %rdi
ffffffff802023d1:	48 29 cf             	sub    %rcx,%rdi
ffffffff802023d4:	48 83 c7 02          	add    $0x2,%rdi
ffffffff802023d8:	48 39 fa             	cmp    %rdi,%rdx
ffffffff802023db:	7f 23                	jg     ffffffff80202400 <camlStdlib__output_227+0x60>
ffffffff802023dd:	48 89 c7             	mov    %rax,%rdi
ffffffff802023e0:	48 89 de             	mov    %rbx,%rsi
ffffffff802023e3:	48 c7 c0 c0 d3 20 80 	mov    $0xffffffff8020d3c0,%rax
ffffffff802023ea:	e8 dd 18 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802023ef:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802023f6:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802023f9:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802023fd:	c3                   	retq   
ffffffff802023fe:	66 90                	xchg   %ax,%ax
ffffffff80202400:	48 c7 c0 b0 a8 22 80 	mov    $0xffffffff8022a8b0,%rax
ffffffff80202407:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020240b:	e9 d0 f7 ff ff       	jmpq   ffffffff80201be0 <camlStdlib__invalid_arg_8>

ffffffff80202410 <camlStdlib__output_substring_232>:
ffffffff80202410:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202414:	48 89 fa             	mov    %rdi,%rdx
ffffffff80202417:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020241a:	48 83 fa 01          	cmp    $0x1,%rdx
ffffffff8020241e:	7c 50                	jl     ffffffff80202470 <camlStdlib__output_substring_232+0x60>
ffffffff80202420:	48 83 f9 01          	cmp    $0x1,%rcx
ffffffff80202424:	7c 4a                	jl     ffffffff80202470 <camlStdlib__output_substring_232+0x60>
ffffffff80202426:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
ffffffff8020242a:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff8020242e:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
ffffffff80202435:	ff 
ffffffff80202436:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
ffffffff8020243b:	48 29 f7             	sub    %rsi,%rdi
ffffffff8020243e:	48 d1 e7             	shl    %rdi
ffffffff80202441:	48 29 cf             	sub    %rcx,%rdi
ffffffff80202444:	48 83 c7 02          	add    $0x2,%rdi
ffffffff80202448:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8020244b:	7f 23                	jg     ffffffff80202470 <camlStdlib__output_substring_232+0x60>
ffffffff8020244d:	48 89 c7             	mov    %rax,%rdi
ffffffff80202450:	48 89 de             	mov    %rbx,%rsi
ffffffff80202453:	48 c7 c0 d0 d4 20 80 	mov    $0xffffffff8020d4d0,%rax
ffffffff8020245a:	e8 6d 18 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff8020245f:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202466:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202469:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020246d:	c3                   	retq   
ffffffff8020246e:	66 90                	xchg   %ax,%ax
ffffffff80202470:	48 c7 c0 c0 a8 22 80 	mov    $0xffffffff8022a8c0,%rax
ffffffff80202477:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020247b:	e9 60 f7 ff ff       	jmpq   ffffffff80201be0 <camlStdlib__invalid_arg_8>

ffffffff80202480 <camlStdlib__output_value_240>:
ffffffff80202480:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202484:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
ffffffff8020248b:	48 89 c7             	mov    %rax,%rdi
ffffffff8020248e:	48 89 de             	mov    %rbx,%rsi
ffffffff80202491:	48 c7 c0 30 6e 20 80 	mov    $0xffffffff80206e30,%rax
ffffffff80202498:	e8 2f 18 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff8020249d:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802024a4:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802024a7:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802024ab:	c3                   	retq   
ffffffff802024ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802024b0 <camlStdlib__close_out_247>:
ffffffff802024b0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802024b4:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff802024b8:	48 89 c7             	mov    %rax,%rdi
ffffffff802024bb:	48 c7 c0 70 d0 20 80 	mov    $0xffffffff8020d070,%rax
ffffffff802024c2:	e8 05 18 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802024c7:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802024ce:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802024d1:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff802024d5:	48 c7 c0 d0 ce 20 80 	mov    $0xffffffff8020ced0,%rax
ffffffff802024dc:	e8 eb 17 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802024e1:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802024e8:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802024eb:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802024ef:	c3                   	retq   

ffffffff802024f0 <camlStdlib__close_out_noerr_249>:
ffffffff802024f0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802024f4:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff802024f8:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802024fc:	4c 89 34 24          	mov    %r14,(%rsp)
ffffffff80202500:	4c 8d 35 29 00 00 00 	lea    0x29(%rip),%r14        # ffffffff80202530 <camlStdlib__close_out_noerr_249+0x40>
ffffffff80202507:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
ffffffff8020250c:	49 89 e6             	mov    %rsp,%r14
ffffffff8020250f:	48 89 c7             	mov    %rax,%rdi
ffffffff80202512:	48 c7 c0 70 d0 20 80 	mov    $0xffffffff8020d070,%rax
ffffffff80202519:	e8 ae 17 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff8020251e:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202525:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202528:	41 5e                	pop    %r14
ffffffff8020252a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020252e:	eb 00                	jmp    ffffffff80202530 <camlStdlib__close_out_noerr_249+0x40>
ffffffff80202530:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202534:	4c 89 34 24          	mov    %r14,(%rsp)
ffffffff80202538:	4c 8d 35 2d 00 00 00 	lea    0x2d(%rip),%r14        # ffffffff8020256c <camlStdlib__close_out_noerr_249+0x7c>
ffffffff8020253f:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
ffffffff80202544:	49 89 e6             	mov    %rsp,%r14
ffffffff80202547:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8020254c:	48 c7 c0 d0 ce 20 80 	mov    $0xffffffff8020ced0,%rax
ffffffff80202553:	e8 74 17 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202558:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020255f:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202562:	41 5e                	pop    %r14
ffffffff80202564:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202568:	eb 0e                	jmp    ffffffff80202578 <camlStdlib__close_out_noerr_249+0x88>
ffffffff8020256a:	66 90                	xchg   %ax,%ax
ffffffff8020256c:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80202573:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202577:	c3                   	retq   
ffffffff80202578:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020257c:	c3                   	retq   
ffffffff8020257d:	0f 1f 00             	nopl   (%rax)

ffffffff80202580 <camlStdlib__open_in_gen_253>:
ffffffff80202580:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80202584:	48 89 3c 24          	mov    %rdi,(%rsp)
ffffffff80202588:	48 89 c6             	mov    %rax,%rsi
ffffffff8020258b:	48 89 da             	mov    %rbx,%rdx
ffffffff8020258e:	48 c7 c0 50 59 21 80 	mov    $0xffffffff80215950,%rax
ffffffff80202595:	e8 32 17 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff8020259a:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802025a1:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802025a4:	48 89 c7             	mov    %rax,%rdi
ffffffff802025a7:	48 c7 c0 90 cc 20 80 	mov    $0xffffffff8020cc90,%rax
ffffffff802025ae:	e8 19 17 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802025b3:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802025ba:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802025bd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff802025c2:	48 89 c7             	mov    %rax,%rdi
ffffffff802025c5:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff802025c9:	48 c7 c0 00 cd 20 80 	mov    $0xffffffff8020cd00,%rax
ffffffff802025d0:	e8 f7 16 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802025d5:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802025dc:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802025df:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff802025e4:	48 83 c4 18          	add    $0x18,%rsp
ffffffff802025e8:	c3                   	retq   
ffffffff802025e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802025f0 <camlStdlib__open_in_258>:
ffffffff802025f0:	48 89 c7             	mov    %rax,%rdi
ffffffff802025f3:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
ffffffff802025fa:	48 c7 c0 e0 a8 22 80 	mov    $0xffffffff8022a8e0,%rax
ffffffff80202601:	e9 7a ff ff ff       	jmpq   ffffffff80202580 <camlStdlib__open_in_gen_253>
ffffffff80202606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020260d:	00 00 00 

ffffffff80202610 <camlStdlib__open_in_bin_260>:
ffffffff80202610:	48 89 c7             	mov    %rax,%rdi
ffffffff80202613:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
ffffffff8020261a:	48 c7 c0 f8 a8 22 80 	mov    $0xffffffff8022a8f8,%rax
ffffffff80202621:	e9 5a ff ff ff       	jmpq   ffffffff80202580 <camlStdlib__open_in_gen_253>
ffffffff80202626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020262d:	00 00 00 

ffffffff80202630 <camlStdlib__input_264>:
ffffffff80202630:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202634:	48 89 fa             	mov    %rdi,%rdx
ffffffff80202637:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020263a:	48 83 fa 01          	cmp    $0x1,%rdx
ffffffff8020263e:	7c 50                	jl     ffffffff80202690 <camlStdlib__input_264+0x60>
ffffffff80202640:	48 83 f9 01          	cmp    $0x1,%rcx
ffffffff80202644:	7c 4a                	jl     ffffffff80202690 <camlStdlib__input_264+0x60>
ffffffff80202646:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
ffffffff8020264a:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff8020264e:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
ffffffff80202655:	ff 
ffffffff80202656:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
ffffffff8020265b:	48 29 f7             	sub    %rsi,%rdi
ffffffff8020265e:	48 d1 e7             	shl    %rdi
ffffffff80202661:	48 29 cf             	sub    %rcx,%rdi
ffffffff80202664:	48 83 c7 02          	add    $0x2,%rdi
ffffffff80202668:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8020266b:	7f 23                	jg     ffffffff80202690 <camlStdlib__input_264+0x60>
ffffffff8020266d:	48 89 c7             	mov    %rax,%rdi
ffffffff80202670:	48 89 de             	mov    %rbx,%rsi
ffffffff80202673:	48 c7 c0 50 d8 20 80 	mov    $0xffffffff8020d850,%rax
ffffffff8020267a:	e8 4d 16 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff8020267f:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202686:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202689:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020268d:	c3                   	retq   
ffffffff8020268e:	66 90                	xchg   %ax,%ax
ffffffff80202690:	48 c7 c0 10 a9 22 80 	mov    $0xffffffff8022a910,%rax
ffffffff80202697:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020269b:	e9 40 f5 ff ff       	jmpq   ffffffff80201be0 <camlStdlib__invalid_arg_8>

ffffffff802026a0 <camlStdlib__unsafe_really_input_269>:
ffffffff802026a0:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff802026a4:	48 89 fa             	mov    %rdi,%rdx
ffffffff802026a7:	48 89 f1             	mov    %rsi,%rcx
ffffffff802026aa:	48 83 f9 01          	cmp    $0x1,%rcx
ffffffff802026ae:	7f 0c                	jg     ffffffff802026bc <camlStdlib__unsafe_really_input_269+0x1c>
ffffffff802026b0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802026b7:	48 83 c4 28          	add    $0x28,%rsp
ffffffff802026bb:	c3                   	retq   
ffffffff802026bc:	48 89 0c 24          	mov    %rcx,(%rsp)
ffffffff802026c0:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff802026c5:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff802026ca:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff802026cf:	48 89 c7             	mov    %rax,%rdi
ffffffff802026d2:	48 89 de             	mov    %rbx,%rsi
ffffffff802026d5:	48 c7 c0 50 d8 20 80 	mov    $0xffffffff8020d850,%rax
ffffffff802026dc:	e8 eb 15 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802026e1:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802026e8:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802026eb:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff802026ef:	75 1f                	jne    ffffffff80202710 <camlStdlib__unsafe_really_input_269+0x70>
ffffffff802026f1:	48 c7 c0 10 50 23 80 	mov    $0xffffffff80235010,%rax
ffffffff802026f8:	48 31 db             	xor    %rbx,%rbx
ffffffff802026fb:	89 18                	mov    %ebx,(%rax)
ffffffff802026fd:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202704:	48 8b 40 58          	mov    0x58(%rax),%rax
ffffffff80202708:	e8 af 16 00 00       	callq  ffffffff80203dbc <caml_raise_exn>
ffffffff8020270d:	0f 1f 00             	nopl   (%rax)
ffffffff80202710:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff80202714:	48 29 c6             	sub    %rax,%rsi
ffffffff80202717:	48 ff c6             	inc    %rsi
ffffffff8020271a:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff8020271f:	48 8d 7c 03 ff       	lea    -0x1(%rbx,%rax,1),%rdi
ffffffff80202724:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80202729:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
ffffffff8020272e:	e9 71 ff ff ff       	jmpq   ffffffff802026a4 <camlStdlib__unsafe_really_input_269+0x4>
ffffffff80202733:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020273a:	00 00 00 00 
ffffffff8020273e:	66 90                	xchg   %ax,%ax

ffffffff80202740 <camlStdlib__really_input_275>:
ffffffff80202740:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80202744:	7c 32                	jl     ffffffff80202778 <camlStdlib__really_input_275+0x38>
ffffffff80202746:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff8020274a:	7c 2c                	jl     ffffffff80202778 <camlStdlib__really_input_275+0x38>
ffffffff8020274c:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
ffffffff80202750:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80202754:	48 8d 14 d5 ff ff ff 	lea    -0x1(,%rdx,8),%rdx
ffffffff8020275b:	ff 
ffffffff8020275c:	48 0f b6 0c 13       	movzbq (%rbx,%rdx,1),%rcx
ffffffff80202761:	48 29 ca             	sub    %rcx,%rdx
ffffffff80202764:	48 d1 e2             	shl    %rdx
ffffffff80202767:	48 29 f2             	sub    %rsi,%rdx
ffffffff8020276a:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8020276e:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80202771:	7f 05                	jg     ffffffff80202778 <camlStdlib__really_input_275+0x38>
ffffffff80202773:	e9 28 ff ff ff       	jmpq   ffffffff802026a0 <camlStdlib__unsafe_really_input_269>
ffffffff80202778:	48 c7 c0 20 a9 22 80 	mov    $0xffffffff8022a920,%rax
ffffffff8020277f:	e9 5c f4 ff ff       	jmpq   ffffffff80201be0 <camlStdlib__invalid_arg_8>
ffffffff80202784:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020278b:	00 00 00 00 
ffffffff8020278f:	90                   	nop

ffffffff80202790 <camlStdlib__really_input_string_280>:
ffffffff80202790:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80202794:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80202798:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff8020279d:	48 89 df             	mov    %rbx,%rdi
ffffffff802027a0:	48 c7 c0 60 4e 21 80 	mov    $0xffffffff80214e60,%rax
ffffffff802027a7:	e8 20 15 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802027ac:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802027b3:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802027b6:	48 89 c3             	mov    %rax,%rbx
ffffffff802027b9:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff802027be:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
ffffffff802027c5:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802027c9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
ffffffff802027ce:	e8 6d ff ff ff       	callq  ffffffff80202740 <camlStdlib__really_input_275>
ffffffff802027d3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff802027d8:	48 83 c4 18          	add    $0x18,%rsp
ffffffff802027dc:	c3                   	retq   
ffffffff802027dd:	0f 1f 00             	nopl   (%rax)

ffffffff802027e0 <camlStdlib__input_line_285>:
ffffffff802027e0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802027e4:	48 89 c3             	mov    %rax,%rbx
ffffffff802027e7:	48 c7 c6 a8 a0 22 80 	mov    $0xffffffff8022a0a8,%rsi
ffffffff802027ee:	49 83 ef 30          	sub    $0x30,%r15
ffffffff802027f2:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802027f9:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802027fc:	72 48                	jb     ffffffff80202846 <camlStdlib__input_line_285+0x66>
ffffffff802027fe:	49 8d 7f 08          	lea    0x8(%r15),%rdi
ffffffff80202802:	48 c7 47 f8 f7 14 00 	movq   $0x14f7,-0x8(%rdi)
ffffffff80202809:	00 
ffffffff8020280a:	48 c7 c0 70 04 20 80 	mov    $0xffffffff80200470,%rax
ffffffff80202811:	48 89 07             	mov    %rax,(%rdi)
ffffffff80202814:	48 c7 47 08 05 00 00 	movq   $0x5,0x8(%rdi)
ffffffff8020281b:	00 
ffffffff8020281c:	48 c7 c0 c0 28 20 80 	mov    $0xffffffff802028c0,%rax
ffffffff80202823:	48 89 47 10          	mov    %rax,0x10(%rdi)
ffffffff80202827:	48 89 5f 18          	mov    %rbx,0x18(%rdi)
ffffffff8020282b:	48 89 77 20          	mov    %rsi,0x20(%rdi)
ffffffff8020282f:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
ffffffff80202836:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff8020283d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202841:	e9 7a 00 00 00       	jmpq   ffffffff802028c0 <camlStdlib__scan_294>
ffffffff80202846:	e8 05 12 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020284b:	eb a1                	jmp    ffffffff802027ee <camlStdlib__input_line_285+0xe>
ffffffff8020284d:	0f 1f 00             	nopl   (%rax)

ffffffff80202850 <camlStdlib__build_result_287>:
ffffffff80202850:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202854:	48 89 c5             	mov    %rax,%rbp
ffffffff80202857:	49 89 fc             	mov    %rdi,%r12
ffffffff8020285a:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff8020285e:	74 4c                	je     ffffffff802028ac <camlStdlib__build_result_287+0x5c>
ffffffff80202860:	49 8b 3c 24          	mov    (%r12),%rdi
ffffffff80202864:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80202868:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8020286c:	48 8d 04 c5 ff ff ff 	lea    -0x1(,%rax,8),%rax
ffffffff80202873:	ff 
ffffffff80202874:	48 0f b6 34 07       	movzbq (%rdi,%rax,1),%rsi
ffffffff80202879:	48 29 f0             	sub    %rsi,%rax
ffffffff8020287c:	4c 8d 6c 00 01       	lea    0x1(%rax,%rax,1),%r13
ffffffff80202881:	48 89 d9             	mov    %rbx,%rcx
ffffffff80202884:	4c 29 e9             	sub    %r13,%rcx
ffffffff80202887:	48 ff c1             	inc    %rcx
ffffffff8020288a:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
ffffffff80202891:	48 89 ea             	mov    %rbp,%rdx
ffffffff80202894:	4d 89 e8             	mov    %r13,%r8
ffffffff80202897:	e8 24 2b 01 00       	callq  ffffffff802153c0 <caml_blit_bytes>
ffffffff8020289c:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
ffffffff802028a1:	4c 29 eb             	sub    %r13,%rbx
ffffffff802028a4:	48 ff c3             	inc    %rbx
ffffffff802028a7:	48 89 e8             	mov    %rbp,%rax
ffffffff802028aa:	eb a8                	jmp    ffffffff80202854 <camlStdlib__build_result_287+0x4>
ffffffff802028ac:	48 89 e8             	mov    %rbp,%rax
ffffffff802028af:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802028b3:	c3                   	retq   
ffffffff802028b4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802028bb:	00 00 00 00 
ffffffff802028bf:	90                   	nop

ffffffff802028c0 <camlStdlib__scan_294>:
ffffffff802028c0:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff802028c4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff802028c9:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff802028ce:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff802028d3:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
ffffffff802028d7:	48 c7 c0 c0 db 20 80 	mov    $0xffffffff8020dbc0,%rax
ffffffff802028de:	e8 e9 13 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802028e3:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802028ea:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802028ed:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff802028f1:	75 5d                	jne    ffffffff80202950 <camlStdlib__scan_294+0x90>
ffffffff802028f3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
ffffffff802028f8:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff802028fc:	74 36                	je     ffffffff80202934 <camlStdlib__scan_294+0x74>
ffffffff802028fe:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff80202903:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
ffffffff80202908:	48 c7 c0 60 4e 21 80 	mov    $0xffffffff80214e60,%rax
ffffffff8020290f:	e8 b8 13 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202914:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020291b:	4d 8b 3b             	mov    (%r11),%r15
ffffffff8020291e:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
ffffffff80202923:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
ffffffff80202928:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8020292c:	e9 1f ff ff ff       	jmpq   ffffffff80202850 <camlStdlib__build_result_287>
ffffffff80202931:	0f 1f 00             	nopl   (%rax)
ffffffff80202934:	48 c7 c0 10 50 23 80 	mov    $0xffffffff80235010,%rax
ffffffff8020293b:	48 31 db             	xor    %rbx,%rbx
ffffffff8020293e:	89 18                	mov    %ebx,(%rax)
ffffffff80202940:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202947:	48 8b 40 58          	mov    0x58(%rax),%rax
ffffffff8020294b:	e8 6c 14 00 00       	callq  ffffffff80203dbc <caml_raise_exn>
ffffffff80202950:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80202955:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80202959:	0f 8e f9 00 00 00    	jle    ffffffff80202a58 <camlStdlib__scan_294+0x198>
ffffffff8020295f:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
ffffffff80202963:	48 89 c7             	mov    %rax,%rdi
ffffffff80202966:	48 c7 c0 60 4e 21 80 	mov    $0xffffffff80214e60,%rax
ffffffff8020296d:	e8 5a 13 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202972:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202979:	4d 8b 3b             	mov    (%r11),%r15
ffffffff8020297c:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80202980:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
ffffffff80202985:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
ffffffff80202989:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
ffffffff80202990:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff80202995:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
ffffffff80202999:	48 89 c6             	mov    %rax,%rsi
ffffffff8020299c:	48 c7 c0 50 d8 20 80 	mov    $0xffffffff8020d850,%rax
ffffffff802029a3:	e8 24 13 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802029a8:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802029af:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802029b2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff802029b7:	48 8b 78 18          	mov    0x18(%rax),%rdi
ffffffff802029bb:	48 c7 c0 d0 d6 20 80 	mov    $0xffffffff8020d6d0,%rax
ffffffff802029c2:	e8 05 13 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802029c7:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802029ce:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802029d1:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
ffffffff802029d6:	48 83 fb 01          	cmp    $0x1,%rbx
ffffffff802029da:	74 70                	je     ffffffff80202a4c <camlStdlib__scan_294+0x18c>
ffffffff802029dc:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff802029e1:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
ffffffff802029e6:	48 8d 7c 07 fd       	lea    -0x3(%rdi,%rax,1),%rdi
ffffffff802029eb:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff802029f0:	49 83 ef 18          	sub    $0x18,%r15
ffffffff802029f4:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff802029fb:	4c 3b 38             	cmp    (%rax),%r15
ffffffff802029fe:	0f 82 fd 00 00 00    	jb     ffffffff80202b01 <camlStdlib__scan_294+0x241>
ffffffff80202a04:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80202a08:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80202a0d:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
ffffffff80202a14:	00 
ffffffff80202a15:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff80202a19:	48 89 30             	mov    %rsi,(%rax)
ffffffff80202a1c:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80202a20:	48 c7 c0 60 4e 21 80 	mov    $0xffffffff80214e60,%rax
ffffffff80202a27:	e8 a0 12 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202a2c:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202a33:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202a36:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff80202a3b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80202a40:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80202a44:	e9 07 fe ff ff       	jmpq   ffffffff80202850 <camlStdlib__build_result_287>
ffffffff80202a49:	0f 1f 00             	nopl   (%rax)
ffffffff80202a4c:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80202a50:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80202a54:	c3                   	retq   
ffffffff80202a55:	0f 1f 00             	nopl   (%rax)
ffffffff80202a58:	48 c7 c7 02 00 00 00 	mov    $0x2,%rdi
ffffffff80202a5f:	48 29 c7             	sub    %rax,%rdi
ffffffff80202a62:	48 c7 c0 60 4e 21 80 	mov    $0xffffffff80214e60,%rax
ffffffff80202a69:	e8 5e 12 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202a6e:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202a75:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202a78:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80202a7c:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
ffffffff80202a83:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff80202a88:	48 29 d9             	sub    %rbx,%rcx
ffffffff80202a8b:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
ffffffff80202a92:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff80202a97:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
ffffffff80202a9b:	48 89 c6             	mov    %rax,%rsi
ffffffff80202a9e:	48 c7 c0 50 d8 20 80 	mov    $0xffffffff8020d850,%rax
ffffffff80202aa5:	e8 22 12 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202aaa:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202ab1:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202ab4:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80202ab8:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80202abf:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80202ac2:	72 36                	jb     ffffffff80202afa <camlStdlib__scan_294+0x23a>
ffffffff80202ac4:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80202ac8:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
ffffffff80202acf:	00 
ffffffff80202ad0:	48 8b 1c 24          	mov    (%rsp),%rbx
ffffffff80202ad4:	48 89 18             	mov    %rbx,(%rax)
ffffffff80202ad7:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
ffffffff80202adc:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80202ae0:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
ffffffff80202ae5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80202aea:	48 29 fb             	sub    %rdi,%rbx
ffffffff80202aed:	48 ff c3             	inc    %rbx
ffffffff80202af0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80202af5:	e9 ca fd ff ff       	jmpq   ffffffff802028c4 <camlStdlib__scan_294+0x4>
ffffffff80202afa:	e8 51 0f 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80202aff:	eb b3                	jmp    ffffffff80202ab4 <camlStdlib__scan_294+0x1f4>
ffffffff80202b01:	e8 4a 0f 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff80202b06:	e9 e5 fe ff ff       	jmpq   ffffffff802029f0 <camlStdlib__scan_294+0x130>
ffffffff80202b0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80202b10 <camlStdlib__close_in_noerr_308>:
ffffffff80202b10:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202b14:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202b18:	4c 89 34 24          	mov    %r14,(%rsp)
ffffffff80202b1c:	4c 8d 35 29 00 00 00 	lea    0x29(%rip),%r14        # ffffffff80202b4c <camlStdlib__close_in_noerr_308+0x3c>
ffffffff80202b23:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
ffffffff80202b28:	49 89 e6             	mov    %rsp,%r14
ffffffff80202b2b:	48 89 c7             	mov    %rax,%rdi
ffffffff80202b2e:	48 c7 c0 d0 ce 20 80 	mov    $0xffffffff8020ced0,%rax
ffffffff80202b35:	e8 92 11 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202b3a:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202b41:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202b44:	41 5e                	pop    %r14
ffffffff80202b46:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202b4a:	eb 0c                	jmp    ffffffff80202b58 <camlStdlib__close_in_noerr_308+0x48>
ffffffff80202b4c:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80202b53:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202b57:	c3                   	retq   
ffffffff80202b58:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202b5c:	c3                   	retq   
ffffffff80202b5d:	0f 1f 00             	nopl   (%rax)

ffffffff80202b60 <camlStdlib__print_char_311>:
ffffffff80202b60:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202b64:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff80202b6b:	48 8b bb 30 01 00 00 	mov    0x130(%rbx),%rdi
ffffffff80202b72:	48 89 c6             	mov    %rax,%rsi
ffffffff80202b75:	48 c7 c0 30 d1 20 80 	mov    $0xffffffff8020d130,%rax
ffffffff80202b7c:	e8 4b 11 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202b81:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202b88:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202b8b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202b8f:	c3                   	retq   

ffffffff80202b90 <camlStdlib__print_string_313>:
ffffffff80202b90:	48 89 c3             	mov    %rax,%rbx
ffffffff80202b93:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202b9a:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
ffffffff80202ba1:	e9 aa f7 ff ff       	jmpq   ffffffff80202350 <camlStdlib__output_string_224>
ffffffff80202ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80202bad:	00 00 00 

ffffffff80202bb0 <camlStdlib__print_bytes_315>:
ffffffff80202bb0:	48 89 c3             	mov    %rax,%rbx
ffffffff80202bb3:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202bba:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
ffffffff80202bc1:	e9 3a f7 ff ff       	jmpq   ffffffff80202300 <camlStdlib__output_bytes_221>
ffffffff80202bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80202bcd:	00 00 00 

ffffffff80202bd0 <camlStdlib__print_int_317>:
ffffffff80202bd0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202bd4:	e8 c7 f2 ff ff       	callq  ffffffff80201ea0 <camlStdlib__string_of_int_161>
ffffffff80202bd9:	48 89 c3             	mov    %rax,%rbx
ffffffff80202bdc:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202be3:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
ffffffff80202bea:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202bee:	e9 5d f7 ff ff       	jmpq   ffffffff80202350 <camlStdlib__output_string_224>
ffffffff80202bf3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80202bfa:	00 00 00 00 
ffffffff80202bfe:	66 90                	xchg   %ax,%ax

ffffffff80202c00 <camlStdlib__print_float_319>:
ffffffff80202c00:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202c04:	e8 67 f4 ff ff       	callq  ffffffff80202070 <camlStdlib__string_of_float_172>
ffffffff80202c09:	48 89 c3             	mov    %rax,%rbx
ffffffff80202c0c:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202c13:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
ffffffff80202c1a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202c1e:	e9 2d f7 ff ff       	jmpq   ffffffff80202350 <camlStdlib__output_string_224>
ffffffff80202c23:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80202c2a:	00 00 00 00 
ffffffff80202c2e:	66 90                	xchg   %ax,%ax

ffffffff80202c30 <camlStdlib__print_endline_321>:
ffffffff80202c30:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202c34:	48 89 c3             	mov    %rax,%rbx
ffffffff80202c37:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202c3e:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
ffffffff80202c45:	e8 06 f7 ff ff       	callq  ffffffff80202350 <camlStdlib__output_string_224>
ffffffff80202c4a:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
ffffffff80202c51:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202c58:	48 8b b8 30 01 00 00 	mov    0x130(%rax),%rdi
ffffffff80202c5f:	48 c7 c0 30 d1 20 80 	mov    $0xffffffff8020d130,%rax
ffffffff80202c66:	e8 61 10 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202c6b:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202c72:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202c75:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202c7c:	48 8b b8 30 01 00 00 	mov    0x130(%rax),%rdi
ffffffff80202c83:	48 c7 c0 70 d0 20 80 	mov    $0xffffffff8020d070,%rax
ffffffff80202c8a:	e8 3d 10 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202c8f:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202c96:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202c99:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202c9d:	c3                   	retq   
ffffffff80202c9e:	66 90                	xchg   %ax,%ax

ffffffff80202ca0 <camlStdlib__print_newline_323>:
ffffffff80202ca0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202ca4:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
ffffffff80202cab:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202cb2:	48 8b b8 30 01 00 00 	mov    0x130(%rax),%rdi
ffffffff80202cb9:	48 c7 c0 30 d1 20 80 	mov    $0xffffffff8020d130,%rax
ffffffff80202cc0:	e8 07 10 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202cc5:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202ccc:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202ccf:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202cd6:	48 8b b8 30 01 00 00 	mov    0x130(%rax),%rdi
ffffffff80202cdd:	48 c7 c0 70 d0 20 80 	mov    $0xffffffff8020d070,%rax
ffffffff80202ce4:	e8 e3 0f 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202ce9:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202cf0:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202cf3:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202cf7:	c3                   	retq   
ffffffff80202cf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80202cff:	00 

ffffffff80202d00 <camlStdlib__prerr_char_325>:
ffffffff80202d00:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202d04:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff80202d0b:	48 8b bb 38 01 00 00 	mov    0x138(%rbx),%rdi
ffffffff80202d12:	48 89 c6             	mov    %rax,%rsi
ffffffff80202d15:	48 c7 c0 30 d1 20 80 	mov    $0xffffffff8020d130,%rax
ffffffff80202d1c:	e8 ab 0f 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202d21:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202d28:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202d2b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202d2f:	c3                   	retq   

ffffffff80202d30 <camlStdlib__prerr_string_327>:
ffffffff80202d30:	48 89 c3             	mov    %rax,%rbx
ffffffff80202d33:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202d3a:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
ffffffff80202d41:	e9 0a f6 ff ff       	jmpq   ffffffff80202350 <camlStdlib__output_string_224>
ffffffff80202d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80202d4d:	00 00 00 

ffffffff80202d50 <camlStdlib__prerr_bytes_329>:
ffffffff80202d50:	48 89 c3             	mov    %rax,%rbx
ffffffff80202d53:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202d5a:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
ffffffff80202d61:	e9 9a f5 ff ff       	jmpq   ffffffff80202300 <camlStdlib__output_bytes_221>
ffffffff80202d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80202d6d:	00 00 00 

ffffffff80202d70 <camlStdlib__prerr_int_331>:
ffffffff80202d70:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202d74:	e8 27 f1 ff ff       	callq  ffffffff80201ea0 <camlStdlib__string_of_int_161>
ffffffff80202d79:	48 89 c3             	mov    %rax,%rbx
ffffffff80202d7c:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202d83:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
ffffffff80202d8a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202d8e:	e9 bd f5 ff ff       	jmpq   ffffffff80202350 <camlStdlib__output_string_224>
ffffffff80202d93:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80202d9a:	00 00 00 00 
ffffffff80202d9e:	66 90                	xchg   %ax,%ax

ffffffff80202da0 <camlStdlib__prerr_float_333>:
ffffffff80202da0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202da4:	e8 c7 f2 ff ff       	callq  ffffffff80202070 <camlStdlib__string_of_float_172>
ffffffff80202da9:	48 89 c3             	mov    %rax,%rbx
ffffffff80202dac:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202db3:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
ffffffff80202dba:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202dbe:	e9 8d f5 ff ff       	jmpq   ffffffff80202350 <camlStdlib__output_string_224>
ffffffff80202dc3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80202dca:	00 00 00 00 
ffffffff80202dce:	66 90                	xchg   %ax,%ax

ffffffff80202dd0 <camlStdlib__prerr_endline_335>:
ffffffff80202dd0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202dd4:	48 89 c3             	mov    %rax,%rbx
ffffffff80202dd7:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202dde:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
ffffffff80202de5:	e8 66 f5 ff ff       	callq  ffffffff80202350 <camlStdlib__output_string_224>
ffffffff80202dea:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
ffffffff80202df1:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202df8:	48 8b b8 38 01 00 00 	mov    0x138(%rax),%rdi
ffffffff80202dff:	48 c7 c0 30 d1 20 80 	mov    $0xffffffff8020d130,%rax
ffffffff80202e06:	e8 c1 0e 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202e0b:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202e12:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202e15:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202e1c:	48 8b b8 38 01 00 00 	mov    0x138(%rax),%rdi
ffffffff80202e23:	48 c7 c0 70 d0 20 80 	mov    $0xffffffff8020d070,%rax
ffffffff80202e2a:	e8 9d 0e 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202e2f:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202e36:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202e39:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202e3d:	c3                   	retq   
ffffffff80202e3e:	66 90                	xchg   %ax,%ax

ffffffff80202e40 <camlStdlib__prerr_newline_337>:
ffffffff80202e40:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202e44:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
ffffffff80202e4b:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202e52:	48 8b b8 38 01 00 00 	mov    0x138(%rax),%rdi
ffffffff80202e59:	48 c7 c0 30 d1 20 80 	mov    $0xffffffff8020d130,%rax
ffffffff80202e60:	e8 67 0e 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202e65:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202e6c:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202e6f:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202e76:	48 8b b8 38 01 00 00 	mov    0x138(%rax),%rdi
ffffffff80202e7d:	48 c7 c0 70 d0 20 80 	mov    $0xffffffff8020d070,%rax
ffffffff80202e84:	e8 43 0e 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202e89:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202e90:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202e93:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202e97:	c3                   	retq   
ffffffff80202e98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80202e9f:	00 

ffffffff80202ea0 <camlStdlib__read_line_339>:
ffffffff80202ea0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202ea4:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202eab:	48 8b b8 30 01 00 00 	mov    0x130(%rax),%rdi
ffffffff80202eb2:	48 c7 c0 70 d0 20 80 	mov    $0xffffffff8020d070,%rax
ffffffff80202eb9:	e8 0e 0e 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202ebe:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202ec5:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202ec8:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80202ecf:	48 8b 80 28 01 00 00 	mov    0x128(%rax),%rax
ffffffff80202ed6:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202eda:	e9 01 f9 ff ff       	jmpq   ffffffff802027e0 <camlStdlib__input_line_285>
ffffffff80202edf:	90                   	nop

ffffffff80202ee0 <camlStdlib__read_int_341>:
ffffffff80202ee0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202ee4:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80202eeb:	e8 b0 ff ff ff       	callq  ffffffff80202ea0 <camlStdlib__read_line_339>
ffffffff80202ef0:	48 89 c7             	mov    %rax,%rdi
ffffffff80202ef3:	48 c7 c0 e0 b0 20 80 	mov    $0xffffffff8020b0e0,%rax
ffffffff80202efa:	e8 cd 0d 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202eff:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202f06:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202f09:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202f0d:	c3                   	retq   
ffffffff80202f0e:	66 90                	xchg   %ax,%ax

ffffffff80202f10 <camlStdlib__read_int_opt_343>:
ffffffff80202f10:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202f14:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80202f1b:	e8 80 ff ff ff       	callq  ffffffff80202ea0 <camlStdlib__read_line_339>
ffffffff80202f20:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202f24:	e9 a7 ef ff ff       	jmpq   ffffffff80201ed0 <camlStdlib__int_of_string_opt_164>
ffffffff80202f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80202f30 <camlStdlib__read_float_345>:
ffffffff80202f30:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202f34:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80202f3b:	e8 60 ff ff ff       	callq  ffffffff80202ea0 <camlStdlib__read_line_339>
ffffffff80202f40:	48 89 c7             	mov    %rax,%rdi
ffffffff80202f43:	48 c7 c0 50 7a 20 80 	mov    $0xffffffff80207a50,%rax
ffffffff80202f4a:	e8 7d 0d 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202f4f:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202f56:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202f59:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202f5d:	c3                   	retq   
ffffffff80202f5e:	66 90                	xchg   %ax,%ax

ffffffff80202f60 <camlStdlib__read_float_opt_347>:
ffffffff80202f60:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202f64:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80202f6b:	e8 30 ff ff ff       	callq  ffffffff80202ea0 <camlStdlib__read_line_339>
ffffffff80202f70:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202f74:	e9 27 f1 ff ff       	jmpq   ffffffff802020a0 <camlStdlib__float_of_string_opt_175>
ffffffff80202f79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80202f80 <camlStdlib__fun_869>:
ffffffff80202f80:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202f84:	48 89 c7             	mov    %rax,%rdi
ffffffff80202f87:	48 89 de             	mov    %rbx,%rsi
ffffffff80202f8a:	48 c7 c0 a0 d5 20 80 	mov    $0xffffffff8020d5a0,%rax
ffffffff80202f91:	e8 36 0d 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202f96:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202f9d:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202fa0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202fa4:	c3                   	retq   
ffffffff80202fa5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80202fac:	00 00 00 00 

ffffffff80202fb0 <camlStdlib__fun_871>:
ffffffff80202fb0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202fb4:	48 89 c7             	mov    %rax,%rdi
ffffffff80202fb7:	48 c7 c0 b0 d6 20 80 	mov    $0xffffffff8020d6b0,%rax
ffffffff80202fbe:	e8 09 0d 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202fc3:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202fca:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202fcd:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202fd1:	c3                   	retq   
ffffffff80202fd2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80202fd9:	00 00 00 00 
ffffffff80202fdd:	0f 1f 00             	nopl   (%rax)

ffffffff80202fe0 <camlStdlib__fun_873>:
ffffffff80202fe0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80202fe4:	48 89 c7             	mov    %rax,%rdi
ffffffff80202fe7:	48 c7 c0 70 cf 20 80 	mov    $0xffffffff8020cf70,%rax
ffffffff80202fee:	e8 d9 0c 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80202ff3:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80202ffa:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80202ffd:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203001:	c3                   	retq   
ffffffff80203002:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80203009:	00 00 00 00 
ffffffff8020300d:	0f 1f 00             	nopl   (%rax)

ffffffff80203010 <camlStdlib__fun_875>:
ffffffff80203010:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203014:	48 89 c7             	mov    %rax,%rdi
ffffffff80203017:	48 89 de             	mov    %rbx,%rsi
ffffffff8020301a:	48 c7 c0 a0 da 20 80 	mov    $0xffffffff8020daa0,%rax
ffffffff80203021:	e8 a6 0c 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80203026:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020302d:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80203030:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203034:	c3                   	retq   
ffffffff80203035:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020303c:	00 00 00 00 

ffffffff80203040 <camlStdlib__fun_877>:
ffffffff80203040:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203044:	48 89 c7             	mov    %rax,%rdi
ffffffff80203047:	48 c7 c0 a0 db 20 80 	mov    $0xffffffff8020dba0,%rax
ffffffff8020304e:	e8 79 0c 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80203053:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020305a:	4d 8b 3b             	mov    (%r11),%r15
ffffffff8020305d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203061:	c3                   	retq   
ffffffff80203062:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80203069:	00 00 00 00 
ffffffff8020306d:	0f 1f 00             	nopl   (%rax)

ffffffff80203070 <camlStdlib__fun_879>:
ffffffff80203070:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203074:	48 89 c7             	mov    %rax,%rdi
ffffffff80203077:	48 c7 c0 70 cf 20 80 	mov    $0xffffffff8020cf70,%rax
ffffffff8020307e:	e8 49 0c 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80203083:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020308a:	4d 8b 3b             	mov    (%r11),%r15
ffffffff8020308d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203091:	c3                   	retq   
ffffffff80203092:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80203099:	00 00 00 00 
ffffffff8020309d:	0f 1f 00             	nopl   (%rax)

ffffffff802030a0 <camlStdlib__string_of_format_380>:
ffffffff802030a0:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff802030a4:	c3                   	retq   
ffffffff802030a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802030ac:	00 00 00 00 

ffffffff802030b0 <camlStdlib__$5e$5e_385>:
ffffffff802030b0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff802030b4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff802030b9:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff802030bd:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff802030c1:	48 c7 c0 40 a9 22 80 	mov    $0xffffffff8022a940,%rax
ffffffff802030c8:	e8 33 ec ff ff       	callq  ffffffff80201d00 <camlStdlib__$5e_130>
ffffffff802030cd:	48 89 c3             	mov    %rax,%rbx
ffffffff802030d0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff802030d5:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff802030d9:	e8 22 ec ff ff       	callq  ffffffff80201d00 <camlStdlib__$5e_130>
ffffffff802030de:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff802030e3:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802030e7:	48 8b 18             	mov    (%rax),%rbx
ffffffff802030ea:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff802030ef:	48 8b 00             	mov    (%rax),%rax
ffffffff802030f2:	e8 b9 df ff ff       	callq  ffffffff802010b0 <camlCamlinternalFormatBasics__concat_fmt_510>
ffffffff802030f7:	48 89 c3             	mov    %rax,%rbx
ffffffff802030fa:	49 83 ef 18          	sub    $0x18,%r15
ffffffff802030fe:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80203105:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80203108:	72 1d                	jb     ffffffff80203127 <camlStdlib__$5e$5e_385+0x77>
ffffffff8020310a:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020310e:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
ffffffff80203115:	00 
ffffffff80203116:	48 89 18             	mov    %rbx,(%rax)
ffffffff80203119:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff8020311e:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80203122:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80203126:	c3                   	retq   
ffffffff80203127:	e8 24 09 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff8020312c:	eb cc                	jmp    ffffffff802030fa <camlStdlib__$5e$5e_385+0x4a>
ffffffff8020312e:	66 90                	xchg   %ax,%ax

ffffffff80203130 <camlStdlib__at_exit_394>:
ffffffff80203130:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203134:	48 89 c3             	mov    %rax,%rbx
ffffffff80203137:	48 c7 c7 08 a3 22 80 	mov    $0xffffffff8022a308,%rdi
ffffffff8020313e:	48 8b 87 38 03 00 00 	mov    0x338(%rdi),%rax
ffffffff80203145:	48 8b 10             	mov    (%rax),%rdx
ffffffff80203148:	49 83 ef 40          	sub    $0x40,%r15
ffffffff8020314c:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80203153:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80203156:	72 59                	jb     ffffffff802031b1 <camlStdlib__at_exit_394+0x81>
ffffffff80203158:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020315c:	48 83 c0 30          	add    $0x30,%rax
ffffffff80203160:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff80203167:	00 
ffffffff80203168:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
ffffffff8020316f:	48 8d 70 d0          	lea    -0x30(%rax),%rsi
ffffffff80203173:	48 c7 46 f8 f7 14 00 	movq   $0x14f7,-0x8(%rsi)
ffffffff8020317a:	00 
ffffffff8020317b:	48 c7 c1 c0 31 20 80 	mov    $0xffffffff802031c0,%rcx
ffffffff80203182:	48 89 0e             	mov    %rcx,(%rsi)
ffffffff80203185:	48 c7 46 08 03 00 00 	movq   $0x3,0x8(%rsi)
ffffffff8020318c:	00 
ffffffff8020318d:	48 89 5e 10          	mov    %rbx,0x10(%rsi)
ffffffff80203191:	48 89 56 18          	mov    %rdx,0x18(%rsi)
ffffffff80203195:	48 89 46 20          	mov    %rax,0x20(%rsi)
ffffffff80203199:	48 8b bf 38 03 00 00 	mov    0x338(%rdi),%rdi
ffffffff802031a0:	e8 bb d4 00 00       	callq  ffffffff80210660 <caml_modify>
ffffffff802031a5:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802031ac:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802031b0:	c3                   	retq   
ffffffff802031b1:	e8 9a 08 00 00       	callq  ffffffff80203a50 <caml_call_gc>
ffffffff802031b6:	eb 90                	jmp    ffffffff80203148 <camlStdlib__at_exit_394+0x18>
ffffffff802031b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802031bf:	00 

ffffffff802031c0 <camlStdlib__fun_884>:
ffffffff802031c0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802031c4:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff802031c8:	48 8b 43 20          	mov    0x20(%rbx),%rax
ffffffff802031cc:	48 8b 38             	mov    (%rax),%rdi
ffffffff802031cf:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff802031d3:	75 17                	jne    ffffffff802031ec <camlStdlib__fun_884+0x2c>
ffffffff802031d5:	48 c7 00 03 00 00 00 	movq   $0x3,(%rax)
ffffffff802031dc:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
ffffffff802031e0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802031e7:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff802031ea:	ff d7                	callq  *%rdi
ffffffff802031ec:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802031f0:	48 8b 58 18          	mov    0x18(%rax),%rbx
ffffffff802031f4:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff802031fb:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff802031fe:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203202:	ff e7                	jmpq   *%rdi
ffffffff80203204:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020320b:	00 00 00 00 
ffffffff8020320f:	90                   	nop

ffffffff80203210 <camlStdlib__do_at_exit_399>:
ffffffff80203210:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff80203217:	48 8b 80 38 03 00 00 	mov    0x338(%rax),%rax
ffffffff8020321e:	48 8b 18             	mov    (%rax),%rbx
ffffffff80203221:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80203228:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff8020322b:	ff e7                	jmpq   *%rdi
ffffffff8020322d:	0f 1f 00             	nopl   (%rax)

ffffffff80203230 <camlStdlib__exit_401>:
ffffffff80203230:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203234:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80203238:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff8020323f:	48 8b 80 38 03 00 00 	mov    0x338(%rax),%rax
ffffffff80203246:	48 8b 18             	mov    (%rax),%rbx
ffffffff80203249:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80203250:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff80203253:	ff d7                	callq  *%rdi
ffffffff80203255:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80203259:	48 c7 c0 50 57 21 80 	mov    $0xffffffff80215750,%rax
ffffffff80203260:	e8 67 0a 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80203265:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff8020326c:	4d 8b 3b             	mov    (%r11),%r15
ffffffff8020326f:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203273:	c3                   	retq   
ffffffff80203274:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020327b:	00 00 00 00 
ffffffff8020327f:	90                   	nop

ffffffff80203280 <camlStdlib__entry>:
ffffffff80203280:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203284:	48 c7 c0 08 a3 22 80 	mov    $0xffffffff8022a308,%rax
ffffffff8020328b:	48 c7 c3 c8 a0 22 80 	mov    $0xffffffff8022a0c8,%rbx
ffffffff80203292:	48 89 98 f0 02 00 00 	mov    %rbx,0x2f0(%rax)
ffffffff80203299:	48 c7 c3 e8 a0 22 80 	mov    $0xffffffff8022a0e8,%rbx
ffffffff802032a0:	48 89 98 e0 02 00 00 	mov    %rbx,0x2e0(%rax)
ffffffff802032a7:	48 c7 c3 00 a1 22 80 	mov    $0xffffffff8022a100,%rbx
ffffffff802032ae:	48 89 98 d8 02 00 00 	mov    %rbx,0x2d8(%rax)
ffffffff802032b5:	48 c7 c3 18 a1 22 80 	mov    $0xffffffff8022a118,%rbx
ffffffff802032bc:	48 89 98 d0 02 00 00 	mov    %rbx,0x2d0(%rax)
ffffffff802032c3:	48 c7 c3 30 a1 22 80 	mov    $0xffffffff8022a130,%rbx
ffffffff802032ca:	48 89 98 c8 02 00 00 	mov    %rbx,0x2c8(%rax)
ffffffff802032d1:	48 c7 c3 50 a1 22 80 	mov    $0xffffffff8022a150,%rbx
ffffffff802032d8:	48 89 98 c0 02 00 00 	mov    %rbx,0x2c0(%rax)
ffffffff802032df:	48 c7 c3 68 a1 22 80 	mov    $0xffffffff8022a168,%rbx
ffffffff802032e6:	48 89 98 b8 02 00 00 	mov    %rbx,0x2b8(%rax)
ffffffff802032ed:	48 c7 c3 80 a1 22 80 	mov    $0xffffffff8022a180,%rbx
ffffffff802032f4:	48 89 98 b0 02 00 00 	mov    %rbx,0x2b0(%rax)
ffffffff802032fb:	48 c7 c3 98 a1 22 80 	mov    $0xffffffff8022a198,%rbx
ffffffff80203302:	48 89 98 88 02 00 00 	mov    %rbx,0x288(%rax)
ffffffff80203309:	48 c7 c3 b0 a1 22 80 	mov    $0xffffffff8022a1b0,%rbx
ffffffff80203310:	48 89 98 68 02 00 00 	mov    %rbx,0x268(%rax)
ffffffff80203317:	48 c7 c3 d0 a1 22 80 	mov    $0xffffffff8022a1d0,%rbx
ffffffff8020331e:	48 89 98 50 02 00 00 	mov    %rbx,0x250(%rax)
ffffffff80203325:	48 c7 c3 e8 a1 22 80 	mov    $0xffffffff8022a1e8,%rbx
ffffffff8020332c:	48 89 98 48 02 00 00 	mov    %rbx,0x248(%rax)
ffffffff80203333:	48 c7 c3 00 a2 22 80 	mov    $0xffffffff8022a200,%rbx
ffffffff8020333a:	48 89 98 40 02 00 00 	mov    %rbx,0x240(%rax)
ffffffff80203341:	48 c7 c3 20 a2 22 80 	mov    $0xffffffff8022a220,%rbx
ffffffff80203348:	48 89 98 30 02 00 00 	mov    %rbx,0x230(%rax)
ffffffff8020334f:	48 c7 c3 40 a2 22 80 	mov    $0xffffffff8022a240,%rbx
ffffffff80203356:	48 89 98 28 02 00 00 	mov    %rbx,0x228(%rax)
ffffffff8020335d:	48 c7 c3 60 a2 22 80 	mov    $0xffffffff8022a260,%rbx
ffffffff80203364:	48 89 98 00 02 00 00 	mov    %rbx,0x200(%rax)
ffffffff8020336b:	48 c7 c3 80 a2 22 80 	mov    $0xffffffff8022a280,%rbx
ffffffff80203372:	48 89 98 f0 01 00 00 	mov    %rbx,0x1f0(%rax)
ffffffff80203379:	e8 86 08 00 00       	callq  ffffffff80203c04 <caml_alloc2>
ffffffff8020337e:	49 8d 77 08          	lea    0x8(%r15),%rsi
ffffffff80203382:	48 c7 46 f8 00 08 00 	movq   $0x800,-0x8(%rsi)
ffffffff80203389:	00 
ffffffff8020338a:	48 c7 c0 d0 80 22 80 	mov    $0xffffffff802280d0,%rax
ffffffff80203391:	48 89 06             	mov    %rax,(%rsi)
ffffffff80203394:	48 c7 c0 88 a6 22 80 	mov    $0xffffffff8022a688,%rax
ffffffff8020339b:	48 89 46 08          	mov    %rax,0x8(%rsi)
ffffffff8020339f:	48 c7 c7 60 a6 22 80 	mov    $0xffffffff8022a660,%rdi
ffffffff802033a6:	48 c7 c0 60 4f 20 80 	mov    $0xffffffff80204f60,%rax
ffffffff802033ad:	e8 1a 09 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802033b2:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802033b9:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802033bc:	48 c7 c0 98 a2 22 80 	mov    $0xffffffff8022a298,%rax
ffffffff802033c3:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff802033ca:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff802033ce:	48 c7 c0 b0 a2 22 80 	mov    $0xffffffff8022a2b0,%rax
ffffffff802033d5:	48 89 03             	mov    %rax,(%rbx)
ffffffff802033d8:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
ffffffff802033df:	e8 cc f6 00 00       	callq  ffffffff80212ab0 <caml_fresh_oo_id>
ffffffff802033e4:	48 89 c3             	mov    %rax,%rbx
ffffffff802033e7:	e8 18 08 00 00       	callq  ffffffff80203c04 <caml_alloc2>
ffffffff802033ec:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802033f0:	48 c7 40 f8 f8 08 00 	movq   $0x8f8,-0x8(%rax)
ffffffff802033f7:	00 
ffffffff802033f8:	48 c7 c7 a8 a6 22 80 	mov    $0xffffffff8022a6a8,%rdi
ffffffff802033ff:	48 89 38             	mov    %rdi,(%rax)
ffffffff80203402:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80203406:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff8020340d:	48 89 43 10          	mov    %rax,0x10(%rbx)
ffffffff80203411:	48 c7 c0 a0 81 22 80 	mov    $0xffffffff802281a0,%rax
ffffffff80203418:	48 89 43 18          	mov    %rax,0x18(%rbx)
ffffffff8020341c:	48 c7 c0 30 82 22 80 	mov    $0xffffffff80228230,%rax
ffffffff80203423:	48 89 43 20          	mov    %rax,0x20(%rbx)
ffffffff80203427:	48 c7 c0 d0 80 22 80 	mov    $0xffffffff802280d0,%rax
ffffffff8020342e:	48 89 43 28          	mov    %rax,0x28(%rbx)
ffffffff80203432:	48 c7 c0 a8 80 22 80 	mov    $0xffffffff802280a8,%rax
ffffffff80203439:	48 89 43 30          	mov    %rax,0x30(%rbx)
ffffffff8020343d:	48 c7 c0 70 81 22 80 	mov    $0xffffffff80228170,%rax
ffffffff80203444:	48 89 43 38          	mov    %rax,0x38(%rbx)
ffffffff80203448:	48 c7 c0 48 80 22 80 	mov    $0xffffffff80228048,%rax
ffffffff8020344f:	48 89 43 40          	mov    %rax,0x40(%rbx)
ffffffff80203453:	48 c7 c0 d0 81 22 80 	mov    $0xffffffff802281d0,%rax
ffffffff8020345a:	48 89 43 48          	mov    %rax,0x48(%rbx)
ffffffff8020345e:	48 c7 c0 78 80 22 80 	mov    $0xffffffff80228078,%rax
ffffffff80203465:	48 89 43 50          	mov    %rax,0x50(%rbx)
ffffffff80203469:	48 c7 c0 08 81 22 80 	mov    $0xffffffff80228108,%rax
ffffffff80203470:	48 89 43 58          	mov    %rax,0x58(%rbx)
ffffffff80203474:	48 c7 c0 38 81 22 80 	mov    $0xffffffff80228138,%rax
ffffffff8020347b:	48 89 43 60          	mov    %rax,0x60(%rbx)
ffffffff8020347f:	48 c7 c0 00 82 22 80 	mov    $0xffffffff80228200,%rax
ffffffff80203486:	48 89 43 68          	mov    %rax,0x68(%rbx)
ffffffff8020348a:	48 c7 c0 60 82 22 80 	mov    $0xffffffff80228260,%rax
ffffffff80203491:	48 89 43 70          	mov    %rax,0x70(%rbx)
ffffffff80203495:	48 c7 c0 c8 a2 22 80 	mov    $0xffffffff8022a2c8,%rax
ffffffff8020349c:	48 89 43 78          	mov    %rax,0x78(%rbx)
ffffffff802034a0:	48 c7 c0 e8 a2 22 80 	mov    $0xffffffff8022a2e8,%rax
ffffffff802034a7:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
ffffffff802034ae:	48 c7 c0 28 9a 22 80 	mov    $0xffffffff80229a28,%rax
ffffffff802034b5:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
ffffffff802034bc:	48 c7 c0 40 9a 22 80 	mov    $0xffffffff80229a40,%rax
ffffffff802034c3:	48 89 83 a0 00 00 00 	mov    %rax,0xa0(%rbx)
ffffffff802034ca:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
ffffffff802034d1:	ff ff 7f 
ffffffff802034d4:	48 89 83 90 00 00 00 	mov    %rax,0x90(%rbx)
ffffffff802034db:	48 b8 01 00 00 00 00 	movabs $0x8000000000000001,%rax
ffffffff802034e2:	00 00 80 
ffffffff802034e5:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
ffffffff802034ec:	48 bf 00 00 00 00 00 	movabs $0x7ff0000000000000,%rdi
ffffffff802034f3:	00 f0 7f 
ffffffff802034f6:	e8 05 89 00 00       	callq  ffffffff8020be00 <caml_int64_float_of_bits_unboxed>
ffffffff802034fb:	e8 c0 06 00 00       	callq  ffffffff80203bc0 <caml_alloc1>
ffffffff80203500:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80203504:	48 c7 40 f8 fd 04 00 	movq   $0x4fd,-0x8(%rax)
ffffffff8020350b:	00 
ffffffff8020350c:	f2 0f 11 00          	movsd  %xmm0,(%rax)
ffffffff80203510:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff80203517:	48 89 83 a8 00 00 00 	mov    %rax,0xa8(%rbx)
ffffffff8020351e:	48 bf 00 00 00 00 00 	movabs $0xfff0000000000000,%rdi
ffffffff80203525:	00 f0 ff 
ffffffff80203528:	e8 d3 88 00 00       	callq  ffffffff8020be00 <caml_int64_float_of_bits_unboxed>
ffffffff8020352d:	e8 8e 06 00 00       	callq  ffffffff80203bc0 <caml_alloc1>
ffffffff80203532:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80203536:	48 c7 40 f8 fd 04 00 	movq   $0x4fd,-0x8(%rax)
ffffffff8020353d:	00 
ffffffff8020353e:	f2 0f 11 00          	movsd  %xmm0,(%rax)
ffffffff80203542:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff80203549:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
ffffffff80203550:	48 bf 01 00 00 00 00 	movabs $0x7ff0000000000001,%rdi
ffffffff80203557:	00 f0 7f 
ffffffff8020355a:	e8 a1 88 00 00       	callq  ffffffff8020be00 <caml_int64_float_of_bits_unboxed>
ffffffff8020355f:	e8 5c 06 00 00       	callq  ffffffff80203bc0 <caml_alloc1>
ffffffff80203564:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80203568:	48 c7 40 f8 fd 04 00 	movq   $0x4fd,-0x8(%rax)
ffffffff8020356f:	00 
ffffffff80203570:	f2 0f 11 00          	movsd  %xmm0,(%rax)
ffffffff80203574:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff8020357b:	48 89 83 b8 00 00 00 	mov    %rax,0xb8(%rbx)
ffffffff80203582:	48 bf ff ff ff ff ff 	movabs $0x7fefffffffffffff,%rdi
ffffffff80203589:	ff ef 7f 
ffffffff8020358c:	e8 6f 88 00 00       	callq  ffffffff8020be00 <caml_int64_float_of_bits_unboxed>
ffffffff80203591:	e8 2a 06 00 00       	callq  ffffffff80203bc0 <caml_alloc1>
ffffffff80203596:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020359a:	48 c7 40 f8 fd 04 00 	movq   $0x4fd,-0x8(%rax)
ffffffff802035a1:	00 
ffffffff802035a2:	f2 0f 11 00          	movsd  %xmm0,(%rax)
ffffffff802035a6:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff802035ad:	48 89 83 c0 00 00 00 	mov    %rax,0xc0(%rbx)
ffffffff802035b4:	48 bf 00 00 00 00 00 	movabs $0x10000000000000,%rdi
ffffffff802035bb:	00 10 00 
ffffffff802035be:	e8 3d 88 00 00       	callq  ffffffff8020be00 <caml_int64_float_of_bits_unboxed>
ffffffff802035c3:	e8 f8 05 00 00       	callq  ffffffff80203bc0 <caml_alloc1>
ffffffff802035c8:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802035cc:	48 c7 40 f8 fd 04 00 	movq   $0x4fd,-0x8(%rax)
ffffffff802035d3:	00 
ffffffff802035d4:	f2 0f 11 00          	movsd  %xmm0,(%rax)
ffffffff802035d8:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff802035df:	48 89 83 c8 00 00 00 	mov    %rax,0xc8(%rbx)
ffffffff802035e6:	48 bf 00 00 00 00 00 	movabs $0x3cb0000000000000,%rdi
ffffffff802035ed:	00 b0 3c 
ffffffff802035f0:	e8 0b 88 00 00       	callq  ffffffff8020be00 <caml_int64_float_of_bits_unboxed>
ffffffff802035f5:	e8 c6 05 00 00       	callq  ffffffff80203bc0 <caml_alloc1>
ffffffff802035fa:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff802035fe:	48 c7 40 f8 fd 04 00 	movq   $0x4fd,-0x8(%rax)
ffffffff80203605:	00 
ffffffff80203606:	f2 0f 11 00          	movsd  %xmm0,(%rax)
ffffffff8020360a:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff80203611:	48 89 83 d0 00 00 00 	mov    %rax,0xd0(%rbx)
ffffffff80203618:	48 c7 c0 58 9a 22 80 	mov    $0xffffffff80229a58,%rax
ffffffff8020361f:	48 89 83 d8 00 00 00 	mov    %rax,0xd8(%rbx)
ffffffff80203626:	48 c7 c0 78 9a 22 80 	mov    $0xffffffff80229a78,%rax
ffffffff8020362d:	48 89 83 e0 00 00 00 	mov    %rax,0xe0(%rbx)
ffffffff80203634:	48 c7 c0 90 9a 22 80 	mov    $0xffffffff80229a90,%rax
ffffffff8020363b:	48 89 83 e8 00 00 00 	mov    %rax,0xe8(%rbx)
ffffffff80203642:	48 c7 c0 a8 9a 22 80 	mov    $0xffffffff80229aa8,%rax
ffffffff80203649:	48 89 83 f8 00 00 00 	mov    %rax,0xf8(%rbx)
ffffffff80203650:	48 c7 c0 c0 9a 22 80 	mov    $0xffffffff80229ac0,%rax
ffffffff80203657:	48 89 83 f0 00 00 00 	mov    %rax,0xf0(%rbx)
ffffffff8020365e:	48 c7 c0 d8 9a 22 80 	mov    $0xffffffff80229ad8,%rax
ffffffff80203665:	48 89 83 00 01 00 00 	mov    %rax,0x100(%rbx)
ffffffff8020366c:	48 c7 c0 f0 9a 22 80 	mov    $0xffffffff80229af0,%rax
ffffffff80203673:	48 89 83 08 01 00 00 	mov    %rax,0x108(%rbx)
ffffffff8020367a:	48 c7 c0 08 9b 22 80 	mov    $0xffffffff80229b08,%rax
ffffffff80203681:	48 89 83 20 03 00 00 	mov    %rax,0x320(%rbx)
ffffffff80203688:	48 c7 c0 20 9b 22 80 	mov    $0xffffffff80229b20,%rax
ffffffff8020368f:	48 89 83 10 01 00 00 	mov    %rax,0x110(%rbx)
ffffffff80203696:	48 c7 c0 38 9b 22 80 	mov    $0xffffffff80229b38,%rax
ffffffff8020369d:	48 89 83 18 01 00 00 	mov    %rax,0x118(%rbx)
ffffffff802036a4:	48 c7 c0 50 9b 22 80 	mov    $0xffffffff80229b50,%rax
ffffffff802036ab:	48 89 83 20 01 00 00 	mov    %rax,0x120(%rbx)
ffffffff802036b2:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
ffffffff802036b9:	48 c7 c0 90 cc 20 80 	mov    $0xffffffff8020cc90,%rax
ffffffff802036c0:	e8 07 06 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802036c5:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802036cc:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802036cf:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff802036d6:	48 89 83 28 01 00 00 	mov    %rax,0x128(%rbx)
ffffffff802036dd:	48 c7 c7 03 00 00 00 	mov    $0x3,%rdi
ffffffff802036e4:	48 c7 c0 c0 cc 20 80 	mov    $0xffffffff8020ccc0,%rax
ffffffff802036eb:	e8 dc 05 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff802036f0:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff802036f7:	4d 8b 3b             	mov    (%r11),%r15
ffffffff802036fa:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff80203701:	48 89 83 30 01 00 00 	mov    %rax,0x130(%rbx)
ffffffff80203708:	48 c7 c7 05 00 00 00 	mov    $0x5,%rdi
ffffffff8020370f:	48 c7 c0 c0 cc 20 80 	mov    $0xffffffff8020ccc0,%rax
ffffffff80203716:	e8 b1 05 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff8020371b:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80203722:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80203725:	48 c7 c3 08 a3 22 80 	mov    $0xffffffff8022a308,%rbx
ffffffff8020372c:	48 89 83 38 01 00 00 	mov    %rax,0x138(%rbx)
ffffffff80203733:	48 c7 c0 70 9b 22 80 	mov    $0xffffffff80229b70,%rax
ffffffff8020373a:	48 89 83 e8 01 00 00 	mov    %rax,0x1e8(%rbx)
ffffffff80203741:	48 c7 c0 90 9b 22 80 	mov    $0xffffffff80229b90,%rax
ffffffff80203748:	48 89 83 d8 01 00 00 	mov    %rax,0x1d8(%rbx)
ffffffff8020374f:	48 c7 c0 a8 9b 22 80 	mov    $0xffffffff80229ba8,%rax
ffffffff80203756:	48 89 83 e0 01 00 00 	mov    %rax,0x1e0(%rbx)
ffffffff8020375d:	48 c7 c0 c0 9b 22 80 	mov    $0xffffffff80229bc0,%rax
ffffffff80203764:	48 89 83 f8 01 00 00 	mov    %rax,0x1f8(%rbx)
ffffffff8020376b:	48 c7 c0 d8 9b 22 80 	mov    $0xffffffff80229bd8,%rax
ffffffff80203772:	48 89 83 10 02 00 00 	mov    %rax,0x210(%rbx)
ffffffff80203779:	48 c7 c0 f8 9b 22 80 	mov    $0xffffffff80229bf8,%rax
ffffffff80203780:	48 89 83 08 02 00 00 	mov    %rax,0x208(%rbx)
ffffffff80203787:	48 c7 c0 18 9c 22 80 	mov    $0xffffffff80229c18,%rax
ffffffff8020378e:	48 89 83 18 02 00 00 	mov    %rax,0x218(%rbx)
ffffffff80203795:	48 c7 c0 38 9c 22 80 	mov    $0xffffffff80229c38,%rax
ffffffff8020379c:	48 89 83 20 02 00 00 	mov    %rax,0x220(%rbx)
ffffffff802037a3:	48 c7 c0 58 9c 22 80 	mov    $0xffffffff80229c58,%rax
ffffffff802037aa:	48 89 83 38 02 00 00 	mov    %rax,0x238(%rbx)
ffffffff802037b1:	48 c7 c0 78 9c 22 80 	mov    $0xffffffff80229c78,%rax
ffffffff802037b8:	48 89 83 58 02 00 00 	mov    %rax,0x258(%rbx)
ffffffff802037bf:	48 c7 c0 90 9c 22 80 	mov    $0xffffffff80229c90,%rax
ffffffff802037c6:	48 89 83 60 02 00 00 	mov    %rax,0x260(%rbx)
ffffffff802037cd:	48 c7 c0 a8 9c 22 80 	mov    $0xffffffff80229ca8,%rax
ffffffff802037d4:	48 89 83 80 02 00 00 	mov    %rax,0x280(%rbx)
ffffffff802037db:	48 c7 c0 c8 9c 22 80 	mov    $0xffffffff80229cc8,%rax
ffffffff802037e2:	48 89 83 70 02 00 00 	mov    %rax,0x270(%rbx)
ffffffff802037e9:	48 c7 c0 e0 9c 22 80 	mov    $0xffffffff80229ce0,%rax
ffffffff802037f0:	48 89 83 78 02 00 00 	mov    %rax,0x278(%rbx)
ffffffff802037f7:	48 c7 c0 f8 9c 22 80 	mov    $0xffffffff80229cf8,%rax
ffffffff802037fe:	48 89 83 98 02 00 00 	mov    %rax,0x298(%rbx)
ffffffff80203805:	48 c7 c0 18 9d 22 80 	mov    $0xffffffff80229d18,%rax
ffffffff8020380c:	48 89 83 28 03 00 00 	mov    %rax,0x328(%rbx)
ffffffff80203813:	48 c7 c0 38 9d 22 80 	mov    $0xffffffff80229d38,%rax
ffffffff8020381a:	48 89 83 a0 02 00 00 	mov    %rax,0x2a0(%rbx)
ffffffff80203821:	48 c7 c0 58 9d 22 80 	mov    $0xffffffff80229d58,%rax
ffffffff80203828:	48 89 83 a8 02 00 00 	mov    %rax,0x2a8(%rbx)
ffffffff8020382f:	48 c7 c0 78 9d 22 80 	mov    $0xffffffff80229d78,%rax
ffffffff80203836:	48 89 83 90 02 00 00 	mov    %rax,0x290(%rbx)
ffffffff8020383d:	48 c7 c0 90 9d 22 80 	mov    $0xffffffff80229d90,%rax
ffffffff80203844:	48 89 83 e8 02 00 00 	mov    %rax,0x2e8(%rbx)
ffffffff8020384b:	48 c7 c0 a8 9d 22 80 	mov    $0xffffffff80229da8,%rax
ffffffff80203852:	48 89 83 40 01 00 00 	mov    %rax,0x140(%rbx)
ffffffff80203859:	48 c7 c0 c0 9d 22 80 	mov    $0xffffffff80229dc0,%rax
ffffffff80203860:	48 89 83 48 01 00 00 	mov    %rax,0x148(%rbx)
ffffffff80203867:	48 c7 c0 d8 9d 22 80 	mov    $0xffffffff80229dd8,%rax
ffffffff8020386e:	48 89 83 50 01 00 00 	mov    %rax,0x150(%rbx)
ffffffff80203875:	48 c7 c0 f0 9d 22 80 	mov    $0xffffffff80229df0,%rax
ffffffff8020387c:	48 89 83 58 01 00 00 	mov    %rax,0x158(%rbx)
ffffffff80203883:	48 c7 c0 08 9e 22 80 	mov    $0xffffffff80229e08,%rax
ffffffff8020388a:	48 89 83 60 01 00 00 	mov    %rax,0x160(%rbx)
ffffffff80203891:	48 c7 c0 20 9e 22 80 	mov    $0xffffffff80229e20,%rax
ffffffff80203898:	48 89 83 68 01 00 00 	mov    %rax,0x168(%rbx)
ffffffff8020389f:	48 c7 c0 38 9e 22 80 	mov    $0xffffffff80229e38,%rax
ffffffff802038a6:	48 89 83 70 01 00 00 	mov    %rax,0x170(%rbx)
ffffffff802038ad:	48 c7 c0 50 9e 22 80 	mov    $0xffffffff80229e50,%rax
ffffffff802038b4:	48 89 83 78 01 00 00 	mov    %rax,0x178(%rbx)
ffffffff802038bb:	48 c7 c0 68 9e 22 80 	mov    $0xffffffff80229e68,%rax
ffffffff802038c2:	48 89 83 80 01 00 00 	mov    %rax,0x180(%rbx)
ffffffff802038c9:	48 c7 c0 80 9e 22 80 	mov    $0xffffffff80229e80,%rax
ffffffff802038d0:	48 89 83 88 01 00 00 	mov    %rax,0x188(%rbx)
ffffffff802038d7:	48 c7 c0 98 9e 22 80 	mov    $0xffffffff80229e98,%rax
ffffffff802038de:	48 89 83 90 01 00 00 	mov    %rax,0x190(%rbx)
ffffffff802038e5:	48 c7 c0 b0 9e 22 80 	mov    $0xffffffff80229eb0,%rax
ffffffff802038ec:	48 89 83 98 01 00 00 	mov    %rax,0x198(%rbx)
ffffffff802038f3:	48 c7 c0 c8 9e 22 80 	mov    $0xffffffff80229ec8,%rax
ffffffff802038fa:	48 89 83 a0 01 00 00 	mov    %rax,0x1a0(%rbx)
ffffffff80203901:	48 c7 c0 e0 9e 22 80 	mov    $0xffffffff80229ee0,%rax
ffffffff80203908:	48 89 83 a8 01 00 00 	mov    %rax,0x1a8(%rbx)
ffffffff8020390f:	48 c7 c0 f8 9e 22 80 	mov    $0xffffffff80229ef8,%rax
ffffffff80203916:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
ffffffff8020391d:	48 c7 c0 10 9f 22 80 	mov    $0xffffffff80229f10,%rax
ffffffff80203924:	48 89 83 c0 01 00 00 	mov    %rax,0x1c0(%rbx)
ffffffff8020392b:	48 c7 c0 28 9f 22 80 	mov    $0xffffffff80229f28,%rax
ffffffff80203932:	48 89 83 b8 01 00 00 	mov    %rax,0x1b8(%rbx)
ffffffff80203939:	48 c7 c0 40 9f 22 80 	mov    $0xffffffff80229f40,%rax
ffffffff80203940:	48 89 83 d0 01 00 00 	mov    %rax,0x1d0(%rbx)
ffffffff80203947:	48 c7 c0 58 9f 22 80 	mov    $0xffffffff80229f58,%rax
ffffffff8020394e:	48 89 83 c8 01 00 00 	mov    %rax,0x1c8(%rbx)
ffffffff80203955:	48 c7 c0 48 00 00 00 	mov    $0x48,%rax
ffffffff8020395c:	e8 2b 03 00 00       	callq  ffffffff80203c8c <caml_allocN>
ffffffff80203961:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80203965:	48 83 c0 10          	add    $0x10,%rax
ffffffff80203969:	48 c7 40 f8 00 18 00 	movq   $0x1800,-0x8(%rax)
ffffffff80203970:	00 
ffffffff80203971:	48 c7 c7 f0 9f 22 80 	mov    $0xffffffff80229ff0,%rdi
ffffffff80203978:	48 89 38             	mov    %rdi,(%rax)
ffffffff8020397b:	48 c7 c7 d8 9f 22 80 	mov    $0xffffffff80229fd8,%rdi
ffffffff80203982:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff80203986:	48 c7 c7 c0 9f 22 80 	mov    $0xffffffff80229fc0,%rdi
ffffffff8020398d:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff80203991:	48 c7 c7 a0 9f 22 80 	mov    $0xffffffff80229fa0,%rdi
ffffffff80203998:	48 89 78 18          	mov    %rdi,0x18(%rax)
ffffffff8020399c:	48 c7 c7 88 9f 22 80 	mov    $0xffffffff80229f88,%rdi
ffffffff802039a3:	48 89 78 20          	mov    %rdi,0x20(%rax)
ffffffff802039a7:	48 c7 c7 70 9f 22 80 	mov    $0xffffffff80229f70,%rdi
ffffffff802039ae:	48 89 78 28          	mov    %rdi,0x28(%rax)
ffffffff802039b2:	48 89 83 f8 02 00 00 	mov    %rax,0x2f8(%rbx)
ffffffff802039b9:	48 c7 c7 10 a0 22 80 	mov    $0xffffffff8022a010,%rdi
ffffffff802039c0:	48 89 bb 00 03 00 00 	mov    %rdi,0x300(%rbx)
ffffffff802039c7:	48 c7 c7 28 a0 22 80 	mov    $0xffffffff8022a028,%rdi
ffffffff802039ce:	48 89 bb 08 03 00 00 	mov    %rdi,0x308(%rbx)
ffffffff802039d5:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
ffffffff802039d9:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
ffffffff802039e0:	00 
ffffffff802039e1:	48 8b bb f8 01 00 00 	mov    0x1f8(%rbx),%rdi
ffffffff802039e8:	48 89 38             	mov    %rdi,(%rax)
ffffffff802039eb:	48 89 83 38 03 00 00 	mov    %rax,0x338(%rbx)
ffffffff802039f2:	48 c7 c0 48 a0 22 80 	mov    $0xffffffff8022a048,%rax
ffffffff802039f9:	48 89 83 18 03 00 00 	mov    %rax,0x318(%rbx)
ffffffff80203a00:	48 c7 c0 60 a0 22 80 	mov    $0xffffffff8022a060,%rax
ffffffff80203a07:	48 89 83 30 03 00 00 	mov    %rax,0x330(%rbx)
ffffffff80203a0e:	48 c7 c0 78 a0 22 80 	mov    $0xffffffff8022a078,%rax
ffffffff80203a15:	48 89 83 10 03 00 00 	mov    %rax,0x310(%rbx)
ffffffff80203a1c:	48 8b b3 30 03 00 00 	mov    0x330(%rbx),%rsi
ffffffff80203a23:	48 c7 c7 50 a9 22 80 	mov    $0xffffffff8022a950,%rdi
ffffffff80203a2a:	48 c7 c0 60 4f 20 80 	mov    $0xffffffff80204f60,%rax
ffffffff80203a31:	e8 96 02 00 00       	callq  ffffffff80203ccc <caml_c_call>
ffffffff80203a36:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80203a3d:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80203a40:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
ffffffff80203a47:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203a4b:	c3                   	retq   

ffffffff80203a4c <camlStdlib__code_end>:
ffffffff80203a4c:	c3                   	retq   
ffffffff80203a4d:	0f 1f 00             	nopl   (%rax)

ffffffff80203a50 <caml_call_gc>:
ffffffff80203a50:	41 53                	push   %r11
ffffffff80203a52:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80203a57:	49 c7 c3 10 bd 22 80 	mov    $0xffffffff8022bd10,%r11
ffffffff80203a5e:	49 89 03             	mov    %rax,(%r11)
ffffffff80203a61:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80203a66:	49 c7 c3 50 40 24 80 	mov    $0xffffffff80244050,%r11
ffffffff80203a6d:	49 89 03             	mov    %rax,(%r11)
ffffffff80203a70:	41 5b                	pop    %r11
ffffffff80203a72:	48 81 ec 00 80 00 00 	sub    $0x8000,%rsp
ffffffff80203a79:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80203a7d:	48 81 c4 00 80 00 00 	add    $0x8000,%rsp
ffffffff80203a84:	55                   	push   %rbp
ffffffff80203a85:	41 53                	push   %r11
ffffffff80203a87:	41 52                	push   %r10
ffffffff80203a89:	41 55                	push   %r13
ffffffff80203a8b:	41 54                	push   %r12
ffffffff80203a8d:	41 51                	push   %r9
ffffffff80203a8f:	41 50                	push   %r8
ffffffff80203a91:	51                   	push   %rcx
ffffffff80203a92:	52                   	push   %rdx
ffffffff80203a93:	56                   	push   %rsi
ffffffff80203a94:	57                   	push   %rdi
ffffffff80203a95:	53                   	push   %rbx
ffffffff80203a96:	50                   	push   %rax
ffffffff80203a97:	49 c7 c3 48 40 24 80 	mov    $0xffffffff80244048,%r11
ffffffff80203a9e:	49 89 23             	mov    %rsp,(%r11)
ffffffff80203aa1:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80203aa8:	4d 89 3b             	mov    %r15,(%r11)
ffffffff80203aab:	49 c7 c3 38 a1 23 80 	mov    $0xffffffff8023a138,%r11
ffffffff80203ab2:	4d 89 33             	mov    %r14,(%r11)
ffffffff80203ab5:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
ffffffff80203abc:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
ffffffff80203ac1:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
ffffffff80203ac7:	f2 0f 11 54 24 10    	movsd  %xmm2,0x10(%rsp)
ffffffff80203acd:	f2 0f 11 5c 24 18    	movsd  %xmm3,0x18(%rsp)
ffffffff80203ad3:	f2 0f 11 64 24 20    	movsd  %xmm4,0x20(%rsp)
ffffffff80203ad9:	f2 0f 11 6c 24 28    	movsd  %xmm5,0x28(%rsp)
ffffffff80203adf:	f2 0f 11 74 24 30    	movsd  %xmm6,0x30(%rsp)
ffffffff80203ae5:	f2 0f 11 7c 24 38    	movsd  %xmm7,0x38(%rsp)
ffffffff80203aeb:	f2 44 0f 11 44 24 40 	movsd  %xmm8,0x40(%rsp)
ffffffff80203af2:	f2 44 0f 11 4c 24 48 	movsd  %xmm9,0x48(%rsp)
ffffffff80203af9:	f2 44 0f 11 54 24 50 	movsd  %xmm10,0x50(%rsp)
ffffffff80203b00:	f2 44 0f 11 5c 24 58 	movsd  %xmm11,0x58(%rsp)
ffffffff80203b07:	f2 44 0f 11 64 24 60 	movsd  %xmm12,0x60(%rsp)
ffffffff80203b0e:	f2 44 0f 11 6c 24 68 	movsd  %xmm13,0x68(%rsp)
ffffffff80203b15:	f2 44 0f 11 74 24 70 	movsd  %xmm14,0x70(%rsp)
ffffffff80203b1c:	f2 44 0f 11 7c 24 78 	movsd  %xmm15,0x78(%rsp)
ffffffff80203b23:	e8 78 03 01 00       	callq  ffffffff80213ea0 <caml_garbage_collection>
ffffffff80203b28:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80203b2f:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80203b32:	49 c7 c3 38 a1 23 80 	mov    $0xffffffff8023a138,%r11
ffffffff80203b39:	4d 8b 33             	mov    (%r11),%r14
ffffffff80203b3c:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
ffffffff80203b41:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
ffffffff80203b47:	f2 0f 10 54 24 10    	movsd  0x10(%rsp),%xmm2
ffffffff80203b4d:	f2 0f 10 5c 24 18    	movsd  0x18(%rsp),%xmm3
ffffffff80203b53:	f2 0f 10 64 24 20    	movsd  0x20(%rsp),%xmm4
ffffffff80203b59:	f2 0f 10 6c 24 28    	movsd  0x28(%rsp),%xmm5
ffffffff80203b5f:	f2 0f 10 74 24 30    	movsd  0x30(%rsp),%xmm6
ffffffff80203b65:	f2 0f 10 7c 24 38    	movsd  0x38(%rsp),%xmm7
ffffffff80203b6b:	f2 44 0f 10 44 24 40 	movsd  0x40(%rsp),%xmm8
ffffffff80203b72:	f2 44 0f 10 4c 24 48 	movsd  0x48(%rsp),%xmm9
ffffffff80203b79:	f2 44 0f 10 54 24 50 	movsd  0x50(%rsp),%xmm10
ffffffff80203b80:	f2 44 0f 10 5c 24 58 	movsd  0x58(%rsp),%xmm11
ffffffff80203b87:	f2 44 0f 10 64 24 60 	movsd  0x60(%rsp),%xmm12
ffffffff80203b8e:	f2 44 0f 10 6c 24 68 	movsd  0x68(%rsp),%xmm13
ffffffff80203b95:	f2 44 0f 10 74 24 70 	movsd  0x70(%rsp),%xmm14
ffffffff80203b9c:	f2 44 0f 10 7c 24 78 	movsd  0x78(%rsp),%xmm15
ffffffff80203ba3:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
ffffffff80203baa:	58                   	pop    %rax
ffffffff80203bab:	5b                   	pop    %rbx
ffffffff80203bac:	5f                   	pop    %rdi
ffffffff80203bad:	5e                   	pop    %rsi
ffffffff80203bae:	5a                   	pop    %rdx
ffffffff80203baf:	59                   	pop    %rcx
ffffffff80203bb0:	41 58                	pop    %r8
ffffffff80203bb2:	41 59                	pop    %r9
ffffffff80203bb4:	41 5c                	pop    %r12
ffffffff80203bb6:	41 5d                	pop    %r13
ffffffff80203bb8:	41 5a                	pop    %r10
ffffffff80203bba:	41 5b                	pop    %r11
ffffffff80203bbc:	5d                   	pop    %rbp
ffffffff80203bbd:	c3                   	retq   
ffffffff80203bbe:	66 90                	xchg   %ax,%ax

ffffffff80203bc0 <caml_alloc1>:
ffffffff80203bc0:	49 83 ef 10          	sub    $0x10,%r15
ffffffff80203bc4:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80203bcb:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80203bce:	72 01                	jb     ffffffff80203bd1 <caml_alloc1+0x11>
ffffffff80203bd0:	c3                   	retq   
ffffffff80203bd1:	41 53                	push   %r11
ffffffff80203bd3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80203bd8:	49 c7 c3 10 bd 22 80 	mov    $0xffffffff8022bd10,%r11
ffffffff80203bdf:	49 89 03             	mov    %rax,(%r11)
ffffffff80203be2:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80203be7:	49 c7 c3 50 40 24 80 	mov    $0xffffffff80244050,%r11
ffffffff80203bee:	49 89 03             	mov    %rax,(%r11)
ffffffff80203bf1:	41 5b                	pop    %r11
ffffffff80203bf3:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203bf7:	e8 76 fe ff ff       	callq  ffffffff80203a72 <caml_call_gc+0x22>
ffffffff80203bfc:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203c00:	eb be                	jmp    ffffffff80203bc0 <caml_alloc1>
ffffffff80203c02:	66 90                	xchg   %ax,%ax

ffffffff80203c04 <caml_alloc2>:
ffffffff80203c04:	49 83 ef 18          	sub    $0x18,%r15
ffffffff80203c08:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80203c0f:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80203c12:	72 01                	jb     ffffffff80203c15 <caml_alloc2+0x11>
ffffffff80203c14:	c3                   	retq   
ffffffff80203c15:	41 53                	push   %r11
ffffffff80203c17:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80203c1c:	49 c7 c3 10 bd 22 80 	mov    $0xffffffff8022bd10,%r11
ffffffff80203c23:	49 89 03             	mov    %rax,(%r11)
ffffffff80203c26:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80203c2b:	49 c7 c3 50 40 24 80 	mov    $0xffffffff80244050,%r11
ffffffff80203c32:	49 89 03             	mov    %rax,(%r11)
ffffffff80203c35:	41 5b                	pop    %r11
ffffffff80203c37:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203c3b:	e8 32 fe ff ff       	callq  ffffffff80203a72 <caml_call_gc+0x22>
ffffffff80203c40:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203c44:	eb be                	jmp    ffffffff80203c04 <caml_alloc2>
ffffffff80203c46:	66 90                	xchg   %ax,%ax

ffffffff80203c48 <caml_alloc3>:
ffffffff80203c48:	49 83 ef 20          	sub    $0x20,%r15
ffffffff80203c4c:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80203c53:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80203c56:	72 01                	jb     ffffffff80203c59 <caml_alloc3+0x11>
ffffffff80203c58:	c3                   	retq   
ffffffff80203c59:	41 53                	push   %r11
ffffffff80203c5b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80203c60:	49 c7 c3 10 bd 22 80 	mov    $0xffffffff8022bd10,%r11
ffffffff80203c67:	49 89 03             	mov    %rax,(%r11)
ffffffff80203c6a:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80203c6f:	49 c7 c3 50 40 24 80 	mov    $0xffffffff80244050,%r11
ffffffff80203c76:	49 89 03             	mov    %rax,(%r11)
ffffffff80203c79:	41 5b                	pop    %r11
ffffffff80203c7b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203c7f:	e8 ee fd ff ff       	callq  ffffffff80203a72 <caml_call_gc+0x22>
ffffffff80203c84:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203c88:	eb be                	jmp    ffffffff80203c48 <caml_alloc3>
ffffffff80203c8a:	66 90                	xchg   %ax,%ax

ffffffff80203c8c <caml_allocN>:
ffffffff80203c8c:	50                   	push   %rax
ffffffff80203c8d:	49 29 c7             	sub    %rax,%r15
ffffffff80203c90:	48 c7 c0 80 bf 23 80 	mov    $0xffffffff8023bf80,%rax
ffffffff80203c97:	4c 3b 38             	cmp    (%rax),%r15
ffffffff80203c9a:	72 05                	jb     ffffffff80203ca1 <caml_allocN+0x15>
ffffffff80203c9c:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203ca0:	c3                   	retq   
ffffffff80203ca1:	41 53                	push   %r11
ffffffff80203ca3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80203ca8:	49 c7 c3 10 bd 22 80 	mov    $0xffffffff8022bd10,%r11
ffffffff80203caf:	49 89 03             	mov    %rax,(%r11)
ffffffff80203cb2:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff80203cb7:	49 c7 c3 50 40 24 80 	mov    $0xffffffff80244050,%r11
ffffffff80203cbe:	49 89 03             	mov    %rax,(%r11)
ffffffff80203cc1:	41 5b                	pop    %r11
ffffffff80203cc3:	e8 aa fd ff ff       	callq  ffffffff80203a72 <caml_call_gc+0x22>
ffffffff80203cc8:	58                   	pop    %rax
ffffffff80203cc9:	eb c1                	jmp    ffffffff80203c8c <caml_allocN>
ffffffff80203ccb:	90                   	nop

ffffffff80203ccc <caml_c_call>:
ffffffff80203ccc:	41 5c                	pop    %r12
ffffffff80203cce:	49 c7 c3 10 bd 22 80 	mov    $0xffffffff8022bd10,%r11
ffffffff80203cd5:	4d 89 23             	mov    %r12,(%r11)
ffffffff80203cd8:	49 c7 c3 50 40 24 80 	mov    $0xffffffff80244050,%r11
ffffffff80203cdf:	49 89 23             	mov    %rsp,(%r11)
ffffffff80203ce2:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203ce6:	48 81 ec 00 80 00 00 	sub    $0x8000,%rsp
ffffffff80203ced:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80203cf1:	48 81 c4 00 80 00 00 	add    $0x8000,%rsp
ffffffff80203cf8:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80203cff:	4d 89 3b             	mov    %r15,(%r11)
ffffffff80203d02:	49 c7 c3 38 a1 23 80 	mov    $0xffffffff8023a138,%r11
ffffffff80203d09:	4d 89 33             	mov    %r14,(%r11)
ffffffff80203d0c:	ff e0                	jmpq   *%rax
ffffffff80203d0e:	66 90                	xchg   %ax,%ax

ffffffff80203d10 <caml_start_program>:
ffffffff80203d10:	53                   	push   %rbx
ffffffff80203d11:	55                   	push   %rbp
ffffffff80203d12:	41 54                	push   %r12
ffffffff80203d14:	41 55                	push   %r13
ffffffff80203d16:	41 56                	push   %r14
ffffffff80203d18:	41 57                	push   %r15
ffffffff80203d1a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203d1e:	49 c7 c4 90 01 20 80 	mov    $0xffffffff80200190,%r12
ffffffff80203d25:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203d29:	49 c7 c3 48 40 24 80 	mov    $0xffffffff80244048,%r11
ffffffff80203d30:	41 ff 33             	pushq  (%r11)
ffffffff80203d33:	49 c7 c3 10 bd 22 80 	mov    $0xffffffff8022bd10,%r11
ffffffff80203d3a:	41 ff 33             	pushq  (%r11)
ffffffff80203d3d:	49 c7 c3 50 40 24 80 	mov    $0xffffffff80244050,%r11
ffffffff80203d44:	41 ff 33             	pushq  (%r11)
ffffffff80203d47:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80203d4e:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80203d51:	49 c7 c3 38 a1 23 80 	mov    $0xffffffff8023a138,%r11
ffffffff80203d58:	4d 8b 33             	mov    (%r11),%r14
ffffffff80203d5b:	4c 8d 2d 53 00 00 00 	lea    0x53(%rip),%r13        # ffffffff80203db5 <caml_start_program+0xa5>
ffffffff80203d62:	41 55                	push   %r13
ffffffff80203d64:	41 56                	push   %r14
ffffffff80203d66:	49 89 e6             	mov    %rsp,%r14
ffffffff80203d69:	41 ff d4             	callq  *%r12
ffffffff80203d6c:	41 5e                	pop    %r14
ffffffff80203d6e:	41 5c                	pop    %r12
ffffffff80203d70:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80203d77:	4d 89 3b             	mov    %r15,(%r11)
ffffffff80203d7a:	49 c7 c3 38 a1 23 80 	mov    $0xffffffff8023a138,%r11
ffffffff80203d81:	4d 89 33             	mov    %r14,(%r11)
ffffffff80203d84:	49 c7 c3 50 40 24 80 	mov    $0xffffffff80244050,%r11
ffffffff80203d8b:	41 8f 03             	popq   (%r11)
ffffffff80203d8e:	49 c7 c3 10 bd 22 80 	mov    $0xffffffff8022bd10,%r11
ffffffff80203d95:	41 8f 03             	popq   (%r11)
ffffffff80203d98:	49 c7 c3 48 40 24 80 	mov    $0xffffffff80244048,%r11
ffffffff80203d9f:	41 8f 03             	popq   (%r11)
ffffffff80203da2:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203da6:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203daa:	41 5f                	pop    %r15
ffffffff80203dac:	41 5e                	pop    %r14
ffffffff80203dae:	41 5d                	pop    %r13
ffffffff80203db0:	41 5c                	pop    %r12
ffffffff80203db2:	5d                   	pop    %rbp
ffffffff80203db3:	5b                   	pop    %rbx
ffffffff80203db4:	c3                   	retq   
ffffffff80203db5:	48 83 c8 02          	or     $0x2,%rax
ffffffff80203db9:	eb b5                	jmp    ffffffff80203d70 <caml_start_program+0x60>
ffffffff80203dbb:	90                   	nop

ffffffff80203dbc <caml_raise_exn>:
ffffffff80203dbc:	49 c7 c3 14 50 23 80 	mov    $0xffffffff80235014,%r11
ffffffff80203dc3:	41 f7 03 01 00 00 00 	testl  $0x1,(%r11)
ffffffff80203dca:	75 06                	jne    ffffffff80203dd2 <caml_raise_exn+0x16>
ffffffff80203dcc:	4c 89 f4             	mov    %r14,%rsp
ffffffff80203dcf:	41 5e                	pop    %r14
ffffffff80203dd1:	c3                   	retq   
ffffffff80203dd2:	49 89 c4             	mov    %rax,%r12
ffffffff80203dd5:	48 89 c7             	mov    %rax,%rdi
ffffffff80203dd8:	5e                   	pop    %rsi
ffffffff80203dd9:	48 89 e2             	mov    %rsp,%rdx
ffffffff80203ddc:	4c 89 f1             	mov    %r14,%rcx
ffffffff80203ddf:	e8 cc 01 00 00       	callq  ffffffff80203fb0 <caml_stash_backtrace>
ffffffff80203de4:	4c 89 e0             	mov    %r12,%rax
ffffffff80203de7:	4c 89 f4             	mov    %r14,%rsp
ffffffff80203dea:	41 5e                	pop    %r14
ffffffff80203dec:	c3                   	retq   
ffffffff80203ded:	0f 1f 00             	nopl   (%rax)

ffffffff80203df0 <caml_raise_exception>:
ffffffff80203df0:	49 c7 c3 14 50 23 80 	mov    $0xffffffff80235014,%r11
ffffffff80203df7:	41 f7 03 01 00 00 00 	testl  $0x1,(%r11)
ffffffff80203dfe:	75 1a                	jne    ffffffff80203e1a <caml_raise_exception+0x2a>
ffffffff80203e00:	48 89 f8             	mov    %rdi,%rax
ffffffff80203e03:	49 c7 c3 38 a1 23 80 	mov    $0xffffffff8023a138,%r11
ffffffff80203e0a:	49 8b 23             	mov    (%r11),%rsp
ffffffff80203e0d:	41 5e                	pop    %r14
ffffffff80203e0f:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80203e16:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80203e19:	c3                   	retq   
ffffffff80203e1a:	49 89 fc             	mov    %rdi,%r12
ffffffff80203e1d:	49 c7 c3 10 bd 22 80 	mov    $0xffffffff8022bd10,%r11
ffffffff80203e24:	49 8b 33             	mov    (%r11),%rsi
ffffffff80203e27:	49 c7 c3 50 40 24 80 	mov    $0xffffffff80244050,%r11
ffffffff80203e2e:	49 8b 13             	mov    (%r11),%rdx
ffffffff80203e31:	49 c7 c3 38 a1 23 80 	mov    $0xffffffff8023a138,%r11
ffffffff80203e38:	49 8b 0b             	mov    (%r11),%rcx
ffffffff80203e3b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203e3f:	e8 6c 01 00 00       	callq  ffffffff80203fb0 <caml_stash_backtrace>
ffffffff80203e44:	4c 89 e0             	mov    %r12,%rax
ffffffff80203e47:	49 c7 c3 38 a1 23 80 	mov    $0xffffffff8023a138,%r11
ffffffff80203e4e:	49 8b 23             	mov    (%r11),%rsp
ffffffff80203e51:	41 5e                	pop    %r14
ffffffff80203e53:	49 c7 c3 88 bf 23 80 	mov    $0xffffffff8023bf88,%r11
ffffffff80203e5a:	4d 8b 3b             	mov    (%r11),%r15
ffffffff80203e5d:	c3                   	retq   
ffffffff80203e5e:	66 90                	xchg   %ax,%ax

ffffffff80203e60 <caml_stack_overflow>:
ffffffff80203e60:	48 c7 c0 d0 81 22 80 	mov    $0xffffffff802281d0,%rax
ffffffff80203e67:	4c 89 f4             	mov    %r14,%rsp
ffffffff80203e6a:	41 5e                	pop    %r14
ffffffff80203e6c:	c3                   	retq   
ffffffff80203e6d:	0f 1f 00             	nopl   (%rax)

ffffffff80203e70 <caml_callback_exn>:
ffffffff80203e70:	53                   	push   %rbx
ffffffff80203e71:	55                   	push   %rbp
ffffffff80203e72:	41 54                	push   %r12
ffffffff80203e74:	41 55                	push   %r13
ffffffff80203e76:	41 56                	push   %r14
ffffffff80203e78:	41 57                	push   %r15
ffffffff80203e7a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203e7e:	48 89 fb             	mov    %rdi,%rbx
ffffffff80203e81:	48 89 f0             	mov    %rsi,%rax
ffffffff80203e84:	4c 8b 23             	mov    (%rbx),%r12
ffffffff80203e87:	e9 99 fe ff ff       	jmpq   ffffffff80203d25 <caml_start_program+0x15>

ffffffff80203e8c <caml_callback2_exn>:
ffffffff80203e8c:	53                   	push   %rbx
ffffffff80203e8d:	55                   	push   %rbp
ffffffff80203e8e:	41 54                	push   %r12
ffffffff80203e90:	41 55                	push   %r13
ffffffff80203e92:	41 56                	push   %r14
ffffffff80203e94:	41 57                	push   %r15
ffffffff80203e96:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203e9a:	48 89 ff             	mov    %rdi,%rdi
ffffffff80203e9d:	48 89 f0             	mov    %rsi,%rax
ffffffff80203ea0:	48 89 d3             	mov    %rdx,%rbx
ffffffff80203ea3:	49 c7 c4 30 05 20 80 	mov    $0xffffffff80200530,%r12
ffffffff80203eaa:	e9 76 fe ff ff       	jmpq   ffffffff80203d25 <caml_start_program+0x15>
ffffffff80203eaf:	90                   	nop

ffffffff80203eb0 <caml_callback3_exn>:
ffffffff80203eb0:	53                   	push   %rbx
ffffffff80203eb1:	55                   	push   %rbp
ffffffff80203eb2:	41 54                	push   %r12
ffffffff80203eb4:	41 55                	push   %r13
ffffffff80203eb6:	41 56                	push   %r14
ffffffff80203eb8:	41 57                	push   %r15
ffffffff80203eba:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203ebe:	48 89 f0             	mov    %rsi,%rax
ffffffff80203ec1:	48 89 d3             	mov    %rdx,%rbx
ffffffff80203ec4:	48 89 fe             	mov    %rdi,%rsi
ffffffff80203ec7:	48 89 cf             	mov    %rcx,%rdi
ffffffff80203eca:	49 c7 c4 e0 04 20 80 	mov    $0xffffffff802004e0,%r12
ffffffff80203ed1:	e9 4f fe ff ff       	jmpq   ffffffff80203d25 <caml_start_program+0x15>
ffffffff80203ed6:	66 90                	xchg   %ax,%ax

ffffffff80203ed8 <caml_ml_array_bound_error>:
ffffffff80203ed8:	48 c7 c0 40 75 20 80 	mov    $0xffffffff80207540,%rax
ffffffff80203edf:	e9 e8 fd ff ff       	jmpq   ffffffff80203ccc <caml_c_call>

ffffffff80203ee4 <caml_system__code_end>:
ffffffff80203ee4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203eeb:	00 00 00 
ffffffff80203eee:	66 90                	xchg   %ax,%ax

ffffffff80203ef0 <caml_next_frame_descriptor>:
ffffffff80203ef0:	48 8b 17             	mov    (%rdi),%rdx
ffffffff80203ef3:	4c 8b 0d 66 01 04 00 	mov    0x40166(%rip),%r9        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff80203efa:	48 89 d0             	mov    %rdx,%rax
ffffffff80203efd:	48 8b 0d 64 01 04 00 	mov    0x40164(%rip),%rcx        # ffffffff80244068 <caml_frame_descriptors>
ffffffff80203f04:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff80203f08:	4c 21 c8             	and    %r9,%rax
ffffffff80203f0b:	4c 8b 04 c1          	mov    (%rcx,%rax,8),%r8
ffffffff80203f0f:	4d 85 c0             	test   %r8,%r8
ffffffff80203f12:	75 1c                	jne    ffffffff80203f30 <caml_next_frame_descriptor+0x40>
ffffffff80203f14:	eb 4a                	jmp    ffffffff80203f60 <caml_next_frame_descriptor+0x70>
ffffffff80203f16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203f1d:	00 00 00 
ffffffff80203f20:	48 83 c0 01          	add    $0x1,%rax
ffffffff80203f24:	4c 21 c8             	and    %r9,%rax
ffffffff80203f27:	4c 8b 04 c1          	mov    (%rcx,%rax,8),%r8
ffffffff80203f2b:	4d 85 c0             	test   %r8,%r8
ffffffff80203f2e:	74 30                	je     ffffffff80203f60 <caml_next_frame_descriptor+0x70>
ffffffff80203f30:	49 39 10             	cmp    %rdx,(%r8)
ffffffff80203f33:	75 eb                	jne    ffffffff80203f20 <caml_next_frame_descriptor+0x30>
ffffffff80203f35:	41 0f b7 50 08       	movzwl 0x8(%r8),%edx
ffffffff80203f3a:	48 8b 06             	mov    (%rsi),%rax
ffffffff80203f3d:	66 83 fa ff          	cmp    $0xffff,%dx
ffffffff80203f41:	75 24                	jne    ffffffff80203f67 <caml_next_frame_descriptor+0x77>
ffffffff80203f43:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80203f47:	48 89 16             	mov    %rdx,(%rsi)
ffffffff80203f4a:	48 8b 50 18          	mov    0x18(%rax),%rdx
ffffffff80203f4e:	48 89 17             	mov    %rdx,(%rdi)
ffffffff80203f51:	48 83 3e 00          	cmpq   $0x0,(%rsi)
ffffffff80203f55:	75 9c                	jne    ffffffff80203ef3 <caml_next_frame_descriptor+0x3>
ffffffff80203f57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80203f5e:	00 00 
ffffffff80203f60:	45 31 c0             	xor    %r8d,%r8d
ffffffff80203f63:	4c 89 c0             	mov    %r8,%rax
ffffffff80203f66:	c3                   	retq   
ffffffff80203f67:	81 e2 fc ff 00 00    	and    $0xfffc,%edx
ffffffff80203f6d:	48 01 d0             	add    %rdx,%rax
ffffffff80203f70:	48 89 06             	mov    %rax,(%rsi)
ffffffff80203f73:	48 8b 40 f8          	mov    -0x8(%rax),%rax
ffffffff80203f77:	48 89 07             	mov    %rax,(%rdi)
ffffffff80203f7a:	eb e7                	jmp    ffffffff80203f63 <caml_next_frame_descriptor+0x73>
ffffffff80203f7c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80203f80 <caml_alloc_backtrace_buffer>:
ffffffff80203f80:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80203f84:	bf 00 20 00 00       	mov    $0x2000,%edi
ffffffff80203f89:	e8 22 c8 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80203f8e:	48 85 c0             	test   %rax,%rax
ffffffff80203f91:	48 89 05 70 10 03 00 	mov    %rax,0x31070(%rip)        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff80203f98:	0f 94 c0             	sete   %al
ffffffff80203f9b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203f9f:	0f b6 c0             	movzbl %al,%eax
ffffffff80203fa2:	f7 d8                	neg    %eax
ffffffff80203fa4:	c3                   	retq   
ffffffff80203fa5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80203fac:	00 00 00 00 

ffffffff80203fb0 <caml_stash_backtrace>:
ffffffff80203fb0:	53                   	push   %rbx
ffffffff80203fb1:	48 89 cb             	mov    %rcx,%rbx
ffffffff80203fb4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203fb8:	48 39 3d 09 7c 02 00 	cmp    %rdi,0x27c09(%rip)        # ffffffff8022bbc8 <caml_backtrace_last_exn>
ffffffff80203fbf:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff80203fc4:	48 89 14 24          	mov    %rdx,(%rsp)
ffffffff80203fc8:	74 11                	je     ffffffff80203fdb <caml_stash_backtrace+0x2b>
ffffffff80203fca:	c7 05 3c 10 03 00 00 	movl   $0x0,0x3103c(%rip)        # ffffffff80235010 <caml_backtrace_pos>
ffffffff80203fd1:	00 00 00 
ffffffff80203fd4:	48 89 3d ed 7b 02 00 	mov    %rdi,0x27bed(%rip)        # ffffffff8022bbc8 <caml_backtrace_last_exn>
ffffffff80203fdb:	48 83 3d 25 10 03 00 	cmpq   $0x0,0x31025(%rip)        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff80203fe2:	00 
ffffffff80203fe3:	74 4b                	je     ffffffff80204030 <caml_stash_backtrace+0x80>
ffffffff80203fe5:	48 89 e6             	mov    %rsp,%rsi
ffffffff80203fe8:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
ffffffff80203fed:	eb 2a                	jmp    ffffffff80204019 <caml_stash_backtrace+0x69>
ffffffff80203fef:	90                   	nop
ffffffff80203ff0:	48 63 15 19 10 03 00 	movslq 0x31019(%rip),%rdx        # ffffffff80235010 <caml_backtrace_pos>
ffffffff80203ff7:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx
ffffffff80203ffd:	7f 24                	jg     ffffffff80204023 <caml_stash_backtrace+0x73>
ffffffff80203fff:	8d 4a 01             	lea    0x1(%rdx),%ecx
ffffffff80204002:	89 0d 08 10 03 00    	mov    %ecx,0x31008(%rip)        # ffffffff80235010 <caml_backtrace_pos>
ffffffff80204008:	48 8b 0d f9 0f 03 00 	mov    0x30ff9(%rip),%rcx        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff8020400f:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
ffffffff80204013:	48 39 1c 24          	cmp    %rbx,(%rsp)
ffffffff80204017:	77 0a                	ja     ffffffff80204023 <caml_stash_backtrace+0x73>
ffffffff80204019:	e8 d2 fe ff ff       	callq  ffffffff80203ef0 <caml_next_frame_descriptor>
ffffffff8020401e:	48 85 c0             	test   %rax,%rax
ffffffff80204021:	75 cd                	jne    ffffffff80203ff0 <caml_stash_backtrace+0x40>
ffffffff80204023:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80204027:	5b                   	pop    %rbx
ffffffff80204028:	c3                   	retq   
ffffffff80204029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80204030:	bf 00 20 00 00       	mov    $0x2000,%edi
ffffffff80204035:	e8 76 c7 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff8020403a:	48 89 05 c7 0f 03 00 	mov    %rax,0x30fc7(%rip)        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff80204041:	48 85 c0             	test   %rax,%rax
ffffffff80204044:	75 9f                	jne    ffffffff80203fe5 <caml_stash_backtrace+0x35>
ffffffff80204046:	eb db                	jmp    ffffffff80204023 <caml_stash_backtrace+0x73>
ffffffff80204048:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020404f:	00 

ffffffff80204050 <caml_get_current_callstack>:
ffffffff80204050:	41 55                	push   %r13
ffffffff80204052:	49 89 fa             	mov    %rdi,%r10
ffffffff80204055:	41 54                	push   %r12
ffffffff80204057:	49 d1 fa             	sar    %r10
ffffffff8020405a:	55                   	push   %rbp
ffffffff8020405b:	53                   	push   %rbx
ffffffff8020405c:	31 db                	xor    %ebx,%ebx
ffffffff8020405e:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
ffffffff80204065:	4c 8b 2d 0c 00 04 00 	mov    0x4000c(%rip),%r13        # ffffffff80244078 <caml_local_roots>
ffffffff8020406c:	4c 8b 1d e5 ff 03 00 	mov    0x3ffe5(%rip),%r11        # ffffffff80244058 <caml_top_of_stack>
ffffffff80204073:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80204078:	4c 8d 64 24 28       	lea    0x28(%rsp),%r12
ffffffff8020407d:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
ffffffff80204082:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80204089:	00 00 
ffffffff8020408b:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
ffffffff80204092:	00 
ffffffff80204093:	31 c0                	xor    %eax,%eax
ffffffff80204095:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff8020409a:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
ffffffff8020409f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff802040a4:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
ffffffff802040a9:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffff802040ae:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
ffffffff802040b3:	48 89 05 be ff 03 00 	mov    %rax,0x3ffbe(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802040ba:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff802040bf:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff802040c6:	00 
ffffffff802040c7:	48 8b 05 42 7c 02 00 	mov    0x27c42(%rip),%rax        # ffffffff8022bd10 <caml_last_return_address>
ffffffff802040ce:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
ffffffff802040d5:	00 00 
ffffffff802040d7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff802040dc:	48 8b 05 6d ff 03 00 	mov    0x3ff6d(%rip),%rax        # ffffffff80244050 <caml_bottom_of_stack>
ffffffff802040e3:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
ffffffff802040ea:	00 00 
ffffffff802040ec:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff802040f3:	00 00 
ffffffff802040f5:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
ffffffff802040fc:	00 01 00 00 00 
ffffffff80204101:	48 c7 44 24 78 01 00 	movq   $0x1,0x78(%rsp)
ffffffff80204108:	00 00 
ffffffff8020410a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8020410f:	eb 17                	jmp    ffffffff80204128 <caml_get_current_callstack+0xd8>
ffffffff80204111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80204118:	48 85 c0             	test   %rax,%rax
ffffffff8020411b:	74 1b                	je     ffffffff80204138 <caml_get_current_callstack+0xe8>
ffffffff8020411d:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80204121:	4c 39 5c 24 28       	cmp    %r11,0x28(%rsp)
ffffffff80204126:	77 10                	ja     ffffffff80204138 <caml_get_current_callstack+0xe8>
ffffffff80204128:	4c 89 e6             	mov    %r12,%rsi
ffffffff8020412b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020412e:	e8 bd fd ff ff       	callq  ffffffff80203ef0 <caml_next_frame_descriptor>
ffffffff80204133:	4c 39 d3             	cmp    %r10,%rbx
ffffffff80204136:	7c e0                	jl     ffffffff80204118 <caml_get_current_callstack+0xc8>
ffffffff80204138:	31 f6                	xor    %esi,%esi
ffffffff8020413a:	48 89 df             	mov    %rbx,%rdi
ffffffff8020413d:	e8 8e 49 01 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff80204142:	48 8b 15 c7 7b 02 00 	mov    0x27bc7(%rip),%rdx        # ffffffff8022bd10 <caml_last_return_address>
ffffffff80204149:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8020414e:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
ffffffff80204153:	48 8b 15 f6 fe 03 00 	mov    0x3fef6(%rip),%rdx        # ffffffff80244050 <caml_bottom_of_stack>
ffffffff8020415a:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020415f:	48 85 db             	test   %rbx,%rbx
ffffffff80204162:	7e 32                	jle    ffffffff80204196 <caml_get_current_callstack+0x146>
ffffffff80204164:	45 31 d2             	xor    %r10d,%r10d
ffffffff80204167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020416e:	00 00 
ffffffff80204170:	4c 89 e6             	mov    %r12,%rsi
ffffffff80204173:	48 89 ef             	mov    %rbp,%rdi
ffffffff80204176:	e8 75 fd ff ff       	callq  ffffffff80203ef0 <caml_next_frame_descriptor>
ffffffff8020417b:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff80204180:	48 83 c8 01          	or     $0x1,%rax
ffffffff80204184:	4a 89 04 d2          	mov    %rax,(%rdx,%r10,8)
ffffffff80204188:	49 83 c2 01          	add    $0x1,%r10
ffffffff8020418c:	4c 39 d3             	cmp    %r10,%rbx
ffffffff8020418f:	75 df                	jne    ffffffff80204170 <caml_get_current_callstack+0x120>
ffffffff80204191:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80204196:	4c 89 2d db fe 03 00 	mov    %r13,0x3fedb(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020419d:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
ffffffff802041a4:	00 
ffffffff802041a5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff802041ac:	00 00 
ffffffff802041ae:	75 0e                	jne    ffffffff802041be <caml_get_current_callstack+0x16e>
ffffffff802041b0:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
ffffffff802041b7:	5b                   	pop    %rbx
ffffffff802041b8:	5d                   	pop    %rbp
ffffffff802041b9:	41 5c                	pop    %r12
ffffffff802041bb:	41 5d                	pop    %r13
ffffffff802041bd:	c3                   	retq   
ffffffff802041be:	e8 dd be ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802041c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802041ca:	00 00 00 00 
ffffffff802041ce:	66 90                	xchg   %ax,%ax

ffffffff802041d0 <caml_debuginfo_extract>:
ffffffff802041d0:	f6 47 08 01          	testb  $0x1,0x8(%rdi)
ffffffff802041d4:	74 1a                	je     ffffffff802041f0 <caml_debuginfo_extract+0x20>
ffffffff802041d6:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
ffffffff802041da:	48 8d 44 47 13       	lea    0x13(%rdi,%rax,2),%rax
ffffffff802041df:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff802041e3:	48 8b 00             	mov    (%rax),%rax
ffffffff802041e6:	c3                   	retq   
ffffffff802041e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802041ee:	00 00 
ffffffff802041f0:	31 c0                	xor    %eax,%eax
ffffffff802041f2:	c3                   	retq   
ffffffff802041f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802041fa:	00 00 00 00 
ffffffff802041fe:	66 90                	xchg   %ax,%ax

ffffffff80204200 <caml_debuginfo_next>:
ffffffff80204200:	48 85 ff             	test   %rdi,%rdi
ffffffff80204203:	74 0b                	je     ffffffff80204210 <caml_debuginfo_next+0x10>
ffffffff80204205:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff80204209:	c3                   	retq   
ffffffff8020420a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80204210:	31 c0                	xor    %eax,%eax
ffffffff80204212:	c3                   	retq   
ffffffff80204213:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020421a:	00 00 00 00 
ffffffff8020421e:	66 90                	xchg   %ax,%ax

ffffffff80204220 <caml_debuginfo_location>:
ffffffff80204220:	48 85 ff             	test   %rdi,%rdi
ffffffff80204223:	74 63                	je     ffffffff80204288 <caml_debuginfo_location+0x68>
ffffffff80204225:	8b 17                	mov    (%rdi),%edx
ffffffff80204227:	8b 47 04             	mov    0x4(%rdi),%eax
ffffffff8020422a:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
ffffffff80204230:	89 d1                	mov    %edx,%ecx
ffffffff80204232:	83 e1 03             	and    $0x3,%ecx
ffffffff80204235:	83 f9 01             	cmp    $0x1,%ecx
ffffffff80204238:	0f 94 c1             	sete   %cl
ffffffff8020423b:	0f b6 c9             	movzbl %cl,%ecx
ffffffff8020423e:	89 4e 04             	mov    %ecx,0x4(%rsi)
ffffffff80204241:	31 c9                	xor    %ecx,%ecx
ffffffff80204243:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
ffffffff80204248:	0f 95 c1             	setne  %cl
ffffffff8020424b:	89 4e 1c             	mov    %ecx,0x1c(%rsi)
ffffffff8020424e:	89 d1                	mov    %edx,%ecx
ffffffff80204250:	c1 ea 1a             	shr    $0x1a,%edx
ffffffff80204253:	81 e1 fc ff ff 03    	and    $0x3fffffc,%ecx
ffffffff80204259:	48 01 cf             	add    %rcx,%rdi
ffffffff8020425c:	89 c1                	mov    %eax,%ecx
ffffffff8020425e:	c1 e9 0c             	shr    $0xc,%ecx
ffffffff80204261:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
ffffffff80204265:	89 4e 10             	mov    %ecx,0x10(%rsi)
ffffffff80204268:	89 c1                	mov    %eax,%ecx
ffffffff8020426a:	c1 e0 06             	shl    $0x6,%eax
ffffffff8020426d:	c1 e9 04             	shr    $0x4,%ecx
ffffffff80204270:	25 c0 03 00 00       	and    $0x3c0,%eax
ffffffff80204275:	81 e1 ff 00 00 00    	and    $0xff,%ecx
ffffffff8020427b:	09 d0                	or     %edx,%eax
ffffffff8020427d:	89 4e 14             	mov    %ecx,0x14(%rsi)
ffffffff80204280:	89 46 18             	mov    %eax,0x18(%rsi)
ffffffff80204283:	c3                   	retq   
ffffffff80204284:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80204288:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff8020428f:	00 00 00 
ffffffff80204292:	c7 46 1c 00 00 00 00 	movl   $0x0,0x1c(%rsi)
ffffffff80204299:	48 89 06             	mov    %rax,(%rsi)
ffffffff8020429c:	c3                   	retq   
ffffffff8020429d:	0f 1f 00             	nopl   (%rax)

ffffffff802042a0 <caml_add_debug_info>:
ffffffff802042a0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802042a5:	c3                   	retq   
ffffffff802042a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802042ad:	00 00 00 

ffffffff802042b0 <caml_remove_debug_info>:
ffffffff802042b0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802042b5:	c3                   	retq   
ffffffff802042b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802042bd:	00 00 00 

ffffffff802042c0 <caml_debug_info_available>:
ffffffff802042c0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802042c5:	c3                   	retq   
ffffffff802042c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802042cd:	00 00 00 

ffffffff802042d0 <caml_convert_debuginfo>:
ffffffff802042d0:	53                   	push   %rbx
ffffffff802042d1:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
ffffffff802042d5:	48 8b 1d 9c fd 03 00 	mov    0x3fd9c(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff802042dc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802042e3:	00 00 
ffffffff802042e5:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff802042ea:	31 c0                	xor    %eax,%eax
ffffffff802042ec:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
ffffffff802042f1:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
ffffffff802042f6:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
ffffffff802042fd:	00 
ffffffff802042fe:	48 89 05 73 fd 03 00 	mov    %rax,0x3fd73(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204305:	48 89 e0             	mov    %rsp,%rax
ffffffff80204308:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff8020430d:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80204312:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
ffffffff80204317:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
ffffffff8020431e:	00 00 
ffffffff80204320:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
ffffffff80204325:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
ffffffff8020432c:	00 00 
ffffffff8020432e:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
ffffffff80204335:	00 00 
ffffffff80204337:	e8 e4 fe ff ff       	callq  ffffffff80204220 <caml_debuginfo_location>
ffffffff8020433c:	8b 44 24 10          	mov    0x10(%rsp),%eax
ffffffff80204340:	85 c0                	test   %eax,%eax
ffffffff80204342:	0f 84 b8 00 00 00    	je     ffffffff80204400 <caml_convert_debuginfo+0x130>
ffffffff80204348:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
ffffffff8020434d:	e8 be 4a 01 00       	callq  ffffffff80218e10 <caml_copy_string>
ffffffff80204352:	31 f6                	xor    %esi,%esi
ffffffff80204354:	bf 06 00 00 00       	mov    $0x6,%edi
ffffffff80204359:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020435e:	e8 9d 48 01 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff80204363:	83 7c 24 14 01       	cmpl   $0x1,0x14(%rsp)
ffffffff80204368:	48 19 d2             	sbb    %rdx,%rdx
ffffffff8020436b:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8020436f:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
ffffffff80204373:	48 83 c2 03          	add    $0x3,%rdx
ffffffff80204377:	48 89 10             	mov    %rdx,(%rax)
ffffffff8020437a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8020437f:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80204383:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80204387:	48 63 44 24 20       	movslq 0x20(%rsp),%rax
ffffffff8020438c:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
ffffffff80204391:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80204395:	48 89 50 10          	mov    %rdx,0x10(%rax)
ffffffff80204399:	48 63 44 24 24       	movslq 0x24(%rsp),%rax
ffffffff8020439e:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
ffffffff802043a3:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802043a7:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff802043ab:	48 63 44 24 28       	movslq 0x28(%rsp),%rax
ffffffff802043b0:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
ffffffff802043b5:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802043b9:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff802043bd:	83 7c 24 2c 01       	cmpl   $0x1,0x2c(%rsp)
ffffffff802043c2:	48 19 c0             	sbb    %rax,%rax
ffffffff802043c5:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff802043c9:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff802043cd:	48 83 c0 03          	add    $0x3,%rax
ffffffff802043d1:	48 89 42 28          	mov    %rax,0x28(%rdx)
ffffffff802043d5:	48 89 1d 9c fc 03 00 	mov    %rbx,0x3fc9c(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802043dc:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802043e0:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
ffffffff802043e5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff802043ec:	00 00 
ffffffff802043ee:	75 38                	jne    ffffffff80204428 <caml_convert_debuginfo+0x158>
ffffffff802043f0:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
ffffffff802043f4:	5b                   	pop    %rbx
ffffffff802043f5:	c3                   	retq   
ffffffff802043f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802043fd:	00 00 00 
ffffffff80204400:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80204405:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020440a:	e8 f1 47 01 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff8020440f:	83 7c 24 14 01       	cmpl   $0x1,0x14(%rsp)
ffffffff80204414:	48 19 d2             	sbb    %rdx,%rdx
ffffffff80204417:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8020441b:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
ffffffff8020441f:	48 83 c2 03          	add    $0x3,%rdx
ffffffff80204423:	48 89 10             	mov    %rdx,(%rax)
ffffffff80204426:	eb ad                	jmp    ffffffff802043d5 <caml_convert_debuginfo+0x105>
ffffffff80204428:	e8 73 bc ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020442d:	0f 1f 00             	nopl   (%rax)

ffffffff80204430 <caml_init_backtrace>:
ffffffff80204430:	48 8d 3d 91 77 02 00 	lea    0x27791(%rip),%rdi        # ffffffff8022bbc8 <caml_backtrace_last_exn>
ffffffff80204437:	e9 34 47 00 00       	jmpq   ffffffff80208b70 <caml_register_global_root>
ffffffff8020443c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80204440 <caml_record_backtrace>:
ffffffff80204440:	48 d1 ff             	sar    %rdi
ffffffff80204443:	39 3d cb 0b 03 00    	cmp    %edi,0x30bcb(%rip)        # ffffffff80235014 <caml_backtrace_active>
ffffffff80204449:	74 1b                	je     ffffffff80204466 <caml_record_backtrace+0x26>
ffffffff8020444b:	89 3d c3 0b 03 00    	mov    %edi,0x30bc3(%rip)        # ffffffff80235014 <caml_backtrace_active>
ffffffff80204451:	c7 05 b5 0b 03 00 00 	movl   $0x0,0x30bb5(%rip)        # ffffffff80235010 <caml_backtrace_pos>
ffffffff80204458:	00 00 00 
ffffffff8020445b:	48 c7 05 62 77 02 00 	movq   $0x1,0x27762(%rip)        # ffffffff8022bbc8 <caml_backtrace_last_exn>
ffffffff80204462:	01 00 00 00 
ffffffff80204466:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020446b:	c3                   	retq   
ffffffff8020446c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80204470 <caml_backtrace_status>:
ffffffff80204470:	83 3d 9d 0b 03 00 01 	cmpl   $0x1,0x30b9d(%rip)        # ffffffff80235014 <caml_backtrace_active>
ffffffff80204477:	48 19 c0             	sbb    %rax,%rax
ffffffff8020447a:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff8020447e:	48 83 c0 03          	add    $0x3,%rax
ffffffff80204482:	c3                   	retq   
ffffffff80204483:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020448a:	00 00 00 00 
ffffffff8020448e:	66 90                	xchg   %ax,%ax

ffffffff80204490 <caml_print_exception_backtrace>:
ffffffff80204490:	41 57                	push   %r15
ffffffff80204492:	41 56                	push   %r14
ffffffff80204494:	41 55                	push   %r13
ffffffff80204496:	41 54                	push   %r12
ffffffff80204498:	55                   	push   %rbp
ffffffff80204499:	53                   	push   %rbx
ffffffff8020449a:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8020449e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802044a5:	00 00 
ffffffff802044a7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff802044ac:	31 c0                	xor    %eax,%eax
ffffffff802044ae:	e8 0d fe ff ff       	callq  ffffffff802042c0 <caml_debug_info_available>
ffffffff802044b3:	85 c0                	test   %eax,%eax
ffffffff802044b5:	0f 84 93 01 00 00    	je     ffffffff8020464e <caml_print_exception_backtrace+0x1be>
ffffffff802044bb:	8b 2d 4f 0b 03 00    	mov    0x30b4f(%rip),%ebp        # ffffffff80235010 <caml_backtrace_pos>
ffffffff802044c1:	31 db                	xor    %ebx,%ebx
ffffffff802044c3:	4c 8d 2d fc cd 01 00 	lea    0x1cdfc(%rip),%r13        # ffffffff802212c6 <caml_absf_mask+0x116>
ffffffff802044ca:	4c 8d 3d ef cc 01 00 	lea    0x1ccef(%rip),%r15        # ffffffff802211c0 <caml_absf_mask+0x10>
ffffffff802044d1:	85 ed                	test   %ebp,%ebp
ffffffff802044d3:	0f 8e 1e 01 00 00    	jle    ffffffff802045f7 <caml_print_exception_backtrace+0x167>
ffffffff802044d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802044e0:	48 8b 15 21 0b 03 00 	mov    0x30b21(%rip),%rdx        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff802044e7:	48 63 c3             	movslq %ebx,%rax
ffffffff802044ea:	48 89 e5             	mov    %rsp,%rbp
ffffffff802044ed:	4c 8d 25 9a df 01 00 	lea    0x1df9a(%rip),%r12        # ffffffff8022248e <posix_signals+0x3ae>
ffffffff802044f4:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
ffffffff802044f8:	e8 d3 fc ff ff       	callq  ffffffff802041d0 <caml_debuginfo_extract>
ffffffff802044fd:	49 89 c6             	mov    %rax,%r14
ffffffff80204500:	48 85 c0             	test   %rax,%rax
ffffffff80204503:	75 60                	jne    ffffffff80204565 <caml_print_exception_backtrace+0xd5>
ffffffff80204505:	e9 de 00 00 00       	jmpq   ffffffff802045e8 <caml_print_exception_backtrace+0x158>
ffffffff8020450a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80204510:	44 8b 5c 24 04       	mov    0x4(%rsp),%r11d
ffffffff80204515:	45 85 db             	test   %r11d,%r11d
ffffffff80204518:	75 37                	jne    ffffffff80204551 <caml_print_exception_backtrace+0xc1>
ffffffff8020451a:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
ffffffff8020451f:	85 db                	test   %ebx,%ebx
ffffffff80204521:	48 8d 15 85 cd 01 00 	lea    0x1cd85(%rip),%rdx        # ffffffff802212ad <caml_absf_mask+0xfd>
ffffffff80204528:	4d 89 e0             	mov    %r12,%r8
ffffffff8020452b:	49 0f 44 d7          	cmove  %r15,%rdx
ffffffff8020452f:	45 85 c9             	test   %r9d,%r9d
ffffffff80204532:	74 03                	je     ffffffff80204537 <caml_print_exception_backtrace+0xa7>
ffffffff80204534:	4d 89 e8             	mov    %r13,%r8
ffffffff80204537:	48 8b 3d aa 3f 04 00 	mov    0x43faa(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8020453e:	85 c0                	test   %eax,%eax
ffffffff80204540:	75 6e                	jne    ffffffff802045b0 <caml_print_exception_backtrace+0x120>
ffffffff80204542:	4c 89 c1             	mov    %r8,%rcx
ffffffff80204545:	48 8d 35 8f cd 01 00 	lea    0x1cd8f(%rip),%rsi        # ffffffff802212db <caml_absf_mask+0x12b>
ffffffff8020454c:	e8 5a bb ff ff       	callq  ffffffff802000ab <fprintf>
ffffffff80204551:	4c 89 f7             	mov    %r14,%rdi
ffffffff80204554:	e8 a7 fc ff ff       	callq  ffffffff80204200 <caml_debuginfo_next>
ffffffff80204559:	49 89 c6             	mov    %rax,%r14
ffffffff8020455c:	48 85 c0             	test   %rax,%rax
ffffffff8020455f:	0f 84 83 00 00 00    	je     ffffffff802045e8 <caml_print_exception_backtrace+0x158>
ffffffff80204565:	48 89 ee             	mov    %rbp,%rsi
ffffffff80204568:	4c 89 f7             	mov    %r14,%rdi
ffffffff8020456b:	e8 b0 fc ff ff       	callq  ffffffff80204220 <caml_debuginfo_location>
ffffffff80204570:	8b 04 24             	mov    (%rsp),%eax
ffffffff80204573:	85 c0                	test   %eax,%eax
ffffffff80204575:	74 99                	je     ffffffff80204510 <caml_print_exception_backtrace+0x80>
ffffffff80204577:	44 8b 54 24 04       	mov    0x4(%rsp),%r10d
ffffffff8020457c:	45 85 d2             	test   %r10d,%r10d
ffffffff8020457f:	74 99                	je     ffffffff8020451a <caml_print_exception_backtrace+0x8a>
ffffffff80204581:	85 db                	test   %ebx,%ebx
ffffffff80204583:	0f 85 97 00 00 00    	jne    ffffffff80204620 <caml_print_exception_backtrace+0x190>
ffffffff80204589:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
ffffffff8020458d:	48 8b 3d 54 3f 04 00 	mov    0x43f54(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff80204594:	4d 89 e8             	mov    %r13,%r8
ffffffff80204597:	48 8d 15 33 cd 01 00 	lea    0x1cd33(%rip),%rdx        # ffffffff802212d1 <caml_absf_mask+0x121>
ffffffff8020459e:	85 c9                	test   %ecx,%ecx
ffffffff802045a0:	75 0e                	jne    ffffffff802045b0 <caml_print_exception_backtrace+0x120>
ffffffff802045a2:	48 8b 3d 3f 3f 04 00 	mov    0x43f3f(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff802045a9:	4d 89 e0             	mov    %r12,%r8
ffffffff802045ac:	85 c0                	test   %eax,%eax
ffffffff802045ae:	74 92                	je     ffffffff80204542 <caml_print_exception_backtrace+0xb2>
ffffffff802045b0:	8b 44 24 18          	mov    0x18(%rsp),%eax
ffffffff802045b4:	48 8d 35 6d cc 01 00 	lea    0x1cc6d(%rip),%rsi        # ffffffff80221228 <caml_absf_mask+0x78>
ffffffff802045bb:	50                   	push   %rax
ffffffff802045bc:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
ffffffff802045c0:	50                   	push   %rax
ffffffff802045c1:	44 8b 4c 24 20       	mov    0x20(%rsp),%r9d
ffffffff802045c6:	31 c0                	xor    %eax,%eax
ffffffff802045c8:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
ffffffff802045cd:	e8 d9 ba ff ff       	callq  ffffffff802000ab <fprintf>
ffffffff802045d2:	5e                   	pop    %rsi
ffffffff802045d3:	5f                   	pop    %rdi
ffffffff802045d4:	4c 89 f7             	mov    %r14,%rdi
ffffffff802045d7:	e8 24 fc ff ff       	callq  ffffffff80204200 <caml_debuginfo_next>
ffffffff802045dc:	49 89 c6             	mov    %rax,%r14
ffffffff802045df:	48 85 c0             	test   %rax,%rax
ffffffff802045e2:	0f 85 7d ff ff ff    	jne    ffffffff80204565 <caml_print_exception_backtrace+0xd5>
ffffffff802045e8:	83 c3 01             	add    $0x1,%ebx
ffffffff802045eb:	39 1d 1f 0a 03 00    	cmp    %ebx,0x30a1f(%rip)        # ffffffff80235010 <caml_backtrace_pos>
ffffffff802045f1:	0f 8f e9 fe ff ff    	jg     ffffffff802044e0 <caml_print_exception_backtrace+0x50>
ffffffff802045f7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff802045fc:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80204603:	00 00 
ffffffff80204605:	75 66                	jne    ffffffff8020466d <caml_print_exception_backtrace+0x1dd>
ffffffff80204607:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8020460b:	5b                   	pop    %rbx
ffffffff8020460c:	5d                   	pop    %rbp
ffffffff8020460d:	41 5c                	pop    %r12
ffffffff8020460f:	41 5d                	pop    %r13
ffffffff80204611:	41 5e                	pop    %r14
ffffffff80204613:	41 5f                	pop    %r15
ffffffff80204615:	c3                   	retq   
ffffffff80204616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020461d:	00 00 00 
ffffffff80204620:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
ffffffff80204624:	85 d2                	test   %edx,%edx
ffffffff80204626:	74 10                	je     ffffffff80204638 <caml_print_exception_backtrace+0x1a8>
ffffffff80204628:	48 8d 15 8a cc 01 00 	lea    0x1cc8a(%rip),%rdx        # ffffffff802212b9 <caml_absf_mask+0x109>
ffffffff8020462f:	e9 00 ff ff ff       	jmpq   ffffffff80204534 <caml_print_exception_backtrace+0xa4>
ffffffff80204634:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80204638:	48 8b 3d a9 3e 04 00 	mov    0x43ea9(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8020463f:	4d 89 e0             	mov    %r12,%r8
ffffffff80204642:	48 8d 15 70 cc 01 00 	lea    0x1cc70(%rip),%rdx        # ffffffff802212b9 <caml_absf_mask+0x109>
ffffffff80204649:	e9 62 ff ff ff       	jmpq   ffffffff802045b0 <caml_print_exception_backtrace+0x120>
ffffffff8020464e:	48 8b 0d 93 3e 04 00 	mov    0x43e93(%rip),%rcx        # ffffffff802484e8 <stderr>
ffffffff80204655:	ba 3f 00 00 00       	mov    $0x3f,%edx
ffffffff8020465a:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020465f:	48 8d 3d 82 cb 01 00 	lea    0x1cb82(%rip),%rdi        # ffffffff802211e8 <caml_absf_mask+0x38>
ffffffff80204666:	e8 41 ba ff ff       	callq  ffffffff802000ac <fwrite>
ffffffff8020466b:	eb 8a                	jmp    ffffffff802045f7 <caml_print_exception_backtrace+0x167>
ffffffff8020466d:	e8 2e ba ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80204672:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80204679:	00 00 00 00 
ffffffff8020467d:	0f 1f 00             	nopl   (%rax)

ffffffff80204680 <caml_get_exception_raw_backtrace>:
ffffffff80204680:	41 56                	push   %r14
ffffffff80204682:	41 55                	push   %r13
ffffffff80204684:	41 54                	push   %r12
ffffffff80204686:	55                   	push   %rbp
ffffffff80204687:	53                   	push   %rbx
ffffffff80204688:	48 81 ec 60 20 00 00 	sub    $0x2060,%rsp
ffffffff8020468f:	48 8b 1d e2 f9 03 00 	mov    0x3f9e2(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff80204696:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020469d:	00 00 
ffffffff8020469f:	48 89 84 24 58 20 00 	mov    %rax,0x2058(%rsp)
ffffffff802046a6:	00 
ffffffff802046a7:	31 c0                	xor    %eax,%eax
ffffffff802046a9:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff802046ae:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
ffffffff802046b5:	00 00 
ffffffff802046b7:	48 89 05 ba f9 03 00 	mov    %rax,0x3f9ba(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802046be:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff802046c3:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff802046c8:	8b 05 46 09 03 00    	mov    0x30946(%rip),%eax        # ffffffff80235014 <caml_backtrace_active>
ffffffff802046ce:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff802046d3:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff802046da:	00 00 
ffffffff802046dc:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff802046e3:	00 00 
ffffffff802046e5:	85 c0                	test   %eax,%eax
ffffffff802046e7:	74 18                	je     ffffffff80204701 <caml_get_exception_raw_backtrace+0x81>
ffffffff802046e9:	48 8b 35 18 09 03 00 	mov    0x30918(%rip),%rsi        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff802046f0:	48 85 f6             	test   %rsi,%rsi
ffffffff802046f3:	74 0c                	je     ffffffff80204701 <caml_get_exception_raw_backtrace+0x81>
ffffffff802046f5:	4c 63 2d 14 09 03 00 	movslq 0x30914(%rip),%r13        # ffffffff80235010 <caml_backtrace_pos>
ffffffff802046fc:	45 85 ed             	test   %r13d,%r13d
ffffffff802046ff:	75 37                	jne    ffffffff80204738 <caml_get_exception_raw_backtrace+0xb8>
ffffffff80204701:	31 f6                	xor    %esi,%esi
ffffffff80204703:	31 ff                	xor    %edi,%edi
ffffffff80204705:	e8 c6 43 01 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff8020470a:	48 89 1d 67 f9 03 00 	mov    %rbx,0x3f967(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204711:	48 8b bc 24 58 20 00 	mov    0x2058(%rsp),%rdi
ffffffff80204718:	00 
ffffffff80204719:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
ffffffff80204720:	00 00 
ffffffff80204722:	75 7b                	jne    ffffffff8020479f <caml_get_exception_raw_backtrace+0x11f>
ffffffff80204724:	48 81 c4 60 20 00 00 	add    $0x2060,%rsp
ffffffff8020472b:	5b                   	pop    %rbx
ffffffff8020472c:	5d                   	pop    %rbp
ffffffff8020472d:	41 5c                	pop    %r12
ffffffff8020472f:	41 5d                	pop    %r13
ffffffff80204731:	41 5e                	pop    %r14
ffffffff80204733:	c3                   	retq   
ffffffff80204734:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80204738:	41 81 fd 00 04 00 00 	cmp    $0x400,%r13d
ffffffff8020473f:	41 be 00 04 00 00    	mov    $0x400,%r14d
ffffffff80204745:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
ffffffff8020474a:	4d 0f 4e f5          	cmovle %r13,%r14
ffffffff8020474e:	4c 89 e7             	mov    %r12,%rdi
ffffffff80204751:	4a 8d 2c f5 00 00 00 	lea    0x0(,%r14,8),%rbp
ffffffff80204758:	00 
ffffffff80204759:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020475c:	e8 42 b9 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80204761:	31 f6                	xor    %esi,%esi
ffffffff80204763:	4c 89 f7             	mov    %r14,%rdi
ffffffff80204766:	e8 65 43 01 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff8020476b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80204770:	45 85 ed             	test   %r13d,%r13d
ffffffff80204773:	7e 95                	jle    ffffffff8020470a <caml_get_exception_raw_backtrace+0x8a>
ffffffff80204775:	31 d2                	xor    %edx,%edx
ffffffff80204777:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020477e:	00 00 
ffffffff80204780:	49 8b 0c 14          	mov    (%r12,%rdx,1),%rcx
ffffffff80204784:	48 83 c9 01          	or     $0x1,%rcx
ffffffff80204788:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
ffffffff8020478c:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80204790:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80204795:	48 39 d5             	cmp    %rdx,%rbp
ffffffff80204798:	75 e6                	jne    ffffffff80204780 <caml_get_exception_raw_backtrace+0x100>
ffffffff8020479a:	e9 6b ff ff ff       	jmpq   ffffffff8020470a <caml_get_exception_raw_backtrace+0x8a>
ffffffff8020479f:	e8 fc b8 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802047a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802047ab:	00 00 00 00 
ffffffff802047af:	90                   	nop

ffffffff802047b0 <caml_restore_raw_backtrace>:
ffffffff802047b0:	55                   	push   %rbp
ffffffff802047b1:	53                   	push   %rbx
ffffffff802047b2:	48 89 f3             	mov    %rsi,%rbx
ffffffff802047b5:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802047b9:	48 89 3d 08 74 02 00 	mov    %rdi,0x27408(%rip)        # ffffffff8022bbc8 <caml_backtrace_last_exn>
ffffffff802047c0:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
ffffffff802047c4:	48 89 c5             	mov    %rax,%rbp
ffffffff802047c7:	48 c1 ed 0a          	shr    $0xa,%rbp
ffffffff802047cb:	48 3d ff 03 10 00    	cmp    $0x1003ff,%rax
ffffffff802047d1:	77 65                	ja     ffffffff80204838 <caml_restore_raw_backtrace+0x88>
ffffffff802047d3:	48 85 ed             	test   %rbp,%rbp
ffffffff802047d6:	74 78                	je     ffffffff80204850 <caml_restore_raw_backtrace+0xa0>
ffffffff802047d8:	48 83 3d 28 08 03 00 	cmpq   $0x0,0x30828(%rip)        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff802047df:	00 
ffffffff802047e0:	0f 84 8f 00 00 00    	je     ffffffff80204875 <caml_restore_raw_backtrace+0xc5>
ffffffff802047e6:	89 2d 24 08 03 00    	mov    %ebp,0x30824(%rip)        # ffffffff80235010 <caml_backtrace_pos>
ffffffff802047ec:	48 8b 0d 15 08 03 00 	mov    0x30815(%rip),%rcx        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff802047f3:	31 c0                	xor    %eax,%eax
ffffffff802047f5:	eb 10                	jmp    ffffffff80204807 <caml_restore_raw_backtrace+0x57>
ffffffff802047f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802047fe:	00 00 
ffffffff80204800:	48 8b 0d 01 08 03 00 	mov    0x30801(%rip),%rcx        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff80204807:	48 8b 13             	mov    (%rbx),%rdx
ffffffff8020480a:	48 83 c3 08          	add    $0x8,%rbx
ffffffff8020480e:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
ffffffff80204812:	48 89 14 c1          	mov    %rdx,(%rcx,%rax,8)
ffffffff80204816:	48 63 15 f3 07 03 00 	movslq 0x307f3(%rip),%rdx        # ffffffff80235010 <caml_backtrace_pos>
ffffffff8020481d:	48 83 c0 01          	add    $0x1,%rax
ffffffff80204821:	48 39 c2             	cmp    %rax,%rdx
ffffffff80204824:	7f da                	jg     ffffffff80204800 <caml_restore_raw_backtrace+0x50>
ffffffff80204826:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020482a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020482f:	5b                   	pop    %rbx
ffffffff80204830:	5d                   	pop    %rbp
ffffffff80204831:	c3                   	retq   
ffffffff80204832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80204838:	48 8b 0d c9 07 03 00 	mov    0x307c9(%rip),%rcx        # ffffffff80235008 <caml_backtrace_buffer>
ffffffff8020483f:	48 85 c9             	test   %rcx,%rcx
ffffffff80204842:	74 2c                	je     ffffffff80204870 <caml_restore_raw_backtrace+0xc0>
ffffffff80204844:	c7 05 c2 07 03 00 00 	movl   $0x400,0x307c2(%rip)        # ffffffff80235010 <caml_backtrace_pos>
ffffffff8020484b:	04 00 00 
ffffffff8020484e:	eb a3                	jmp    ffffffff802047f3 <caml_restore_raw_backtrace+0x43>
ffffffff80204850:	c7 05 b6 07 03 00 00 	movl   $0x0,0x307b6(%rip)        # ffffffff80235010 <caml_backtrace_pos>
ffffffff80204857:	00 00 00 
ffffffff8020485a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020485e:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80204863:	5b                   	pop    %rbx
ffffffff80204864:	5d                   	pop    %rbp
ffffffff80204865:	c3                   	retq   
ffffffff80204866:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020486d:	00 00 00 
ffffffff80204870:	bd 00 04 00 00       	mov    $0x400,%ebp
ffffffff80204875:	e8 06 f7 ff ff       	callq  ffffffff80203f80 <caml_alloc_backtrace_buffer>
ffffffff8020487a:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8020487d:	0f 85 63 ff ff ff    	jne    ffffffff802047e6 <caml_restore_raw_backtrace+0x36>
ffffffff80204883:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80204887:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020488c:	5b                   	pop    %rbx
ffffffff8020488d:	5d                   	pop    %rbp
ffffffff8020488e:	c3                   	retq   
ffffffff8020488f:	90                   	nop

ffffffff80204890 <caml_convert_raw_backtrace_slot>:
ffffffff80204890:	53                   	push   %rbx
ffffffff80204891:	48 89 fb             	mov    %rdi,%rbx
ffffffff80204894:	e8 27 fa ff ff       	callq  ffffffff802042c0 <caml_debug_info_available>
ffffffff80204899:	85 c0                	test   %eax,%eax
ffffffff8020489b:	74 0d                	je     ffffffff802048aa <caml_convert_raw_backtrace_slot+0x1a>
ffffffff8020489d:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
ffffffff802048a1:	48 89 df             	mov    %rbx,%rdi
ffffffff802048a4:	5b                   	pop    %rbx
ffffffff802048a5:	e9 26 fa ff ff       	jmpq   ffffffff802042d0 <caml_convert_debuginfo>
ffffffff802048aa:	48 8d 3d a7 c9 01 00 	lea    0x1c9a7(%rip),%rdi        # ffffffff80221258 <caml_absf_mask+0xa8>
ffffffff802048b1:	e8 8a 2b 00 00       	callq  ffffffff80207440 <caml_failwith>
ffffffff802048b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802048bd:	00 00 00 

ffffffff802048c0 <caml_convert_raw_backtrace>:
ffffffff802048c0:	41 55                	push   %r13
ffffffff802048c2:	41 54                	push   %r12
ffffffff802048c4:	55                   	push   %rbp
ffffffff802048c5:	53                   	push   %rbx
ffffffff802048c6:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff802048cd:	48 8b 1d a4 f7 03 00 	mov    0x3f7a4(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff802048d4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff802048d9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802048e0:	00 00 
ffffffff802048e2:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff802048e9:	00 
ffffffff802048ea:	31 c0                	xor    %eax,%eax
ffffffff802048ec:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff802048f1:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff802048f6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff802048fb:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80204900:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff80204905:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff8020490a:	48 89 05 67 f7 03 00 	mov    %rax,0x3f767(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204911:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff80204916:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8020491d:	00 00 
ffffffff8020491f:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff80204926:	00 00 
ffffffff80204928:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020492f:	00 00 
ffffffff80204931:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff80204938:	00 00 
ffffffff8020493a:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff80204941:	00 00 
ffffffff80204943:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff80204948:	e8 73 f9 ff ff       	callq  ffffffff802042c0 <caml_debug_info_available>
ffffffff8020494d:	85 c0                	test   %eax,%eax
ffffffff8020494f:	0f 84 0b 01 00 00    	je     ffffffff80204a60 <caml_convert_raw_backtrace+0x1a0>
ffffffff80204955:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8020495a:	31 ed                	xor    %ebp,%ebp
ffffffff8020495c:	45 31 e4             	xor    %r12d,%r12d
ffffffff8020495f:	48 8b 7a f8          	mov    -0x8(%rdx),%rdi
ffffffff80204963:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff80204967:	74 49                	je     ffffffff802049b2 <caml_convert_raw_backtrace+0xf2>
ffffffff80204969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80204970:	4a 8b 3c e2          	mov    (%rdx,%r12,8),%rdi
ffffffff80204974:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
ffffffff80204978:	e8 53 f8 ff ff       	callq  ffffffff802041d0 <caml_debuginfo_extract>
ffffffff8020497d:	48 89 c7             	mov    %rax,%rdi
ffffffff80204980:	48 85 c0             	test   %rax,%rax
ffffffff80204983:	74 14                	je     ffffffff80204999 <caml_convert_raw_backtrace+0xd9>
ffffffff80204985:	0f 1f 00             	nopl   (%rax)
ffffffff80204988:	e8 73 f8 ff ff       	callq  ffffffff80204200 <caml_debuginfo_next>
ffffffff8020498d:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80204991:	48 89 c7             	mov    %rax,%rdi
ffffffff80204994:	48 85 c0             	test   %rax,%rax
ffffffff80204997:	75 ef                	jne    ffffffff80204988 <caml_convert_raw_backtrace+0xc8>
ffffffff80204999:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8020499e:	49 83 c4 01          	add    $0x1,%r12
ffffffff802049a2:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff802049a6:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802049aa:	4c 39 e0             	cmp    %r12,%rax
ffffffff802049ad:	77 c1                	ja     ffffffff80204970 <caml_convert_raw_backtrace+0xb0>
ffffffff802049af:	48 89 ef             	mov    %rbp,%rdi
ffffffff802049b2:	31 f6                	xor    %esi,%esi
ffffffff802049b4:	e8 17 41 01 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff802049b9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff802049be:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff802049c3:	48 8b 4a f8          	mov    -0x8(%rdx),%rcx
ffffffff802049c7:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff802049cb:	74 6b                	je     ffffffff80204a38 <caml_convert_raw_backtrace+0x178>
ffffffff802049cd:	45 31 e4             	xor    %r12d,%r12d
ffffffff802049d0:	45 31 ed             	xor    %r13d,%r13d
ffffffff802049d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802049d8:	4a 8b 3c ea          	mov    (%rdx,%r13,8),%rdi
ffffffff802049dc:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
ffffffff802049e0:	e8 eb f7 ff ff       	callq  ffffffff802041d0 <caml_debuginfo_extract>
ffffffff802049e5:	48 89 c5             	mov    %rax,%rbp
ffffffff802049e8:	48 85 c0             	test   %rax,%rax
ffffffff802049eb:	74 30                	je     ffffffff80204a1d <caml_convert_raw_backtrace+0x15d>
ffffffff802049ed:	0f 1f 00             	nopl   (%rax)
ffffffff802049f0:	48 89 ef             	mov    %rbp,%rdi
ffffffff802049f3:	e8 d8 f8 ff ff       	callq  ffffffff802042d0 <caml_convert_debuginfo>
ffffffff802049f8:	48 89 c6             	mov    %rax,%rsi
ffffffff802049fb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80204a00:	4a 8d 3c e0          	lea    (%rax,%r12,8),%rdi
ffffffff80204a04:	49 83 c4 01          	add    $0x1,%r12
ffffffff80204a08:	e8 53 bc 00 00       	callq  ffffffff80210660 <caml_modify>
ffffffff80204a0d:	48 89 ef             	mov    %rbp,%rdi
ffffffff80204a10:	e8 eb f7 ff ff       	callq  ffffffff80204200 <caml_debuginfo_next>
ffffffff80204a15:	48 89 c5             	mov    %rax,%rbp
ffffffff80204a18:	48 85 c0             	test   %rax,%rax
ffffffff80204a1b:	75 d3                	jne    ffffffff802049f0 <caml_convert_raw_backtrace+0x130>
ffffffff80204a1d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80204a22:	49 83 c5 01          	add    $0x1,%r13
ffffffff80204a26:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff80204a2a:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80204a2e:	4c 39 e8             	cmp    %r13,%rax
ffffffff80204a31:	77 a5                	ja     ffffffff802049d8 <caml_convert_raw_backtrace+0x118>
ffffffff80204a33:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80204a38:	48 89 1d 39 f6 03 00 	mov    %rbx,0x3f639(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204a3f:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
ffffffff80204a46:	00 
ffffffff80204a47:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff80204a4e:	00 00 
ffffffff80204a50:	75 1a                	jne    ffffffff80204a6c <caml_convert_raw_backtrace+0x1ac>
ffffffff80204a52:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
ffffffff80204a59:	5b                   	pop    %rbx
ffffffff80204a5a:	5d                   	pop    %rbp
ffffffff80204a5b:	41 5c                	pop    %r12
ffffffff80204a5d:	41 5d                	pop    %r13
ffffffff80204a5f:	c3                   	retq   
ffffffff80204a60:	48 8d 3d f1 c7 01 00 	lea    0x1c7f1(%rip),%rdi        # ffffffff80221258 <caml_absf_mask+0xa8>
ffffffff80204a67:	e8 d4 29 00 00       	callq  ffffffff80207440 <caml_failwith>
ffffffff80204a6c:	e8 2f b6 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80204a71:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80204a78:	00 00 00 00 
ffffffff80204a7c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80204a80 <caml_raw_backtrace_length>:
ffffffff80204a80:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80204a84:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80204a88:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80204a8d:	c3                   	retq   
ffffffff80204a8e:	66 90                	xchg   %ax,%ax

ffffffff80204a90 <caml_raw_backtrace_slot>:
ffffffff80204a90:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80204a94:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80204a98:	48 d1 fe             	sar    %rsi
ffffffff80204a9b:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80204a9f:	48 39 f0             	cmp    %rsi,%rax
ffffffff80204aa2:	76 16                	jbe    ffffffff80204aba <caml_raw_backtrace_slot+0x2a>
ffffffff80204aa4:	48 8b 3c f7          	mov    (%rdi,%rsi,8),%rdi
ffffffff80204aa8:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
ffffffff80204aac:	e8 1f f7 ff ff       	callq  ffffffff802041d0 <caml_debuginfo_extract>
ffffffff80204ab1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80204ab5:	48 83 c8 01          	or     $0x1,%rax
ffffffff80204ab9:	c3                   	retq   
ffffffff80204aba:	48 8d 3d b7 c7 01 00 	lea    0x1c7b7(%rip),%rdi        # ffffffff80221278 <caml_absf_mask+0xc8>
ffffffff80204ac1:	e8 ba 29 00 00       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff80204ac6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80204acd:	00 00 00 

ffffffff80204ad0 <caml_raw_backtrace_next_slot>:
ffffffff80204ad0:	55                   	push   %rbp
ffffffff80204ad1:	53                   	push   %rbx
ffffffff80204ad2:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff80204ad9:	48 8b 2d 98 f5 03 00 	mov    0x3f598(%rip),%rbp        # ffffffff80244078 <caml_local_roots>
ffffffff80204ae0:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80204ae5:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
ffffffff80204ae9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80204af0:	00 00 
ffffffff80204af2:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff80204af9:	00 
ffffffff80204afa:	31 c0                	xor    %eax,%eax
ffffffff80204afc:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80204b01:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
ffffffff80204b06:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff80204b0b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80204b10:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff80204b15:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff80204b1a:	48 89 05 57 f5 03 00 	mov    %rax,0x3f557(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204b21:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff80204b26:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff80204b2d:	00 00 
ffffffff80204b2f:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff80204b36:	00 00 
ffffffff80204b38:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80204b3f:	00 00 
ffffffff80204b41:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff80204b48:	00 00 
ffffffff80204b4a:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff80204b51:	00 00 
ffffffff80204b53:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff80204b58:	e8 a3 f6 ff ff       	callq  ffffffff80204200 <caml_debuginfo_next>
ffffffff80204b5d:	48 89 c3             	mov    %rax,%rbx
ffffffff80204b60:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80204b65:	48 85 db             	test   %rbx,%rbx
ffffffff80204b68:	74 1d                	je     ffffffff80204b87 <caml_raw_backtrace_next_slot+0xb7>
ffffffff80204b6a:	31 f6                	xor    %esi,%esi
ffffffff80204b6c:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80204b71:	48 83 cb 01          	or     $0x1,%rbx
ffffffff80204b75:	e8 56 3f 01 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff80204b7a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80204b7f:	48 89 18             	mov    %rbx,(%rax)
ffffffff80204b82:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80204b87:	48 89 2d ea f4 03 00 	mov    %rbp,0x3f4ea(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204b8e:	48 8b 94 24 a8 00 00 	mov    0xa8(%rsp),%rdx
ffffffff80204b95:	00 
ffffffff80204b96:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff80204b9d:	00 00 
ffffffff80204b9f:	75 0a                	jne    ffffffff80204bab <caml_raw_backtrace_next_slot+0xdb>
ffffffff80204ba1:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
ffffffff80204ba8:	5b                   	pop    %rbx
ffffffff80204ba9:	5d                   	pop    %rbp
ffffffff80204baa:	c3                   	retq   
ffffffff80204bab:	e8 f0 b4 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>

ffffffff80204bb0 <caml_get_exception_backtrace>:
ffffffff80204bb0:	41 54                	push   %r12
ffffffff80204bb2:	55                   	push   %rbp
ffffffff80204bb3:	53                   	push   %rbx
ffffffff80204bb4:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff80204bb8:	4c 8b 25 b9 f4 03 00 	mov    0x3f4b9(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff80204bbf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80204bc6:	00 00 
ffffffff80204bc8:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffff80204bcd:	31 c0                	xor    %eax,%eax
ffffffff80204bcf:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80204bd4:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
ffffffff80204bdb:	00 00 
ffffffff80204bdd:	48 89 05 94 f4 03 00 	mov    %rax,0x3f494(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204be4:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80204be9:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff80204bee:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80204bf3:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffff80204bf8:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff80204bfd:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
ffffffff80204c04:	00 00 
ffffffff80204c06:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80204c0d:	00 00 
ffffffff80204c0f:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
ffffffff80204c14:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff80204c1b:	00 00 
ffffffff80204c1d:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
ffffffff80204c24:	00 00 
ffffffff80204c26:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff80204c2b:	e8 90 f6 ff ff       	callq  ffffffff802042c0 <caml_debug_info_available>
ffffffff80204c30:	41 89 c0             	mov    %eax,%r8d
ffffffff80204c33:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80204c38:	45 85 c0             	test   %r8d,%r8d
ffffffff80204c3b:	75 2b                	jne    ffffffff80204c68 <caml_get_exception_backtrace+0xb8>
ffffffff80204c3d:	4c 89 25 34 f4 03 00 	mov    %r12,0x3f434(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204c44:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
ffffffff80204c49:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80204c50:	00 00 
ffffffff80204c52:	0f 85 ae 00 00 00    	jne    ffffffff80204d06 <caml_get_exception_backtrace+0x156>
ffffffff80204c58:	48 83 c4 70          	add    $0x70,%rsp
ffffffff80204c5c:	5b                   	pop    %rbx
ffffffff80204c5d:	5d                   	pop    %rbp
ffffffff80204c5e:	41 5c                	pop    %r12
ffffffff80204c60:	c3                   	retq   
ffffffff80204c61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80204c68:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80204c6d:	31 db                	xor    %ebx,%ebx
ffffffff80204c6f:	e8 0c fa ff ff       	callq  ffffffff80204680 <caml_get_exception_raw_backtrace>
ffffffff80204c74:	31 f6                	xor    %esi,%esi
ffffffff80204c76:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80204c7b:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
ffffffff80204c7f:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff80204c83:	e8 48 3e 01 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff80204c88:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff80204c8d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80204c92:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff80204c96:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80204c9a:	74 47                	je     ffffffff80204ce3 <caml_get_exception_backtrace+0x133>
ffffffff80204c9c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80204ca0:	48 8b 3c da          	mov    (%rdx,%rbx,8),%rdi
ffffffff80204ca4:	48 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%rbp
ffffffff80204cab:	00 
ffffffff80204cac:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80204cb0:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
ffffffff80204cb4:	e8 17 f5 ff ff       	callq  ffffffff802041d0 <caml_debuginfo_extract>
ffffffff80204cb9:	48 89 c7             	mov    %rax,%rdi
ffffffff80204cbc:	e8 0f f6 ff ff       	callq  ffffffff802042d0 <caml_convert_debuginfo>
ffffffff80204cc1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80204cc6:	48 89 c6             	mov    %rax,%rsi
ffffffff80204cc9:	48 01 ef             	add    %rbp,%rdi
ffffffff80204ccc:	e8 8f b9 00 00       	callq  ffffffff80210660 <caml_modify>
ffffffff80204cd1:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff80204cd6:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff80204cda:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80204cde:	48 39 d8             	cmp    %rbx,%rax
ffffffff80204ce1:	77 bd                	ja     ffffffff80204ca0 <caml_get_exception_backtrace+0xf0>
ffffffff80204ce3:	31 f6                	xor    %esi,%esi
ffffffff80204ce5:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80204cea:	e8 11 3f 01 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff80204cef:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80204cf4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80204cf9:	48 89 10             	mov    %rdx,(%rax)
ffffffff80204cfc:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80204d01:	e9 37 ff ff ff       	jmpq   ffffffff80204c3d <caml_get_exception_backtrace+0x8d>
ffffffff80204d06:	e8 95 b3 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80204d0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80204d10 <caml_callbackN_exn>:
ffffffff80204d10:	41 55                	push   %r13
ffffffff80204d12:	41 54                	push   %r12
ffffffff80204d14:	55                   	push   %rbp
ffffffff80204d15:	53                   	push   %rbx
ffffffff80204d16:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
ffffffff80204d1d:	4c 8b 25 54 f3 03 00 	mov    0x3f354(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff80204d24:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80204d29:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80204d30:	00 00 
ffffffff80204d32:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
ffffffff80204d39:	00 
ffffffff80204d3a:	31 c0                	xor    %eax,%eax
ffffffff80204d3c:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80204d41:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
ffffffff80204d46:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff80204d4b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80204d50:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff80204d55:	48 63 c6             	movslq %esi,%rax
ffffffff80204d58:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffff80204d5d:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff80204d62:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
ffffffff80204d69:	00 
ffffffff80204d6a:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
ffffffff80204d71:	00 
ffffffff80204d72:	48 89 05 ff f2 03 00 	mov    %rax,0x3f2ff(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204d79:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff80204d7e:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff80204d85:	00 00 
ffffffff80204d87:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff80204d8e:	00 00 
ffffffff80204d90:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff80204d97:	00 00 
ffffffff80204d99:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
ffffffff80204d9e:	48 c7 84 24 b0 00 00 	movq   $0x1,0xb0(%rsp)
ffffffff80204da5:	00 01 00 00 00 
ffffffff80204daa:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
ffffffff80204db1:	00 01 00 00 00 
ffffffff80204db6:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
ffffffff80204dbd:	00 
ffffffff80204dbe:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff80204dc3:	85 f6                	test   %esi,%esi
ffffffff80204dc5:	7e 79                	jle    ffffffff80204e40 <caml_callbackN_exn+0x130>
ffffffff80204dc7:	89 f5                	mov    %esi,%ebp
ffffffff80204dc9:	49 89 d5             	mov    %rdx,%r13
ffffffff80204dcc:	31 db                	xor    %ebx,%ebx
ffffffff80204dce:	eb 2a                	jmp    ffffffff80204dfa <caml_callbackN_exn+0xea>
ffffffff80204dd0:	4d 8b 44 0d 10       	mov    0x10(%r13,%rcx,1),%r8
ffffffff80204dd5:	49 8b 54 0d 08       	mov    0x8(%r13,%rcx,1),%rdx
ffffffff80204dda:	4c 89 c1             	mov    %r8,%rcx
ffffffff80204ddd:	e8 ce f0 ff ff       	callq  ffffffff80203eb0 <caml_callback3_exn>
ffffffff80204de2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80204de7:	48 89 c7             	mov    %rax,%rdi
ffffffff80204dea:	83 e0 03             	and    $0x3,%eax
ffffffff80204ded:	48 83 f8 02          	cmp    $0x2,%rax
ffffffff80204df1:	74 4d                	je     ffffffff80204e40 <caml_callbackN_exn+0x130>
ffffffff80204df3:	83 c3 03             	add    $0x3,%ebx
ffffffff80204df6:	39 eb                	cmp    %ebp,%ebx
ffffffff80204df8:	7d 46                	jge    ffffffff80204e40 <caml_callbackN_exn+0x130>
ffffffff80204dfa:	89 e8                	mov    %ebp,%eax
ffffffff80204dfc:	48 63 d3             	movslq %ebx,%rdx
ffffffff80204dff:	29 d8                	sub    %ebx,%eax
ffffffff80204e01:	49 8b 74 d5 00       	mov    0x0(%r13,%rdx,8),%rsi
ffffffff80204e06:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
ffffffff80204e0d:	00 
ffffffff80204e0e:	83 f8 01             	cmp    $0x1,%eax
ffffffff80204e11:	74 5d                	je     ffffffff80204e70 <caml_callbackN_exn+0x160>
ffffffff80204e13:	83 f8 02             	cmp    $0x2,%eax
ffffffff80204e16:	75 b8                	jne    ffffffff80204dd0 <caml_callbackN_exn+0xc0>
ffffffff80204e18:	49 8b 54 0d 08       	mov    0x8(%r13,%rcx,1),%rdx
ffffffff80204e1d:	e8 6a f0 ff ff       	callq  ffffffff80203e8c <caml_callback2_exn>
ffffffff80204e22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80204e27:	48 89 c7             	mov    %rax,%rdi
ffffffff80204e2a:	83 e0 03             	and    $0x3,%eax
ffffffff80204e2d:	48 83 f8 02          	cmp    $0x2,%rax
ffffffff80204e31:	74 0d                	je     ffffffff80204e40 <caml_callbackN_exn+0x130>
ffffffff80204e33:	83 c3 02             	add    $0x2,%ebx
ffffffff80204e36:	39 eb                	cmp    %ebp,%ebx
ffffffff80204e38:	7c c0                	jl     ffffffff80204dfa <caml_callbackN_exn+0xea>
ffffffff80204e3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80204e40:	4c 89 25 31 f2 03 00 	mov    %r12,0x3f231(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80204e47:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
ffffffff80204e4e:	00 
ffffffff80204e4f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80204e56:	00 00 
ffffffff80204e58:	75 34                	jne    ffffffff80204e8e <caml_callbackN_exn+0x17e>
ffffffff80204e5a:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
ffffffff80204e61:	48 89 f8             	mov    %rdi,%rax
ffffffff80204e64:	5b                   	pop    %rbx
ffffffff80204e65:	5d                   	pop    %rbp
ffffffff80204e66:	41 5c                	pop    %r12
ffffffff80204e68:	41 5d                	pop    %r13
ffffffff80204e6a:	c3                   	retq   
ffffffff80204e6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80204e70:	e8 fb ef ff ff       	callq  ffffffff80203e70 <caml_callback_exn>
ffffffff80204e75:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80204e7a:	48 89 c7             	mov    %rax,%rdi
ffffffff80204e7d:	83 e0 03             	and    $0x3,%eax
ffffffff80204e80:	48 83 f8 02          	cmp    $0x2,%rax
ffffffff80204e84:	74 ba                	je     ffffffff80204e40 <caml_callbackN_exn+0x130>
ffffffff80204e86:	83 c3 01             	add    $0x1,%ebx
ffffffff80204e89:	e9 68 ff ff ff       	jmpq   ffffffff80204df6 <caml_callbackN_exn+0xe6>
ffffffff80204e8e:	e8 0d b2 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80204e93:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80204e9a:	00 00 00 00 
ffffffff80204e9e:	66 90                	xchg   %ax,%ax

ffffffff80204ea0 <caml_callback>:
ffffffff80204ea0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80204ea4:	e8 c7 ef ff ff       	callq  ffffffff80203e70 <caml_callback_exn>
ffffffff80204ea9:	48 89 c2             	mov    %rax,%rdx
ffffffff80204eac:	83 e2 03             	and    $0x3,%edx
ffffffff80204eaf:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffff80204eb3:	74 05                	je     ffffffff80204eba <caml_callback+0x1a>
ffffffff80204eb5:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80204eb9:	c3                   	retq   
ffffffff80204eba:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffff80204ebe:	48 89 c7             	mov    %rax,%rdi
ffffffff80204ec1:	e8 0a 23 00 00       	callq  ffffffff802071d0 <caml_raise>
ffffffff80204ec6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80204ecd:	00 00 00 

ffffffff80204ed0 <caml_callback2>:
ffffffff80204ed0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80204ed4:	e8 b3 ef ff ff       	callq  ffffffff80203e8c <caml_callback2_exn>
ffffffff80204ed9:	48 89 c2             	mov    %rax,%rdx
ffffffff80204edc:	83 e2 03             	and    $0x3,%edx
ffffffff80204edf:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffff80204ee3:	74 05                	je     ffffffff80204eea <caml_callback2+0x1a>
ffffffff80204ee5:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80204ee9:	c3                   	retq   
ffffffff80204eea:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffff80204eee:	48 89 c7             	mov    %rax,%rdi
ffffffff80204ef1:	e8 da 22 00 00       	callq  ffffffff802071d0 <caml_raise>
ffffffff80204ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80204efd:	00 00 00 

ffffffff80204f00 <caml_callback3>:
ffffffff80204f00:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80204f04:	e8 a7 ef ff ff       	callq  ffffffff80203eb0 <caml_callback3_exn>
ffffffff80204f09:	48 89 c2             	mov    %rax,%rdx
ffffffff80204f0c:	83 e2 03             	and    $0x3,%edx
ffffffff80204f0f:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffff80204f13:	74 05                	je     ffffffff80204f1a <caml_callback3+0x1a>
ffffffff80204f15:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80204f19:	c3                   	retq   
ffffffff80204f1a:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffff80204f1e:	48 89 c7             	mov    %rax,%rdi
ffffffff80204f21:	e8 aa 22 00 00       	callq  ffffffff802071d0 <caml_raise>
ffffffff80204f26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80204f2d:	00 00 00 

ffffffff80204f30 <caml_callbackN>:
ffffffff80204f30:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80204f34:	e8 d7 fd ff ff       	callq  ffffffff80204d10 <caml_callbackN_exn>
ffffffff80204f39:	48 89 c2             	mov    %rax,%rdx
ffffffff80204f3c:	83 e2 03             	and    $0x3,%edx
ffffffff80204f3f:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffff80204f43:	74 05                	je     ffffffff80204f4a <caml_callbackN+0x1a>
ffffffff80204f45:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80204f49:	c3                   	retq   
ffffffff80204f4a:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffff80204f4e:	48 89 c7             	mov    %rax,%rdi
ffffffff80204f51:	e8 7a 22 00 00       	callq  ffffffff802071d0 <caml_raise>
ffffffff80204f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80204f5d:	00 00 00 

ffffffff80204f60 <caml_register_named_value>:
ffffffff80204f60:	41 57                	push   %r15
ffffffff80204f62:	41 56                	push   %r14
ffffffff80204f64:	41 55                	push   %r13
ffffffff80204f66:	49 89 fd             	mov    %rdi,%r13
ffffffff80204f69:	41 54                	push   %r12
ffffffff80204f6b:	49 89 f4             	mov    %rsi,%r12
ffffffff80204f6e:	55                   	push   %rbp
ffffffff80204f6f:	53                   	push   %rbx
ffffffff80204f70:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80204f74:	0f be 17             	movsbl (%rdi),%edx
ffffffff80204f77:	84 d2                	test   %dl,%dl
ffffffff80204f79:	0f 84 c9 00 00 00    	je     ffffffff80205048 <caml_register_named_value+0xe8>
ffffffff80204f7f:	48 89 f9             	mov    %rdi,%rcx
ffffffff80204f82:	31 c0                	xor    %eax,%eax
ffffffff80204f84:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80204f88:	8d 34 c0             	lea    (%rax,%rax,8),%esi
ffffffff80204f8b:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80204f8f:	8d 04 70             	lea    (%rax,%rsi,2),%eax
ffffffff80204f92:	01 d0                	add    %edx,%eax
ffffffff80204f94:	0f be 11             	movsbl (%rcx),%edx
ffffffff80204f97:	84 d2                	test   %dl,%dl
ffffffff80204f99:	75 ed                	jne    ffffffff80204f88 <caml_register_named_value+0x28>
ffffffff80204f9b:	89 c3                	mov    %eax,%ebx
ffffffff80204f9d:	48 69 db 4f ec c4 4e 	imul   $0x4ec4ec4f,%rbx,%rbx
ffffffff80204fa4:	48 c1 eb 22          	shr    $0x22,%rbx
ffffffff80204fa8:	8d 14 5b             	lea    (%rbx,%rbx,2),%edx
ffffffff80204fab:	8d 14 93             	lea    (%rbx,%rdx,4),%edx
ffffffff80204fae:	29 d0                	sub    %edx,%eax
ffffffff80204fb0:	89 c3                	mov    %eax,%ebx
ffffffff80204fb2:	4c 8d 35 67 00 03 00 	lea    0x30067(%rip),%r14        # ffffffff80235020 <named_value_table>
ffffffff80204fb9:	49 8b 2c de          	mov    (%r14,%rbx,8),%rbp
ffffffff80204fbd:	48 85 ed             	test   %rbp,%rbp
ffffffff80204fc0:	75 0f                	jne    ffffffff80204fd1 <caml_register_named_value+0x71>
ffffffff80204fc2:	eb 2c                	jmp    ffffffff80204ff0 <caml_register_named_value+0x90>
ffffffff80204fc4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80204fc8:	48 8b 6d 08          	mov    0x8(%rbp),%rbp
ffffffff80204fcc:	48 85 ed             	test   %rbp,%rbp
ffffffff80204fcf:	74 1f                	je     ffffffff80204ff0 <caml_register_named_value+0x90>
ffffffff80204fd1:	48 8d 75 10          	lea    0x10(%rbp),%rsi
ffffffff80204fd5:	4c 89 ef             	mov    %r13,%rdi
ffffffff80204fd8:	e8 c9 b0 ff ff       	callq  ffffffff802000a6 <strcmp>
ffffffff80204fdd:	85 c0                	test   %eax,%eax
ffffffff80204fdf:	75 e7                	jne    ffffffff80204fc8 <caml_register_named_value+0x68>
ffffffff80204fe1:	4c 89 e6             	mov    %r12,%rsi
ffffffff80204fe4:	48 89 ef             	mov    %rbp,%rdi
ffffffff80204fe7:	e8 24 3c 00 00       	callq  ffffffff80208c10 <caml_modify_generational_global_root>
ffffffff80204fec:	eb 41                	jmp    ffffffff8020502f <caml_register_named_value+0xcf>
ffffffff80204fee:	66 90                	xchg   %ax,%ax
ffffffff80204ff0:	4c 89 ef             	mov    %r13,%rdi
ffffffff80204ff3:	e8 b0 b0 ff ff       	callq  ffffffff802000a8 <strlen>
ffffffff80204ff8:	48 8d 78 18          	lea    0x18(%rax),%rdi
ffffffff80204ffc:	49 89 c7             	mov    %rax,%r15
ffffffff80204fff:	e8 2c b9 00 00       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff80205004:	49 8d 57 01          	lea    0x1(%r15),%rdx
ffffffff80205008:	4c 89 ee             	mov    %r13,%rsi
ffffffff8020500b:	48 8d 78 10          	lea    0x10(%rax),%rdi
ffffffff8020500f:	48 89 c5             	mov    %rax,%rbp
ffffffff80205012:	e8 8c b0 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80205017:	49 8b 04 de          	mov    (%r14,%rbx,8),%rax
ffffffff8020501b:	4c 89 65 00          	mov    %r12,0x0(%rbp)
ffffffff8020501f:	48 89 ef             	mov    %rbp,%rdi
ffffffff80205022:	49 89 2c de          	mov    %rbp,(%r14,%rbx,8)
ffffffff80205026:	48 89 45 08          	mov    %rax,0x8(%rbp)
ffffffff8020502a:	e8 61 3b 00 00       	callq  ffffffff80208b90 <caml_register_generational_global_root>
ffffffff8020502f:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80205033:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80205038:	5b                   	pop    %rbx
ffffffff80205039:	5d                   	pop    %rbp
ffffffff8020503a:	41 5c                	pop    %r12
ffffffff8020503c:	41 5d                	pop    %r13
ffffffff8020503e:	41 5e                	pop    %r14
ffffffff80205040:	41 5f                	pop    %r15
ffffffff80205042:	c3                   	retq   
ffffffff80205043:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80205048:	31 db                	xor    %ebx,%ebx
ffffffff8020504a:	e9 63 ff ff ff       	jmpq   ffffffff80204fb2 <caml_register_named_value+0x52>
ffffffff8020504f:	90                   	nop

ffffffff80205050 <caml_named_value>:
ffffffff80205050:	41 54                	push   %r12
ffffffff80205052:	53                   	push   %rbx
ffffffff80205053:	48 89 fb             	mov    %rdi,%rbx
ffffffff80205056:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020505a:	0f be 17             	movsbl (%rdi),%edx
ffffffff8020505d:	84 d2                	test   %dl,%dl
ffffffff8020505f:	74 7f                	je     ffffffff802050e0 <caml_named_value+0x90>
ffffffff80205061:	48 89 f9             	mov    %rdi,%rcx
ffffffff80205064:	31 c0                	xor    %eax,%eax
ffffffff80205066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020506d:	00 00 00 
ffffffff80205070:	8d 34 c0             	lea    (%rax,%rax,8),%esi
ffffffff80205073:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80205077:	8d 04 70             	lea    (%rax,%rsi,2),%eax
ffffffff8020507a:	01 d0                	add    %edx,%eax
ffffffff8020507c:	0f be 11             	movsbl (%rcx),%edx
ffffffff8020507f:	84 d2                	test   %dl,%dl
ffffffff80205081:	75 ed                	jne    ffffffff80205070 <caml_named_value+0x20>
ffffffff80205083:	89 c2                	mov    %eax,%edx
ffffffff80205085:	48 69 d2 4f ec c4 4e 	imul   $0x4ec4ec4f,%rdx,%rdx
ffffffff8020508c:	48 c1 ea 22          	shr    $0x22,%rdx
ffffffff80205090:	8d 0c 52             	lea    (%rdx,%rdx,2),%ecx
ffffffff80205093:	8d 14 8a             	lea    (%rdx,%rcx,4),%edx
ffffffff80205096:	29 d0                	sub    %edx,%eax
ffffffff80205098:	89 c2                	mov    %eax,%edx
ffffffff8020509a:	48 8d 05 7f ff 02 00 	lea    0x2ff7f(%rip),%rax        # ffffffff80235020 <named_value_table>
ffffffff802050a1:	4c 8b 24 d0          	mov    (%rax,%rdx,8),%r12
ffffffff802050a5:	4d 85 e4             	test   %r12,%r12
ffffffff802050a8:	75 10                	jne    ffffffff802050ba <caml_named_value+0x6a>
ffffffff802050aa:	eb 1f                	jmp    ffffffff802050cb <caml_named_value+0x7b>
ffffffff802050ac:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802050b0:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
ffffffff802050b5:	4d 85 e4             	test   %r12,%r12
ffffffff802050b8:	74 11                	je     ffffffff802050cb <caml_named_value+0x7b>
ffffffff802050ba:	49 8d 74 24 10       	lea    0x10(%r12),%rsi
ffffffff802050bf:	48 89 df             	mov    %rbx,%rdi
ffffffff802050c2:	e8 df af ff ff       	callq  ffffffff802000a6 <strcmp>
ffffffff802050c7:	85 c0                	test   %eax,%eax
ffffffff802050c9:	75 e5                	jne    ffffffff802050b0 <caml_named_value+0x60>
ffffffff802050cb:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802050cf:	4c 89 e0             	mov    %r12,%rax
ffffffff802050d2:	5b                   	pop    %rbx
ffffffff802050d3:	41 5c                	pop    %r12
ffffffff802050d5:	c3                   	retq   
ffffffff802050d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802050dd:	00 00 00 
ffffffff802050e0:	31 d2                	xor    %edx,%edx
ffffffff802050e2:	eb b6                	jmp    ffffffff8020509a <caml_named_value+0x4a>
ffffffff802050e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802050eb:	00 00 00 00 
ffffffff802050ef:	90                   	nop

ffffffff802050f0 <caml_iterate_named_values>:
ffffffff802050f0:	41 55                	push   %r13
ffffffff802050f2:	41 54                	push   %r12
ffffffff802050f4:	4c 8d 25 25 ff 02 00 	lea    0x2ff25(%rip),%r12        # ffffffff80235020 <named_value_table>
ffffffff802050fb:	55                   	push   %rbp
ffffffff802050fc:	4d 8d 6c 24 68       	lea    0x68(%r12),%r13
ffffffff80205101:	48 89 fd             	mov    %rdi,%rbp
ffffffff80205104:	53                   	push   %rbx
ffffffff80205105:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80205110:	49 8b 1c 24          	mov    (%r12),%rbx
ffffffff80205114:	48 85 db             	test   %rbx,%rbx
ffffffff80205117:	74 19                	je     ffffffff80205132 <caml_iterate_named_values+0x42>
ffffffff80205119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80205120:	48 8d 73 10          	lea    0x10(%rbx),%rsi
ffffffff80205124:	48 89 df             	mov    %rbx,%rdi
ffffffff80205127:	ff d5                	callq  *%rbp
ffffffff80205129:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff8020512d:	48 85 db             	test   %rbx,%rbx
ffffffff80205130:	75 ee                	jne    ffffffff80205120 <caml_iterate_named_values+0x30>
ffffffff80205132:	49 83 c4 08          	add    $0x8,%r12
ffffffff80205136:	4d 39 ec             	cmp    %r13,%r12
ffffffff80205139:	75 d5                	jne    ffffffff80205110 <caml_iterate_named_values+0x20>
ffffffff8020513b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020513f:	5b                   	pop    %rbx
ffffffff80205140:	5d                   	pop    %rbp
ffffffff80205141:	41 5c                	pop    %r12
ffffffff80205143:	41 5d                	pop    %r13
ffffffff80205145:	c3                   	retq   
ffffffff80205146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020514d:	00 00 00 

ffffffff80205150 <compare_stack_overflow>:
ffffffff80205150:	53                   	push   %rbx
ffffffff80205151:	48 8d 35 a0 c1 01 00 	lea    0x1c1a0(%rip),%rsi        # ffffffff802212f8 <caml_absf_mask+0x148>
ffffffff80205158:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020515b:	31 c0                	xor    %eax,%eax
ffffffff8020515d:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80205162:	e8 89 d0 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80205167:	48 8b bb c0 00 00 00 	mov    0xc0(%rbx),%rdi
ffffffff8020516e:	48 39 df             	cmp    %rbx,%rdi
ffffffff80205171:	74 10                	je     ffffffff80205183 <compare_stack_overflow+0x33>
ffffffff80205173:	e8 d8 b7 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80205178:	48 c7 83 c0 00 00 00 	movq   $0x0,0xc0(%rbx)
ffffffff8020517f:	00 00 00 00 
ffffffff80205183:	e8 38 23 00 00       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff80205188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020518f:	00 

ffffffff80205190 <compare_val>:
ffffffff80205190:	41 57                	push   %r15
ffffffff80205192:	49 89 f7             	mov    %rsi,%r15
ffffffff80205195:	41 56                	push   %r14
ffffffff80205197:	49 89 fe             	mov    %rdi,%r14
ffffffff8020519a:	41 55                	push   %r13
ffffffff8020519c:	4c 8d 2d b1 c1 01 00 	lea    0x1c1b1(%rip),%r13        # ffffffff80221354 <caml_absf_mask+0x1a4>
ffffffff802051a3:	41 54                	push   %r12
ffffffff802051a5:	55                   	push   %rbp
ffffffff802051a6:	53                   	push   %rbx
ffffffff802051a7:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
ffffffff802051ae:	89 54 24 04          	mov    %edx,0x4(%rsp)
ffffffff802051b2:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
ffffffff802051b7:	4c 89 e5             	mov    %r12,%rbp
ffffffff802051ba:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802051c1:	00 00 
ffffffff802051c3:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
ffffffff802051ca:	00 
ffffffff802051cb:	31 c0                	xor    %eax,%eax
ffffffff802051cd:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
ffffffff802051d4:	00 
ffffffff802051d5:	4c 89 a4 24 d0 00 00 	mov    %r12,0xd0(%rsp)
ffffffff802051dc:	00 
ffffffff802051dd:	85 d2                	test   %edx,%edx
ffffffff802051df:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
ffffffff802051e6:	00 
ffffffff802051e7:	0f 95 44 24 03       	setne  0x3(%rsp)
ffffffff802051ec:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802051f0:	4d 39 fe             	cmp    %r15,%r14
ffffffff802051f3:	75 0b                	jne    ffffffff80205200 <compare_val+0x70>
ffffffff802051f5:	80 7c 24 03 00       	cmpb   $0x0,0x3(%rsp)
ffffffff802051fa:	0f 85 80 00 00 00    	jne    ffffffff80205280 <compare_val+0xf0>
ffffffff80205200:	41 f6 c6 01          	test   $0x1,%r14b
ffffffff80205204:	0f 84 46 01 00 00    	je     ffffffff80205350 <compare_val+0x1c0>
ffffffff8020520a:	4d 39 fe             	cmp    %r15,%r14
ffffffff8020520d:	74 71                	je     ffffffff80205280 <compare_val+0xf0>
ffffffff8020520f:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80205213:	0f 85 85 01 00 00    	jne    ffffffff8020539e <compare_val+0x20e>
ffffffff80205219:	4c 89 ff             	mov    %r15,%rdi
ffffffff8020521c:	e8 ff b1 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80205221:	a8 07                	test   $0x7,%al
ffffffff80205223:	0f 84 df 00 00 00    	je     ffffffff80205308 <compare_val+0x178>
ffffffff80205229:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff8020522e:	3c fa                	cmp    $0xfa,%al
ffffffff80205230:	0f 84 e2 01 00 00    	je     ffffffff80205418 <compare_val+0x288>
ffffffff80205236:	3c ff                	cmp    $0xff,%al
ffffffff80205238:	0f 85 ca 00 00 00    	jne    ffffffff80205308 <compare_val+0x178>
ffffffff8020523e:	49 8b 07             	mov    (%r15),%rax
ffffffff80205241:	48 8b 40 30          	mov    0x30(%rax),%rax
ffffffff80205245:	48 85 c0             	test   %rax,%rax
ffffffff80205248:	0f 84 ba 00 00 00    	je     ffffffff80205308 <compare_val+0x178>
ffffffff8020524e:	c7 05 30 fe 02 00 00 	movl   $0x0,0x2fe30(%rip)        # ffffffff80235088 <caml_compare_unordered>
ffffffff80205255:	00 00 00 
ffffffff80205258:	4c 89 fe             	mov    %r15,%rsi
ffffffff8020525b:	4c 89 f7             	mov    %r14,%rdi
ffffffff8020525e:	ff d0                	callq  *%rax
ffffffff80205260:	8b 0d 22 fe 02 00    	mov    0x2fe22(%rip),%ecx        # ffffffff80235088 <caml_compare_unordered>
ffffffff80205266:	85 c9                	test   %ecx,%ecx
ffffffff80205268:	74 0c                	je     ffffffff80205276 <compare_val+0xe6>
ffffffff8020526a:	8b 54 24 04          	mov    0x4(%rsp),%edx
ffffffff8020526e:	85 d2                	test   %edx,%edx
ffffffff80205270:	0f 84 aa 03 00 00    	je     ffffffff80205620 <compare_val+0x490>
ffffffff80205276:	85 c0                	test   %eax,%eax
ffffffff80205278:	0f 85 c2 03 00 00    	jne    ffffffff80205640 <compare_val+0x4b0>
ffffffff8020527e:	66 90                	xchg   %ax,%ax
ffffffff80205280:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff80205287:	00 
ffffffff80205288:	48 39 fd             	cmp    %rdi,%rbp
ffffffff8020528b:	0f 84 07 02 00 00    	je     ffffffff80205498 <compare_val+0x308>
ffffffff80205291:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff80205295:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80205299:	48 89 55 00          	mov    %rdx,0x0(%rbp)
ffffffff8020529d:	4c 8b 30             	mov    (%rax),%r14
ffffffff802052a0:	48 8b 45 08          	mov    0x8(%rbp),%rax
ffffffff802052a4:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff802052a8:	48 89 55 08          	mov    %rdx,0x8(%rbp)
ffffffff802052ac:	4c 8b 38             	mov    (%rax),%r15
ffffffff802052af:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
ffffffff802052b3:	48 83 6d 10 01       	subq   $0x1,0x10(%rbp)
ffffffff802052b8:	48 0f 44 ea          	cmove  %rdx,%rbp
ffffffff802052bc:	e9 2f ff ff ff       	jmpq   ffffffff802051f0 <compare_val+0x60>
ffffffff802052c1:	f2 41 0f 10 0e       	movsd  (%r14),%xmm1
ffffffff802052c6:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
ffffffff802052cb:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff802052cf:	77 37                	ja     ffffffff80205308 <compare_val+0x178>
ffffffff802052d1:	66 0f 2f c8          	comisd %xmm0,%xmm1
ffffffff802052d5:	0f 87 73 03 00 00    	ja     ffffffff8020564e <compare_val+0x4be>
ffffffff802052db:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
ffffffff802052df:	7a 02                	jp     ffffffff802052e3 <compare_val+0x153>
ffffffff802052e1:	74 9d                	je     ffffffff80205280 <compare_val+0xf0>
ffffffff802052e3:	8b 7c 24 04          	mov    0x4(%rsp),%edi
ffffffff802052e7:	85 ff                	test   %edi,%edi
ffffffff802052e9:	0f 84 31 03 00 00    	je     ffffffff80205620 <compare_val+0x490>
ffffffff802052ef:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
ffffffff802052f3:	0f 8b 4f 03 00 00    	jnp    ffffffff80205648 <compare_val+0x4b8>
ffffffff802052f9:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
ffffffff802052fd:	7a 81                	jp     ffffffff80205280 <compare_val+0xf0>
ffffffff802052ff:	0f 85 7b ff ff ff    	jne    ffffffff80205280 <compare_val+0xf0>
ffffffff80205305:	0f 1f 00             	nopl   (%rax)
ffffffff80205308:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff8020530f:	00 
ffffffff80205310:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff80205317:	4c 39 e7             	cmp    %r12,%rdi
ffffffff8020531a:	74 05                	je     ffffffff80205321 <compare_val+0x191>
ffffffff8020531c:	e8 2f b6 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80205321:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
ffffffff80205328:	00 
ffffffff80205329:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80205330:	00 00 
ffffffff80205332:	0f 85 c2 03 00 00    	jne    ffffffff802056fa <compare_val+0x56a>
ffffffff80205338:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
ffffffff8020533f:	48 89 d8             	mov    %rbx,%rax
ffffffff80205342:	5b                   	pop    %rbx
ffffffff80205343:	5d                   	pop    %rbp
ffffffff80205344:	41 5c                	pop    %r12
ffffffff80205346:	41 5d                	pop    %r13
ffffffff80205348:	41 5e                	pop    %r14
ffffffff8020534a:	41 5f                	pop    %r15
ffffffff8020534c:	c3                   	retq   
ffffffff8020534d:	0f 1f 00             	nopl   (%rax)
ffffffff80205350:	4c 89 fb             	mov    %r15,%rbx
ffffffff80205353:	4c 89 f7             	mov    %r14,%rdi
ffffffff80205356:	83 e3 01             	and    $0x1,%ebx
ffffffff80205359:	74 2d                	je     ffffffff80205388 <compare_val+0x1f8>
ffffffff8020535b:	e8 c0 b0 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80205360:	a8 07                	test   $0x7,%al
ffffffff80205362:	74 15                	je     ffffffff80205379 <compare_val+0x1e9>
ffffffff80205364:	41 0f b6 46 f8       	movzbl -0x8(%r14),%eax
ffffffff80205369:	3c fa                	cmp    $0xfa,%al
ffffffff8020536b:	0f 84 c7 00 00 00    	je     ffffffff80205438 <compare_val+0x2a8>
ffffffff80205371:	3c ff                	cmp    $0xff,%al
ffffffff80205373:	0f 84 a7 00 00 00    	je     ffffffff80205420 <compare_val+0x290>
ffffffff80205379:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff80205380:	00 
ffffffff80205381:	eb 94                	jmp    ffffffff80205317 <compare_val+0x187>
ffffffff80205383:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80205388:	e8 93 b0 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020538d:	a8 07                	test   $0x7,%al
ffffffff8020538f:	0f 85 ab 00 00 00    	jne    ffffffff80205440 <compare_val+0x2b0>
ffffffff80205395:	4d 39 fe             	cmp    %r15,%r14
ffffffff80205398:	0f 84 e2 fe ff ff    	je     ffffffff80205280 <compare_val+0xf0>
ffffffff8020539e:	4d 89 f1             	mov    %r14,%r9
ffffffff802053a1:	4d 89 f8             	mov    %r15,%r8
ffffffff802053a4:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff802053ab:	00 
ffffffff802053ac:	49 d1 f9             	sar    %r9
ffffffff802053af:	49 d1 f8             	sar    %r8
ffffffff802053b2:	4c 89 cb             	mov    %r9,%rbx
ffffffff802053b5:	4c 29 c3             	sub    %r8,%rbx
ffffffff802053b8:	e9 5a ff ff ff       	jmpq   ffffffff80205317 <compare_val+0x187>
ffffffff802053bd:	48 8b 1f             	mov    (%rdi),%rbx
ffffffff802053c0:	48 8b 06             	mov    (%rsi),%rax
ffffffff802053c3:	48 c1 eb 0a          	shr    $0xa,%rbx
ffffffff802053c7:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802053cb:	48 39 c3             	cmp    %rax,%rbx
ffffffff802053ce:	0f 85 12 02 00 00    	jne    ffffffff802055e6 <compare_val+0x456>
ffffffff802053d4:	48 85 db             	test   %rbx,%rbx
ffffffff802053d7:	0f 84 a3 fe ff ff    	je     ffffffff80205280 <compare_val+0xf0>
ffffffff802053dd:	48 83 fb 01          	cmp    $0x1,%rbx
ffffffff802053e1:	76 2d                	jbe    ffffffff80205410 <compare_val+0x280>
ffffffff802053e3:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
ffffffff802053ea:	00 
ffffffff802053eb:	48 83 c5 18          	add    $0x18,%rbp
ffffffff802053ef:	48 39 c5             	cmp    %rax,%rbp
ffffffff802053f2:	0f 83 8e 02 00 00    	jae    ffffffff80205686 <compare_val+0x4f6>
ffffffff802053f8:	49 8d 46 08          	lea    0x8(%r14),%rax
ffffffff802053fc:	48 8d 53 ff          	lea    -0x1(%rbx),%rdx
ffffffff80205400:	48 89 45 00          	mov    %rax,0x0(%rbp)
ffffffff80205404:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff80205408:	48 89 45 08          	mov    %rax,0x8(%rbp)
ffffffff8020540c:	48 89 55 10          	mov    %rdx,0x10(%rbp)
ffffffff80205410:	4d 8b 36             	mov    (%r14),%r14
ffffffff80205413:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80205418:	4d 8b 3f             	mov    (%r15),%r15
ffffffff8020541b:	e9 d0 fd ff ff       	jmpq   ffffffff802051f0 <compare_val+0x60>
ffffffff80205420:	49 8b 06             	mov    (%r14),%rax
ffffffff80205423:	48 8b 40 30          	mov    0x30(%rax),%rax
ffffffff80205427:	48 85 c0             	test   %rax,%rax
ffffffff8020542a:	0f 85 1e fe ff ff    	jne    ffffffff8020524e <compare_val+0xbe>
ffffffff80205430:	e9 44 ff ff ff       	jmpq   ffffffff80205379 <compare_val+0x1e9>
ffffffff80205435:	0f 1f 00             	nopl   (%rax)
ffffffff80205438:	4d 8b 36             	mov    (%r14),%r14
ffffffff8020543b:	e9 b0 fd ff ff       	jmpq   ffffffff802051f0 <compare_val+0x60>
ffffffff80205440:	4c 89 ff             	mov    %r15,%rdi
ffffffff80205443:	e8 d8 af 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80205448:	a8 07                	test   $0x7,%al
ffffffff8020544a:	0f 84 45 ff ff ff    	je     ffffffff80205395 <compare_val+0x205>
ffffffff80205450:	45 0f b6 5e f8       	movzbl -0x8(%r14),%r11d
ffffffff80205455:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff8020545a:	49 8d 7e f8          	lea    -0x8(%r14),%rdi
ffffffff8020545e:	49 8d 77 f8          	lea    -0x8(%r15),%rsi
ffffffff80205462:	41 80 fb fa          	cmp    $0xfa,%r11b
ffffffff80205466:	74 d0                	je     ffffffff80205438 <compare_val+0x2a8>
ffffffff80205468:	3d fa 00 00 00       	cmp    $0xfa,%eax
ffffffff8020546d:	74 a9                	je     ffffffff80205418 <compare_val+0x288>
ffffffff8020546f:	41 39 c3             	cmp    %eax,%r11d
ffffffff80205472:	0f 85 fa 01 00 00    	jne    ffffffff80205672 <compare_val+0x4e2>
ffffffff80205478:	41 8d 43 09          	lea    0x9(%r11),%eax
ffffffff8020547c:	41 80 fb f7          	cmp    $0xf7,%r11b
ffffffff80205480:	0f 82 37 ff ff ff    	jb     ffffffff802053bd <compare_val+0x22d>
ffffffff80205486:	0f b6 c0             	movzbl %al,%eax
ffffffff80205489:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
ffffffff8020548e:	4c 01 e8             	add    %r13,%rax
ffffffff80205491:	ff e0                	jmpq   *%rax
ffffffff80205493:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80205498:	31 db                	xor    %ebx,%ebx
ffffffff8020549a:	e9 78 fe ff ff       	jmpq   ffffffff80205317 <compare_val+0x187>
ffffffff8020549f:	49 8b 16             	mov    (%r14),%rdx
ffffffff802054a2:	49 8b 37             	mov    (%r15),%rsi
ffffffff802054a5:	48 8b 42 10          	mov    0x10(%rdx),%rax
ffffffff802054a9:	48 3b 46 10          	cmp    0x10(%rsi),%rax
ffffffff802054ad:	0f 85 4c 02 00 00    	jne    ffffffff802056ff <compare_val+0x56f>
ffffffff802054b3:	48 85 c0             	test   %rax,%rax
ffffffff802054b6:	0f 85 92 fd ff ff    	jne    ffffffff8020524e <compare_val+0xbe>
ffffffff802054bc:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff802054c3:	00 
ffffffff802054c4:	4c 39 e7             	cmp    %r12,%rdi
ffffffff802054c7:	74 11                	je     ffffffff802054da <compare_val+0x34a>
ffffffff802054c9:	e8 82 b4 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802054ce:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
ffffffff802054d5:	00 00 00 00 00 
ffffffff802054da:	48 8d 3d 40 be 01 00 	lea    0x1be40(%rip),%rdi        # ffffffff80221321 <caml_absf_mask+0x171>
ffffffff802054e1:	e8 9a 1f 00 00       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff802054e6:	48 8b 1f             	mov    (%rdi),%rbx
ffffffff802054e9:	48 8b 06             	mov    (%rsi),%rax
ffffffff802054ec:	48 c1 eb 0a          	shr    $0xa,%rbx
ffffffff802054f0:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802054f4:	48 39 c3             	cmp    %rax,%rbx
ffffffff802054f7:	0f 85 e9 00 00 00    	jne    ffffffff802055e6 <compare_val+0x456>
ffffffff802054fd:	48 85 db             	test   %rbx,%rbx
ffffffff80205500:	0f 84 7a fd ff ff    	je     ffffffff80205280 <compare_val+0xf0>
ffffffff80205506:	4d 89 f8             	mov    %r15,%r8
ffffffff80205509:	49 8d 04 de          	lea    (%r14,%rbx,8),%rax
ffffffff8020550d:	4d 89 f1             	mov    %r14,%r9
ffffffff80205510:	4d 29 f0             	sub    %r14,%r8
ffffffff80205513:	eb 42                	jmp    ffffffff80205557 <compare_val+0x3c7>
ffffffff80205515:	0f 1f 00             	nopl   (%rax)
ffffffff80205518:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff8020551c:	0f 87 2c 01 00 00    	ja     ffffffff8020564e <compare_val+0x4be>
ffffffff80205522:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
ffffffff80205526:	7a 02                	jp     ffffffff8020552a <compare_val+0x39a>
ffffffff80205528:	74 20                	je     ffffffff8020554a <compare_val+0x3ba>
ffffffff8020552a:	8b 74 24 04          	mov    0x4(%rsp),%esi
ffffffff8020552e:	85 f6                	test   %esi,%esi
ffffffff80205530:	0f 84 ea 00 00 00    	je     ffffffff80205620 <compare_val+0x490>
ffffffff80205536:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
ffffffff8020553a:	0f 8b 20 01 00 00    	jnp    ffffffff80205660 <compare_val+0x4d0>
ffffffff80205540:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
ffffffff80205544:	0f 8b 1d 01 00 00    	jnp    ffffffff80205667 <compare_val+0x4d7>
ffffffff8020554a:	49 83 c1 08          	add    $0x8,%r9
ffffffff8020554e:	4c 39 c8             	cmp    %r9,%rax
ffffffff80205551:	0f 84 29 fd ff ff    	je     ffffffff80205280 <compare_val+0xf0>
ffffffff80205557:	f2 41 0f 10 01       	movsd  (%r9),%xmm0
ffffffff8020555c:	f2 43 0f 10 0c 08    	movsd  (%r8,%r9,1),%xmm1
ffffffff80205562:	66 0f 2f c8          	comisd %xmm0,%xmm1
ffffffff80205566:	76 b0                	jbe    ffffffff80205518 <compare_val+0x388>
ffffffff80205568:	e9 9b fd ff ff       	jmpq   ffffffff80205308 <compare_val+0x178>
ffffffff8020556d:	4d 39 fe             	cmp    %r15,%r14
ffffffff80205570:	0f 84 0a fd ff ff    	je     ffffffff80205280 <compare_val+0xf0>
ffffffff80205576:	4c 89 f7             	mov    %r14,%rdi
ffffffff80205579:	e8 32 f8 00 00       	callq  ffffffff80214db0 <caml_string_length>
ffffffff8020557e:	4c 89 ff             	mov    %r15,%rdi
ffffffff80205581:	48 89 c3             	mov    %rax,%rbx
ffffffff80205584:	e8 27 f8 00 00       	callq  ffffffff80214db0 <caml_string_length>
ffffffff80205589:	4c 89 fe             	mov    %r15,%rsi
ffffffff8020558c:	4c 89 f7             	mov    %r14,%rdi
ffffffff8020558f:	48 39 c3             	cmp    %rax,%rbx
ffffffff80205592:	48 89 c2             	mov    %rax,%rdx
ffffffff80205595:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020559a:	48 0f 46 d3          	cmovbe %rbx,%rdx
ffffffff8020559e:	e8 04 ab ff ff       	callq  ffffffff802000a7 <memcmp>
ffffffff802055a3:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff802055a8:	85 c0                	test   %eax,%eax
ffffffff802055aa:	0f 88 58 fd ff ff    	js     ffffffff80205308 <compare_val+0x178>
ffffffff802055b0:	0f 8f 98 00 00 00    	jg     ffffffff8020564e <compare_val+0x4be>
ffffffff802055b6:	4c 39 d3             	cmp    %r10,%rbx
ffffffff802055b9:	0f 84 c1 fc ff ff    	je     ffffffff80205280 <compare_val+0xf0>
ffffffff802055bf:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff802055c6:	00 
ffffffff802055c7:	4c 29 d3             	sub    %r10,%rbx
ffffffff802055ca:	e9 48 fd ff ff       	jmpq   ffffffff80205317 <compare_val+0x187>
ffffffff802055cf:	49 8b 5e 08          	mov    0x8(%r14),%rbx
ffffffff802055d3:	49 8b 47 08          	mov    0x8(%r15),%rax
ffffffff802055d7:	48 d1 fb             	sar    %rbx
ffffffff802055da:	48 d1 f8             	sar    %rax
ffffffff802055dd:	48 39 c3             	cmp    %rax,%rbx
ffffffff802055e0:	0f 84 9a fc ff ff    	je     ffffffff80205280 <compare_val+0xf0>
ffffffff802055e6:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff802055ed:	00 
ffffffff802055ee:	48 29 c3             	sub    %rax,%rbx
ffffffff802055f1:	e9 21 fd ff ff       	jmpq   ffffffff80205317 <compare_val+0x187>
ffffffff802055f6:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff802055fd:	00 
ffffffff802055fe:	4c 39 e7             	cmp    %r12,%rdi
ffffffff80205601:	74 11                	je     ffffffff80205614 <compare_val+0x484>
ffffffff80205603:	e8 48 b3 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80205608:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
ffffffff8020560f:	00 00 00 00 00 
ffffffff80205614:	48 8d 3d 1e bd 01 00 	lea    0x1bd1e(%rip),%rdi        # ffffffff80221339 <caml_absf_mask+0x189>
ffffffff8020561b:	e8 60 1e 00 00       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff80205620:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff80205627:	00 
ffffffff80205628:	48 bb 00 00 00 00 00 	movabs $0x8000000000000000,%rbx
ffffffff8020562f:	00 00 80 
ffffffff80205632:	e9 e0 fc ff ff       	jmpq   ffffffff80205317 <compare_val+0x187>
ffffffff80205637:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020563e:	00 00 
ffffffff80205640:	48 63 d8             	movslq %eax,%rbx
ffffffff80205643:	e9 31 fd ff ff       	jmpq   ffffffff80205379 <compare_val+0x1e9>
ffffffff80205648:	0f 85 ab fc ff ff    	jne    ffffffff802052f9 <compare_val+0x169>
ffffffff8020564e:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff80205655:	00 
ffffffff80205656:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff8020565b:	e9 b7 fc ff ff       	jmpq   ffffffff80205317 <compare_val+0x187>
ffffffff80205660:	74 ec                	je     ffffffff8020564e <compare_val+0x4be>
ffffffff80205662:	e9 d9 fe ff ff       	jmpq   ffffffff80205540 <compare_val+0x3b0>
ffffffff80205667:	0f 84 9b fc ff ff    	je     ffffffff80205308 <compare_val+0x178>
ffffffff8020566d:	e9 d8 fe ff ff       	jmpq   ffffffff8020554a <compare_val+0x3ba>
ffffffff80205672:	41 0f b6 db          	movzbl %r11b,%ebx
ffffffff80205676:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff8020567d:	00 
ffffffff8020567e:	48 29 c3             	sub    %rax,%rbx
ffffffff80205681:	e9 91 fc ff ff       	jmpq   ffffffff80205317 <compare_val+0x187>
ffffffff80205686:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff8020568d:	00 
ffffffff8020568e:	48 29 fd             	sub    %rdi,%rbp
ffffffff80205691:	4c 39 e7             	cmp    %r12,%rdi
ffffffff80205694:	0f 84 88 00 00 00    	je     ffffffff80205722 <compare_val+0x592>
ffffffff8020569a:	48 29 f8             	sub    %rdi,%rax
ffffffff8020569d:	48 89 c1             	mov    %rax,%rcx
ffffffff802056a0:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
ffffffff802056a7:	aa aa aa 
ffffffff802056aa:	48 c1 f9 03          	sar    $0x3,%rcx
ffffffff802056ae:	48 0f af c8          	imul   %rax,%rcx
ffffffff802056b2:	48 01 c9             	add    %rcx,%rcx
ffffffff802056b5:	48 81 f9 ff ff 0f 00 	cmp    $0xfffff,%rcx
ffffffff802056bc:	0f 87 83 00 00 00    	ja     ffffffff80205745 <compare_val+0x5b5>
ffffffff802056c2:	48 6b f1 18          	imul   $0x18,%rcx,%rsi
ffffffff802056c6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
ffffffff802056cb:	e8 f0 b2 00 00       	callq  ffffffff802109c0 <caml_stat_resize_noexc>
ffffffff802056d0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff802056d5:	48 85 c0             	test   %rax,%rax
ffffffff802056d8:	74 6b                	je     ffffffff80205745 <compare_val+0x5b5>
ffffffff802056da:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff802056de:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
ffffffff802056e5:	00 
ffffffff802056e6:	48 01 c5             	add    %rax,%rbp
ffffffff802056e9:	48 8d 0c c8          	lea    (%rax,%rcx,8),%rcx
ffffffff802056ed:	48 89 8c 24 d8 00 00 	mov    %rcx,0xd8(%rsp)
ffffffff802056f4:	00 
ffffffff802056f5:	e9 fe fc ff ff       	jmpq   ffffffff802053f8 <compare_val+0x268>
ffffffff802056fa:	e8 a1 a9 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802056ff:	48 8b 3a             	mov    (%rdx),%rdi
ffffffff80205702:	48 8b 36             	mov    (%rsi),%rsi
ffffffff80205705:	e8 9c a9 ff ff       	callq  ffffffff802000a6 <strcmp>
ffffffff8020570a:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
ffffffff80205711:	00 
ffffffff80205712:	48 63 d8             	movslq %eax,%rbx
ffffffff80205715:	48 c1 fb 3f          	sar    $0x3f,%rbx
ffffffff80205719:	48 83 cb 01          	or     $0x1,%rbx
ffffffff8020571d:	e9 f5 fb ff ff       	jmpq   ffffffff80205317 <compare_val+0x187>
ffffffff80205722:	bf 00 03 00 00       	mov    $0x300,%edi
ffffffff80205727:	e8 84 b0 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff8020572c:	48 85 c0             	test   %rax,%rax
ffffffff8020572f:	74 14                	je     ffffffff80205745 <compare_val+0x5b5>
ffffffff80205731:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffff80205736:	48 89 c7             	mov    %rax,%rdi
ffffffff80205739:	4c 89 e6             	mov    %r12,%rsi
ffffffff8020573c:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
ffffffff8020573e:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffff80205743:	eb 95                	jmp    ffffffff802056da <compare_val+0x54a>
ffffffff80205745:	4c 89 e7             	mov    %r12,%rdi
ffffffff80205748:	e8 03 fa ff ff       	callq  ffffffff80205150 <compare_stack_overflow>
ffffffff8020574d:	0f 1f 00             	nopl   (%rax)

ffffffff80205750 <caml_compare>:
ffffffff80205750:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205754:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80205759:	e8 32 fa ff ff       	callq  ffffffff80205190 <compare_val>
ffffffff8020575e:	48 85 c0             	test   %rax,%rax
ffffffff80205761:	78 10                	js     ffffffff80205773 <caml_compare+0x23>
ffffffff80205763:	0f 9f c0             	setg   %al
ffffffff80205766:	0f b6 c0             	movzbl %al,%eax
ffffffff80205769:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020576e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80205772:	c3                   	retq   
ffffffff80205773:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff8020577a:	eb f2                	jmp    ffffffff8020576e <caml_compare+0x1e>
ffffffff8020577c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80205780 <caml_equal>:
ffffffff80205780:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205784:	31 d2                	xor    %edx,%edx
ffffffff80205786:	e8 05 fa ff ff       	callq  ffffffff80205190 <compare_val>
ffffffff8020578b:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8020578f:	48 19 c0             	sbb    %rax,%rax
ffffffff80205792:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80205796:	83 e0 02             	and    $0x2,%eax
ffffffff80205799:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020579d:	c3                   	retq   
ffffffff8020579e:	66 90                	xchg   %ax,%ax

ffffffff802057a0 <caml_notequal>:
ffffffff802057a0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802057a4:	31 d2                	xor    %edx,%edx
ffffffff802057a6:	e8 e5 f9 ff ff       	callq  ffffffff80205190 <compare_val>
ffffffff802057ab:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff802057af:	48 19 c0             	sbb    %rax,%rax
ffffffff802057b2:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802057b6:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff802057ba:	48 83 c0 03          	add    $0x3,%rax
ffffffff802057be:	c3                   	retq   
ffffffff802057bf:	90                   	nop

ffffffff802057c0 <caml_lessthan>:
ffffffff802057c0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802057c4:	31 d2                	xor    %edx,%edx
ffffffff802057c6:	e8 c5 f9 ff ff       	callq  ffffffff80205190 <compare_val>
ffffffff802057cb:	48 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdx
ffffffff802057d2:	ff ff 7f 
ffffffff802057d5:	48 01 d0             	add    %rdx,%rax
ffffffff802057d8:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff802057dc:	48 39 d0             	cmp    %rdx,%rax
ffffffff802057df:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff802057e4:	0f 96 c0             	setbe  %al
ffffffff802057e7:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802057eb:	0f b6 c0             	movzbl %al,%eax
ffffffff802057ee:	48 8d 04 42          	lea    (%rdx,%rax,2),%rax
ffffffff802057f2:	c3                   	retq   
ffffffff802057f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802057fa:	00 00 00 00 
ffffffff802057fe:	66 90                	xchg   %ax,%ax

ffffffff80205800 <caml_lessequal>:
ffffffff80205800:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205804:	31 d2                	xor    %edx,%edx
ffffffff80205806:	e8 85 f9 ff ff       	callq  ffffffff80205190 <compare_val>
ffffffff8020580b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020580f:	48 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdx
ffffffff80205816:	ff ff 7f 
ffffffff80205819:	48 01 d0             	add    %rdx,%rax
ffffffff8020581c:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80205821:	48 f7 d0             	not    %rax
ffffffff80205824:	48 c1 e8 3f          	shr    $0x3f,%rax
ffffffff80205828:	48 8d 04 42          	lea    (%rdx,%rax,2),%rax
ffffffff8020582c:	c3                   	retq   
ffffffff8020582d:	0f 1f 00             	nopl   (%rax)

ffffffff80205830 <caml_greaterthan>:
ffffffff80205830:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205834:	31 d2                	xor    %edx,%edx
ffffffff80205836:	e8 55 f9 ff ff       	callq  ffffffff80205190 <compare_val>
ffffffff8020583b:	48 85 c0             	test   %rax,%rax
ffffffff8020583e:	0f 9f c0             	setg   %al
ffffffff80205841:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80205845:	0f b6 c0             	movzbl %al,%eax
ffffffff80205848:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020584d:	c3                   	retq   
ffffffff8020584e:	66 90                	xchg   %ax,%ax

ffffffff80205850 <caml_greaterequal>:
ffffffff80205850:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205854:	31 d2                	xor    %edx,%edx
ffffffff80205856:	e8 35 f9 ff ff       	callq  ffffffff80205190 <compare_val>
ffffffff8020585b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020585f:	48 c1 f8 3f          	sar    $0x3f,%rax
ffffffff80205863:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff80205867:	48 83 c0 03          	add    $0x3,%rax
ffffffff8020586b:	c3                   	retq   
ffffffff8020586c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80205870 <extern_replay_trail>:
ffffffff80205870:	55                   	push   %rbp
ffffffff80205871:	53                   	push   %rbx
ffffffff80205872:	48 8d 1d 87 08 03 00 	lea    0x30887(%rip),%rbx        # ffffffff80236100 <extern_trail_first>
ffffffff80205879:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020587d:	4c 8b 05 6c 08 03 00 	mov    0x3086c(%rip),%r8        # ffffffff802360f0 <extern_trail_block>
ffffffff80205884:	48 8b 3d 5d 08 03 00 	mov    0x3085d(%rip),%rdi        # ffffffff802360e8 <extern_trail_cur>
ffffffff8020588b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80205890:	49 8d 48 08          	lea    0x8(%r8),%rcx
ffffffff80205894:	48 39 cf             	cmp    %rcx,%rdi
ffffffff80205897:	76 38                	jbe    ffffffff802058d1 <extern_replay_trail+0x61>
ffffffff80205899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802058a0:	48 8b 01             	mov    (%rcx),%rax
ffffffff802058a3:	48 83 c1 10          	add    $0x10,%rcx
ffffffff802058a7:	48 89 c6             	mov    %rax,%rsi
ffffffff802058aa:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff802058ae:	48 83 e6 fc          	and    $0xfffffffffffffffc,%rsi
ffffffff802058b2:	25 00 03 00 00       	and    $0x300,%eax
ffffffff802058b7:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
ffffffff802058bb:	80 e6 fc             	and    $0xfc,%dh
ffffffff802058be:	48 09 d0             	or     %rdx,%rax
ffffffff802058c1:	48 89 46 f8          	mov    %rax,-0x8(%rsi)
ffffffff802058c5:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
ffffffff802058c9:	48 89 06             	mov    %rax,(%rsi)
ffffffff802058cc:	48 39 cf             	cmp    %rcx,%rdi
ffffffff802058cf:	77 cf                	ja     ffffffff802058a0 <extern_replay_trail+0x30>
ffffffff802058d1:	49 39 d8             	cmp    %rbx,%r8
ffffffff802058d4:	74 1a                	je     ffffffff802058f0 <extern_replay_trail+0x80>
ffffffff802058d6:	49 8b 28             	mov    (%r8),%rbp
ffffffff802058d9:	4c 89 c7             	mov    %r8,%rdi
ffffffff802058dc:	e8 6f b0 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802058e1:	48 8d bd 18 40 00 00 	lea    0x4018(%rbp),%rdi
ffffffff802058e8:	49 89 e8             	mov    %rbp,%r8
ffffffff802058eb:	eb a3                	jmp    ffffffff80205890 <extern_replay_trail+0x20>
ffffffff802058ed:	0f 1f 00             	nopl   (%rax)
ffffffff802058f0:	48 8d 05 11 08 03 00 	lea    0x30811(%rip),%rax        # ffffffff80236108 <extern_trail_first+0x8>
ffffffff802058f7:	4c 89 05 f2 07 03 00 	mov    %r8,0x307f2(%rip)        # ffffffff802360f0 <extern_trail_block>
ffffffff802058fe:	48 89 05 e3 07 03 00 	mov    %rax,0x307e3(%rip)        # ffffffff802360e8 <extern_trail_cur>
ffffffff80205905:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80205909:	5b                   	pop    %rbx
ffffffff8020590a:	5d                   	pop    %rbp
ffffffff8020590b:	c3                   	retq   
ffffffff8020590c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80205910 <init_extern_output>:
ffffffff80205910:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205914:	bf b8 1f 00 00       	mov    $0x1fb8,%edi
ffffffff80205919:	48 c7 05 a4 f7 02 00 	movq   $0x0,0x2f7a4(%rip)        # ffffffff802350c8 <extern_userprovided_output>
ffffffff80205920:	00 00 00 00 
ffffffff80205924:	e8 87 ae 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80205929:	48 89 05 80 f7 02 00 	mov    %rax,0x2f780(%rip)        # ffffffff802350b0 <extern_output_first>
ffffffff80205930:	48 85 c0             	test   %rax,%rax
ffffffff80205933:	74 2b                	je     ffffffff80205960 <init_extern_output+0x50>
ffffffff80205935:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8020593c:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff80205940:	48 89 05 61 f7 02 00 	mov    %rax,0x2f761(%rip)        # ffffffff802350a8 <extern_output_block>
ffffffff80205947:	48 05 b4 1f 00 00    	add    $0x1fb4,%rax
ffffffff8020594d:	48 89 15 6c f7 02 00 	mov    %rdx,0x2f76c(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205954:	48 89 05 5d f7 02 00 	mov    %rax,0x2f75d(%rip)        # ffffffff802350b8 <extern_limit>
ffffffff8020595b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020595f:	c3                   	retq   
ffffffff80205960:	e8 5b 1b 00 00       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff80205965:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020596c:	00 00 00 00 

ffffffff80205970 <free_extern_output.part.0>:
ffffffff80205970:	53                   	push   %rbx
ffffffff80205971:	48 8b 1d 38 f7 02 00 	mov    0x2f738(%rip),%rbx        # ffffffff802350b0 <extern_output_first>
ffffffff80205978:	48 85 db             	test   %rbx,%rbx
ffffffff8020597b:	74 13                	je     ffffffff80205990 <free_extern_output.part.0+0x20>
ffffffff8020597d:	0f 1f 00             	nopl   (%rax)
ffffffff80205980:	48 89 df             	mov    %rbx,%rdi
ffffffff80205983:	48 8b 1b             	mov    (%rbx),%rbx
ffffffff80205986:	e8 c5 af 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8020598b:	48 85 db             	test   %rbx,%rbx
ffffffff8020598e:	75 f0                	jne    ffffffff80205980 <free_extern_output.part.0+0x10>
ffffffff80205990:	48 8b 3d 51 62 02 00 	mov    0x26251(%rip),%rdi        # ffffffff8022bbe8 <extern_stack>
ffffffff80205997:	48 8d 1d 42 f7 02 00 	lea    0x2f742(%rip),%rbx        # ffffffff802350e0 <extern_stack_init>
ffffffff8020599e:	48 c7 05 07 f7 02 00 	movq   $0x0,0x2f707(%rip)        # ffffffff802350b0 <extern_output_first>
ffffffff802059a5:	00 00 00 00 
ffffffff802059a9:	48 39 df             	cmp    %rbx,%rdi
ffffffff802059ac:	74 1a                	je     ffffffff802059c8 <free_extern_output.part.0+0x58>
ffffffff802059ae:	e8 9d af 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802059b3:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
ffffffff802059ba:	48 89 1d 27 62 02 00 	mov    %rbx,0x26227(%rip)        # ffffffff8022bbe8 <extern_stack>
ffffffff802059c1:	48 89 05 18 62 02 00 	mov    %rax,0x26218(%rip)        # ffffffff8022bbe0 <extern_stack_limit>
ffffffff802059c8:	5b                   	pop    %rbx
ffffffff802059c9:	c3                   	retq   
ffffffff802059ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802059d0 <extern_failwith>:
ffffffff802059d0:	55                   	push   %rbp
ffffffff802059d1:	48 89 fd             	mov    %rdi,%rbp
ffffffff802059d4:	e8 97 fe ff ff       	callq  ffffffff80205870 <extern_replay_trail>
ffffffff802059d9:	48 83 3d e7 f6 02 00 	cmpq   $0x0,0x2f6e7(%rip)        # ffffffff802350c8 <extern_userprovided_output>
ffffffff802059e0:	00 
ffffffff802059e1:	75 05                	jne    ffffffff802059e8 <extern_failwith+0x18>
ffffffff802059e3:	e8 88 ff ff ff       	callq  ffffffff80205970 <free_extern_output.part.0>
ffffffff802059e8:	48 89 ef             	mov    %rbp,%rdi
ffffffff802059eb:	e8 50 1a 00 00       	callq  ffffffff80207440 <caml_failwith>

ffffffff802059f0 <extern_out_of_memory>:
ffffffff802059f0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802059f4:	e8 77 fe ff ff       	callq  ffffffff80205870 <extern_replay_trail>
ffffffff802059f9:	48 83 3d c7 f6 02 00 	cmpq   $0x0,0x2f6c7(%rip)        # ffffffff802350c8 <extern_userprovided_output>
ffffffff80205a00:	00 
ffffffff80205a01:	75 05                	jne    ffffffff80205a08 <extern_out_of_memory+0x18>
ffffffff80205a03:	e8 68 ff ff ff       	callq  ffffffff80205970 <free_extern_output.part.0>
ffffffff80205a08:	e8 b3 1a 00 00       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff80205a0d:	0f 1f 00             	nopl   (%rax)

ffffffff80205a10 <grow_extern_output>:
ffffffff80205a10:	48 83 3d b0 f6 02 00 	cmpq   $0x0,0x2f6b0(%rip)        # ffffffff802350c8 <extern_userprovided_output>
ffffffff80205a17:	00 
ffffffff80205a18:	53                   	push   %rbx
ffffffff80205a19:	75 73                	jne    ffffffff80205a8e <grow_extern_output+0x7e>
ffffffff80205a1b:	48 8b 05 86 f6 02 00 	mov    0x2f686(%rip),%rax        # ffffffff802350a8 <extern_output_block>
ffffffff80205a22:	48 8b 15 97 f6 02 00 	mov    0x2f697(%rip),%rdx        # ffffffff802350c0 <extern_ptr>
ffffffff80205a29:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80205a2d:	48 81 ff d2 0f 00 00 	cmp    $0xfd2,%rdi
ffffffff80205a34:	7e 4a                	jle    ffffffff80205a80 <grow_extern_output+0x70>
ffffffff80205a36:	48 89 fb             	mov    %rdi,%rbx
ffffffff80205a39:	48 8d bf b8 1f 00 00 	lea    0x1fb8(%rdi),%rdi
ffffffff80205a40:	e8 6b ad 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80205a45:	48 85 c0             	test   %rax,%rax
ffffffff80205a48:	74 3f                	je     ffffffff80205a89 <grow_extern_output+0x79>
ffffffff80205a4a:	48 8b 15 57 f6 02 00 	mov    0x2f657(%rip),%rdx        # ffffffff802350a8 <extern_output_block>
ffffffff80205a51:	48 89 05 50 f6 02 00 	mov    %rax,0x2f650(%rip)        # ffffffff802350a8 <extern_output_block>
ffffffff80205a58:	48 89 02             	mov    %rax,(%rdx)
ffffffff80205a5b:	48 83 c0 10          	add    $0x10,%rax
ffffffff80205a5f:	48 c7 40 f0 00 00 00 	movq   $0x0,-0x10(%rax)
ffffffff80205a66:	00 
ffffffff80205a67:	48 89 05 52 f6 02 00 	mov    %rax,0x2f652(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205a6e:	48 8d 84 18 a4 1f 00 	lea    0x1fa4(%rax,%rbx,1),%rax
ffffffff80205a75:	00 
ffffffff80205a76:	5b                   	pop    %rbx
ffffffff80205a77:	48 89 05 3a f6 02 00 	mov    %rax,0x2f63a(%rip)        # ffffffff802350b8 <extern_limit>
ffffffff80205a7e:	c3                   	retq   
ffffffff80205a7f:	90                   	nop
ffffffff80205a80:	bf b8 1f 00 00       	mov    $0x1fb8,%edi
ffffffff80205a85:	31 db                	xor    %ebx,%ebx
ffffffff80205a87:	eb b7                	jmp    ffffffff80205a40 <grow_extern_output+0x30>
ffffffff80205a89:	e8 62 ff ff ff       	callq  ffffffff802059f0 <extern_out_of_memory>
ffffffff80205a8e:	48 8d 3d e3 b8 01 00 	lea    0x1b8e3(%rip),%rdi        # ffffffff80221378 <caml_absf_mask+0x1c8>
ffffffff80205a95:	e8 36 ff ff ff       	callq  ffffffff802059d0 <extern_failwith>
ffffffff80205a9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80205aa0 <writecode16>:
ffffffff80205aa0:	55                   	push   %rbp
ffffffff80205aa1:	89 fd                	mov    %edi,%ebp
ffffffff80205aa3:	53                   	push   %rbx
ffffffff80205aa4:	48 89 f3             	mov    %rsi,%rbx
ffffffff80205aa7:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205aab:	48 8b 05 0e f6 02 00 	mov    0x2f60e(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205ab2:	48 8d 50 03          	lea    0x3(%rax),%rdx
ffffffff80205ab6:	48 3b 15 fb f5 02 00 	cmp    0x2f5fb(%rip),%rdx        # ffffffff802350b8 <extern_limit>
ffffffff80205abd:	77 21                	ja     ffffffff80205ae0 <writecode16+0x40>
ffffffff80205abf:	66 c1 c3 08          	rol    $0x8,%bx
ffffffff80205ac3:	40 88 28             	mov    %bpl,(%rax)
ffffffff80205ac6:	66 89 58 01          	mov    %bx,0x1(%rax)
ffffffff80205aca:	48 89 15 ef f5 02 00 	mov    %rdx,0x2f5ef(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205ad1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80205ad5:	5b                   	pop    %rbx
ffffffff80205ad6:	5d                   	pop    %rbp
ffffffff80205ad7:	c3                   	retq   
ffffffff80205ad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80205adf:	00 
ffffffff80205ae0:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff80205ae5:	e8 26 ff ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205aea:	48 8b 05 cf f5 02 00 	mov    0x2f5cf(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205af1:	48 8d 50 03          	lea    0x3(%rax),%rdx
ffffffff80205af5:	eb c8                	jmp    ffffffff80205abf <writecode16+0x1f>
ffffffff80205af7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80205afe:	00 00 

ffffffff80205b00 <writecode8>:
ffffffff80205b00:	55                   	push   %rbp
ffffffff80205b01:	89 fd                	mov    %edi,%ebp
ffffffff80205b03:	53                   	push   %rbx
ffffffff80205b04:	48 89 f3             	mov    %rsi,%rbx
ffffffff80205b07:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205b0b:	48 8b 05 ae f5 02 00 	mov    0x2f5ae(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205b12:	48 8d 50 02          	lea    0x2(%rax),%rdx
ffffffff80205b16:	48 3b 15 9b f5 02 00 	cmp    0x2f59b(%rip),%rdx        # ffffffff802350b8 <extern_limit>
ffffffff80205b1d:	77 19                	ja     ffffffff80205b38 <writecode8+0x38>
ffffffff80205b1f:	40 88 28             	mov    %bpl,(%rax)
ffffffff80205b22:	88 58 01             	mov    %bl,0x1(%rax)
ffffffff80205b25:	48 89 15 94 f5 02 00 	mov    %rdx,0x2f594(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205b2c:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80205b30:	5b                   	pop    %rbx
ffffffff80205b31:	5d                   	pop    %rbp
ffffffff80205b32:	c3                   	retq   
ffffffff80205b33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80205b38:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80205b3d:	e8 ce fe ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205b42:	48 8b 05 77 f5 02 00 	mov    0x2f577(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205b49:	48 8d 50 02          	lea    0x2(%rax),%rdx
ffffffff80205b4d:	eb d0                	jmp    ffffffff80205b1f <writecode8+0x1f>
ffffffff80205b4f:	90                   	nop

ffffffff80205b50 <writecode64>:
ffffffff80205b50:	55                   	push   %rbp
ffffffff80205b51:	89 fd                	mov    %edi,%ebp
ffffffff80205b53:	53                   	push   %rbx
ffffffff80205b54:	48 89 f3             	mov    %rsi,%rbx
ffffffff80205b57:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205b5b:	48 8b 05 5e f5 02 00 	mov    0x2f55e(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205b62:	48 8d 50 09          	lea    0x9(%rax),%rdx
ffffffff80205b66:	48 3b 15 4b f5 02 00 	cmp    0x2f54b(%rip),%rdx        # ffffffff802350b8 <extern_limit>
ffffffff80205b6d:	77 21                	ja     ffffffff80205b90 <writecode64+0x40>
ffffffff80205b6f:	40 88 28             	mov    %bpl,(%rax)
ffffffff80205b72:	48 0f cb             	bswap  %rbx
ffffffff80205b75:	48 89 15 44 f5 02 00 	mov    %rdx,0x2f544(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205b7c:	48 89 58 01          	mov    %rbx,0x1(%rax)
ffffffff80205b80:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80205b84:	5b                   	pop    %rbx
ffffffff80205b85:	5d                   	pop    %rbp
ffffffff80205b86:	c3                   	retq   
ffffffff80205b87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80205b8e:	00 00 
ffffffff80205b90:	bf 09 00 00 00       	mov    $0x9,%edi
ffffffff80205b95:	e8 76 fe ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205b9a:	48 8b 05 1f f5 02 00 	mov    0x2f51f(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205ba1:	48 8d 50 09          	lea    0x9(%rax),%rdx
ffffffff80205ba5:	eb c8                	jmp    ffffffff80205b6f <writecode64+0x1f>
ffffffff80205ba7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80205bae:	00 00 

ffffffff80205bb0 <writecode32>:
ffffffff80205bb0:	55                   	push   %rbp
ffffffff80205bb1:	89 fd                	mov    %edi,%ebp
ffffffff80205bb3:	53                   	push   %rbx
ffffffff80205bb4:	48 89 f3             	mov    %rsi,%rbx
ffffffff80205bb7:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205bbb:	48 8b 05 fe f4 02 00 	mov    0x2f4fe(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205bc2:	48 8d 50 05          	lea    0x5(%rax),%rdx
ffffffff80205bc6:	48 3b 15 eb f4 02 00 	cmp    0x2f4eb(%rip),%rdx        # ffffffff802350b8 <extern_limit>
ffffffff80205bcd:	77 19                	ja     ffffffff80205be8 <writecode32+0x38>
ffffffff80205bcf:	40 88 28             	mov    %bpl,(%rax)
ffffffff80205bd2:	0f cb                	bswap  %ebx
ffffffff80205bd4:	48 89 15 e5 f4 02 00 	mov    %rdx,0x2f4e5(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205bdb:	89 58 01             	mov    %ebx,0x1(%rax)
ffffffff80205bde:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80205be2:	5b                   	pop    %rbx
ffffffff80205be3:	5d                   	pop    %rbp
ffffffff80205be4:	c3                   	retq   
ffffffff80205be5:	0f 1f 00             	nopl   (%rax)
ffffffff80205be8:	bf 05 00 00 00       	mov    $0x5,%edi
ffffffff80205bed:	e8 1e fe ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205bf2:	48 8b 05 c7 f4 02 00 	mov    0x2f4c7(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205bf9:	48 8d 50 05          	lea    0x5(%rax),%rdx
ffffffff80205bfd:	eb d0                	jmp    ffffffff80205bcf <writecode32+0x1f>
ffffffff80205bff:	90                   	nop

ffffffff80205c00 <writeblock>:
ffffffff80205c00:	41 54                	push   %r12
ffffffff80205c02:	49 89 f4             	mov    %rsi,%r12
ffffffff80205c05:	55                   	push   %rbp
ffffffff80205c06:	48 89 fd             	mov    %rdi,%rbp
ffffffff80205c09:	48 8b 3d b0 f4 02 00 	mov    0x2f4b0(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff80205c10:	53                   	push   %rbx
ffffffff80205c11:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
ffffffff80205c15:	48 3b 1d 9c f4 02 00 	cmp    0x2f49c(%rip),%rbx        # ffffffff802350b8 <extern_limit>
ffffffff80205c1c:	77 1a                	ja     ffffffff80205c38 <writeblock+0x38>
ffffffff80205c1e:	4c 89 e2             	mov    %r12,%rdx
ffffffff80205c21:	48 89 ee             	mov    %rbp,%rsi
ffffffff80205c24:	e8 7a a4 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80205c29:	48 89 1d 90 f4 02 00 	mov    %rbx,0x2f490(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205c30:	5b                   	pop    %rbx
ffffffff80205c31:	5d                   	pop    %rbp
ffffffff80205c32:	41 5c                	pop    %r12
ffffffff80205c34:	c3                   	retq   
ffffffff80205c35:	0f 1f 00             	nopl   (%rax)
ffffffff80205c38:	48 89 f7             	mov    %rsi,%rdi
ffffffff80205c3b:	e8 d0 fd ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205c40:	48 8b 3d 79 f4 02 00 	mov    0x2f479(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff80205c47:	4a 8d 1c 27          	lea    (%rdi,%r12,1),%rbx
ffffffff80205c4b:	eb d1                	jmp    ffffffff80205c1e <writeblock+0x1e>
ffffffff80205c4d:	0f 1f 00             	nopl   (%rax)

ffffffff80205c50 <extern_stack_overflow>:
ffffffff80205c50:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80205c54:	31 c0                	xor    %eax,%eax
ffffffff80205c56:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80205c5b:	48 8d 35 3e b7 01 00 	lea    0x1b73e(%rip),%rsi        # ffffffff802213a0 <caml_absf_mask+0x1f0>
ffffffff80205c62:	e8 89 c5 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80205c67:	e8 04 fc ff ff       	callq  ffffffff80205870 <extern_replay_trail>
ffffffff80205c6c:	48 83 3d 54 f4 02 00 	cmpq   $0x0,0x2f454(%rip)        # ffffffff802350c8 <extern_userprovided_output>
ffffffff80205c73:	00 
ffffffff80205c74:	75 05                	jne    ffffffff80205c7b <extern_stack_overflow+0x2b>
ffffffff80205c76:	e8 f5 fc ff ff       	callq  ffffffff80205970 <free_extern_output.part.0>
ffffffff80205c7b:	e8 40 18 00 00       	callq  ffffffff802074c0 <caml_raise_out_of_memory>

ffffffff80205c80 <extern_invalid_argument>:
ffffffff80205c80:	55                   	push   %rbp
ffffffff80205c81:	48 89 fd             	mov    %rdi,%rbp
ffffffff80205c84:	e8 e7 fb ff ff       	callq  ffffffff80205870 <extern_replay_trail>
ffffffff80205c89:	48 83 3d 37 f4 02 00 	cmpq   $0x0,0x2f437(%rip)        # ffffffff802350c8 <extern_userprovided_output>
ffffffff80205c90:	00 
ffffffff80205c91:	75 05                	jne    ffffffff80205c98 <extern_invalid_argument+0x18>
ffffffff80205c93:	e8 d8 fc ff ff       	callq  ffffffff80205970 <free_extern_output.part.0>
ffffffff80205c98:	48 89 ef             	mov    %rbp,%rdi
ffffffff80205c9b:	e8 e0 17 00 00       	callq  ffffffff80207480 <caml_invalid_argument>

ffffffff80205ca0 <extern_record_location>:
ffffffff80205ca0:	f6 05 71 44 03 00 01 	testb  $0x1,0x34471(%rip)        # ffffffff8023a118 <extern_flags>
ffffffff80205ca7:	75 5f                	jne    ffffffff80205d08 <extern_record_location+0x68>
ffffffff80205ca9:	48 8b 15 38 04 03 00 	mov    0x30438(%rip),%rdx        # ffffffff802360e8 <extern_trail_cur>
ffffffff80205cb0:	48 3b 15 29 04 03 00 	cmp    0x30429(%rip),%rdx        # ffffffff802360e0 <extern_trail_limit>
ffffffff80205cb7:	53                   	push   %rbx
ffffffff80205cb8:	48 89 fb             	mov    %rdi,%rbx
ffffffff80205cbb:	74 53                	je     ffffffff80205d10 <extern_record_location+0x70>
ffffffff80205cbd:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff80205cc1:	48 83 c2 10          	add    $0x10,%rdx
ffffffff80205cc5:	48 89 c1             	mov    %rax,%rcx
ffffffff80205cc8:	80 e4 fc             	and    $0xfc,%ah
ffffffff80205ccb:	48 c1 e9 08          	shr    $0x8,%rcx
ffffffff80205ccf:	80 cc 02             	or     $0x2,%ah
ffffffff80205cd2:	83 e1 03             	and    $0x3,%ecx
ffffffff80205cd5:	48 09 d9             	or     %rbx,%rcx
ffffffff80205cd8:	48 89 4a f0          	mov    %rcx,-0x10(%rdx)
ffffffff80205cdc:	48 8b 0b             	mov    (%rbx),%rcx
ffffffff80205cdf:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
ffffffff80205ce3:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
ffffffff80205ce7:	48 8b 05 42 44 03 00 	mov    0x34442(%rip),%rax        # ffffffff8023a130 <obj_counter>
ffffffff80205cee:	48 89 15 f3 03 03 00 	mov    %rdx,0x303f3(%rip)        # ffffffff802360e8 <extern_trail_cur>
ffffffff80205cf5:	48 89 03             	mov    %rax,(%rbx)
ffffffff80205cf8:	48 83 c0 01          	add    $0x1,%rax
ffffffff80205cfc:	5b                   	pop    %rbx
ffffffff80205cfd:	48 89 05 2c 44 03 00 	mov    %rax,0x3442c(%rip)        # ffffffff8023a130 <obj_counter>
ffffffff80205d04:	c3                   	retq   
ffffffff80205d05:	0f 1f 00             	nopl   (%rax)
ffffffff80205d08:	c3                   	retq   
ffffffff80205d09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80205d10:	bf 18 40 00 00       	mov    $0x4018,%edi
ffffffff80205d15:	e8 96 aa 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80205d1a:	48 85 c0             	test   %rax,%rax
ffffffff80205d1d:	74 27                	je     ffffffff80205d46 <extern_record_location+0xa6>
ffffffff80205d1f:	48 8b 15 ca 03 03 00 	mov    0x303ca(%rip),%rdx        # ffffffff802360f0 <extern_trail_block>
ffffffff80205d26:	48 89 05 c3 03 03 00 	mov    %rax,0x303c3(%rip)        # ffffffff802360f0 <extern_trail_block>
ffffffff80205d2d:	48 89 10             	mov    %rdx,(%rax)
ffffffff80205d30:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80205d34:	48 05 18 40 00 00    	add    $0x4018,%rax
ffffffff80205d3a:	48 89 05 9f 03 03 00 	mov    %rax,0x3039f(%rip)        # ffffffff802360e0 <extern_trail_limit>
ffffffff80205d41:	e9 77 ff ff ff       	jmpq   ffffffff80205cbd <extern_record_location+0x1d>
ffffffff80205d46:	e8 a5 fc ff ff       	callq  ffffffff802059f0 <extern_out_of_memory>
ffffffff80205d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80205d50 <caml_serialize_int_1>:
ffffffff80205d50:	48 8b 05 69 f3 02 00 	mov    0x2f369(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205d57:	53                   	push   %rbx
ffffffff80205d58:	89 fb                	mov    %edi,%ebx
ffffffff80205d5a:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80205d5e:	48 3b 15 53 f3 02 00 	cmp    0x2f353(%rip),%rdx        # ffffffff802350b8 <extern_limit>
ffffffff80205d65:	77 11                	ja     ffffffff80205d78 <caml_serialize_int_1+0x28>
ffffffff80205d67:	88 18                	mov    %bl,(%rax)
ffffffff80205d69:	5b                   	pop    %rbx
ffffffff80205d6a:	48 89 15 4f f3 02 00 	mov    %rdx,0x2f34f(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205d71:	c3                   	retq   
ffffffff80205d72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80205d78:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80205d7d:	e8 8e fc ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205d82:	48 8b 05 37 f3 02 00 	mov    0x2f337(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205d89:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80205d8d:	88 18                	mov    %bl,(%rax)
ffffffff80205d8f:	5b                   	pop    %rbx
ffffffff80205d90:	48 89 15 29 f3 02 00 	mov    %rdx,0x2f329(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205d97:	c3                   	retq   
ffffffff80205d98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80205d9f:	00 

ffffffff80205da0 <caml_serialize_int_2>:
ffffffff80205da0:	48 8b 05 19 f3 02 00 	mov    0x2f319(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205da7:	53                   	push   %rbx
ffffffff80205da8:	89 fb                	mov    %edi,%ebx
ffffffff80205daa:	48 8d 50 02          	lea    0x2(%rax),%rdx
ffffffff80205dae:	48 3b 15 03 f3 02 00 	cmp    0x2f303(%rip),%rdx        # ffffffff802350b8 <extern_limit>
ffffffff80205db5:	77 19                	ja     ffffffff80205dd0 <caml_serialize_int_2+0x30>
ffffffff80205db7:	66 c1 c3 08          	rol    $0x8,%bx
ffffffff80205dbb:	48 89 15 fe f2 02 00 	mov    %rdx,0x2f2fe(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205dc2:	66 89 18             	mov    %bx,(%rax)
ffffffff80205dc5:	5b                   	pop    %rbx
ffffffff80205dc6:	c3                   	retq   
ffffffff80205dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80205dce:	00 00 
ffffffff80205dd0:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80205dd5:	66 c1 c3 08          	rol    $0x8,%bx
ffffffff80205dd9:	e8 32 fc ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205dde:	48 8b 05 db f2 02 00 	mov    0x2f2db(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205de5:	48 8d 50 02          	lea    0x2(%rax),%rdx
ffffffff80205de9:	66 89 18             	mov    %bx,(%rax)
ffffffff80205dec:	5b                   	pop    %rbx
ffffffff80205ded:	48 89 15 cc f2 02 00 	mov    %rdx,0x2f2cc(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205df4:	c3                   	retq   
ffffffff80205df5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80205dfc:	00 00 00 00 

ffffffff80205e00 <caml_serialize_int_4>:
ffffffff80205e00:	48 8b 05 b9 f2 02 00 	mov    0x2f2b9(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205e07:	53                   	push   %rbx
ffffffff80205e08:	89 fb                	mov    %edi,%ebx
ffffffff80205e0a:	48 8d 50 04          	lea    0x4(%rax),%rdx
ffffffff80205e0e:	48 3b 15 a3 f2 02 00 	cmp    0x2f2a3(%rip),%rdx        # ffffffff802350b8 <extern_limit>
ffffffff80205e15:	77 11                	ja     ffffffff80205e28 <caml_serialize_int_4+0x28>
ffffffff80205e17:	0f cb                	bswap  %ebx
ffffffff80205e19:	48 89 15 a0 f2 02 00 	mov    %rdx,0x2f2a0(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205e20:	89 18                	mov    %ebx,(%rax)
ffffffff80205e22:	5b                   	pop    %rbx
ffffffff80205e23:	c3                   	retq   
ffffffff80205e24:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80205e28:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80205e2d:	0f cb                	bswap  %ebx
ffffffff80205e2f:	e8 dc fb ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205e34:	48 8b 05 85 f2 02 00 	mov    0x2f285(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205e3b:	48 8d 50 04          	lea    0x4(%rax),%rdx
ffffffff80205e3f:	89 18                	mov    %ebx,(%rax)
ffffffff80205e41:	5b                   	pop    %rbx
ffffffff80205e42:	48 89 15 77 f2 02 00 	mov    %rdx,0x2f277(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205e49:	c3                   	retq   
ffffffff80205e4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80205e50 <caml_serialize_int_8>:
ffffffff80205e50:	48 8b 05 69 f2 02 00 	mov    0x2f269(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205e57:	53                   	push   %rbx
ffffffff80205e58:	48 89 fb             	mov    %rdi,%rbx
ffffffff80205e5b:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80205e5f:	48 3b 15 52 f2 02 00 	cmp    0x2f252(%rip),%rdx        # ffffffff802350b8 <extern_limit>
ffffffff80205e66:	77 18                	ja     ffffffff80205e80 <caml_serialize_int_8+0x30>
ffffffff80205e68:	48 0f cb             	bswap  %rbx
ffffffff80205e6b:	48 89 15 4e f2 02 00 	mov    %rdx,0x2f24e(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205e72:	48 89 18             	mov    %rbx,(%rax)
ffffffff80205e75:	5b                   	pop    %rbx
ffffffff80205e76:	c3                   	retq   
ffffffff80205e77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80205e7e:	00 00 
ffffffff80205e80:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff80205e85:	48 0f cb             	bswap  %rbx
ffffffff80205e88:	e8 83 fb ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205e8d:	48 8b 05 2c f2 02 00 	mov    0x2f22c(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80205e94:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80205e98:	48 89 18             	mov    %rbx,(%rax)
ffffffff80205e9b:	5b                   	pop    %rbx
ffffffff80205e9c:	48 89 15 1d f2 02 00 	mov    %rdx,0x2f21d(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205ea3:	c3                   	retq   
ffffffff80205ea4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80205eab:	00 00 00 00 
ffffffff80205eaf:	90                   	nop

ffffffff80205eb0 <caml_serialize_block_1>:
ffffffff80205eb0:	41 54                	push   %r12
ffffffff80205eb2:	49 89 f4             	mov    %rsi,%r12
ffffffff80205eb5:	55                   	push   %rbp
ffffffff80205eb6:	48 89 fd             	mov    %rdi,%rbp
ffffffff80205eb9:	48 8b 3d 00 f2 02 00 	mov    0x2f200(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff80205ec0:	53                   	push   %rbx
ffffffff80205ec1:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
ffffffff80205ec5:	48 3b 1d ec f1 02 00 	cmp    0x2f1ec(%rip),%rbx        # ffffffff802350b8 <extern_limit>
ffffffff80205ecc:	77 1a                	ja     ffffffff80205ee8 <caml_serialize_block_1+0x38>
ffffffff80205ece:	4c 89 e2             	mov    %r12,%rdx
ffffffff80205ed1:	48 89 ee             	mov    %rbp,%rsi
ffffffff80205ed4:	e8 ca a1 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80205ed9:	48 89 1d e0 f1 02 00 	mov    %rbx,0x2f1e0(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205ee0:	5b                   	pop    %rbx
ffffffff80205ee1:	5d                   	pop    %rbp
ffffffff80205ee2:	41 5c                	pop    %r12
ffffffff80205ee4:	c3                   	retq   
ffffffff80205ee5:	0f 1f 00             	nopl   (%rax)
ffffffff80205ee8:	48 89 f7             	mov    %rsi,%rdi
ffffffff80205eeb:	e8 20 fb ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205ef0:	48 8b 3d c9 f1 02 00 	mov    0x2f1c9(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff80205ef7:	4a 8d 1c 27          	lea    (%rdi,%r12,1),%rbx
ffffffff80205efb:	eb d1                	jmp    ffffffff80205ece <caml_serialize_block_1+0x1e>
ffffffff80205efd:	0f 1f 00             	nopl   (%rax)

ffffffff80205f00 <caml_serialize_block_2>:
ffffffff80205f00:	41 54                	push   %r12
ffffffff80205f02:	4c 8d 24 36          	lea    (%rsi,%rsi,1),%r12
ffffffff80205f06:	55                   	push   %rbp
ffffffff80205f07:	48 89 f5             	mov    %rsi,%rbp
ffffffff80205f0a:	53                   	push   %rbx
ffffffff80205f0b:	48 89 fb             	mov    %rdi,%rbx
ffffffff80205f0e:	48 8b 3d ab f1 02 00 	mov    0x2f1ab(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff80205f15:	4a 8d 04 27          	lea    (%rdi,%r12,1),%rax
ffffffff80205f19:	48 39 05 98 f1 02 00 	cmp    %rax,0x2f198(%rip)        # ffffffff802350b8 <extern_limit>
ffffffff80205f20:	72 3e                	jb     ffffffff80205f60 <caml_serialize_block_2+0x60>
ffffffff80205f22:	48 85 ed             	test   %rbp,%rbp
ffffffff80205f25:	7e 26                	jle    ffffffff80205f4d <caml_serialize_block_2+0x4d>
ffffffff80205f27:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
ffffffff80205f2b:	48 89 f8             	mov    %rdi,%rax
ffffffff80205f2e:	66 90                	xchg   %ax,%ax
ffffffff80205f30:	0f b6 13             	movzbl (%rbx),%edx
ffffffff80205f33:	0f b6 4b 01          	movzbl 0x1(%rbx),%ecx
ffffffff80205f37:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80205f3b:	48 83 c0 02          	add    $0x2,%rax
ffffffff80205f3f:	88 48 fe             	mov    %cl,-0x2(%rax)
ffffffff80205f42:	88 50 ff             	mov    %dl,-0x1(%rax)
ffffffff80205f45:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80205f48:	75 e6                	jne    ffffffff80205f30 <caml_serialize_block_2+0x30>
ffffffff80205f4a:	4c 01 e7             	add    %r12,%rdi
ffffffff80205f4d:	5b                   	pop    %rbx
ffffffff80205f4e:	5d                   	pop    %rbp
ffffffff80205f4f:	48 89 3d 6a f1 02 00 	mov    %rdi,0x2f16a(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205f56:	41 5c                	pop    %r12
ffffffff80205f58:	c3                   	retq   
ffffffff80205f59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80205f60:	4c 89 e7             	mov    %r12,%rdi
ffffffff80205f63:	e8 a8 fa ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205f68:	48 8b 3d 51 f1 02 00 	mov    0x2f151(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff80205f6f:	eb b1                	jmp    ffffffff80205f22 <caml_serialize_block_2+0x22>
ffffffff80205f71:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80205f78:	00 00 00 00 
ffffffff80205f7c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80205f80 <caml_serialize_block_4>:
ffffffff80205f80:	41 54                	push   %r12
ffffffff80205f82:	4c 8d 24 b5 00 00 00 	lea    0x0(,%rsi,4),%r12
ffffffff80205f89:	00 
ffffffff80205f8a:	55                   	push   %rbp
ffffffff80205f8b:	48 89 f5             	mov    %rsi,%rbp
ffffffff80205f8e:	53                   	push   %rbx
ffffffff80205f8f:	48 89 fb             	mov    %rdi,%rbx
ffffffff80205f92:	48 8b 3d 27 f1 02 00 	mov    0x2f127(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff80205f99:	4a 8d 04 27          	lea    (%rdi,%r12,1),%rax
ffffffff80205f9d:	48 39 05 14 f1 02 00 	cmp    %rax,0x2f114(%rip)        # ffffffff802350b8 <extern_limit>
ffffffff80205fa4:	72 4a                	jb     ffffffff80205ff0 <caml_serialize_block_4+0x70>
ffffffff80205fa6:	48 85 ed             	test   %rbp,%rbp
ffffffff80205fa9:	7e 33                	jle    ffffffff80205fde <caml_serialize_block_4+0x5e>
ffffffff80205fab:	48 89 f8             	mov    %rdi,%rax
ffffffff80205fae:	66 90                	xchg   %ax,%ax
ffffffff80205fb0:	0f b6 73 03          	movzbl 0x3(%rbx),%esi
ffffffff80205fb4:	0f b6 0b             	movzbl (%rbx),%ecx
ffffffff80205fb7:	48 83 c0 04          	add    $0x4,%rax
ffffffff80205fbb:	48 83 c3 04          	add    $0x4,%rbx
ffffffff80205fbf:	0f b6 53 fd          	movzbl -0x3(%rbx),%edx
ffffffff80205fc3:	40 88 70 fc          	mov    %sil,-0x4(%rax)
ffffffff80205fc7:	0f b6 73 fe          	movzbl -0x2(%rbx),%esi
ffffffff80205fcb:	88 48 ff             	mov    %cl,-0x1(%rax)
ffffffff80205fce:	40 88 70 fd          	mov    %sil,-0x3(%rax)
ffffffff80205fd2:	88 50 fe             	mov    %dl,-0x2(%rax)
ffffffff80205fd5:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff80205fd9:	75 d5                	jne    ffffffff80205fb0 <caml_serialize_block_4+0x30>
ffffffff80205fdb:	4c 01 e7             	add    %r12,%rdi
ffffffff80205fde:	5b                   	pop    %rbx
ffffffff80205fdf:	5d                   	pop    %rbp
ffffffff80205fe0:	48 89 3d d9 f0 02 00 	mov    %rdi,0x2f0d9(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80205fe7:	41 5c                	pop    %r12
ffffffff80205fe9:	c3                   	retq   
ffffffff80205fea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80205ff0:	4c 89 e7             	mov    %r12,%rdi
ffffffff80205ff3:	e8 18 fa ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80205ff8:	48 8b 3d c1 f0 02 00 	mov    0x2f0c1(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff80205fff:	eb a5                	jmp    ffffffff80205fa6 <caml_serialize_block_4+0x26>
ffffffff80206001:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80206008:	00 00 00 00 
ffffffff8020600c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80206010 <caml_serialize_float_4>:
ffffffff80206010:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80206014:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80206019:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
ffffffff8020601e:	f3 0f 11 44 24 0c    	movss  %xmm0,0xc(%rsp)
ffffffff80206024:	e8 57 ff ff ff       	callq  ffffffff80205f80 <caml_serialize_block_4>
ffffffff80206029:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020602d:	c3                   	retq   
ffffffff8020602e:	66 90                	xchg   %ax,%ax

ffffffff80206030 <caml_serialize_block_8>:
ffffffff80206030:	41 54                	push   %r12
ffffffff80206032:	4c 8d 24 f5 00 00 00 	lea    0x0(,%rsi,8),%r12
ffffffff80206039:	00 
ffffffff8020603a:	55                   	push   %rbp
ffffffff8020603b:	48 89 f5             	mov    %rsi,%rbp
ffffffff8020603e:	53                   	push   %rbx
ffffffff8020603f:	48 89 fb             	mov    %rdi,%rbx
ffffffff80206042:	48 8b 3d 77 f0 02 00 	mov    0x2f077(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff80206049:	4a 8d 04 27          	lea    (%rdi,%r12,1),%rax
ffffffff8020604d:	48 39 05 64 f0 02 00 	cmp    %rax,0x2f064(%rip)        # ffffffff802350b8 <extern_limit>
ffffffff80206054:	72 6a                	jb     ffffffff802060c0 <caml_serialize_block_8+0x90>
ffffffff80206056:	48 85 ed             	test   %rbp,%rbp
ffffffff80206059:	7e 51                	jle    ffffffff802060ac <caml_serialize_block_8+0x7c>
ffffffff8020605b:	48 89 f8             	mov    %rdi,%rax
ffffffff8020605e:	66 90                	xchg   %ax,%ax
ffffffff80206060:	0f b6 73 07          	movzbl 0x7(%rbx),%esi
ffffffff80206064:	0f b6 0b             	movzbl (%rbx),%ecx
ffffffff80206067:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020606b:	48 83 c3 08          	add    $0x8,%rbx
ffffffff8020606f:	0f b6 53 f9          	movzbl -0x7(%rbx),%edx
ffffffff80206073:	40 88 70 f8          	mov    %sil,-0x8(%rax)
ffffffff80206077:	0f b6 73 fe          	movzbl -0x2(%rbx),%esi
ffffffff8020607b:	88 48 ff             	mov    %cl,-0x1(%rax)
ffffffff8020607e:	40 88 70 f9          	mov    %sil,-0x7(%rax)
ffffffff80206082:	88 50 fe             	mov    %dl,-0x2(%rax)
ffffffff80206085:	0f b6 73 fd          	movzbl -0x3(%rbx),%esi
ffffffff80206089:	0f b6 4b fa          	movzbl -0x6(%rbx),%ecx
ffffffff8020608d:	0f b6 53 fb          	movzbl -0x5(%rbx),%edx
ffffffff80206091:	40 88 70 fa          	mov    %sil,-0x6(%rax)
ffffffff80206095:	0f b6 73 fc          	movzbl -0x4(%rbx),%esi
ffffffff80206099:	88 48 fd             	mov    %cl,-0x3(%rax)
ffffffff8020609c:	40 88 70 fb          	mov    %sil,-0x5(%rax)
ffffffff802060a0:	88 50 fc             	mov    %dl,-0x4(%rax)
ffffffff802060a3:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff802060a7:	75 b7                	jne    ffffffff80206060 <caml_serialize_block_8+0x30>
ffffffff802060a9:	4c 01 e7             	add    %r12,%rdi
ffffffff802060ac:	5b                   	pop    %rbx
ffffffff802060ad:	5d                   	pop    %rbp
ffffffff802060ae:	48 89 3d 0b f0 02 00 	mov    %rdi,0x2f00b(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff802060b5:	41 5c                	pop    %r12
ffffffff802060b7:	c3                   	retq   
ffffffff802060b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802060bf:	00 
ffffffff802060c0:	4c 89 e7             	mov    %r12,%rdi
ffffffff802060c3:	e8 48 f9 ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff802060c8:	48 8b 3d f1 ef 02 00 	mov    0x2eff1(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff802060cf:	eb 85                	jmp    ffffffff80206056 <caml_serialize_block_8+0x26>
ffffffff802060d1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802060d8:	00 00 00 00 
ffffffff802060dc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802060e0 <caml_serialize_block_float_8>:
ffffffff802060e0:	41 54                	push   %r12
ffffffff802060e2:	4c 8d 24 f5 00 00 00 	lea    0x0(,%rsi,8),%r12
ffffffff802060e9:	00 
ffffffff802060ea:	55                   	push   %rbp
ffffffff802060eb:	48 89 fd             	mov    %rdi,%rbp
ffffffff802060ee:	48 8b 3d cb ef 02 00 	mov    0x2efcb(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff802060f5:	53                   	push   %rbx
ffffffff802060f6:	4a 8d 1c 27          	lea    (%rdi,%r12,1),%rbx
ffffffff802060fa:	48 3b 1d b7 ef 02 00 	cmp    0x2efb7(%rip),%rbx        # ffffffff802350b8 <extern_limit>
ffffffff80206101:	77 1d                	ja     ffffffff80206120 <caml_serialize_block_float_8+0x40>
ffffffff80206103:	4c 89 e2             	mov    %r12,%rdx
ffffffff80206106:	48 89 ee             	mov    %rbp,%rsi
ffffffff80206109:	e8 95 9f ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff8020610e:	48 89 1d ab ef 02 00 	mov    %rbx,0x2efab(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80206115:	5b                   	pop    %rbx
ffffffff80206116:	5d                   	pop    %rbp
ffffffff80206117:	41 5c                	pop    %r12
ffffffff80206119:	c3                   	retq   
ffffffff8020611a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80206120:	4c 89 e7             	mov    %r12,%rdi
ffffffff80206123:	e8 e8 f8 ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80206128:	48 8b 3d 91 ef 02 00 	mov    0x2ef91(%rip),%rdi        # ffffffff802350c0 <extern_ptr>
ffffffff8020612f:	4a 8d 1c 27          	lea    (%rdi,%r12,1),%rbx
ffffffff80206133:	eb ce                	jmp    ffffffff80206103 <caml_serialize_block_float_8+0x23>
ffffffff80206135:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020613c:	00 00 00 00 

ffffffff80206140 <caml_serialize_float_8>:
ffffffff80206140:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80206144:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80206149:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
ffffffff8020614e:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff80206154:	e8 87 ff ff ff       	callq  ffffffff802060e0 <caml_serialize_block_float_8>
ffffffff80206159:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020615d:	c3                   	retq   
ffffffff8020615e:	66 90                	xchg   %ax,%ax

ffffffff80206160 <caml_extern_find_code>:
ffffffff80206160:	41 55                	push   %r13
ffffffff80206162:	41 54                	push   %r12
ffffffff80206164:	55                   	push   %rbp
ffffffff80206165:	53                   	push   %rbx
ffffffff80206166:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020616a:	8b 05 c0 02 04 00    	mov    0x402c0(%rip),%eax        # ffffffff80246430 <caml_code_fragments_table>
ffffffff80206170:	83 e8 01             	sub    $0x1,%eax
ffffffff80206173:	78 6b                	js     ffffffff802061e0 <caml_extern_find_code+0x80>
ffffffff80206175:	4c 63 e8             	movslq %eax,%r13
ffffffff80206178:	89 c0                	mov    %eax,%eax
ffffffff8020617a:	48 89 fd             	mov    %rdi,%rbp
ffffffff8020617d:	4a 8d 1c ed 00 00 00 	lea    0x0(,%r13,8),%rbx
ffffffff80206184:	00 
ffffffff80206185:	49 29 c5             	sub    %rax,%r13
ffffffff80206188:	49 c1 e5 03          	shl    $0x3,%r13
ffffffff8020618c:	eb 1a                	jmp    ffffffff802061a8 <caml_extern_find_code+0x48>
ffffffff8020618e:	66 90                	xchg   %ax,%ax
ffffffff80206190:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80206193:	72 07                	jb     ffffffff8020619c <caml_extern_find_code+0x3c>
ffffffff80206195:	49 39 6c 24 08       	cmp    %rbp,0x8(%r12)
ffffffff8020619a:	77 47                	ja     ffffffff802061e3 <caml_extern_find_code+0x83>
ffffffff8020619c:	48 8d 43 f8          	lea    -0x8(%rbx),%rax
ffffffff802061a0:	4c 39 eb             	cmp    %r13,%rbx
ffffffff802061a3:	74 3b                	je     ffffffff802061e0 <caml_extern_find_code+0x80>
ffffffff802061a5:	48 89 c3             	mov    %rax,%rbx
ffffffff802061a8:	48 8b 05 89 02 04 00 	mov    0x40289(%rip),%rax        # ffffffff80246438 <caml_code_fragments_table+0x8>
ffffffff802061af:	4c 8b 24 18          	mov    (%rax,%rbx,1),%r12
ffffffff802061b3:	41 80 7c 24 20 00    	cmpb   $0x0,0x20(%r12)
ffffffff802061b9:	49 8b 34 24          	mov    (%r12),%rsi
ffffffff802061bd:	75 d1                	jne    ffffffff80206190 <caml_extern_find_code+0x30>
ffffffff802061bf:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
ffffffff802061c4:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
ffffffff802061c9:	48 29 f2             	sub    %rsi,%rdx
ffffffff802061cc:	e8 cf a1 00 00       	callq  ffffffff802103a0 <caml_md5_block>
ffffffff802061d1:	41 c6 44 24 20 01    	movb   $0x1,0x20(%r12)
ffffffff802061d7:	49 8b 34 24          	mov    (%r12),%rsi
ffffffff802061db:	eb b3                	jmp    ffffffff80206190 <caml_extern_find_code+0x30>
ffffffff802061dd:	0f 1f 00             	nopl   (%rax)
ffffffff802061e0:	45 31 e4             	xor    %r12d,%r12d
ffffffff802061e3:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802061e7:	4c 89 e0             	mov    %r12,%rax
ffffffff802061ea:	5b                   	pop    %rbx
ffffffff802061eb:	5d                   	pop    %rbp
ffffffff802061ec:	41 5c                	pop    %r12
ffffffff802061ee:	41 5d                	pop    %r13
ffffffff802061f0:	c3                   	retq   
ffffffff802061f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802061f8:	00 00 00 00 
ffffffff802061fc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80206200 <extern_value>:
ffffffff80206200:	41 57                	push   %r15
ffffffff80206202:	49 89 ff             	mov    %rdi,%r15
ffffffff80206205:	48 89 f7             	mov    %rsi,%rdi
ffffffff80206208:	48 8d 35 c1 59 02 00 	lea    0x259c1(%rip),%rsi        # ffffffff8022bbd0 <extern_flag_values>
ffffffff8020620f:	41 56                	push   %r14
ffffffff80206211:	41 55                	push   %r13
ffffffff80206213:	41 54                	push   %r12
ffffffff80206215:	4c 8d 25 f0 b3 01 00 	lea    0x1b3f0(%rip),%r12        # ffffffff8022160c <caml_absf_mask+0x45c>
ffffffff8020621c:	55                   	push   %rbp
ffffffff8020621d:	53                   	push   %rbx
ffffffff8020621e:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80206222:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
ffffffff80206227:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff8020622c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80206233:	00 00 
ffffffff80206235:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff8020623a:	31 c0                	xor    %eax,%eax
ffffffff8020623c:	e8 4f 2e 01 00       	callq  ffffffff80219090 <caml_convert_flag_list>
ffffffff80206241:	48 8b 2d a0 59 02 00 	mov    0x259a0(%rip),%rbp        # ffffffff8022bbe8 <extern_stack>
ffffffff80206248:	48 c7 05 dd 3e 03 00 	movq   $0x0,0x33edd(%rip)        # ffffffff8023a130 <obj_counter>
ffffffff8020624f:	00 00 00 00 
ffffffff80206253:	89 05 bf 3e 03 00    	mov    %eax,0x33ebf(%rip)        # ffffffff8023a118 <extern_flags>
ffffffff80206259:	48 8d 05 a0 fe 02 00 	lea    0x2fea0(%rip),%rax        # ffffffff80236100 <extern_trail_first>
ffffffff80206260:	48 89 05 89 fe 02 00 	mov    %rax,0x2fe89(%rip)        # ffffffff802360f0 <extern_trail_block>
ffffffff80206267:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020626b:	48 89 05 76 fe 02 00 	mov    %rax,0x2fe76(%rip)        # ffffffff802360e8 <extern_trail_cur>
ffffffff80206272:	48 05 10 40 00 00    	add    $0x4010,%rax
ffffffff80206278:	48 89 05 61 fe 02 00 	mov    %rax,0x2fe61(%rip)        # ffffffff802360e0 <extern_trail_limit>
ffffffff8020627f:	48 c7 05 9e 3e 03 00 	movq   $0x0,0x33e9e(%rip)        # ffffffff8023a128 <size_32>
ffffffff80206286:	00 00 00 00 
ffffffff8020628a:	48 c7 05 8b 3e 03 00 	movq   $0x0,0x33e8b(%rip)        # ffffffff8023a120 <size_64>
ffffffff80206291:	00 00 00 00 
ffffffff80206295:	e9 94 00 00 00       	jmpq   ffffffff8020632e <extern_value+0x12e>
ffffffff8020629a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802062a0:	4c 89 fe             	mov    %r15,%rsi
ffffffff802062a3:	48 d1 fe             	sar    %rsi
ffffffff802062a6:	49 83 ff 7f          	cmp    $0x7f,%r15
ffffffff802062aa:	0f 86 80 05 00 00    	jbe    ffffffff80206830 <extern_value+0x630>
ffffffff802062b0:	48 8d 86 80 00 00 00 	lea    0x80(%rsi),%rax
ffffffff802062b7:	48 3d ff 00 00 00    	cmp    $0xff,%rax
ffffffff802062bd:	0f 86 5d 05 00 00    	jbe    ffffffff80206820 <extern_value+0x620>
ffffffff802062c3:	48 8d 86 00 80 00 00 	lea    0x8000(%rsi),%rax
ffffffff802062ca:	48 3d ff ff 00 00    	cmp    $0xffff,%rax
ffffffff802062d0:	0f 86 3a 05 00 00    	jbe    ffffffff80206810 <extern_value+0x610>
ffffffff802062d6:	48 8d 86 00 00 00 40 	lea    0x40000000(%rsi),%rax
ffffffff802062dd:	b9 00 00 00 80       	mov    $0x80000000,%ecx
ffffffff802062e2:	48 39 c8             	cmp    %rcx,%rax
ffffffff802062e5:	0f 82 15 05 00 00    	jb     ffffffff80206800 <extern_value+0x600>
ffffffff802062eb:	f6 05 26 3e 03 00 04 	testb  $0x4,0x33e26(%rip)        # ffffffff8023a118 <extern_flags>
ffffffff802062f2:	0f 85 e8 09 00 00    	jne    ffffffff80206ce0 <extern_value+0xae0>
ffffffff802062f8:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff802062fd:	e8 4e f8 ff ff       	callq  ffffffff80205b50 <writecode64>
ffffffff80206302:	48 3b 2d df 58 02 00 	cmp    0x258df(%rip),%rbp        # ffffffff8022bbe8 <extern_stack>
ffffffff80206309:	0f 84 71 01 00 00    	je     ffffffff80206480 <extern_value+0x280>
ffffffff8020630f:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff80206313:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
ffffffff80206317:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8020631b:	48 89 55 00          	mov    %rdx,0x0(%rbp)
ffffffff8020631f:	4c 8b 30             	mov    (%rax),%r14
ffffffff80206322:	48 83 6d 08 01       	subq   $0x1,0x8(%rbp)
ffffffff80206327:	48 0f 44 e9          	cmove  %rcx,%rbp
ffffffff8020632b:	4d 89 f7             	mov    %r14,%r15
ffffffff8020632e:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80206332:	0f 85 68 ff ff ff    	jne    ffffffff802062a0 <extern_value+0xa0>
ffffffff80206338:	4c 89 ff             	mov    %r15,%rdi
ffffffff8020633b:	e8 e0 a0 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80206340:	83 e0 07             	and    $0x7,%eax
ffffffff80206343:	0b 05 57 ed 02 00    	or     0x2ed57(%rip),%eax        # ffffffff802350a0 <caml_extern_allow_out_of_heap>
ffffffff80206349:	0f 84 11 05 00 00    	je     ffffffff80206860 <extern_value+0x660>
ffffffff8020634f:	49 8b 77 f8          	mov    -0x8(%r15),%rsi
ffffffff80206353:	49 8d 47 f8          	lea    -0x8(%r15),%rax
ffffffff80206357:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020635c:	48 89 f3             	mov    %rsi,%rbx
ffffffff8020635f:	44 0f b6 ee          	movzbl %sil,%r13d
ffffffff80206363:	48 c1 eb 0a          	shr    $0xa,%rbx
ffffffff80206367:	40 80 fe fa          	cmp    $0xfa,%sil
ffffffff8020636b:	0f 84 3f 04 00 00    	je     ffffffff802067b0 <extern_value+0x5b0>
ffffffff80206371:	48 85 db             	test   %rbx,%rbx
ffffffff80206374:	0f 84 f6 03 00 00    	je     ffffffff80206770 <extern_value+0x570>
ffffffff8020637a:	48 89 f0             	mov    %rsi,%rax
ffffffff8020637d:	25 00 03 00 00       	and    $0x300,%eax
ffffffff80206382:	48 3d 00 02 00 00    	cmp    $0x200,%rax
ffffffff80206388:	0f 84 32 05 00 00    	je     ffffffff802068c0 <extern_value+0x6c0>
ffffffff8020638e:	41 8d 85 07 ff ff ff 	lea    -0xf9(%r13),%eax
ffffffff80206395:	83 f8 06             	cmp    $0x6,%eax
ffffffff80206398:	0f 87 2f 03 00 00    	ja     ffffffff802066cd <extern_value+0x4cd>
ffffffff8020639e:	49 63 04 84          	movslq (%r12,%rax,4),%rax
ffffffff802063a2:	4c 01 e0             	add    %r12,%rax
ffffffff802063a5:	ff e0                	jmpq   *%rax
ffffffff802063a7:	49 8b 07             	mov    (%r15),%rax
ffffffff802063aa:	4c 8b 70 20          	mov    0x20(%rax),%r14
ffffffff802063ae:	4c 8b 28             	mov    (%rax),%r13
ffffffff802063b1:	48 8b 58 38          	mov    0x38(%rax),%rbx
ffffffff802063b5:	4d 85 f6             	test   %r14,%r14
ffffffff802063b8:	0f 84 57 09 00 00    	je     ffffffff80206d15 <extern_value+0xb15>
ffffffff802063be:	48 8b 05 fb ec 02 00 	mov    0x2ecfb(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff802063c5:	48 8b 15 ec ec 02 00 	mov    0x2ecec(%rip),%rdx        # ffffffff802350b8 <extern_limit>
ffffffff802063cc:	48 85 db             	test   %rbx,%rbx
ffffffff802063cf:	0f 84 43 07 00 00    	je     ffffffff80206b18 <extern_value+0x918>
ffffffff802063d5:	48 39 d0             	cmp    %rdx,%rax
ffffffff802063d8:	0f 83 c2 05 00 00    	jae    ffffffff802069a0 <extern_value+0x7a0>
ffffffff802063de:	c6 00 19             	movb   $0x19,(%rax)
ffffffff802063e1:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff802063e5:	4c 89 ef             	mov    %r13,%rdi
ffffffff802063e8:	48 89 15 d1 ec 02 00 	mov    %rdx,0x2ecd1(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff802063ef:	e8 b4 9c ff ff       	callq  ffffffff802000a8 <strlen>
ffffffff802063f4:	4c 89 ef             	mov    %r13,%rdi
ffffffff802063f7:	48 8d 70 01          	lea    0x1(%rax),%rsi
ffffffff802063fb:	e8 00 f8 ff ff       	callq  ffffffff80205c00 <writeblock>
ffffffff80206400:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
ffffffff80206405:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
ffffffff8020640a:	4c 89 ff             	mov    %r15,%rdi
ffffffff8020640d:	41 ff d6             	callq  *%r14
ffffffff80206410:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
ffffffff80206415:	48 39 13             	cmp    %rdx,(%rbx)
ffffffff80206418:	0f 85 e6 08 00 00    	jne    ffffffff80206d04 <extern_value+0xb04>
ffffffff8020641e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
ffffffff80206423:	48 39 43 08          	cmp    %rax,0x8(%rbx)
ffffffff80206427:	0f 85 d7 08 00 00    	jne    ffffffff80206d04 <extern_value+0xb04>
ffffffff8020642d:	48 8b 0d f4 3c 03 00 	mov    0x33cf4(%rip),%rcx        # ffffffff8023a128 <size_32>
ffffffff80206434:	48 83 c2 03          	add    $0x3,%rdx
ffffffff80206438:	48 83 c0 07          	add    $0x7,%rax
ffffffff8020643c:	4c 89 ff             	mov    %r15,%rdi
ffffffff8020643f:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff80206443:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff80206447:	48 8d 54 0a 02       	lea    0x2(%rdx,%rcx,1),%rdx
ffffffff8020644c:	48 89 15 d5 3c 03 00 	mov    %rdx,0x33cd5(%rip)        # ffffffff8023a128 <size_32>
ffffffff80206453:	48 8b 15 c6 3c 03 00 	mov    0x33cc6(%rip),%rdx        # ffffffff8023a120 <size_64>
ffffffff8020645a:	48 8d 44 02 02       	lea    0x2(%rdx,%rax,1),%rax
ffffffff8020645f:	48 89 05 ba 3c 03 00 	mov    %rax,0x33cba(%rip)        # ffffffff8023a120 <size_64>
ffffffff80206466:	e8 35 f8 ff ff       	callq  ffffffff80205ca0 <extern_record_location>
ffffffff8020646b:	48 3b 2d 76 57 02 00 	cmp    0x25776(%rip),%rbp        # ffffffff8022bbe8 <extern_stack>
ffffffff80206472:	0f 85 97 fe ff ff    	jne    ffffffff8020630f <extern_value+0x10f>
ffffffff80206478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020647f:	00 
ffffffff80206480:	4c 8d 25 59 ec 02 00 	lea    0x2ec59(%rip),%r12        # ffffffff802350e0 <extern_stack_init>
ffffffff80206487:	4c 39 e5             	cmp    %r12,%rbp
ffffffff8020648a:	74 1e                	je     ffffffff802064aa <extern_value+0x2aa>
ffffffff8020648c:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020648f:	e8 bc a4 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80206494:	49 8d 84 24 00 10 00 	lea    0x1000(%r12),%rax
ffffffff8020649b:	00 
ffffffff8020649c:	4c 89 25 45 57 02 00 	mov    %r12,0x25745(%rip)        # ffffffff8022bbe8 <extern_stack>
ffffffff802064a3:	48 89 05 36 57 02 00 	mov    %rax,0x25736(%rip)        # ffffffff8022bbe0 <extern_stack_limit>
ffffffff802064aa:	48 83 3d 16 ec 02 00 	cmpq   $0x0,0x2ec16(%rip)        # ffffffff802350c8 <extern_userprovided_output>
ffffffff802064b1:	00 
ffffffff802064b2:	0f 84 20 07 00 00    	je     ffffffff80206bd8 <extern_value+0x9d8>
ffffffff802064b8:	e8 b3 f3 ff ff       	callq  ffffffff80205870 <extern_replay_trail>
ffffffff802064bd:	48 8b 0d 04 ec 02 00 	mov    0x2ec04(%rip),%rcx        # ffffffff802350c8 <extern_userprovided_output>
ffffffff802064c4:	48 85 c9             	test   %rcx,%rcx
ffffffff802064c7:	0f 84 d3 06 00 00    	je     ffffffff80206ba0 <extern_value+0x9a0>
ffffffff802064cd:	4c 8b 05 ec eb 02 00 	mov    0x2ebec(%rip),%r8        # ffffffff802350c0 <extern_ptr>
ffffffff802064d4:	49 29 c8             	sub    %rcx,%r8
ffffffff802064d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff802064dc:	49 39 c0             	cmp    %rax,%r8
ffffffff802064df:	0f 8e 2b 04 00 00    	jle    ffffffff80206910 <extern_value+0x710>
ffffffff802064e5:	f6 05 2c 3c 03 00 04 	testb  $0x4,0x33c2c(%rip)        # ffffffff8023a118 <extern_flags>
ffffffff802064ec:	0f 85 34 08 00 00    	jne    ffffffff80206d26 <extern_value+0xb26>
ffffffff802064f2:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
ffffffff802064f7:	b8 84 95 a6 bf       	mov    $0xbfa69584,%eax
ffffffff802064fc:	48 89 01             	mov    %rax,(%rcx)
ffffffff802064ff:	4c 89 c0             	mov    %r8,%rax
ffffffff80206502:	48 0f c8             	bswap  %rax
ffffffff80206505:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff80206509:	48 8b 05 20 3c 03 00 	mov    0x33c20(%rip),%rax        # ffffffff8023a130 <obj_counter>
ffffffff80206510:	48 0f c8             	bswap  %rax
ffffffff80206513:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff80206517:	48 8b 05 02 3c 03 00 	mov    0x33c02(%rip),%rax        # ffffffff8023a120 <size_64>
ffffffff8020651e:	48 0f c8             	bswap  %rax
ffffffff80206521:	48 89 41 18          	mov    %rax,0x18(%rcx)
ffffffff80206525:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8020652a:	c7 00 20 00 00 00    	movl   $0x20,(%rax)
ffffffff80206530:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffff80206535:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020653c:	00 00 
ffffffff8020653e:	0f 85 dd 07 00 00    	jne    ffffffff80206d21 <extern_value+0xb21>
ffffffff80206544:	48 83 c4 48          	add    $0x48,%rsp
ffffffff80206548:	4c 89 c0             	mov    %r8,%rax
ffffffff8020654b:	5b                   	pop    %rbx
ffffffff8020654c:	5d                   	pop    %rbp
ffffffff8020654d:	41 5c                	pop    %r12
ffffffff8020654f:	41 5d                	pop    %r13
ffffffff80206551:	41 5e                	pop    %r14
ffffffff80206553:	41 5f                	pop    %r15
ffffffff80206555:	c3                   	retq   
ffffffff80206556:	49 8b 47 f8          	mov    -0x8(%r15),%rax
ffffffff8020655a:	49 89 c5             	mov    %rax,%r13
ffffffff8020655d:	49 c1 ed 0a          	shr    $0xa,%r13
ffffffff80206561:	48 3d ff ff 03 00    	cmp    $0x3ffff,%rax
ffffffff80206567:	0f 86 93 05 00 00    	jbe    ffffffff80206b00 <extern_value+0x900>
ffffffff8020656d:	49 81 fd ff ff 1f 00 	cmp    $0x1fffff,%r13
ffffffff80206574:	76 0d                	jbe    ffffffff80206583 <extern_value+0x383>
ffffffff80206576:	f6 05 9b 3b 03 00 04 	testb  $0x4,0x33b9b(%rip)        # ffffffff8023a118 <extern_flags>
ffffffff8020657d:	0f 85 4f 07 00 00    	jne    ffffffff80206cd2 <extern_value+0xad2>
ffffffff80206583:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff80206588:	4c 89 ee             	mov    %r13,%rsi
ffffffff8020658b:	49 39 c5             	cmp    %rax,%r13
ffffffff8020658e:	0f 86 fc 03 00 00    	jbe    ffffffff80206990 <extern_value+0x790>
ffffffff80206594:	bf 17 00 00 00       	mov    $0x17,%edi
ffffffff80206599:	e8 b2 f5 ff ff       	callq  ffffffff80205b50 <writecode64>
ffffffff8020659e:	4a 8d 34 ed 00 00 00 	lea    0x0(,%r13,8),%rsi
ffffffff802065a5:	00 
ffffffff802065a6:	4c 89 ff             	mov    %r15,%rdi
ffffffff802065a9:	e8 52 f6 ff ff       	callq  ffffffff80205c00 <writeblock>
ffffffff802065ae:	48 8b 05 73 3b 03 00 	mov    0x33b73(%rip),%rax        # ffffffff8023a128 <size_32>
ffffffff802065b5:	4a 8d 44 68 01       	lea    0x1(%rax,%r13,2),%rax
ffffffff802065ba:	48 89 05 67 3b 03 00 	mov    %rax,0x33b67(%rip)        # ffffffff8023a128 <size_32>
ffffffff802065c1:	e9 cb 00 00 00       	jmpq   ffffffff80206691 <extern_value+0x491>
ffffffff802065c6:	48 8b 05 f3 ea 02 00 	mov    0x2eaf3(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff802065cd:	48 3b 05 e4 ea 02 00 	cmp    0x2eae4(%rip),%rax        # ffffffff802350b8 <extern_limit>
ffffffff802065d4:	0f 83 06 05 00 00    	jae    ffffffff80206ae0 <extern_value+0x8e0>
ffffffff802065da:	c6 00 0c             	movb   $0xc,(%rax)
ffffffff802065dd:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff802065e1:	4c 89 ff             	mov    %r15,%rdi
ffffffff802065e4:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff802065e9:	48 89 15 d0 ea 02 00 	mov    %rdx,0x2ead0(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff802065f0:	e8 0b f6 ff ff       	callq  ffffffff80205c00 <writeblock>
ffffffff802065f5:	4c 89 ff             	mov    %r15,%rdi
ffffffff802065f8:	48 83 05 28 3b 03 00 	addq   $0x3,0x33b28(%rip)        # ffffffff8023a128 <size_32>
ffffffff802065ff:	03 
ffffffff80206600:	48 83 05 18 3b 03 00 	addq   $0x2,0x33b18(%rip)        # ffffffff8023a120 <size_64>
ffffffff80206607:	02 
ffffffff80206608:	e8 93 f6 ff ff       	callq  ffffffff80205ca0 <extern_record_location>
ffffffff8020660d:	e9 f0 fc ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff80206612:	4c 89 ff             	mov    %r15,%rdi
ffffffff80206615:	e8 96 e7 00 00       	callq  ffffffff80214db0 <caml_string_length>
ffffffff8020661a:	49 89 c5             	mov    %rax,%r13
ffffffff8020661d:	48 83 f8 1f          	cmp    $0x1f,%rax
ffffffff80206621:	0f 86 89 04 00 00    	jbe    ffffffff80206ab0 <extern_value+0x8b0>
ffffffff80206627:	48 3d ff 00 00 00    	cmp    $0xff,%rax
ffffffff8020662d:	0f 86 8d 03 00 00    	jbe    ffffffff802069c0 <extern_value+0x7c0>
ffffffff80206633:	48 3d fb ff ff 00    	cmp    $0xfffffb,%rax
ffffffff80206639:	76 0d                	jbe    ffffffff80206648 <extern_value+0x448>
ffffffff8020663b:	f6 05 d6 3a 03 00 04 	testb  $0x4,0x33ad6(%rip)        # ffffffff8023a118 <extern_flags>
ffffffff80206642:	0f 85 05 07 00 00    	jne    ffffffff80206d4d <extern_value+0xb4d>
ffffffff80206648:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8020664d:	4c 89 ee             	mov    %r13,%rsi
ffffffff80206650:	49 39 c5             	cmp    %rax,%r13
ffffffff80206653:	0f 87 97 05 00 00    	ja     ffffffff80206bf0 <extern_value+0x9f0>
ffffffff80206659:	bf 0a 00 00 00       	mov    $0xa,%edi
ffffffff8020665e:	e8 4d f5 ff ff       	callq  ffffffff80205bb0 <writecode32>
ffffffff80206663:	4c 89 ee             	mov    %r13,%rsi
ffffffff80206666:	4c 89 ff             	mov    %r15,%rdi
ffffffff80206669:	e8 92 f5 ff ff       	callq  ffffffff80205c00 <writeblock>
ffffffff8020666e:	48 8b 15 b3 3a 03 00 	mov    0x33ab3(%rip),%rdx        # ffffffff8023a128 <size_32>
ffffffff80206675:	49 8d 45 04          	lea    0x4(%r13),%rax
ffffffff80206679:	49 83 c5 08          	add    $0x8,%r13
ffffffff8020667d:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff80206681:	49 c1 ed 03          	shr    $0x3,%r13
ffffffff80206685:	48 8d 44 10 01       	lea    0x1(%rax,%rdx,1),%rax
ffffffff8020668a:	48 89 05 97 3a 03 00 	mov    %rax,0x33a97(%rip)        # ffffffff8023a128 <size_32>
ffffffff80206691:	48 8b 05 88 3a 03 00 	mov    0x33a88(%rip),%rax        # ffffffff8023a120 <size_64>
ffffffff80206698:	4c 89 ff             	mov    %r15,%rdi
ffffffff8020669b:	49 8d 44 05 01       	lea    0x1(%r13,%rax,1),%rax
ffffffff802066a0:	48 89 05 79 3a 03 00 	mov    %rax,0x33a79(%rip)        # ffffffff8023a120 <size_64>
ffffffff802066a7:	e8 f4 f5 ff ff       	callq  ffffffff80205ca0 <extern_record_location>
ffffffff802066ac:	e9 51 fc ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff802066b1:	48 c1 e3 03          	shl    $0x3,%rbx
ffffffff802066b5:	bf 11 00 00 00       	mov    $0x11,%edi
ffffffff802066ba:	4d 89 fe             	mov    %r15,%r14
ffffffff802066bd:	48 89 de             	mov    %rbx,%rsi
ffffffff802066c0:	49 29 de             	sub    %rbx,%r14
ffffffff802066c3:	e8 e8 f4 ff ff       	callq  ffffffff80205bb0 <writecode32>
ffffffff802066c8:	e9 5e fc ff ff       	jmpq   ffffffff8020632b <extern_value+0x12b>
ffffffff802066cd:	40 f6 c6 f0          	test   $0xf0,%sil
ffffffff802066d1:	75 0a                	jne    ffffffff802066dd <extern_value+0x4dd>
ffffffff802066d3:	48 83 fb 07          	cmp    $0x7,%rbx
ffffffff802066d7:	0f 86 fb 02 00 00    	jbe    ffffffff802069d8 <extern_value+0x7d8>
ffffffff802066dd:	48 81 fb ff ff 3f 00 	cmp    $0x3fffff,%rbx
ffffffff802066e4:	0f 86 9e 03 00 00    	jbe    ffffffff80206a88 <extern_value+0x888>
ffffffff802066ea:	f6 05 27 3a 03 00 04 	testb  $0x4,0x33a27(%rip)        # ffffffff8023a118 <extern_flags>
ffffffff802066f1:	0f 85 4a 06 00 00    	jne    ffffffff80206d41 <extern_value+0xb41>
ffffffff802066f7:	48 81 e6 ff fc ff ff 	and    $0xfffffffffffffcff,%rsi
ffffffff802066fe:	bf 13 00 00 00       	mov    $0x13,%edi
ffffffff80206703:	e8 48 f4 ff ff       	callq  ffffffff80205b50 <writecode64>
ffffffff80206708:	48 8b 05 19 3a 03 00 	mov    0x33a19(%rip),%rax        # ffffffff8023a128 <size_32>
ffffffff8020670f:	4c 89 ff             	mov    %r15,%rdi
ffffffff80206712:	4d 8b 37             	mov    (%r15),%r14
ffffffff80206715:	48 8d 44 03 01       	lea    0x1(%rbx,%rax,1),%rax
ffffffff8020671a:	48 89 05 07 3a 03 00 	mov    %rax,0x33a07(%rip)        # ffffffff8023a128 <size_32>
ffffffff80206721:	48 8b 05 f8 39 03 00 	mov    0x339f8(%rip),%rax        # ffffffff8023a120 <size_64>
ffffffff80206728:	48 8d 44 03 01       	lea    0x1(%rbx,%rax,1),%rax
ffffffff8020672d:	48 89 05 ec 39 03 00 	mov    %rax,0x339ec(%rip)        # ffffffff8023a120 <size_64>
ffffffff80206734:	e8 67 f5 ff ff       	callq  ffffffff80205ca0 <extern_record_location>
ffffffff80206739:	48 83 fb 01          	cmp    $0x1,%rbx
ffffffff8020673d:	0f 86 e8 fb ff ff    	jbe    ffffffff8020632b <extern_value+0x12b>
ffffffff80206743:	48 8b 05 96 54 02 00 	mov    0x25496(%rip),%rax        # ffffffff8022bbe0 <extern_stack_limit>
ffffffff8020674a:	48 83 c5 10          	add    $0x10,%rbp
ffffffff8020674e:	48 39 c5             	cmp    %rax,%rbp
ffffffff80206751:	0f 83 b9 02 00 00    	jae    ffffffff80206a10 <extern_value+0x810>
ffffffff80206757:	4d 8d 47 08          	lea    0x8(%r15),%r8
ffffffff8020675b:	4c 8d 4b ff          	lea    -0x1(%rbx),%r9
ffffffff8020675f:	4c 89 45 00          	mov    %r8,0x0(%rbp)
ffffffff80206763:	4c 89 4d 08          	mov    %r9,0x8(%rbp)
ffffffff80206767:	e9 bf fb ff ff       	jmpq   ffffffff8020632b <extern_value+0x12b>
ffffffff8020676c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80206770:	40 f6 c6 f0          	test   $0xf0,%sil
ffffffff80206774:	0f 85 2e 01 00 00    	jne    ffffffff802068a8 <extern_value+0x6a8>
ffffffff8020677a:	48 8b 05 3f e9 02 00 	mov    0x2e93f(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80206781:	41 83 ed 80          	sub    $0xffffff80,%r13d
ffffffff80206785:	48 3b 05 2c e9 02 00 	cmp    0x2e92c(%rip),%rax        # ffffffff802350b8 <extern_limit>
ffffffff8020678c:	0f 83 b6 00 00 00    	jae    ffffffff80206848 <extern_value+0x648>
ffffffff80206792:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80206798:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8020679c:	48 89 15 1d e9 02 00 	mov    %rdx,0x2e91d(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff802067a3:	44 88 28             	mov    %r13b,(%rax)
ffffffff802067a6:	e9 57 fb ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff802067ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802067b0:	4d 8b 37             	mov    (%r15),%r14
ffffffff802067b3:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff802067b8:	41 f6 c6 01          	test   $0x1,%r14b
ffffffff802067bc:	0f 85 69 fb ff ff    	jne    ffffffff8020632b <extern_value+0x12b>
ffffffff802067c2:	4c 89 f7             	mov    %r14,%rdi
ffffffff802067c5:	e8 56 9c 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802067ca:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
ffffffff802067cf:	a8 07                	test   $0x7,%al
ffffffff802067d1:	0f 84 9a fb ff ff    	je     ffffffff80206371 <extern_value+0x171>
ffffffff802067d7:	41 0f b6 46 f8       	movzbl -0x8(%r14),%eax
ffffffff802067dc:	8d 78 0a             	lea    0xa(%rax),%edi
ffffffff802067df:	81 e7 fb 00 00 00    	and    $0xfb,%edi
ffffffff802067e5:	0f 84 86 fb ff ff    	je     ffffffff80206371 <extern_value+0x171>
ffffffff802067eb:	3c fd                	cmp    $0xfd,%al
ffffffff802067ed:	0f 84 7e fb ff ff    	je     ffffffff80206371 <extern_value+0x171>
ffffffff802067f3:	e9 33 fb ff ff       	jmpq   ffffffff8020632b <extern_value+0x12b>
ffffffff802067f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802067ff:	00 
ffffffff80206800:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80206805:	e8 a6 f3 ff ff       	callq  ffffffff80205bb0 <writecode32>
ffffffff8020680a:	e9 f3 fa ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff8020680f:	90                   	nop
ffffffff80206810:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80206815:	e8 86 f2 ff ff       	callq  ffffffff80205aa0 <writecode16>
ffffffff8020681a:	e9 e3 fa ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff8020681f:	90                   	nop
ffffffff80206820:	31 ff                	xor    %edi,%edi
ffffffff80206822:	e8 d9 f2 ff ff       	callq  ffffffff80205b00 <writecode8>
ffffffff80206827:	e9 d6 fa ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff8020682c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80206830:	48 8b 05 89 e8 02 00 	mov    0x2e889(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80206837:	48 3b 05 7a e8 02 00 	cmp    0x2e87a(%rip),%rax        # ffffffff802350b8 <extern_limit>
ffffffff8020683e:	44 8d 6e 40          	lea    0x40(%rsi),%r13d
ffffffff80206842:	0f 82 50 ff ff ff    	jb     ffffffff80206798 <extern_value+0x598>
ffffffff80206848:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020684d:	e8 be f1 ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80206852:	48 8b 05 67 e8 02 00 	mov    0x2e867(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80206859:	e9 3a ff ff ff       	jmpq   ffffffff80206798 <extern_value+0x598>
ffffffff8020685e:	66 90                	xchg   %ax,%ax
ffffffff80206860:	4c 89 ff             	mov    %r15,%rdi
ffffffff80206863:	e8 f8 f8 ff ff       	callq  ffffffff80206160 <caml_extern_find_code>
ffffffff80206868:	49 89 c5             	mov    %rax,%r13
ffffffff8020686b:	48 85 c0             	test   %rax,%rax
ffffffff8020686e:	0f 84 78 04 00 00    	je     ffffffff80206cec <extern_value+0xaec>
ffffffff80206874:	f6 05 9d 38 03 00 02 	testb  $0x2,0x3389d(%rip)        # ffffffff8023a118 <extern_flags>
ffffffff8020687b:	0f 84 77 04 00 00    	je     ffffffff80206cf8 <extern_value+0xaf8>
ffffffff80206881:	4c 89 fe             	mov    %r15,%rsi
ffffffff80206884:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff80206889:	48 2b 30             	sub    (%rax),%rsi
ffffffff8020688c:	e8 1f f3 ff ff       	callq  ffffffff80205bb0 <writecode32>
ffffffff80206891:	49 8d 7d 10          	lea    0x10(%r13),%rdi
ffffffff80206895:	be 10 00 00 00       	mov    $0x10,%esi
ffffffff8020689a:	e8 61 f3 ff ff       	callq  ffffffff80205c00 <writeblock>
ffffffff8020689f:	e9 5e fa ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff802068a4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802068a8:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff802068ad:	e8 fe f2 ff ff       	callq  ffffffff80205bb0 <writecode32>
ffffffff802068b2:	e9 4b fa ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff802068b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802068be:	00 00 
ffffffff802068c0:	48 8b 35 69 38 03 00 	mov    0x33869(%rip),%rsi        # ffffffff8023a130 <obj_counter>
ffffffff802068c7:	49 2b 37             	sub    (%r15),%rsi
ffffffff802068ca:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
ffffffff802068d1:	76 2d                	jbe    ffffffff80206900 <extern_value+0x700>
ffffffff802068d3:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
ffffffff802068da:	0f 86 c0 01 00 00    	jbe    ffffffff80206aa0 <extern_value+0x8a0>
ffffffff802068e0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff802068e5:	48 39 c6             	cmp    %rax,%rsi
ffffffff802068e8:	0f 86 8a 00 00 00    	jbe    ffffffff80206978 <extern_value+0x778>
ffffffff802068ee:	bf 14 00 00 00       	mov    $0x14,%edi
ffffffff802068f3:	e8 58 f2 ff ff       	callq  ffffffff80205b50 <writecode64>
ffffffff802068f8:	e9 05 fa ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff802068fd:	0f 1f 00             	nopl   (%rax)
ffffffff80206900:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80206905:	e8 f6 f1 ff ff       	callq  ffffffff80205b00 <writecode8>
ffffffff8020690a:	e9 f3 f9 ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff8020690f:	90                   	nop
ffffffff80206910:	8b 05 12 38 03 00    	mov    0x33812(%rip),%eax        # ffffffff8023a128 <size_32>
ffffffff80206916:	ba ff ff ff ff       	mov    $0xffffffff,%edx
ffffffff8020691b:	48 39 15 06 38 03 00 	cmp    %rdx,0x33806(%rip)        # ffffffff8023a128 <size_32>
ffffffff80206922:	0f c8                	bswap  %eax
ffffffff80206924:	0f 87 bb fb ff ff    	ja     ffffffff802064e5 <extern_value+0x2e5>
ffffffff8020692a:	8b 35 f0 37 03 00    	mov    0x337f0(%rip),%esi        # ffffffff8023a120 <size_64>
ffffffff80206930:	48 39 15 e9 37 03 00 	cmp    %rdx,0x337e9(%rip)        # ffffffff8023a120 <size_64>
ffffffff80206937:	0f ce                	bswap  %esi
ffffffff80206939:	0f 87 a6 fb ff ff    	ja     ffffffff802064e5 <extern_value+0x2e5>
ffffffff8020693f:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff80206944:	44 89 c2             	mov    %r8d,%edx
ffffffff80206947:	0f ca                	bswap  %edx
ffffffff80206949:	89 43 0c             	mov    %eax,0xc(%rbx)
ffffffff8020694c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80206951:	89 53 04             	mov    %edx,0x4(%rbx)
ffffffff80206954:	8b 15 d6 37 03 00    	mov    0x337d6(%rip),%edx        # ffffffff8023a130 <obj_counter>
ffffffff8020695a:	c7 03 84 95 a6 be    	movl   $0xbea69584,(%rbx)
ffffffff80206960:	89 73 10             	mov    %esi,0x10(%rbx)
ffffffff80206963:	0f ca                	bswap  %edx
ffffffff80206965:	89 53 08             	mov    %edx,0x8(%rbx)
ffffffff80206968:	c7 00 14 00 00 00    	movl   $0x14,(%rax)
ffffffff8020696e:	e9 bd fb ff ff       	jmpq   ffffffff80206530 <extern_value+0x330>
ffffffff80206973:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80206978:	bf 06 00 00 00       	mov    $0x6,%edi
ffffffff8020697d:	e8 2e f2 ff ff       	callq  ffffffff80205bb0 <writecode32>
ffffffff80206982:	e9 7b f9 ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff80206987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020698e:	00 00 
ffffffff80206990:	bf 07 00 00 00       	mov    $0x7,%edi
ffffffff80206995:	e8 16 f2 ff ff       	callq  ffffffff80205bb0 <writecode32>
ffffffff8020699a:	e9 ff fb ff ff       	jmpq   ffffffff8020659e <extern_value+0x39e>
ffffffff8020699f:	90                   	nop
ffffffff802069a0:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff802069a5:	e8 66 f0 ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff802069aa:	48 8b 05 0f e7 02 00 	mov    0x2e70f(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff802069b1:	e9 28 fa ff ff       	jmpq   ffffffff802063de <extern_value+0x1de>
ffffffff802069b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802069bd:	00 00 00 
ffffffff802069c0:	48 89 c6             	mov    %rax,%rsi
ffffffff802069c3:	bf 09 00 00 00       	mov    $0x9,%edi
ffffffff802069c8:	e8 33 f1 ff ff       	callq  ffffffff80205b00 <writecode8>
ffffffff802069cd:	e9 91 fc ff ff       	jmpq   ffffffff80206663 <extern_value+0x463>
ffffffff802069d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802069d8:	89 d8                	mov    %ebx,%eax
ffffffff802069da:	c1 e0 04             	shl    $0x4,%eax
ffffffff802069dd:	45 8d ac 05 80 00 00 	lea    0x80(%r13,%rax,1),%r13d
ffffffff802069e4:	00 
ffffffff802069e5:	48 8b 05 d4 e6 02 00 	mov    0x2e6d4(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff802069ec:	48 3b 05 c5 e6 02 00 	cmp    0x2e6c5(%rip),%rax        # ffffffff802350b8 <extern_limit>
ffffffff802069f3:	0f 83 07 02 00 00    	jae    ffffffff80206c00 <extern_value+0xa00>
ffffffff802069f9:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff802069fd:	44 88 28             	mov    %r13b,(%rax)
ffffffff80206a00:	48 89 15 b9 e6 02 00 	mov    %rdx,0x2e6b9(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80206a07:	e9 fc fc ff ff       	jmpq   ffffffff80206708 <extern_value+0x508>
ffffffff80206a0c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80206a10:	48 8b 3d d1 51 02 00 	mov    0x251d1(%rip),%rdi        # ffffffff8022bbe8 <extern_stack>
ffffffff80206a17:	48 29 f8             	sub    %rdi,%rax
ffffffff80206a1a:	48 29 fd             	sub    %rdi,%rbp
ffffffff80206a1d:	48 c1 f8 04          	sar    $0x4,%rax
ffffffff80206a21:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
ffffffff80206a25:	48 81 f9 ff ff 3f 06 	cmp    $0x63fffff,%rcx
ffffffff80206a2c:	0f 87 0a 03 00 00    	ja     ffffffff80206d3c <extern_value+0xb3c>
ffffffff80206a32:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80206a36:	49 89 c5             	mov    %rax,%r13
ffffffff80206a39:	48 8d 05 a0 e6 02 00 	lea    0x2e6a0(%rip),%rax        # ffffffff802350e0 <extern_stack_init>
ffffffff80206a40:	48 39 c7             	cmp    %rax,%rdi
ffffffff80206a43:	0f 84 d7 01 00 00    	je     ffffffff80206c20 <extern_value+0xa20>
ffffffff80206a49:	4c 89 ee             	mov    %r13,%rsi
ffffffff80206a4c:	e8 6f 9f 00 00       	callq  ffffffff802109c0 <caml_stat_resize_noexc>
ffffffff80206a51:	48 85 c0             	test   %rax,%rax
ffffffff80206a54:	0f 84 e2 02 00 00    	je     ffffffff80206d3c <extern_value+0xb3c>
ffffffff80206a5a:	48 01 c5             	add    %rax,%rbp
ffffffff80206a5d:	4d 8d 47 08          	lea    0x8(%r15),%r8
ffffffff80206a61:	4c 8d 4b ff          	lea    -0x1(%rbx),%r9
ffffffff80206a65:	49 01 c5             	add    %rax,%r13
ffffffff80206a68:	48 89 05 79 51 02 00 	mov    %rax,0x25179(%rip)        # ffffffff8022bbe8 <extern_stack>
ffffffff80206a6f:	4c 89 2d 6a 51 02 00 	mov    %r13,0x2516a(%rip)        # ffffffff8022bbe0 <extern_stack_limit>
ffffffff80206a76:	4c 89 45 00          	mov    %r8,0x0(%rbp)
ffffffff80206a7a:	4c 89 4d 08          	mov    %r9,0x8(%rbp)
ffffffff80206a7e:	e9 a8 f8 ff ff       	jmpq   ffffffff8020632b <extern_value+0x12b>
ffffffff80206a83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80206a88:	48 81 e6 ff fc ff ff 	and    $0xfffffffffffffcff,%rsi
ffffffff80206a8f:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff80206a94:	e8 17 f1 ff ff       	callq  ffffffff80205bb0 <writecode32>
ffffffff80206a99:	e9 6a fc ff ff       	jmpq   ffffffff80206708 <extern_value+0x508>
ffffffff80206a9e:	66 90                	xchg   %ax,%ax
ffffffff80206aa0:	bf 05 00 00 00       	mov    $0x5,%edi
ffffffff80206aa5:	e8 f6 ef ff ff       	callq  ffffffff80205aa0 <writecode16>
ffffffff80206aaa:	e9 53 f8 ff ff       	jmpq   ffffffff80206302 <extern_value+0x102>
ffffffff80206aaf:	90                   	nop
ffffffff80206ab0:	8d 58 20             	lea    0x20(%rax),%ebx
ffffffff80206ab3:	48 8b 05 06 e6 02 00 	mov    0x2e606(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80206aba:	48 3b 05 f7 e5 02 00 	cmp    0x2e5f7(%rip),%rax        # ffffffff802350b8 <extern_limit>
ffffffff80206ac1:	0f 83 b1 01 00 00    	jae    ffffffff80206c78 <extern_value+0xa78>
ffffffff80206ac7:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff80206acb:	88 18                	mov    %bl,(%rax)
ffffffff80206acd:	48 89 0d ec e5 02 00 	mov    %rcx,0x2e5ec(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80206ad4:	e9 8a fb ff ff       	jmpq   ffffffff80206663 <extern_value+0x463>
ffffffff80206ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80206ae0:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80206ae5:	e8 26 ef ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80206aea:	48 8b 05 cf e5 02 00 	mov    0x2e5cf(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80206af1:	e9 e4 fa ff ff       	jmpq   ffffffff802065da <extern_value+0x3da>
ffffffff80206af6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80206afd:	00 00 00 
ffffffff80206b00:	4c 89 ee             	mov    %r13,%rsi
ffffffff80206b03:	bf 0e 00 00 00       	mov    $0xe,%edi
ffffffff80206b08:	e8 f3 ef ff ff       	callq  ffffffff80205b00 <writecode8>
ffffffff80206b0d:	e9 8c fa ff ff       	jmpq   ffffffff8020659e <extern_value+0x39e>
ffffffff80206b12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80206b18:	48 39 d0             	cmp    %rdx,%rax
ffffffff80206b1b:	0f 83 8f 01 00 00    	jae    ffffffff80206cb0 <extern_value+0xab0>
ffffffff80206b21:	c6 00 18             	movb   $0x18,(%rax)
ffffffff80206b24:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80206b28:	4c 89 ef             	mov    %r13,%rdi
ffffffff80206b2b:	48 89 15 8e e5 02 00 	mov    %rdx,0x2e58e(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80206b32:	e8 71 95 ff ff       	callq  ffffffff802000a8 <strlen>
ffffffff80206b37:	4c 89 ef             	mov    %r13,%rdi
ffffffff80206b3a:	48 8d 70 01          	lea    0x1(%rax),%rsi
ffffffff80206b3e:	e8 bd f0 ff ff       	callq  ffffffff80205c00 <writeblock>
ffffffff80206b43:	4c 8b 2d 76 e5 02 00 	mov    0x2e576(%rip),%r13        # ffffffff802350c0 <extern_ptr>
ffffffff80206b4a:	49 8d 45 0c          	lea    0xc(%r13),%rax
ffffffff80206b4e:	48 3b 05 63 e5 02 00 	cmp    0x2e563(%rip),%rax        # ffffffff802350b8 <extern_limit>
ffffffff80206b55:	0f 83 35 01 00 00    	jae    ffffffff80206c90 <extern_value+0xa90>
ffffffff80206b5b:	48 89 05 5e e5 02 00 	mov    %rax,0x2e55e(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff80206b62:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
ffffffff80206b67:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
ffffffff80206b6c:	4c 89 ff             	mov    %r15,%rdi
ffffffff80206b6f:	41 ff d6             	callq  *%r14
ffffffff80206b72:	8b 44 24 28          	mov    0x28(%rsp),%eax
ffffffff80206b76:	0f c8                	bswap  %eax
ffffffff80206b78:	41 89 45 00          	mov    %eax,0x0(%r13)
ffffffff80206b7c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
ffffffff80206b81:	48 0f c8             	bswap  %rax
ffffffff80206b84:	49 89 45 04          	mov    %rax,0x4(%r13)
ffffffff80206b88:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
ffffffff80206b8d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
ffffffff80206b92:	e9 96 f8 ff ff       	jmpq   ffffffff8020642d <extern_value+0x22d>
ffffffff80206b97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80206b9e:	00 00 
ffffffff80206ba0:	48 8b 05 09 e5 02 00 	mov    0x2e509(%rip),%rax        # ffffffff802350b0 <extern_output_first>
ffffffff80206ba7:	45 31 c0             	xor    %r8d,%r8d
ffffffff80206baa:	48 85 c0             	test   %rax,%rax
ffffffff80206bad:	0f 84 5d fd ff ff    	je     ffffffff80206910 <extern_value+0x710>
ffffffff80206bb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80206bb8:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff80206bbc:	48 29 c2             	sub    %rax,%rdx
ffffffff80206bbf:	48 8b 00             	mov    (%rax),%rax
ffffffff80206bc2:	4e 8d 44 02 f0       	lea    -0x10(%rdx,%r8,1),%r8
ffffffff80206bc7:	48 85 c0             	test   %rax,%rax
ffffffff80206bca:	75 ec                	jne    ffffffff80206bb8 <extern_value+0x9b8>
ffffffff80206bcc:	e9 06 f9 ff ff       	jmpq   ffffffff802064d7 <extern_value+0x2d7>
ffffffff80206bd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80206bd8:	48 8b 05 c9 e4 02 00 	mov    0x2e4c9(%rip),%rax        # ffffffff802350a8 <extern_output_block>
ffffffff80206bdf:	48 8b 15 da e4 02 00 	mov    0x2e4da(%rip),%rdx        # ffffffff802350c0 <extern_ptr>
ffffffff80206be6:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80206bea:	e9 c9 f8 ff ff       	jmpq   ffffffff802064b8 <extern_value+0x2b8>
ffffffff80206bef:	90                   	nop
ffffffff80206bf0:	bf 15 00 00 00       	mov    $0x15,%edi
ffffffff80206bf5:	e8 56 ef ff ff       	callq  ffffffff80205b50 <writecode64>
ffffffff80206bfa:	e9 64 fa ff ff       	jmpq   ffffffff80206663 <extern_value+0x463>
ffffffff80206bff:	90                   	nop
ffffffff80206c00:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80206c05:	e8 06 ee ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80206c0a:	48 8b 05 af e4 02 00 	mov    0x2e4af(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80206c11:	e9 e3 fd ff ff       	jmpq   ffffffff802069f9 <extern_value+0x7f9>
ffffffff80206c16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80206c1d:	00 00 00 
ffffffff80206c20:	4c 89 ef             	mov    %r13,%rdi
ffffffff80206c23:	e8 88 9b 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80206c28:	48 85 c0             	test   %rax,%rax
ffffffff80206c2b:	0f 84 0b 01 00 00    	je     ffffffff80206d3c <extern_value+0xb3c>
ffffffff80206c31:	48 8d 0d a8 e4 02 00 	lea    0x2e4a8(%rip),%rcx        # ffffffff802350e0 <extern_stack_init>
ffffffff80206c38:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff80206c3c:	48 8b 09             	mov    (%rcx),%rcx
ffffffff80206c3f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
ffffffff80206c43:	48 8d 35 96 e4 02 00 	lea    0x2e496(%rip),%rsi        # ffffffff802350e0 <extern_stack_init>
ffffffff80206c4a:	48 89 08             	mov    %rcx,(%rax)
ffffffff80206c4d:	48 8b 0d 84 f4 02 00 	mov    0x2f484(%rip),%rcx        # ffffffff802360d8 <extern_stack_init+0xff8>
ffffffff80206c54:	48 89 88 f8 0f 00 00 	mov    %rcx,0xff8(%rax)
ffffffff80206c5b:	48 89 c1             	mov    %rax,%rcx
ffffffff80206c5e:	48 29 f9             	sub    %rdi,%rcx
ffffffff80206c61:	48 29 ce             	sub    %rcx,%rsi
ffffffff80206c64:	81 c1 00 10 00 00    	add    $0x1000,%ecx
ffffffff80206c6a:	c1 e9 03             	shr    $0x3,%ecx
ffffffff80206c6d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
ffffffff80206c70:	e9 e5 fd ff ff       	jmpq   ffffffff80206a5a <extern_value+0x85a>
ffffffff80206c75:	0f 1f 00             	nopl   (%rax)
ffffffff80206c78:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80206c7d:	e8 8e ed ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80206c82:	48 8b 05 37 e4 02 00 	mov    0x2e437(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80206c89:	e9 39 fe ff ff       	jmpq   ffffffff80206ac7 <extern_value+0x8c7>
ffffffff80206c8e:	66 90                	xchg   %ax,%ax
ffffffff80206c90:	bf 0c 00 00 00       	mov    $0xc,%edi
ffffffff80206c95:	e8 76 ed ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80206c9a:	4c 8b 2d 1f e4 02 00 	mov    0x2e41f(%rip),%r13        # ffffffff802350c0 <extern_ptr>
ffffffff80206ca1:	49 8d 45 0c          	lea    0xc(%r13),%rax
ffffffff80206ca5:	e9 b1 fe ff ff       	jmpq   ffffffff80206b5b <extern_value+0x95b>
ffffffff80206caa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80206cb0:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80206cb5:	e8 56 ed ff ff       	callq  ffffffff80205a10 <grow_extern_output>
ffffffff80206cba:	48 8b 05 ff e3 02 00 	mov    0x2e3ff(%rip),%rax        # ffffffff802350c0 <extern_ptr>
ffffffff80206cc1:	e9 5b fe ff ff       	jmpq   ffffffff80206b21 <extern_value+0x921>
ffffffff80206cc6:	48 8d 3d c3 a7 01 00 	lea    0x1a7c3(%rip),%rdi        # ffffffff80221490 <caml_absf_mask+0x2e0>
ffffffff80206ccd:	e8 ae ef ff ff       	callq  ffffffff80205c80 <extern_invalid_argument>
ffffffff80206cd2:	48 8d 3d 6f a7 01 00 	lea    0x1a76f(%rip),%rdi        # ffffffff80221448 <caml_absf_mask+0x298>
ffffffff80206cd9:	e8 f2 ec ff ff       	callq  ffffffff802059d0 <extern_failwith>
ffffffff80206cde:	66 90                	xchg   %ax,%ax
ffffffff80206ce0:	48 8d 3d e1 a6 01 00 	lea    0x1a6e1(%rip),%rdi        # ffffffff802213c8 <caml_absf_mask+0x218>
ffffffff80206ce7:	e8 e4 ec ff ff       	callq  ffffffff802059d0 <extern_failwith>
ffffffff80206cec:	48 8d 3d 85 a8 01 00 	lea    0x1a885(%rip),%rdi        # ffffffff80221578 <caml_absf_mask+0x3c8>
ffffffff80206cf3:	e8 88 ef ff ff       	callq  ffffffff80205c80 <extern_invalid_argument>
ffffffff80206cf8:	48 8d 3d 59 a8 01 00 	lea    0x1a859(%rip),%rdi        # ffffffff80221558 <caml_absf_mask+0x3a8>
ffffffff80206cff:	e8 7c ef ff ff       	callq  ffffffff80205c80 <extern_invalid_argument>
ffffffff80206d04:	4c 89 ee             	mov    %r13,%rsi
ffffffff80206d07:	48 8d 3d d2 a7 01 00 	lea    0x1a7d2(%rip),%rdi        # ffffffff802214e0 <caml_absf_mask+0x330>
ffffffff80206d0e:	31 c0                	xor    %eax,%eax
ffffffff80206d10:	e8 bb b5 00 00       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff80206d15:	48 8d 3d 9c a7 01 00 	lea    0x1a79c(%rip),%rdi        # ffffffff802214b8 <caml_absf_mask+0x308>
ffffffff80206d1c:	e8 5f ef ff ff       	callq  ffffffff80205c80 <extern_invalid_argument>
ffffffff80206d21:	e8 7a 93 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80206d26:	48 85 c9             	test   %rcx,%rcx
ffffffff80206d29:	75 05                	jne    ffffffff80206d30 <extern_value+0xb30>
ffffffff80206d2b:	e8 40 ec ff ff       	callq  ffffffff80205970 <free_extern_output.part.0>
ffffffff80206d30:	48 8d 3d 71 a8 01 00 	lea    0x1a871(%rip),%rdi        # ffffffff802215a8 <caml_absf_mask+0x3f8>
ffffffff80206d37:	e8 04 07 00 00       	callq  ffffffff80207440 <caml_failwith>
ffffffff80206d3c:	e8 0f ef ff ff       	callq  ffffffff80205c50 <extern_stack_overflow>
ffffffff80206d41:	48 8d 3d d0 a7 01 00 	lea    0x1a7d0(%rip),%rdi        # ffffffff80221518 <caml_absf_mask+0x368>
ffffffff80206d48:	e8 83 ec ff ff       	callq  ffffffff802059d0 <extern_failwith>
ffffffff80206d4d:	48 8d 3d b4 a6 01 00 	lea    0x1a6b4(%rip),%rdi        # ffffffff80221408 <caml_absf_mask+0x258>
ffffffff80206d54:	e8 77 ec ff ff       	callq  ffffffff802059d0 <extern_failwith>
ffffffff80206d59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80206d60 <caml_output_val>:
ffffffff80206d60:	41 56                	push   %r14
ffffffff80206d62:	41 55                	push   %r13
ffffffff80206d64:	49 89 d5             	mov    %rdx,%r13
ffffffff80206d67:	41 54                	push   %r12
ffffffff80206d69:	49 89 f4             	mov    %rsi,%r12
ffffffff80206d6c:	55                   	push   %rbp
ffffffff80206d6d:	48 89 fd             	mov    %rdi,%rbp
ffffffff80206d70:	53                   	push   %rbx
ffffffff80206d71:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80206d75:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80206d7c:	00 00 
ffffffff80206d7e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff80206d83:	31 c0                	xor    %eax,%eax
ffffffff80206d85:	e8 56 58 00 00       	callq  ffffffff8020c5e0 <caml_channel_binary_mode>
ffffffff80206d8a:	85 c0                	test   %eax,%eax
ffffffff80206d8c:	0f 84 7e 00 00 00    	je     ffffffff80206e10 <caml_output_val+0xb0>
ffffffff80206d92:	e8 79 eb ff ff       	callq  ffffffff80205910 <init_extern_output>
ffffffff80206d97:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
ffffffff80206d9c:	4c 89 ee             	mov    %r13,%rsi
ffffffff80206d9f:	4c 89 e7             	mov    %r12,%rdi
ffffffff80206da2:	4c 89 f2             	mov    %r14,%rdx
ffffffff80206da5:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
ffffffff80206daa:	e8 51 f4 ff ff       	callq  ffffffff80206200 <extern_value>
ffffffff80206daf:	48 63 54 24 0c       	movslq 0xc(%rsp),%rdx
ffffffff80206db4:	4c 89 f6             	mov    %r14,%rsi
ffffffff80206db7:	48 89 ef             	mov    %rbp,%rdi
ffffffff80206dba:	48 8b 1d ef e2 02 00 	mov    0x2e2ef(%rip),%rbx        # ffffffff802350b0 <extern_output_first>
ffffffff80206dc1:	e8 2a 5a 00 00       	callq  ffffffff8020c7f0 <caml_really_putblock>
ffffffff80206dc6:	48 85 db             	test   %rbx,%rbx
ffffffff80206dc9:	74 28                	je     ffffffff80206df3 <caml_output_val+0x93>
ffffffff80206dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80206dd0:	48 8b 53 08          	mov    0x8(%rbx),%rdx
ffffffff80206dd4:	48 8d 73 10          	lea    0x10(%rbx),%rsi
ffffffff80206dd8:	48 89 ef             	mov    %rbp,%rdi
ffffffff80206ddb:	48 29 f2             	sub    %rsi,%rdx
ffffffff80206dde:	e8 0d 5a 00 00       	callq  ffffffff8020c7f0 <caml_really_putblock>
ffffffff80206de3:	48 89 df             	mov    %rbx,%rdi
ffffffff80206de6:	48 8b 1b             	mov    (%rbx),%rbx
ffffffff80206de9:	e8 62 9b 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80206dee:	48 85 db             	test   %rbx,%rbx
ffffffff80206df1:	75 dd                	jne    ffffffff80206dd0 <caml_output_val+0x70>
ffffffff80206df3:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffff80206df8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80206dff:	00 00 
ffffffff80206e01:	75 19                	jne    ffffffff80206e1c <caml_output_val+0xbc>
ffffffff80206e03:	48 83 c4 40          	add    $0x40,%rsp
ffffffff80206e07:	5b                   	pop    %rbx
ffffffff80206e08:	5d                   	pop    %rbp
ffffffff80206e09:	41 5c                	pop    %r12
ffffffff80206e0b:	41 5d                	pop    %r13
ffffffff80206e0d:	41 5e                	pop    %r14
ffffffff80206e0f:	c3                   	retq   
ffffffff80206e10:	48 8d 3d d1 a7 01 00 	lea    0x1a7d1(%rip),%rdi        # ffffffff802215e8 <caml_absf_mask+0x438>
ffffffff80206e17:	e8 24 06 00 00       	callq  ffffffff80207440 <caml_failwith>
ffffffff80206e1c:	e8 7f 92 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80206e21:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80206e28:	00 00 00 00 
ffffffff80206e2c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80206e30 <caml_output_value>:
ffffffff80206e30:	55                   	push   %rbp
ffffffff80206e31:	53                   	push   %rbx
ffffffff80206e32:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff80206e36:	48 8b 1d 3b d2 03 00 	mov    0x3d23b(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff80206e3d:	48 8b 05 5c 4d 03 00 	mov    0x34d5c(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff80206e44:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff80206e49:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff80206e4e:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff80206e53:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
ffffffff80206e58:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff80206e5f:	00 00 
ffffffff80206e61:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
ffffffff80206e66:	31 c9                	xor    %ecx,%ecx
ffffffff80206e68:	48 89 15 09 d2 03 00 	mov    %rdx,0x3d209(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80206e6f:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff80206e74:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
ffffffff80206e79:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff80206e7e:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
ffffffff80206e83:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff80206e88:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff80206e8d:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff80206e94:	00 00 
ffffffff80206e96:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
ffffffff80206e9d:	00 00 
ffffffff80206e9f:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
ffffffff80206ea4:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff80206ea8:	48 85 c0             	test   %rax,%rax
ffffffff80206eab:	74 05                	je     ffffffff80206eb2 <caml_output_value+0x82>
ffffffff80206ead:	48 89 ef             	mov    %rbp,%rdi
ffffffff80206eb0:	ff d0                	callq  *%rax
ffffffff80206eb2:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80206eb7:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80206ebc:	48 89 ef             	mov    %rbp,%rdi
ffffffff80206ebf:	e8 9c fe ff ff       	callq  ffffffff80206d60 <caml_output_val>
ffffffff80206ec4:	48 8b 05 cd 4c 03 00 	mov    0x34ccd(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff80206ecb:	48 85 c0             	test   %rax,%rax
ffffffff80206ece:	74 05                	je     ffffffff80206ed5 <caml_output_value+0xa5>
ffffffff80206ed0:	48 89 ef             	mov    %rbp,%rdi
ffffffff80206ed3:	ff d0                	callq  *%rax
ffffffff80206ed5:	48 89 1d 9c d1 03 00 	mov    %rbx,0x3d19c(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80206edc:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffff80206ee1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80206ee8:	00 00 
ffffffff80206eea:	75 0c                	jne    ffffffff80206ef8 <caml_output_value+0xc8>
ffffffff80206eec:	48 83 c4 78          	add    $0x78,%rsp
ffffffff80206ef0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80206ef5:	5b                   	pop    %rbx
ffffffff80206ef6:	5d                   	pop    %rbp
ffffffff80206ef7:	c3                   	retq   
ffffffff80206ef8:	e8 a3 91 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80206efd:	0f 1f 00             	nopl   (%rax)

ffffffff80206f00 <caml_output_value_to_bytes>:
ffffffff80206f00:	41 56                	push   %r14
ffffffff80206f02:	41 55                	push   %r13
ffffffff80206f04:	41 54                	push   %r12
ffffffff80206f06:	49 89 f4             	mov    %rsi,%r12
ffffffff80206f09:	55                   	push   %rbp
ffffffff80206f0a:	48 89 fd             	mov    %rdi,%rbp
ffffffff80206f0d:	53                   	push   %rbx
ffffffff80206f0e:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80206f12:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80206f19:	00 00 
ffffffff80206f1b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff80206f20:	31 c0                	xor    %eax,%eax
ffffffff80206f22:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
ffffffff80206f27:	e8 e4 e9 ff ff       	callq  ffffffff80205910 <init_extern_output>
ffffffff80206f2c:	4c 89 e6             	mov    %r12,%rsi
ffffffff80206f2f:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
ffffffff80206f34:	4c 89 f2             	mov    %r14,%rdx
ffffffff80206f37:	48 89 ef             	mov    %rbp,%rdi
ffffffff80206f3a:	e8 c1 f2 ff ff       	callq  ffffffff80206200 <extern_value>
ffffffff80206f3f:	48 63 7c 24 0c       	movslq 0xc(%rsp),%rdi
ffffffff80206f44:	48 8b 1d 65 e1 02 00 	mov    0x2e165(%rip),%rbx        # ffffffff802350b0 <extern_output_first>
ffffffff80206f4b:	48 01 c7             	add    %rax,%rdi
ffffffff80206f4e:	e8 ed 1d 01 00       	callq  ffffffff80218d40 <caml_alloc_string>
ffffffff80206f53:	48 63 54 24 0c       	movslq 0xc(%rsp),%rdx
ffffffff80206f58:	4c 89 f6             	mov    %r14,%rsi
ffffffff80206f5b:	48 89 c7             	mov    %rax,%rdi
ffffffff80206f5e:	49 89 c5             	mov    %rax,%r13
ffffffff80206f61:	e8 3d 91 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80206f66:	4c 63 64 24 0c       	movslq 0xc(%rsp),%r12
ffffffff80206f6b:	48 85 db             	test   %rbx,%rbx
ffffffff80206f6e:	74 2a                	je     ffffffff80206f9a <caml_output_value_to_bytes+0x9a>
ffffffff80206f70:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
ffffffff80206f74:	48 8d 73 10          	lea    0x10(%rbx),%rsi
ffffffff80206f78:	4b 8d 3c 2c          	lea    (%r12,%r13,1),%rdi
ffffffff80206f7c:	48 29 f5             	sub    %rsi,%rbp
ffffffff80206f7f:	48 89 ea             	mov    %rbp,%rdx
ffffffff80206f82:	49 01 ec             	add    %rbp,%r12
ffffffff80206f85:	e8 19 91 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80206f8a:	48 89 df             	mov    %rbx,%rdi
ffffffff80206f8d:	48 8b 1b             	mov    (%rbx),%rbx
ffffffff80206f90:	e8 bb 99 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80206f95:	48 85 db             	test   %rbx,%rbx
ffffffff80206f98:	75 d6                	jne    ffffffff80206f70 <caml_output_value_to_bytes+0x70>
ffffffff80206f9a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffff80206f9f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80206fa6:	00 00 
ffffffff80206fa8:	75 10                	jne    ffffffff80206fba <caml_output_value_to_bytes+0xba>
ffffffff80206faa:	48 83 c4 40          	add    $0x40,%rsp
ffffffff80206fae:	4c 89 e8             	mov    %r13,%rax
ffffffff80206fb1:	5b                   	pop    %rbx
ffffffff80206fb2:	5d                   	pop    %rbp
ffffffff80206fb3:	41 5c                	pop    %r12
ffffffff80206fb5:	41 5d                	pop    %r13
ffffffff80206fb7:	41 5e                	pop    %r14
ffffffff80206fb9:	c3                   	retq   
ffffffff80206fba:	e8 e1 90 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80206fbf:	90                   	nop

ffffffff80206fc0 <caml_output_value_to_string>:
ffffffff80206fc0:	e9 3b ff ff ff       	jmpq   ffffffff80206f00 <caml_output_value_to_bytes>
ffffffff80206fc5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80206fcc:	00 00 00 00 

ffffffff80206fd0 <caml_output_value_to_block>:
ffffffff80206fd0:	41 57                	push   %r15
ffffffff80206fd2:	41 56                	push   %r14
ffffffff80206fd4:	4c 8d 72 14          	lea    0x14(%rdx),%r14
ffffffff80206fd8:	41 55                	push   %r13
ffffffff80206fda:	41 54                	push   %r12
ffffffff80206fdc:	41 bc 14 00 00 00    	mov    $0x14,%r12d
ffffffff80206fe2:	55                   	push   %rbp
ffffffff80206fe3:	48 89 d5             	mov    %rdx,%rbp
ffffffff80206fe6:	53                   	push   %rbx
ffffffff80206fe7:	48 89 cb             	mov    %rcx,%rbx
ffffffff80206fea:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff80206fee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80206ff5:	00 00 
ffffffff80206ff7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff80206ffc:	31 c0                	xor    %eax,%eax
ffffffff80206ffe:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
ffffffff80207003:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
ffffffff80207007:	4c 89 35 ba e0 02 00 	mov    %r14,0x2e0ba(%rip)        # ffffffff802350c8 <extern_userprovided_output>
ffffffff8020700e:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
ffffffff80207013:	4c 89 fa             	mov    %r15,%rdx
ffffffff80207016:	4c 89 35 a3 e0 02 00 	mov    %r14,0x2e0a3(%rip)        # ffffffff802350c0 <extern_ptr>
ffffffff8020701d:	48 89 05 94 e0 02 00 	mov    %rax,0x2e094(%rip)        # ffffffff802350b8 <extern_limit>
ffffffff80207024:	e8 d7 f1 ff ff       	callq  ffffffff80206200 <extern_value>
ffffffff80207029:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
ffffffff8020702d:	48 89 c2             	mov    %rax,%rdx
ffffffff80207030:	4c 8d 68 14          	lea    0x14(%rax),%r13
ffffffff80207034:	83 f9 14             	cmp    $0x14,%ecx
ffffffff80207037:	74 19                	je     ffffffff80207052 <caml_output_value_to_block+0x82>
ffffffff80207039:	4c 63 e1             	movslq %ecx,%r12
ffffffff8020703c:	4d 8d 2c 04          	lea    (%r12,%rax,1),%r13
ffffffff80207040:	49 39 dd             	cmp    %rbx,%r13
ffffffff80207043:	7f 42                	jg     ffffffff80207087 <caml_output_value_to_block+0xb7>
ffffffff80207045:	4a 8d 7c 25 00       	lea    0x0(%rbp,%r12,1),%rdi
ffffffff8020704a:	4c 89 f6             	mov    %r14,%rsi
ffffffff8020704d:	e8 53 90 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff80207052:	4c 89 e2             	mov    %r12,%rdx
ffffffff80207055:	4c 89 fe             	mov    %r15,%rsi
ffffffff80207058:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020705b:	e8 43 90 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80207060:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffff80207065:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020706c:	00 00 
ffffffff8020706e:	75 12                	jne    ffffffff80207082 <caml_output_value_to_block+0xb2>
ffffffff80207070:	48 83 c4 48          	add    $0x48,%rsp
ffffffff80207074:	4c 89 e8             	mov    %r13,%rax
ffffffff80207077:	5b                   	pop    %rbx
ffffffff80207078:	5d                   	pop    %rbp
ffffffff80207079:	41 5c                	pop    %r12
ffffffff8020707b:	41 5d                	pop    %r13
ffffffff8020707d:	41 5e                	pop    %r14
ffffffff8020707f:	41 5f                	pop    %r15
ffffffff80207081:	c3                   	retq   
ffffffff80207082:	e8 19 90 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80207087:	48 8d 3d ea a2 01 00 	lea    0x1a2ea(%rip),%rdi        # ffffffff80221378 <caml_absf_mask+0x1c8>
ffffffff8020708e:	e8 ad 03 00 00       	callq  ffffffff80207440 <caml_failwith>
ffffffff80207093:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020709a:	00 00 00 00 
ffffffff8020709e:	66 90                	xchg   %ax,%ax

ffffffff802070a0 <caml_output_value_to_buffer>:
ffffffff802070a0:	48 d1 fa             	sar    %rdx
ffffffff802070a3:	49 89 f9             	mov    %rdi,%r9
ffffffff802070a6:	48 d1 fe             	sar    %rsi
ffffffff802070a9:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802070ad:	48 89 cf             	mov    %rcx,%rdi
ffffffff802070b0:	48 89 d1             	mov    %rdx,%rcx
ffffffff802070b3:	4a 8d 14 0e          	lea    (%rsi,%r9,1),%rdx
ffffffff802070b7:	4c 89 c6             	mov    %r8,%rsi
ffffffff802070ba:	e8 11 ff ff ff       	callq  ffffffff80206fd0 <caml_output_value_to_block>
ffffffff802070bf:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802070c3:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff802070c8:	c3                   	retq   
ffffffff802070c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802070d0 <caml_output_value_to_malloc>:
ffffffff802070d0:	41 57                	push   %r15
ffffffff802070d2:	49 89 f7             	mov    %rsi,%r15
ffffffff802070d5:	41 56                	push   %r14
ffffffff802070d7:	49 89 fe             	mov    %rdi,%r14
ffffffff802070da:	41 55                	push   %r13
ffffffff802070dc:	41 54                	push   %r12
ffffffff802070de:	49 89 d4             	mov    %rdx,%r12
ffffffff802070e1:	55                   	push   %rbp
ffffffff802070e2:	48 89 cd             	mov    %rcx,%rbp
ffffffff802070e5:	53                   	push   %rbx
ffffffff802070e6:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff802070ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802070f1:	00 00 
ffffffff802070f3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff802070f8:	31 c0                	xor    %eax,%eax
ffffffff802070fa:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
ffffffff802070ff:	e8 0c e8 ff ff       	callq  ffffffff80205910 <init_extern_output>
ffffffff80207104:	4c 89 f7             	mov    %r14,%rdi
ffffffff80207107:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
ffffffff8020710c:	4c 89 ea             	mov    %r13,%rdx
ffffffff8020710f:	4c 89 fe             	mov    %r15,%rsi
ffffffff80207112:	e8 e9 f0 ff ff       	callq  ffffffff80206200 <extern_value>
ffffffff80207117:	48 63 7c 24 0c       	movslq 0xc(%rsp),%rdi
ffffffff8020711c:	48 89 c3             	mov    %rax,%rbx
ffffffff8020711f:	48 01 c7             	add    %rax,%rdi
ffffffff80207122:	e8 89 96 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80207127:	48 85 c0             	test   %rax,%rax
ffffffff8020712a:	0f 84 8a 00 00 00    	je     ffffffff802071ba <caml_output_value_to_malloc+0xea>
ffffffff80207130:	48 63 54 24 0c       	movslq 0xc(%rsp),%rdx
ffffffff80207135:	49 89 04 24          	mov    %rax,(%r12)
ffffffff80207139:	4c 89 ee             	mov    %r13,%rsi
ffffffff8020713c:	48 89 c7             	mov    %rax,%rdi
ffffffff8020713f:	48 01 d3             	add    %rdx,%rbx
ffffffff80207142:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff80207146:	e8 58 8f ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff8020714b:	48 8b 1d 5e df 02 00 	mov    0x2df5e(%rip),%rbx        # ffffffff802350b0 <extern_output_first>
ffffffff80207152:	48 89 c1             	mov    %rax,%rcx
ffffffff80207155:	48 63 44 24 0c       	movslq 0xc(%rsp),%rax
ffffffff8020715a:	48 01 c1             	add    %rax,%rcx
ffffffff8020715d:	48 85 db             	test   %rbx,%rbx
ffffffff80207160:	74 2a                	je     ffffffff8020718c <caml_output_value_to_malloc+0xbc>
ffffffff80207162:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80207168:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
ffffffff8020716c:	48 8d 73 10          	lea    0x10(%rbx),%rsi
ffffffff80207170:	48 89 cf             	mov    %rcx,%rdi
ffffffff80207173:	48 29 f5             	sub    %rsi,%rbp
ffffffff80207176:	48 89 ea             	mov    %rbp,%rdx
ffffffff80207179:	e8 25 8f ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff8020717e:	48 8b 1b             	mov    (%rbx),%rbx
ffffffff80207181:	48 89 c1             	mov    %rax,%rcx
ffffffff80207184:	48 01 e9             	add    %rbp,%rcx
ffffffff80207187:	48 85 db             	test   %rbx,%rbx
ffffffff8020718a:	75 dc                	jne    ffffffff80207168 <caml_output_value_to_malloc+0x98>
ffffffff8020718c:	48 83 3d 34 df 02 00 	cmpq   $0x0,0x2df34(%rip)        # ffffffff802350c8 <extern_userprovided_output>
ffffffff80207193:	00 
ffffffff80207194:	75 05                	jne    ffffffff8020719b <caml_output_value_to_malloc+0xcb>
ffffffff80207196:	e8 d5 e7 ff ff       	callq  ffffffff80205970 <free_extern_output.part.0>
ffffffff8020719b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
ffffffff802071a0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff802071a7:	00 00 
ffffffff802071a9:	75 14                	jne    ffffffff802071bf <caml_output_value_to_malloc+0xef>
ffffffff802071ab:	48 83 c4 48          	add    $0x48,%rsp
ffffffff802071af:	5b                   	pop    %rbx
ffffffff802071b0:	5d                   	pop    %rbp
ffffffff802071b1:	41 5c                	pop    %r12
ffffffff802071b3:	41 5d                	pop    %r13
ffffffff802071b5:	41 5e                	pop    %r14
ffffffff802071b7:	41 5f                	pop    %r15
ffffffff802071b9:	c3                   	retq   
ffffffff802071ba:	e8 31 e8 ff ff       	callq  ffffffff802059f0 <extern_out_of_memory>
ffffffff802071bf:	e8 dc 8e ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802071c4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802071cb:	00 00 00 
ffffffff802071ce:	66 90                	xchg   %ax,%ax

ffffffff802071d0 <caml_raise>:
ffffffff802071d0:	48 8b 05 b9 49 03 00 	mov    0x349b9(%rip),%rax        # ffffffff8023bb90 <caml_channel_mutex_unlock_exn>
ffffffff802071d7:	55                   	push   %rbp
ffffffff802071d8:	48 89 fd             	mov    %rdi,%rbp
ffffffff802071db:	48 85 c0             	test   %rax,%rax
ffffffff802071de:	74 02                	je     ffffffff802071e2 <caml_raise+0x12>
ffffffff802071e0:	ff d0                	callq  *%rax
ffffffff802071e2:	48 8b 15 4f 2f 03 00 	mov    0x32f4f(%rip),%rdx        # ffffffff8023a138 <caml_exception_pointer>
ffffffff802071e9:	48 85 d2             	test   %rdx,%rdx
ffffffff802071ec:	74 2e                	je     ffffffff8020721c <caml_raise+0x4c>
ffffffff802071ee:	48 8b 05 83 ce 03 00 	mov    0x3ce83(%rip),%rax        # ffffffff80244078 <caml_local_roots>
ffffffff802071f5:	48 39 c2             	cmp    %rax,%rdx
ffffffff802071f8:	77 15                	ja     ffffffff8020720f <caml_raise+0x3f>
ffffffff802071fa:	eb 18                	jmp    ffffffff80207214 <caml_raise+0x44>
ffffffff802071fc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80207200:	48 8b 00             	mov    (%rax),%rax
ffffffff80207203:	48 89 05 6e ce 03 00 	mov    %rax,0x3ce6e(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020720a:	48 39 c2             	cmp    %rax,%rdx
ffffffff8020720d:	76 05                	jbe    ffffffff80207214 <caml_raise+0x44>
ffffffff8020720f:	48 85 c0             	test   %rax,%rax
ffffffff80207212:	75 ec                	jne    ffffffff80207200 <caml_raise+0x30>
ffffffff80207214:	48 89 ef             	mov    %rbp,%rdi
ffffffff80207217:	e8 d4 cb ff ff       	callq  ffffffff80203df0 <caml_raise_exception>
ffffffff8020721c:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020721f:	e8 7c be 00 00       	callq  ffffffff802130a0 <caml_fatal_uncaught_exception>
ffffffff80207224:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020722b:	00 00 00 00 
ffffffff8020722f:	90                   	nop

ffffffff80207230 <caml_raise_constant>:
ffffffff80207230:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207234:	e8 97 ff ff ff       	callq  ffffffff802071d0 <caml_raise>
ffffffff80207239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80207240 <caml_raise_with_arg>:
ffffffff80207240:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff80207247:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020724c:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80207251:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff80207255:	31 f6                	xor    %esi,%esi
ffffffff80207257:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020725e:	00 00 
ffffffff80207260:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff80207267:	00 
ffffffff80207268:	31 c0                	xor    %eax,%eax
ffffffff8020726a:	48 8b 05 07 ce 03 00 	mov    0x3ce07(%rip),%rax        # ffffffff80244078 <caml_local_roots>
ffffffff80207271:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff80207278:	00 00 
ffffffff8020727a:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
ffffffff80207281:	00 00 
ffffffff80207283:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff80207288:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff8020728d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff80207292:	48 89 e0             	mov    %rsp,%rax
ffffffff80207295:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffff8020729a:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff8020729f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff802072a4:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff802072a9:	48 89 05 c8 cd 03 00 	mov    %rax,0x3cdc8(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802072b0:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff802072b5:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff802072bc:	00 00 
ffffffff802072be:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff802072c5:	00 00 
ffffffff802072c7:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff802072ce:	00 00 
ffffffff802072d0:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff802072d5:	e8 26 19 01 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff802072da:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff802072df:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff802072e4:	48 89 10             	mov    %rdx,(%rax)
ffffffff802072e7:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff802072eb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff802072f0:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff802072f4:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
ffffffff802072f9:	e8 d2 fe ff ff       	callq  ffffffff802071d0 <caml_raise>
ffffffff802072fe:	66 90                	xchg   %ax,%ax

ffffffff80207300 <caml_raise_with_args>:
ffffffff80207300:	55                   	push   %rbp
ffffffff80207301:	89 f5                	mov    %esi,%ebp
ffffffff80207303:	53                   	push   %rbx
ffffffff80207304:	48 89 d3             	mov    %rdx,%rbx
ffffffff80207307:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
ffffffff8020730e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80207313:	8d 7e 01             	lea    0x1(%rsi),%edi
ffffffff80207316:	48 63 ff             	movslq %edi,%rdi
ffffffff80207319:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80207320:	00 00 
ffffffff80207322:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
ffffffff80207329:	00 
ffffffff8020732a:	31 c0                	xor    %eax,%eax
ffffffff8020732c:	48 8b 05 45 cd 03 00 	mov    0x3cd45(%rip),%rax        # ffffffff80244078 <caml_local_roots>
ffffffff80207333:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
ffffffff80207338:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020733f:	00 00 
ffffffff80207341:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80207346:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff8020734b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80207350:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80207355:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
ffffffff8020735a:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
ffffffff8020735f:	48 89 05 12 cd 03 00 	mov    %rax,0x3cd12(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80207366:	48 63 c6             	movslq %esi,%rax
ffffffff80207369:	31 f6                	xor    %esi,%esi
ffffffff8020736b:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80207372:	00 00 
ffffffff80207374:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff80207379:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
ffffffff80207380:	00 00 
ffffffff80207382:	e8 79 18 01 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff80207387:	48 89 c7             	mov    %rax,%rdi
ffffffff8020738a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8020738f:	48 89 07             	mov    %rax,(%rdi)
ffffffff80207392:	85 ed                	test   %ebp,%ebp
ffffffff80207394:	7e 2c                	jle    ffffffff802073c2 <caml_raise_with_args+0xc2>
ffffffff80207396:	8d 45 ff             	lea    -0x1(%rbp),%eax
ffffffff80207399:	48 29 fb             	sub    %rdi,%rbx
ffffffff8020739c:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
ffffffff802073a0:	4c 8d 44 c7 10       	lea    0x10(%rdi,%rax,8),%r8
ffffffff802073a5:	48 89 da             	mov    %rbx,%rdx
ffffffff802073a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802073af:	00 
ffffffff802073b0:	48 8b 74 0a f8       	mov    -0x8(%rdx,%rcx,1),%rsi
ffffffff802073b5:	48 83 c1 08          	add    $0x8,%rcx
ffffffff802073b9:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
ffffffff802073bd:	4c 39 c1             	cmp    %r8,%rcx
ffffffff802073c0:	75 ee                	jne    ffffffff802073b0 <caml_raise_with_args+0xb0>
ffffffff802073c2:	e8 09 fe ff ff       	callq  ffffffff802071d0 <caml_raise>
ffffffff802073c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802073ce:	00 00 

ffffffff802073d0 <caml_raise_with_string>:
ffffffff802073d0:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff802073d4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff802073d9:	48 89 f7             	mov    %rsi,%rdi
ffffffff802073dc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802073e3:	00 00 
ffffffff802073e5:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff802073ea:	31 c0                	xor    %eax,%eax
ffffffff802073ec:	48 8b 05 85 cc 03 00 	mov    0x3cc85(%rip),%rax        # ffffffff80244078 <caml_local_roots>
ffffffff802073f3:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff802073fa:	00 00 
ffffffff802073fc:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80207403:	00 00 
ffffffff80207405:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8020740a:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff8020740f:	48 89 05 62 cc 03 00 	mov    %rax,0x3cc62(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80207416:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff8020741b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80207420:	e8 eb 19 01 00       	callq  ffffffff80218e10 <caml_copy_string>
ffffffff80207425:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8020742a:	48 89 c6             	mov    %rax,%rsi
ffffffff8020742d:	e8 0e fe ff ff       	callq  ffffffff80207240 <caml_raise_with_arg>
ffffffff80207432:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207439:	00 00 00 00 
ffffffff8020743d:	0f 1f 00             	nopl   (%rax)

ffffffff80207440 <caml_failwith>:
ffffffff80207440:	48 89 fe             	mov    %rdi,%rsi
ffffffff80207443:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207447:	48 8d 3d 5a 0c 02 00 	lea    0x20c5a(%rip),%rdi        # ffffffff802280a8 <caml_exn_Failure>
ffffffff8020744e:	e8 7d ff ff ff       	callq  ffffffff802073d0 <caml_raise_with_string>
ffffffff80207453:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020745a:	00 00 00 00 
ffffffff8020745e:	66 90                	xchg   %ax,%ax

ffffffff80207460 <caml_failwith_value>:
ffffffff80207460:	48 89 fe             	mov    %rdi,%rsi
ffffffff80207463:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207467:	48 8d 3d 3a 0c 02 00 	lea    0x20c3a(%rip),%rdi        # ffffffff802280a8 <caml_exn_Failure>
ffffffff8020746e:	e8 cd fd ff ff       	callq  ffffffff80207240 <caml_raise_with_arg>
ffffffff80207473:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020747a:	00 00 00 00 
ffffffff8020747e:	66 90                	xchg   %ax,%ax

ffffffff80207480 <caml_invalid_argument>:
ffffffff80207480:	48 89 fe             	mov    %rdi,%rsi
ffffffff80207483:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207487:	48 8d 3d 42 0c 02 00 	lea    0x20c42(%rip),%rdi        # ffffffff802280d0 <caml_exn_Invalid_argument>
ffffffff8020748e:	e8 3d ff ff ff       	callq  ffffffff802073d0 <caml_raise_with_string>
ffffffff80207493:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020749a:	00 00 00 00 
ffffffff8020749e:	66 90                	xchg   %ax,%ax

ffffffff802074a0 <caml_invalid_argument_value>:
ffffffff802074a0:	48 89 fe             	mov    %rdi,%rsi
ffffffff802074a3:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802074a7:	48 8d 3d 22 0c 02 00 	lea    0x20c22(%rip),%rdi        # ffffffff802280d0 <caml_exn_Invalid_argument>
ffffffff802074ae:	e8 8d fd ff ff       	callq  ffffffff80207240 <caml_raise_with_arg>
ffffffff802074b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802074ba:	00 00 00 00 
ffffffff802074be:	66 90                	xchg   %ax,%ax

ffffffff802074c0 <caml_raise_out_of_memory>:
ffffffff802074c0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802074c4:	48 8d 3d 7d 0b 02 00 	lea    0x20b7d(%rip),%rdi        # ffffffff80228048 <caml_exn_Out_of_memory>
ffffffff802074cb:	e8 00 fd ff ff       	callq  ffffffff802071d0 <caml_raise>

ffffffff802074d0 <caml_raise_stack_overflow>:
ffffffff802074d0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802074d4:	48 8d 3d f5 0c 02 00 	lea    0x20cf5(%rip),%rdi        # ffffffff802281d0 <caml_exn_Stack_overflow>
ffffffff802074db:	e8 f0 fc ff ff       	callq  ffffffff802071d0 <caml_raise>

ffffffff802074e0 <caml_raise_sys_error>:
ffffffff802074e0:	48 89 fe             	mov    %rdi,%rsi
ffffffff802074e3:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802074e7:	48 8d 3d 8a 0b 02 00 	lea    0x20b8a(%rip),%rdi        # ffffffff80228078 <caml_exn_Sys_error>
ffffffff802074ee:	e8 4d fd ff ff       	callq  ffffffff80207240 <caml_raise_with_arg>
ffffffff802074f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802074fa:	00 00 00 00 
ffffffff802074fe:	66 90                	xchg   %ax,%ax

ffffffff80207500 <caml_raise_end_of_file>:
ffffffff80207500:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207504:	48 8d 3d fd 0b 02 00 	lea    0x20bfd(%rip),%rdi        # ffffffff80228108 <caml_exn_End_of_file>
ffffffff8020750b:	e8 c0 fc ff ff       	callq  ffffffff802071d0 <caml_raise>

ffffffff80207510 <caml_raise_zero_divide>:
ffffffff80207510:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207514:	48 8d 3d 1d 0c 02 00 	lea    0x20c1d(%rip),%rdi        # ffffffff80228138 <caml_exn_Division_by_zero>
ffffffff8020751b:	e8 b0 fc ff ff       	callq  ffffffff802071d0 <caml_raise>

ffffffff80207520 <caml_raise_not_found>:
ffffffff80207520:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207524:	48 8d 3d 45 0c 02 00 	lea    0x20c45(%rip),%rdi        # ffffffff80228170 <caml_exn_Not_found>
ffffffff8020752b:	e8 a0 fc ff ff       	callq  ffffffff802071d0 <caml_raise>

ffffffff80207530 <caml_raise_sys_blocked_io>:
ffffffff80207530:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207534:	48 8d 3d c5 0c 02 00 	lea    0x20cc5(%rip),%rdi        # ffffffff80228200 <caml_exn_Sys_blocked_io>
ffffffff8020753b:	e8 90 fc ff ff       	callq  ffffffff802071d0 <caml_raise>

ffffffff80207540 <caml_array_bound_error>:
ffffffff80207540:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207544:	48 8b 05 f5 2b 03 00 	mov    0x32bf5(%rip),%rax        # ffffffff8023a140 <caml_array_bound_error_exn>
ffffffff8020754b:	48 85 c0             	test   %rax,%rax
ffffffff8020754e:	74 08                	je     ffffffff80207558 <caml_array_bound_error+0x18>
ffffffff80207550:	48 8b 38             	mov    (%rax),%rdi
ffffffff80207553:	e8 78 fc ff ff       	callq  ffffffff802071d0 <caml_raise>
ffffffff80207558:	48 8d 3d c9 a0 01 00 	lea    0x1a0c9(%rip),%rdi        # ffffffff80221628 <caml_absf_mask+0x478>
ffffffff8020755f:	e8 ec da ff ff       	callq  ffffffff80205050 <caml_named_value>
ffffffff80207564:	48 89 05 d5 2b 03 00 	mov    %rax,0x32bd5(%rip)        # ffffffff8023a140 <caml_array_bound_error_exn>
ffffffff8020756b:	48 85 c0             	test   %rax,%rax
ffffffff8020756e:	75 e0                	jne    ffffffff80207550 <caml_array_bound_error+0x10>
ffffffff80207570:	48 8b 0d 71 0f 04 00 	mov    0x40f71(%rip),%rcx        # ffffffff802484e8 <stderr>
ffffffff80207577:	ba 3f 00 00 00       	mov    $0x3f,%edx
ffffffff8020757c:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80207581:	48 8d 3d c0 a0 01 00 	lea    0x1a0c0(%rip),%rdi        # ffffffff80221648 <caml_absf_mask+0x498>
ffffffff80207588:	e8 1f 8b ff ff       	callq  ffffffff802000ac <fwrite>
ffffffff8020758d:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80207592:	e8 2a 8b ff ff       	callq  ffffffff802000c1 <exit>
ffffffff80207597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020759e:	00 00 

ffffffff802075a0 <caml_is_special_exception>:
ffffffff802075a0:	48 8d 15 f9 0b 02 00 	lea    0x20bf9(%rip),%rdx        # ffffffff802281a0 <caml_exn_Match_failure>
ffffffff802075a7:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802075ac:	48 39 d7             	cmp    %rdx,%rdi
ffffffff802075af:	74 1c                	je     ffffffff802075cd <caml_is_special_exception+0x2d>
ffffffff802075b1:	48 8d 15 78 0c 02 00 	lea    0x20c78(%rip),%rdx        # ffffffff80228230 <caml_exn_Assert_failure>
ffffffff802075b8:	48 39 d7             	cmp    %rdx,%rdi
ffffffff802075bb:	74 10                	je     ffffffff802075cd <caml_is_special_exception+0x2d>
ffffffff802075bd:	48 8d 05 9c 0c 02 00 	lea    0x20c9c(%rip),%rax        # ffffffff80228260 <caml_exn_Undefined_recursive_module>
ffffffff802075c4:	48 39 c7             	cmp    %rax,%rdi
ffffffff802075c7:	0f 94 c0             	sete   %al
ffffffff802075ca:	0f b6 c0             	movzbl %al,%eax
ffffffff802075cd:	c3                   	retq   
ffffffff802075ce:	66 90                	xchg   %ax,%ax

ffffffff802075d0 <caml_init_locale>:
ffffffff802075d0:	48 83 3d 70 2b 03 00 	cmpq   $0x0,0x32b70(%rip)        # ffffffff8023a148 <caml_locale>
ffffffff802075d7:	00 
ffffffff802075d8:	74 06                	je     ffffffff802075e0 <caml_init_locale+0x10>
ffffffff802075da:	c3                   	retq   
ffffffff802075db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802075e0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802075e4:	31 d2                	xor    %edx,%edx
ffffffff802075e6:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff802075eb:	48 8d 35 96 a0 01 00 	lea    0x1a096(%rip),%rsi        # ffffffff80221688 <caml_absf_mask+0x4d8>
ffffffff802075f2:	e8 f3 8a ff ff       	callq  ffffffff802000ea <newlocale>
ffffffff802075f7:	48 89 05 4a 2b 03 00 	mov    %rax,0x32b4a(%rip)        # ffffffff8023a148 <caml_locale>
ffffffff802075fe:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80207602:	c3                   	retq   
ffffffff80207603:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020760a:	00 00 00 00 
ffffffff8020760e:	66 90                	xchg   %ax,%ax

ffffffff80207610 <caml_free_locale>:
ffffffff80207610:	48 8b 3d 31 2b 03 00 	mov    0x32b31(%rip),%rdi        # ffffffff8023a148 <caml_locale>
ffffffff80207617:	48 85 ff             	test   %rdi,%rdi
ffffffff8020761a:	74 1c                	je     ffffffff80207638 <caml_free_locale+0x28>
ffffffff8020761c:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207620:	e8 c6 8a ff ff       	callq  ffffffff802000eb <freelocale>
ffffffff80207625:	48 c7 05 18 2b 03 00 	movq   $0x0,0x32b18(%rip)        # ffffffff8023a148 <caml_locale>
ffffffff8020762c:	00 00 00 00 
ffffffff80207630:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80207634:	c3                   	retq   
ffffffff80207635:	0f 1f 00             	nopl   (%rax)
ffffffff80207638:	48 c7 05 05 2b 03 00 	movq   $0x0,0x32b05(%rip)        # ffffffff8023a148 <caml_locale>
ffffffff8020763f:	00 00 00 00 
ffffffff80207643:	c3                   	retq   
ffffffff80207644:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020764b:	00 00 00 00 
ffffffff8020764f:	90                   	nop

ffffffff80207650 <caml_copy_double>:
ffffffff80207650:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80207654:	48 8b 15 2d 49 03 00 	mov    0x3492d(%rip),%rdx        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8020765b:	48 8d 42 f0          	lea    -0x10(%rdx),%rax
ffffffff8020765f:	48 3b 05 12 49 03 00 	cmp    0x34912(%rip),%rax        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80207666:	48 89 05 1b 49 03 00 	mov    %rax,0x3491b(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8020766d:	72 21                	jb     ffffffff80207690 <caml_copy_double+0x40>
ffffffff8020766f:	48 c7 00 fd 07 00 00 	movq   $0x7fd,(%rax)
ffffffff80207676:	48 8b 05 0b 49 03 00 	mov    0x3490b(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8020767d:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
ffffffff80207682:	48 83 c0 08          	add    $0x8,%rax
ffffffff80207686:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020768a:	c3                   	retq   
ffffffff8020768b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80207690:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff80207696:	48 89 15 eb 48 03 00 	mov    %rdx,0x348eb(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8020769d:	e8 1e a9 00 00       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff802076a2:	48 8b 05 df 48 03 00 	mov    0x348df(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff802076a9:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
ffffffff802076af:	48 83 e8 10          	sub    $0x10,%rax
ffffffff802076b3:	48 89 05 ce 48 03 00 	mov    %rax,0x348ce(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff802076ba:	eb b3                	jmp    ffffffff8020766f <caml_copy_double+0x1f>
ffffffff802076bc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802076c0 <caml_format_float>:
ffffffff802076c0:	41 54                	push   %r12
ffffffff802076c2:	49 89 fc             	mov    %rdi,%r12
ffffffff802076c5:	55                   	push   %rbp
ffffffff802076c6:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff802076ca:	f2 0f 10 06          	movsd  (%rsi),%xmm0
ffffffff802076ce:	48 8b 3d 73 2a 03 00 	mov    0x32a73(%rip),%rdi        # ffffffff8023a148 <caml_locale>
ffffffff802076d5:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff802076db:	e8 f4 89 ff ff       	callq  ffffffff802000d4 <uselocale>
ffffffff802076e0:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
ffffffff802076e6:	4c 89 e7             	mov    %r12,%rdi
ffffffff802076e9:	48 89 c5             	mov    %rax,%rbp
ffffffff802076ec:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802076f1:	e8 4a dd 00 00       	callq  ffffffff80215440 <caml_alloc_sprintf>
ffffffff802076f6:	48 89 ef             	mov    %rbp,%rdi
ffffffff802076f9:	49 89 c4             	mov    %rax,%r12
ffffffff802076fc:	e8 d3 89 ff ff       	callq  ffffffff802000d4 <uselocale>
ffffffff80207701:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80207705:	4c 89 e0             	mov    %r12,%rax
ffffffff80207708:	5d                   	pop    %rbp
ffffffff80207709:	41 5c                	pop    %r12
ffffffff8020770b:	c3                   	retq   
ffffffff8020770c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80207710 <caml_hexstring_of_float>:
ffffffff80207710:	41 56                	push   %r14
ffffffff80207712:	49 89 fe             	mov    %rdi,%r14
ffffffff80207715:	41 55                	push   %r13
ffffffff80207717:	49 89 d5             	mov    %rdx,%r13
ffffffff8020771a:	41 54                	push   %r12
ffffffff8020771c:	55                   	push   %rbp
ffffffff8020771d:	53                   	push   %rbx
ffffffff8020771e:	48 89 f3             	mov    %rsi,%rbx
ffffffff80207721:	48 d1 fb             	sar    %rbx
ffffffff80207724:	48 8d 7b 0c          	lea    0xc(%rbx),%rdi
ffffffff80207728:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8020772c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80207733:	00 00 
ffffffff80207735:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff8020773a:	31 c0                	xor    %eax,%eax
ffffffff8020773c:	49 89 e4             	mov    %rsp,%r12
ffffffff8020773f:	4c 89 e5             	mov    %r12,%rbp
ffffffff80207742:	48 83 ff 40          	cmp    $0x40,%rdi
ffffffff80207746:	0f 8f 1c 02 00 00    	jg     ffffffff80207968 <caml_hexstring_of_float+0x258>
ffffffff8020774c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
ffffffff80207753:	ff 0f 00 
ffffffff80207756:	49 8b 0e             	mov    (%r14),%rcx
ffffffff80207759:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020775c:	48 21 c8             	and    %rcx,%rax
ffffffff8020775f:	48 c1 ea 34          	shr    $0x34,%rdx
ffffffff80207763:	81 e2 ff 07 00 00    	and    $0x7ff,%edx
ffffffff80207769:	48 85 c9             	test   %rcx,%rcx
ffffffff8020776c:	0f 89 4e 01 00 00    	jns    ffffffff802078c0 <caml_hexstring_of_float+0x1b0>
ffffffff80207772:	c6 45 00 2d          	movb   $0x2d,0x0(%rbp)
ffffffff80207776:	4c 8d 75 01          	lea    0x1(%rbp),%r14
ffffffff8020777a:	81 fa ff 07 00 00    	cmp    $0x7ff,%edx
ffffffff80207780:	0f 84 6a 01 00 00    	je     ffffffff802078f0 <caml_hexstring_of_float+0x1e0>
ffffffff80207786:	b9 30 78 00 00       	mov    $0x7830,%ecx
ffffffff8020778b:	66 41 89 0e          	mov    %cx,(%r14)
ffffffff8020778f:	85 d2                	test   %edx,%edx
ffffffff80207791:	0f 84 b9 01 00 00    	je     ffffffff80207950 <caml_hexstring_of_float+0x240>
ffffffff80207797:	81 ea ff 03 00 00    	sub    $0x3ff,%edx
ffffffff8020779d:	48 0f ba e8 34       	bts    $0x34,%rax
ffffffff802077a2:	48 83 fb 0c          	cmp    $0xc,%rbx
ffffffff802077a6:	77 38                	ja     ffffffff802077e0 <caml_hexstring_of_float+0xd0>
ffffffff802077a8:	b9 0d 00 00 00       	mov    $0xd,%ecx
ffffffff802077ad:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff802077b2:	48 29 d9             	sub    %rbx,%rcx
ffffffff802077b5:	c1 e1 02             	shl    $0x2,%ecx
ffffffff802077b8:	48 d3 e6             	shl    %cl,%rsi
ffffffff802077bb:	48 89 f1             	mov    %rsi,%rcx
ffffffff802077be:	48 89 f7             	mov    %rsi,%rdi
ffffffff802077c1:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
ffffffff802077c5:	49 89 c8             	mov    %rcx,%r8
ffffffff802077c8:	48 21 c6             	and    %rax,%rsi
ffffffff802077cb:	48 d1 ef             	shr    %rdi
ffffffff802077ce:	49 f7 d8             	neg    %r8
ffffffff802077d1:	4c 21 c0             	and    %r8,%rax
ffffffff802077d4:	48 39 f7             	cmp    %rsi,%rdi
ffffffff802077d7:	0f 83 2b 02 00 00    	jae    ffffffff80207a08 <caml_hexstring_of_float+0x2f8>
ffffffff802077dd:	48 01 c8             	add    %rcx,%rax
ffffffff802077e0:	48 be ff ff ff ff ff 	movabs $0xffffffffffffff,%rsi
ffffffff802077e7:	ff ff 00 
ffffffff802077ea:	48 89 c1             	mov    %rax,%rcx
ffffffff802077ed:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff802077f1:	48 c1 e9 34          	shr    $0x34,%rcx
ffffffff802077f5:	48 21 f0             	and    %rsi,%rax
ffffffff802077f8:	83 c1 30             	add    $0x30,%ecx
ffffffff802077fb:	41 88 4e 02          	mov    %cl,0x2(%r14)
ffffffff802077ff:	48 85 db             	test   %rbx,%rbx
ffffffff80207802:	0f 88 70 01 00 00    	js     ffffffff80207978 <caml_hexstring_of_float+0x268>
ffffffff80207808:	0f 9f c1             	setg   %cl
ffffffff8020780b:	4d 8d 46 03          	lea    0x3(%r14),%r8
ffffffff8020780f:	84 c9                	test   %cl,%cl
ffffffff80207811:	74 5d                	je     ffffffff80207870 <caml_hexstring_of_float+0x160>
ffffffff80207813:	41 c6 46 03 2e       	movb   $0x2e,0x3(%r14)
ffffffff80207818:	4d 8d 46 04          	lea    0x4(%r14),%r8
ffffffff8020781c:	49 b9 ff ff ff ff ff 	movabs $0xffffffffffffff,%r9
ffffffff80207823:	ff ff 00 
ffffffff80207826:	eb 35                	jmp    ffffffff8020785d <caml_hexstring_of_float+0x14d>
ffffffff80207828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020782f:	00 
ffffffff80207830:	0f 9f c1             	setg   %cl
ffffffff80207833:	84 c9                	test   %cl,%cl
ffffffff80207835:	74 39                	je     ffffffff80207870 <caml_hexstring_of_float+0x160>
ffffffff80207837:	48 89 c7             	mov    %rax,%rdi
ffffffff8020783a:	48 c1 ef 34          	shr    $0x34,%rdi
ffffffff8020783e:	83 ff 09             	cmp    $0x9,%edi
ffffffff80207841:	8d 77 30             	lea    0x30(%rdi),%esi
ffffffff80207844:	8d 4f 57             	lea    0x57(%rdi),%ecx
ffffffff80207847:	0f 4e ce             	cmovle %esi,%ecx
ffffffff8020784a:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff8020784e:	49 83 c0 01          	add    $0x1,%r8
ffffffff80207852:	48 83 eb 01          	sub    $0x1,%rbx
ffffffff80207856:	4c 21 c8             	and    %r9,%rax
ffffffff80207859:	41 88 48 ff          	mov    %cl,-0x1(%r8)
ffffffff8020785d:	48 85 db             	test   %rbx,%rbx
ffffffff80207860:	79 ce                	jns    ffffffff80207830 <caml_hexstring_of_float+0x120>
ffffffff80207862:	48 85 c0             	test   %rax,%rax
ffffffff80207865:	0f 95 c1             	setne  %cl
ffffffff80207868:	84 c9                	test   %cl,%cl
ffffffff8020786a:	75 cb                	jne    ffffffff80207837 <caml_hexstring_of_float+0x127>
ffffffff8020786c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80207870:	41 c6 00 00          	movb   $0x0,(%r8)
ffffffff80207874:	48 89 ee             	mov    %rbp,%rsi
ffffffff80207877:	48 8d 3d 19 9e 01 00 	lea    0x19e19(%rip),%rdi        # ffffffff80221697 <caml_absf_mask+0x4e7>
ffffffff8020787e:	31 c0                	xor    %eax,%eax
ffffffff80207880:	e8 bb db 00 00       	callq  ffffffff80215440 <caml_alloc_sprintf>
ffffffff80207885:	49 89 c5             	mov    %rax,%r13
ffffffff80207888:	4c 39 e5             	cmp    %r12,%rbp
ffffffff8020788b:	74 08                	je     ffffffff80207895 <caml_hexstring_of_float+0x185>
ffffffff8020788d:	48 89 ef             	mov    %rbp,%rdi
ffffffff80207890:	e8 bb 90 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80207895:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
ffffffff8020789a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff802078a1:	00 00 
ffffffff802078a3:	0f 85 96 01 00 00    	jne    ffffffff80207a3f <caml_hexstring_of_float+0x32f>
ffffffff802078a9:	48 83 c4 50          	add    $0x50,%rsp
ffffffff802078ad:	4c 89 e8             	mov    %r13,%rax
ffffffff802078b0:	5b                   	pop    %rbx
ffffffff802078b1:	5d                   	pop    %rbp
ffffffff802078b2:	41 5c                	pop    %r12
ffffffff802078b4:	41 5d                	pop    %r13
ffffffff802078b6:	41 5e                	pop    %r14
ffffffff802078b8:	c3                   	retq   
ffffffff802078b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802078c0:	49 d1 fd             	sar    %r13
ffffffff802078c3:	41 83 fd 20          	cmp    $0x20,%r13d
ffffffff802078c7:	0f 84 13 01 00 00    	je     ffffffff802079e0 <caml_hexstring_of_float+0x2d0>
ffffffff802078cd:	49 89 ee             	mov    %rbp,%r14
ffffffff802078d0:	41 83 fd 2b          	cmp    $0x2b,%r13d
ffffffff802078d4:	0f 85 a0 fe ff ff    	jne    ffffffff8020777a <caml_hexstring_of_float+0x6a>
ffffffff802078da:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
ffffffff802078de:	4c 8d 75 01          	lea    0x1(%rbp),%r14
ffffffff802078e2:	81 fa ff 07 00 00    	cmp    $0x7ff,%edx
ffffffff802078e8:	0f 85 98 fe ff ff    	jne    ffffffff80207786 <caml_hexstring_of_float+0x76>
ffffffff802078ee:	66 90                	xchg   %ax,%ax
ffffffff802078f0:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff802078f4:	48 8d 3d 98 9d 01 00 	lea    0x19d98(%rip),%rdi        # ffffffff80221693 <caml_absf_mask+0x4e3>
ffffffff802078fb:	48 19 d2             	sbb    %rdx,%rdx
ffffffff802078fe:	83 e2 05             	and    $0x5,%edx
ffffffff80207901:	48 83 c2 03          	add    $0x3,%rdx
ffffffff80207905:	48 85 c0             	test   %rax,%rax
ffffffff80207908:	48 8d 05 7b 9d 01 00 	lea    0x19d7b(%rip),%rax        # ffffffff8022168a <caml_absf_mask+0x4da>
ffffffff8020790f:	48 0f 44 f8          	cmove  %rax,%rdi
ffffffff80207913:	89 d0                	mov    %edx,%eax
ffffffff80207915:	83 fa 08             	cmp    $0x8,%edx
ffffffff80207918:	73 6e                	jae    ffffffff80207988 <caml_hexstring_of_float+0x278>
ffffffff8020791a:	83 e2 04             	and    $0x4,%edx
ffffffff8020791d:	0f 85 f9 00 00 00    	jne    ffffffff80207a1c <caml_hexstring_of_float+0x30c>
ffffffff80207923:	85 c0                	test   %eax,%eax
ffffffff80207925:	74 0e                	je     ffffffff80207935 <caml_hexstring_of_float+0x225>
ffffffff80207927:	0f b6 17             	movzbl (%rdi),%edx
ffffffff8020792a:	41 88 16             	mov    %dl,(%r14)
ffffffff8020792d:	a8 02                	test   $0x2,%al
ffffffff8020792f:	0f 85 fa 00 00 00    	jne    ffffffff80207a2f <caml_hexstring_of_float+0x31f>
ffffffff80207935:	e8 6e 87 ff ff       	callq  ffffffff802000a8 <strlen>
ffffffff8020793a:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020793d:	41 c6 04 06 00       	movb   $0x0,(%r14,%rax,1)
ffffffff80207942:	e8 c9 14 01 00       	callq  ffffffff80218e10 <caml_copy_string>
ffffffff80207947:	49 89 c5             	mov    %rax,%r13
ffffffff8020794a:	e9 39 ff ff ff       	jmpq   ffffffff80207888 <caml_hexstring_of_float+0x178>
ffffffff8020794f:	90                   	nop
ffffffff80207950:	48 85 c0             	test   %rax,%rax
ffffffff80207953:	0f 84 97 00 00 00    	je     ffffffff802079f0 <caml_hexstring_of_float+0x2e0>
ffffffff80207959:	ba 02 fc ff ff       	mov    $0xfffffc02,%edx
ffffffff8020795e:	e9 3f fe ff ff       	jmpq   ffffffff802077a2 <caml_hexstring_of_float+0x92>
ffffffff80207963:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80207968:	e8 c3 8f 00 00       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8020796d:	48 89 c5             	mov    %rax,%rbp
ffffffff80207970:	e9 d7 fd ff ff       	jmpq   ffffffff8020774c <caml_hexstring_of_float+0x3c>
ffffffff80207975:	0f 1f 00             	nopl   (%rax)
ffffffff80207978:	48 85 c0             	test   %rax,%rax
ffffffff8020797b:	0f 95 c1             	setne  %cl
ffffffff8020797e:	e9 88 fe ff ff       	jmpq   ffffffff8020780b <caml_hexstring_of_float+0xfb>
ffffffff80207983:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80207988:	48 8b 07             	mov    (%rdi),%rax
ffffffff8020798b:	49 8d 76 08          	lea    0x8(%r14),%rsi
ffffffff8020798f:	49 89 f9             	mov    %rdi,%r9
ffffffff80207992:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
ffffffff80207996:	49 89 06             	mov    %rax,(%r14)
ffffffff80207999:	89 d0                	mov    %edx,%eax
ffffffff8020799b:	48 8b 4c 07 f8       	mov    -0x8(%rdi,%rax,1),%rcx
ffffffff802079a0:	49 89 4c 06 f8       	mov    %rcx,-0x8(%r14,%rax,1)
ffffffff802079a5:	4c 89 f0             	mov    %r14,%rax
ffffffff802079a8:	48 29 f0             	sub    %rsi,%rax
ffffffff802079ab:	49 29 c1             	sub    %rax,%r9
ffffffff802079ae:	01 d0                	add    %edx,%eax
ffffffff802079b0:	83 e0 f8             	and    $0xfffffff8,%eax
ffffffff802079b3:	83 f8 08             	cmp    $0x8,%eax
ffffffff802079b6:	0f 82 79 ff ff ff    	jb     ffffffff80207935 <caml_hexstring_of_float+0x225>
ffffffff802079bc:	83 e0 f8             	and    $0xfffffff8,%eax
ffffffff802079bf:	31 d2                	xor    %edx,%edx
ffffffff802079c1:	89 d1                	mov    %edx,%ecx
ffffffff802079c3:	83 c2 08             	add    $0x8,%edx
ffffffff802079c6:	4d 8b 04 09          	mov    (%r9,%rcx,1),%r8
ffffffff802079ca:	4c 89 04 0e          	mov    %r8,(%rsi,%rcx,1)
ffffffff802079ce:	39 c2                	cmp    %eax,%edx
ffffffff802079d0:	72 ef                	jb     ffffffff802079c1 <caml_hexstring_of_float+0x2b1>
ffffffff802079d2:	e9 5e ff ff ff       	jmpq   ffffffff80207935 <caml_hexstring_of_float+0x225>
ffffffff802079d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802079de:	00 00 
ffffffff802079e0:	c6 45 00 20          	movb   $0x20,0x0(%rbp)
ffffffff802079e4:	4c 8d 75 01          	lea    0x1(%rbp),%r14
ffffffff802079e8:	e9 8d fd ff ff       	jmpq   ffffffff8020777a <caml_hexstring_of_float+0x6a>
ffffffff802079ed:	0f 1f 00             	nopl   (%rax)
ffffffff802079f0:	b9 30 00 00 00       	mov    $0x30,%ecx
ffffffff802079f5:	48 83 fb 0c          	cmp    $0xc,%rbx
ffffffff802079f9:	0f 86 e1 fd ff ff    	jbe    ffffffff802077e0 <caml_hexstring_of_float+0xd0>
ffffffff802079ff:	e9 f7 fd ff ff       	jmpq   ffffffff802077fb <caml_hexstring_of_float+0xeb>
ffffffff80207a04:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80207a08:	0f 85 d2 fd ff ff    	jne    ffffffff802077e0 <caml_hexstring_of_float+0xd0>
ffffffff80207a0e:	48 85 c1             	test   %rax,%rcx
ffffffff80207a11:	0f 85 c6 fd ff ff    	jne    ffffffff802077dd <caml_hexstring_of_float+0xcd>
ffffffff80207a17:	e9 c4 fd ff ff       	jmpq   ffffffff802077e0 <caml_hexstring_of_float+0xd0>
ffffffff80207a1c:	8b 17                	mov    (%rdi),%edx
ffffffff80207a1e:	41 89 16             	mov    %edx,(%r14)
ffffffff80207a21:	8b 54 07 fc          	mov    -0x4(%rdi,%rax,1),%edx
ffffffff80207a25:	41 89 54 06 fc       	mov    %edx,-0x4(%r14,%rax,1)
ffffffff80207a2a:	e9 06 ff ff ff       	jmpq   ffffffff80207935 <caml_hexstring_of_float+0x225>
ffffffff80207a2f:	0f b7 54 07 fe       	movzwl -0x2(%rdi,%rax,1),%edx
ffffffff80207a34:	66 41 89 54 06 fe    	mov    %dx,-0x2(%r14,%rax,1)
ffffffff80207a3a:	e9 f6 fe ff ff       	jmpq   ffffffff80207935 <caml_hexstring_of_float+0x225>
ffffffff80207a3f:	e8 5c 86 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80207a44:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207a4b:	00 00 00 00 
ffffffff80207a4f:	90                   	nop

ffffffff80207a50 <caml_float_of_string>:
ffffffff80207a50:	41 57                	push   %r15
ffffffff80207a52:	41 56                	push   %r14
ffffffff80207a54:	41 55                	push   %r13
ffffffff80207a56:	49 89 fd             	mov    %rdi,%r13
ffffffff80207a59:	41 54                	push   %r12
ffffffff80207a5b:	55                   	push   %rbp
ffffffff80207a5c:	53                   	push   %rbx
ffffffff80207a5d:	4c 89 eb             	mov    %r13,%rbx
ffffffff80207a60:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff80207a64:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80207a6b:	00 00 
ffffffff80207a6d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffff80207a72:	31 c0                	xor    %eax,%eax
ffffffff80207a74:	e8 37 d3 00 00       	callq  ffffffff80214db0 <caml_string_length>
ffffffff80207a79:	48 89 c5             	mov    %rax,%rbp
ffffffff80207a7c:	48 83 f8 3f          	cmp    $0x3f,%rax
ffffffff80207a80:	0f 87 02 01 00 00    	ja     ffffffff80207b88 <caml_float_of_string+0x138>
ffffffff80207a86:	48 8d 40 ff          	lea    -0x1(%rax),%rax
ffffffff80207a8a:	48 85 ed             	test   %rbp,%rbp
ffffffff80207a8d:	0f 84 08 03 00 00    	je     ffffffff80207d9b <caml_float_of_string+0x34b>
ffffffff80207a93:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
ffffffff80207a98:	4d 89 e6             	mov    %r12,%r14
ffffffff80207a9b:	4a 8d 54 28 01       	lea    0x1(%rax,%r13,1),%rdx
ffffffff80207aa0:	4c 89 f5             	mov    %r14,%rbp
ffffffff80207aa3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80207aa8:	48 89 d8             	mov    %rbx,%rax
ffffffff80207aab:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80207aaf:	0f b6 00             	movzbl (%rax),%eax
ffffffff80207ab2:	3c 5f                	cmp    $0x5f,%al
ffffffff80207ab4:	74 07                	je     ffffffff80207abd <caml_float_of_string+0x6d>
ffffffff80207ab6:	88 45 00             	mov    %al,0x0(%rbp)
ffffffff80207ab9:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80207abd:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80207ac0:	75 e6                	jne    ffffffff80207aa8 <caml_float_of_string+0x58>
ffffffff80207ac2:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
ffffffff80207ac6:	4c 39 f5             	cmp    %r14,%rbp
ffffffff80207ac9:	0f 84 b3 02 00 00    	je     ffffffff80207d82 <caml_float_of_string+0x332>
ffffffff80207acf:	41 0f b6 06          	movzbl (%r14),%eax
ffffffff80207ad3:	3c 2d                	cmp    $0x2d,%al
ffffffff80207ad5:	0f 84 95 00 00 00    	je     ffffffff80207b70 <caml_float_of_string+0x120>
ffffffff80207adb:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
ffffffff80207ae2:	4c 89 f7             	mov    %r14,%rdi
ffffffff80207ae5:	3c 2b                	cmp    $0x2b,%al
ffffffff80207ae7:	74 77                	je     ffffffff80207b60 <caml_float_of_string+0x110>
ffffffff80207ae9:	3c 30                	cmp    $0x30,%al
ffffffff80207aeb:	75 0f                	jne    ffffffff80207afc <caml_float_of_string+0xac>
ffffffff80207aed:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
ffffffff80207af1:	83 e0 df             	and    $0xffffffdf,%eax
ffffffff80207af4:	3c 58                	cmp    $0x58,%al
ffffffff80207af6:	0f 84 ac 00 00 00    	je     ffffffff80207ba8 <caml_float_of_string+0x158>
ffffffff80207afc:	48 8b 15 45 26 03 00 	mov    0x32645(%rip),%rdx        # ffffffff8023a148 <caml_locale>
ffffffff80207b03:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
ffffffff80207b08:	4c 89 f7             	mov    %r14,%rdi
ffffffff80207b0b:	e8 df 85 ff ff       	callq  ffffffff802000ef <strtod_l>
ffffffff80207b10:	48 3b 6c 24 18       	cmp    0x18(%rsp),%rbp
ffffffff80207b15:	0f 85 67 02 00 00    	jne    ffffffff80207d82 <caml_float_of_string+0x332>
ffffffff80207b1b:	4d 39 e6             	cmp    %r12,%r14
ffffffff80207b1e:	74 12                	je     ffffffff80207b32 <caml_float_of_string+0xe2>
ffffffff80207b20:	4c 89 f7             	mov    %r14,%rdi
ffffffff80207b23:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
ffffffff80207b28:	e8 23 8e 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80207b2d:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
ffffffff80207b32:	e8 19 fb ff ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff80207b37:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
ffffffff80207b3c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80207b43:	00 00 
ffffffff80207b45:	0f 85 57 02 00 00    	jne    ffffffff80207da2 <caml_float_of_string+0x352>
ffffffff80207b4b:	48 83 c4 78          	add    $0x78,%rsp
ffffffff80207b4f:	5b                   	pop    %rbx
ffffffff80207b50:	5d                   	pop    %rbp
ffffffff80207b51:	41 5c                	pop    %r12
ffffffff80207b53:	41 5d                	pop    %r13
ffffffff80207b55:	41 5e                	pop    %r14
ffffffff80207b57:	41 5f                	pop    %r15
ffffffff80207b59:	c3                   	retq   
ffffffff80207b5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80207b60:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
ffffffff80207b65:	49 8d 7e 01          	lea    0x1(%r14),%rdi
ffffffff80207b69:	e9 7b ff ff ff       	jmpq   ffffffff80207ae9 <caml_float_of_string+0x99>
ffffffff80207b6e:	66 90                	xchg   %ax,%ax
ffffffff80207b70:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%rsp)
ffffffff80207b77:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
ffffffff80207b7c:	49 8d 7e 01          	lea    0x1(%r14),%rdi
ffffffff80207b80:	e9 64 ff ff ff       	jmpq   ffffffff80207ae9 <caml_float_of_string+0x99>
ffffffff80207b85:	0f 1f 00             	nopl   (%rax)
ffffffff80207b88:	48 8d 78 01          	lea    0x1(%rax),%rdi
ffffffff80207b8c:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
ffffffff80207b91:	e8 9a 8d 00 00       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff80207b96:	49 89 c6             	mov    %rax,%r14
ffffffff80207b99:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
ffffffff80207b9d:	e9 f9 fe ff ff       	jmpq   ffffffff80207a9b <caml_float_of_string+0x4b>
ffffffff80207ba2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80207ba8:	48 83 c7 02          	add    $0x2,%rdi
ffffffff80207bac:	48 39 fd             	cmp    %rdi,%rbp
ffffffff80207baf:	0f 86 cd 01 00 00    	jbe    ffffffff80207d82 <caml_float_of_string+0x332>
ffffffff80207bb5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
ffffffff80207bbc:	00 
ffffffff80207bbd:	31 f6                	xor    %esi,%esi
ffffffff80207bbf:	45 31 ff             	xor    %r15d,%r15d
ffffffff80207bc2:	31 db                	xor    %ebx,%ebx
ffffffff80207bc4:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
ffffffff80207bca:	eb 38                	jmp    ffffffff80207c04 <caml_float_of_string+0x1b4>
ffffffff80207bcc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80207bd0:	44 8d 48 d0          	lea    -0x30(%rax),%r9d
ffffffff80207bd4:	0f be d0             	movsbl %al,%edx
ffffffff80207bd7:	41 80 f9 09          	cmp    $0x9,%r9b
ffffffff80207bdb:	0f 87 ef 00 00 00    	ja     ffffffff80207cd0 <caml_float_of_string+0x280>
ffffffff80207be1:	8d 42 d0             	lea    -0x30(%rdx),%eax
ffffffff80207be4:	41 83 c7 04          	add    $0x4,%r15d
ffffffff80207be8:	85 c0                	test   %eax,%eax
ffffffff80207bea:	0f 85 00 01 00 00    	jne    ffffffff80207cf0 <caml_float_of_string+0x2a0>
ffffffff80207bf0:	48 85 db             	test   %rbx,%rbx
ffffffff80207bf3:	0f 85 f7 00 00 00    	jne    ffffffff80207cf0 <caml_float_of_string+0x2a0>
ffffffff80207bf9:	31 db                	xor    %ebx,%ebx
ffffffff80207bfb:	48 39 fd             	cmp    %rdi,%rbp
ffffffff80207bfe:	0f 84 77 01 00 00    	je     ffffffff80207d7b <caml_float_of_string+0x32b>
ffffffff80207c04:	49 89 f9             	mov    %rdi,%r9
ffffffff80207c07:	0f b6 07             	movzbl (%rdi),%eax
ffffffff80207c0a:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80207c0e:	89 c2                	mov    %eax,%edx
ffffffff80207c10:	83 e2 df             	and    $0xffffffdf,%edx
ffffffff80207c13:	80 fa 50             	cmp    $0x50,%dl
ffffffff80207c16:	74 18                	je     ffffffff80207c30 <caml_float_of_string+0x1e0>
ffffffff80207c18:	3c 2e                	cmp    $0x2e,%al
ffffffff80207c1a:	75 b4                	jne    ffffffff80207bd0 <caml_float_of_string+0x180>
ffffffff80207c1c:	45 85 ed             	test   %r13d,%r13d
ffffffff80207c1f:	0f 89 5d 01 00 00    	jns    ffffffff80207d82 <caml_float_of_string+0x332>
ffffffff80207c25:	45 89 fd             	mov    %r15d,%r13d
ffffffff80207c28:	eb d1                	jmp    ffffffff80207bfb <caml_float_of_string+0x1ab>
ffffffff80207c2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80207c30:	41 80 79 01 00       	cmpb   $0x0,0x1(%r9)
ffffffff80207c35:	0f 84 47 01 00 00    	je     ffffffff80207d82 <caml_float_of_string+0x332>
ffffffff80207c3b:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
ffffffff80207c40:	ba 0a 00 00 00       	mov    $0xa,%edx
ffffffff80207c45:	e8 a4 84 ff ff       	callq  ffffffff802000ee <strtol>
ffffffff80207c4a:	48 3b 6c 24 18       	cmp    0x18(%rsp),%rbp
ffffffff80207c4f:	0f 85 2d 01 00 00    	jne    ffffffff80207d82 <caml_float_of_string+0x332>
ffffffff80207c55:	48 3d 01 00 00 80    	cmp    $0xffffffff80000001,%rax
ffffffff80207c5b:	0f 8c 11 01 00 00    	jl     ffffffff80207d72 <caml_float_of_string+0x322>
ffffffff80207c61:	48 3d fe ff ff 7f    	cmp    $0x7ffffffe,%rax
ffffffff80207c67:	0f 8f f4 00 00 00    	jg     ffffffff80207d61 <caml_float_of_string+0x311>
ffffffff80207c6d:	45 85 ff             	test   %r15d,%r15d
ffffffff80207c70:	0f 84 0c 01 00 00    	je     ffffffff80207d82 <caml_float_of_string+0x332>
ffffffff80207c76:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
ffffffff80207c7a:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80207c7e:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
ffffffff80207c83:	42 8d 14 29          	lea    (%rcx,%r13,1),%edx
ffffffff80207c87:	44 29 fa             	sub    %r15d,%edx
ffffffff80207c8a:	45 85 ed             	test   %r13d,%r13d
ffffffff80207c8d:	0f 48 d1             	cmovs  %ecx,%edx
ffffffff80207c90:	89 54 24 0c          	mov    %edx,0xc(%rsp)
ffffffff80207c94:	89 d1                	mov    %edx,%ecx
ffffffff80207c96:	85 d2                	test   %edx,%edx
ffffffff80207c98:	0f 8e 99 00 00 00    	jle    ffffffff80207d37 <caml_float_of_string+0x2e7>
ffffffff80207c9e:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
ffffffff80207ca3:	29 ca                	sub    %ecx,%edx
ffffffff80207ca5:	39 c2                	cmp    %eax,%edx
ffffffff80207ca7:	0f 8d a3 00 00 00    	jge    ffffffff80207d50 <caml_float_of_string+0x300>
ffffffff80207cad:	bf ff ff ff 7f       	mov    $0x7fffffff,%edi
ffffffff80207cb2:	e8 1f 84 ff ff       	callq  ffffffff802000d6 <ldexp>
ffffffff80207cb7:	8b 04 24             	mov    (%rsp),%eax
ffffffff80207cba:	85 c0                	test   %eax,%eax
ffffffff80207cbc:	0f 89 59 fe ff ff    	jns    ffffffff80207b1b <caml_float_of_string+0xcb>
ffffffff80207cc2:	66 0f 57 05 06 9a 01 	xorpd  0x19a06(%rip),%xmm0        # ffffffff802216d0 <caml_absf_mask+0x520>
ffffffff80207cc9:	00 
ffffffff80207cca:	e9 4c fe ff ff       	jmpq   ffffffff80207b1b <caml_float_of_string+0xcb>
ffffffff80207ccf:	90                   	nop
ffffffff80207cd0:	44 8d 48 bf          	lea    -0x41(%rax),%r9d
ffffffff80207cd4:	41 80 f9 05          	cmp    $0x5,%r9b
ffffffff80207cd8:	77 36                	ja     ffffffff80207d10 <caml_float_of_string+0x2c0>
ffffffff80207cda:	8d 42 c9             	lea    -0x37(%rdx),%eax
ffffffff80207cdd:	41 83 c7 04          	add    $0x4,%r15d
ffffffff80207ce1:	85 c0                	test   %eax,%eax
ffffffff80207ce3:	0f 84 07 ff ff ff    	je     ffffffff80207bf0 <caml_float_of_string+0x1a0>
ffffffff80207ce9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80207cf0:	83 fe 3b             	cmp    $0x3b,%esi
ffffffff80207cf3:	7f 2b                	jg     ffffffff80207d20 <caml_float_of_string+0x2d0>
ffffffff80207cf5:	48 89 d9             	mov    %rbx,%rcx
ffffffff80207cf8:	48 98                	cltq   
ffffffff80207cfa:	83 c6 04             	add    $0x4,%esi
ffffffff80207cfd:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffff80207d01:	48 8d 1c 08          	lea    (%rax,%rcx,1),%rbx
ffffffff80207d05:	e9 f1 fe ff ff       	jmpq   ffffffff80207bfb <caml_float_of_string+0x1ab>
ffffffff80207d0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80207d10:	83 e8 61             	sub    $0x61,%eax
ffffffff80207d13:	3c 05                	cmp    $0x5,%al
ffffffff80207d15:	77 6b                	ja     ffffffff80207d82 <caml_float_of_string+0x332>
ffffffff80207d17:	8d 42 a9             	lea    -0x57(%rdx),%eax
ffffffff80207d1a:	e9 c5 fe ff ff       	jmpq   ffffffff80207be4 <caml_float_of_string+0x194>
ffffffff80207d1f:	90                   	nop
ffffffff80207d20:	48 89 da             	mov    %rbx,%rdx
ffffffff80207d23:	48 83 ca 01          	or     $0x1,%rdx
ffffffff80207d27:	85 c0                	test   %eax,%eax
ffffffff80207d29:	48 0f 45 da          	cmovne %rdx,%rbx
ffffffff80207d2d:	83 44 24 0c 04       	addl   $0x4,0xc(%rsp)
ffffffff80207d32:	e9 c4 fe ff ff       	jmpq   ffffffff80207bfb <caml_float_of_string+0x1ab>
ffffffff80207d37:	79 17                	jns    ffffffff80207d50 <caml_float_of_string+0x300>
ffffffff80207d39:	ba 00 00 00 80       	mov    $0x80000000,%edx
ffffffff80207d3e:	2b 54 24 0c          	sub    0xc(%rsp),%edx
ffffffff80207d42:	39 c2                	cmp    %eax,%edx
ffffffff80207d44:	7e 0a                	jle    ffffffff80207d50 <caml_float_of_string+0x300>
ffffffff80207d46:	bf 00 00 00 80       	mov    $0x80000000,%edi
ffffffff80207d4b:	e9 62 ff ff ff       	jmpq   ffffffff80207cb2 <caml_float_of_string+0x262>
ffffffff80207d50:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
ffffffff80207d54:	01 c7                	add    %eax,%edi
ffffffff80207d56:	0f 85 56 ff ff ff    	jne    ffffffff80207cb2 <caml_float_of_string+0x262>
ffffffff80207d5c:	e9 56 ff ff ff       	jmpq   ffffffff80207cb7 <caml_float_of_string+0x267>
ffffffff80207d61:	f2 0f 10 05 47 99 01 	movsd  0x19947(%rip),%xmm0        # ffffffff802216b0 <caml_absf_mask+0x500>
ffffffff80207d68:	00 
ffffffff80207d69:	48 85 db             	test   %rbx,%rbx
ffffffff80207d6c:	0f 85 45 ff ff ff    	jne    ffffffff80207cb7 <caml_float_of_string+0x267>
ffffffff80207d72:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80207d76:	e9 3c ff ff ff       	jmpq   ffffffff80207cb7 <caml_float_of_string+0x267>
ffffffff80207d7b:	31 c0                	xor    %eax,%eax
ffffffff80207d7d:	e9 eb fe ff ff       	jmpq   ffffffff80207c6d <caml_float_of_string+0x21d>
ffffffff80207d82:	4d 39 e6             	cmp    %r12,%r14
ffffffff80207d85:	74 08                	je     ffffffff80207d8f <caml_float_of_string+0x33f>
ffffffff80207d87:	4c 89 f7             	mov    %r14,%rdi
ffffffff80207d8a:	e8 c1 8b 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80207d8f:	48 8d 3d 08 99 01 00 	lea    0x19908(%rip),%rdi        # ffffffff8022169e <caml_absf_mask+0x4ee>
ffffffff80207d96:	e8 a5 f6 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff80207d9b:	c6 44 24 20 00       	movb   $0x0,0x20(%rsp)
ffffffff80207da0:	eb ed                	jmp    ffffffff80207d8f <caml_float_of_string+0x33f>
ffffffff80207da2:	e8 f9 82 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80207da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80207dae:	00 00 

ffffffff80207db0 <caml_int_of_float>:
ffffffff80207db0:	f2 48 0f 2c 07       	cvttsd2si (%rdi),%rax
ffffffff80207db5:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80207dba:	c3                   	retq   
ffffffff80207dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80207dc0 <caml_float_of_int>:
ffffffff80207dc0:	48 d1 ff             	sar    %rdi
ffffffff80207dc3:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80207dc7:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
ffffffff80207dcc:	e9 7f f8 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207dd1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207dd8:	00 00 00 00 
ffffffff80207ddc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80207de0 <caml_neg_float>:
ffffffff80207de0:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80207de4:	66 0f 57 05 e4 98 01 	xorpd  0x198e4(%rip),%xmm0        # ffffffff802216d0 <caml_absf_mask+0x520>
ffffffff80207deb:	00 
ffffffff80207dec:	e9 5f f8 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207df1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207df8:	00 00 00 00 
ffffffff80207dfc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80207e00 <caml_abs_float>:
ffffffff80207e00:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80207e04:	66 0f 54 05 d4 98 01 	andpd  0x198d4(%rip),%xmm0        # ffffffff802216e0 <caml_absf_mask+0x530>
ffffffff80207e0b:	00 
ffffffff80207e0c:	e9 3f f8 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207e11:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207e18:	00 00 00 00 
ffffffff80207e1c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80207e20 <caml_add_float>:
ffffffff80207e20:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80207e24:	f2 0f 58 06          	addsd  (%rsi),%xmm0
ffffffff80207e28:	e9 23 f8 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207e2d:	0f 1f 00             	nopl   (%rax)

ffffffff80207e30 <caml_sub_float>:
ffffffff80207e30:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80207e34:	f2 0f 5c 06          	subsd  (%rsi),%xmm0
ffffffff80207e38:	e9 13 f8 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207e3d:	0f 1f 00             	nopl   (%rax)

ffffffff80207e40 <caml_mul_float>:
ffffffff80207e40:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80207e44:	f2 0f 59 06          	mulsd  (%rsi),%xmm0
ffffffff80207e48:	e9 03 f8 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207e4d:	0f 1f 00             	nopl   (%rax)

ffffffff80207e50 <caml_div_float>:
ffffffff80207e50:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80207e54:	f2 0f 5e 06          	divsd  (%rsi),%xmm0
ffffffff80207e58:	e9 f3 f7 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207e5d:	0f 1f 00             	nopl   (%rax)

ffffffff80207e60 <caml_exp_float>:
ffffffff80207e60:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207e64:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80207e68:	e8 68 82 ff ff       	callq  ffffffff802000d5 <exp>
ffffffff80207e6d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80207e71:	e9 da f7 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207e76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80207e7d:	00 00 00 

ffffffff80207e80 <caml_trunc>:
ffffffff80207e80:	f2 0f 10 15 58 98 01 	movsd  0x19858(%rip),%xmm2        # ffffffff802216e0 <caml_absf_mask+0x530>
ffffffff80207e87:	00 
ffffffff80207e88:	f2 0f 10 25 28 98 01 	movsd  0x19828(%rip),%xmm4        # ffffffff802216b8 <caml_absf_mask+0x508>
ffffffff80207e8f:	00 
ffffffff80207e90:	66 0f 28 d8          	movapd %xmm0,%xmm3
ffffffff80207e94:	66 0f 28 c8          	movapd %xmm0,%xmm1
ffffffff80207e98:	66 0f 54 da          	andpd  %xmm2,%xmm3
ffffffff80207e9c:	66 0f 2e e3          	ucomisd %xmm3,%xmm4
ffffffff80207ea0:	76 16                	jbe    ffffffff80207eb8 <caml_trunc+0x38>
ffffffff80207ea2:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
ffffffff80207ea7:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80207eab:	66 0f 55 d1          	andnpd %xmm1,%xmm2
ffffffff80207eaf:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff80207eb4:	66 0f 56 c2          	orpd   %xmm2,%xmm0
ffffffff80207eb8:	c3                   	retq   
ffffffff80207eb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80207ec0 <caml_trunc_float>:
ffffffff80207ec0:	f2 0f 10 17          	movsd  (%rdi),%xmm2
ffffffff80207ec4:	f2 0f 10 0d 14 98 01 	movsd  0x19814(%rip),%xmm1        # ffffffff802216e0 <caml_absf_mask+0x530>
ffffffff80207ecb:	00 
ffffffff80207ecc:	f2 0f 10 25 e4 97 01 	movsd  0x197e4(%rip),%xmm4        # ffffffff802216b8 <caml_absf_mask+0x508>
ffffffff80207ed3:	00 
ffffffff80207ed4:	66 0f 28 da          	movapd %xmm2,%xmm3
ffffffff80207ed8:	66 0f 28 c2          	movapd %xmm2,%xmm0
ffffffff80207edc:	66 0f 54 d9          	andpd  %xmm1,%xmm3
ffffffff80207ee0:	66 0f 2e e3          	ucomisd %xmm3,%xmm4
ffffffff80207ee4:	76 16                	jbe    ffffffff80207efc <caml_trunc_float+0x3c>
ffffffff80207ee6:	f2 48 0f 2c c2       	cvttsd2si %xmm2,%rax
ffffffff80207eeb:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80207eef:	66 0f 55 ca          	andnpd %xmm2,%xmm1
ffffffff80207ef3:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff80207ef8:	66 0f 56 c1          	orpd   %xmm1,%xmm0
ffffffff80207efc:	e9 4f f7 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207f01:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207f08:	00 00 00 00 
ffffffff80207f0c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80207f10 <caml_round>:
ffffffff80207f10:	e9 a9 81 ff ff       	jmpq   ffffffff802000be <round>
ffffffff80207f15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207f1c:	00 00 00 00 

ffffffff80207f20 <caml_round_float>:
ffffffff80207f20:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207f24:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80207f28:	e8 91 81 ff ff       	callq  ffffffff802000be <round>
ffffffff80207f2d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80207f31:	e9 1a f7 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207f36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80207f3d:	00 00 00 

ffffffff80207f40 <caml_floor_float>:
ffffffff80207f40:	f2 0f 10 1f          	movsd  (%rdi),%xmm3
ffffffff80207f44:	f2 0f 10 15 94 97 01 	movsd  0x19794(%rip),%xmm2        # ffffffff802216e0 <caml_absf_mask+0x530>
ffffffff80207f4b:	00 
ffffffff80207f4c:	f2 0f 10 25 64 97 01 	movsd  0x19764(%rip),%xmm4        # ffffffff802216b8 <caml_absf_mask+0x508>
ffffffff80207f53:	00 
ffffffff80207f54:	66 0f 28 cb          	movapd %xmm3,%xmm1
ffffffff80207f58:	66 0f 28 c3          	movapd %xmm3,%xmm0
ffffffff80207f5c:	66 0f 54 ca          	andpd  %xmm2,%xmm1
ffffffff80207f60:	66 0f 2e e1          	ucomisd %xmm1,%xmm4
ffffffff80207f64:	76 37                	jbe    ffffffff80207f9d <caml_floor_float+0x5d>
ffffffff80207f66:	f2 48 0f 2c c3       	cvttsd2si %xmm3,%rax
ffffffff80207f6b:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff80207f6f:	f2 0f 10 25 49 97 01 	movsd  0x19749(%rip),%xmm4        # ffffffff802216c0 <caml_absf_mask+0x510>
ffffffff80207f76:	00 
ffffffff80207f77:	66 0f 55 d3          	andnpd %xmm3,%xmm2
ffffffff80207f7b:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff80207f80:	66 0f 28 e9          	movapd %xmm1,%xmm5
ffffffff80207f84:	f2 0f c2 eb 06       	cmpnlesd %xmm3,%xmm5
ffffffff80207f89:	66 0f 28 c5          	movapd %xmm5,%xmm0
ffffffff80207f8d:	66 0f 54 c4          	andpd  %xmm4,%xmm0
ffffffff80207f91:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
ffffffff80207f95:	66 0f 28 c1          	movapd %xmm1,%xmm0
ffffffff80207f99:	66 0f 56 c2          	orpd   %xmm2,%xmm0
ffffffff80207f9d:	e9 ae f6 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207fa2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207fa9:	00 00 00 00 
ffffffff80207fad:	0f 1f 00             	nopl   (%rax)

ffffffff80207fb0 <caml_nextafter>:
ffffffff80207fb0:	e9 08 81 ff ff       	jmpq   ffffffff802000bd <nextafter>
ffffffff80207fb5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207fbc:	00 00 00 00 

ffffffff80207fc0 <caml_nextafter_float>:
ffffffff80207fc0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207fc4:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
ffffffff80207fc8:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80207fcc:	e8 ec 80 ff ff       	callq  ffffffff802000bd <nextafter>
ffffffff80207fd1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80207fd5:	e9 76 f6 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80207fda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80207fe0 <caml_fma>:
ffffffff80207fe0:	e9 f2 80 ff ff       	jmpq   ffffffff802000d7 <fma>
ffffffff80207fe5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80207fec:	00 00 00 00 

ffffffff80207ff0 <caml_fma_float>:
ffffffff80207ff0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80207ff4:	f2 0f 10 12          	movsd  (%rdx),%xmm2
ffffffff80207ff8:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
ffffffff80207ffc:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208000:	e8 d2 80 ff ff       	callq  ffffffff802000d7 <fma>
ffffffff80208005:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208009:	e9 42 f6 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8020800e:	66 90                	xchg   %ax,%ax

ffffffff80208010 <caml_fmod_float>:
ffffffff80208010:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208014:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
ffffffff80208018:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff8020801c:	e8 cb 80 ff ff       	callq  ffffffff802000ec <fmod>
ffffffff80208021:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208025:	e9 26 f6 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8020802a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80208030 <caml_frexp_float>:
ffffffff80208030:	53                   	push   %rbx
ffffffff80208031:	48 89 f8             	mov    %rdi,%rax
ffffffff80208034:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
ffffffff8020803b:	48 8b 1d 36 c0 03 00 	mov    0x3c036(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff80208042:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80208047:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020804c:	48 8d 7c 24 1c       	lea    0x1c(%rsp),%rdi
ffffffff80208051:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff80208058:	00 00 
ffffffff8020805a:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
ffffffff80208061:	00 
ffffffff80208062:	31 c9                	xor    %ecx,%ecx
ffffffff80208064:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
ffffffff80208069:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
ffffffff8020806e:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffff80208073:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
ffffffff80208078:	48 89 15 f9 bf 03 00 	mov    %rdx,0x3bff9(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020807f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff80208084:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
ffffffff8020808b:	00 
ffffffff8020808c:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
ffffffff80208091:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
ffffffff80208098:	00 
ffffffff80208099:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
ffffffff8020809e:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
ffffffff802080a5:	00 00 
ffffffff802080a7:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
ffffffff802080ae:	00 00 
ffffffff802080b0:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff802080b7:	00 00 
ffffffff802080b9:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff802080c0:	00 00 
ffffffff802080c2:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
ffffffff802080c9:	00 01 00 00 00 
ffffffff802080ce:	48 c7 44 24 78 02 00 	movq   $0x2,0x78(%rsp)
ffffffff802080d5:	00 00 
ffffffff802080d7:	f2 0f 10 00          	movsd  (%rax),%xmm0
ffffffff802080db:	e8 0d 80 ff ff       	callq  ffffffff802000ed <frexp>
ffffffff802080e0:	e8 6b f5 ff ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff802080e5:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff802080ea:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff802080ef:	e8 3c 0c 01 00       	callq  ffffffff80218d30 <caml_alloc_tuple>
ffffffff802080f4:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
ffffffff802080f9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff802080fe:	48 89 10             	mov    %rdx,(%rax)
ffffffff80208101:	48 63 44 24 1c       	movslq 0x1c(%rsp),%rax
ffffffff80208106:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
ffffffff8020810b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
ffffffff80208110:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80208114:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
ffffffff80208119:	48 89 1d 58 bf 03 00 	mov    %rbx,0x3bf58(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80208120:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
ffffffff80208127:	00 
ffffffff80208128:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff8020812f:	00 00 
ffffffff80208131:	75 09                	jne    ffffffff8020813c <caml_frexp_float+0x10c>
ffffffff80208133:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
ffffffff8020813a:	5b                   	pop    %rbx
ffffffff8020813b:	c3                   	retq   
ffffffff8020813c:	e8 5f 7f ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80208141:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80208148:	00 00 00 00 
ffffffff8020814c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80208150 <caml_ldexp_float_unboxed>:
ffffffff80208150:	e9 81 7f ff ff       	jmpq   ffffffff802000d6 <ldexp>
ffffffff80208155:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020815c:	00 00 00 00 

ffffffff80208160 <caml_ldexp_float>:
ffffffff80208160:	49 89 f8             	mov    %rdi,%r8
ffffffff80208163:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208167:	48 d1 fe             	sar    %rsi
ffffffff8020816a:	f2 41 0f 10 00       	movsd  (%r8),%xmm0
ffffffff8020816f:	48 89 f7             	mov    %rsi,%rdi
ffffffff80208172:	e8 5f 7f ff ff       	callq  ffffffff802000d6 <ldexp>
ffffffff80208177:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020817b:	e9 d0 f4 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>

ffffffff80208180 <caml_log_float>:
ffffffff80208180:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208184:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208188:	e8 54 7f ff ff       	callq  ffffffff802000e1 <log>
ffffffff8020818d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208191:	e9 ba f4 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020819d:	00 00 00 

ffffffff802081a0 <caml_log10_float>:
ffffffff802081a0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802081a4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff802081a8:	e8 25 7f ff ff       	callq  ffffffff802000d2 <log10>
ffffffff802081ad:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802081b1:	e9 9a f4 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff802081b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802081bd:	00 00 00 

ffffffff802081c0 <caml_modf_float>:
ffffffff802081c0:	53                   	push   %rbx
ffffffff802081c1:	48 89 f8             	mov    %rdi,%rax
ffffffff802081c4:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
ffffffff802081cb:	48 8b 1d a6 be 03 00 	mov    0x3bea6(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff802081d2:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff802081d7:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff802081dc:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
ffffffff802081e1:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff802081e8:	00 00 
ffffffff802081ea:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
ffffffff802081f1:	00 
ffffffff802081f2:	31 c9                	xor    %ecx,%ecx
ffffffff802081f4:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
ffffffff802081f9:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
ffffffff802081fe:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffff80208203:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
ffffffff80208208:	48 89 15 69 be 03 00 	mov    %rdx,0x3be69(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020820f:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff80208214:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
ffffffff8020821b:	00 
ffffffff8020821c:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff80208221:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
ffffffff80208228:	00 
ffffffff80208229:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
ffffffff8020822e:	48 89 94 24 98 00 00 	mov    %rdx,0x98(%rsp)
ffffffff80208235:	00 
ffffffff80208236:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
ffffffff8020823b:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
ffffffff80208242:	00 00 
ffffffff80208244:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
ffffffff8020824b:	00 00 
ffffffff8020824d:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80208254:	00 00 
ffffffff80208256:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020825d:	00 00 
ffffffff8020825f:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff80208266:	00 00 
ffffffff80208268:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
ffffffff8020826f:	00 01 00 00 00 
ffffffff80208274:	48 c7 44 24 78 03 00 	movq   $0x3,0x78(%rsp)
ffffffff8020827b:	00 00 
ffffffff8020827d:	f2 0f 10 00          	movsd  (%rax),%xmm0
ffffffff80208281:	e8 5a 7e ff ff       	callq  ffffffff802000e0 <modf>
ffffffff80208286:	e8 c5 f3 ff ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8020828b:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
ffffffff80208291:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff80208296:	e8 b5 f3 ff ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8020829b:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff802082a0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff802082a5:	e8 86 0a 01 00       	callq  ffffffff80218d30 <caml_alloc_tuple>
ffffffff802082aa:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
ffffffff802082af:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff802082b4:	48 89 10             	mov    %rdx,(%rax)
ffffffff802082b7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff802082bc:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
ffffffff802082c1:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff802082c5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff802082ca:	48 89 1d a7 bd 03 00 	mov    %rbx,0x3bda7(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802082d1:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
ffffffff802082d8:	00 
ffffffff802082d9:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff802082e0:	00 00 
ffffffff802082e2:	75 09                	jne    ffffffff802082ed <caml_modf_float+0x12d>
ffffffff802082e4:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
ffffffff802082eb:	5b                   	pop    %rbx
ffffffff802082ec:	c3                   	retq   
ffffffff802082ed:	e8 ae 7d ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802082f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802082f9:	00 00 00 00 
ffffffff802082fd:	0f 1f 00             	nopl   (%rax)

ffffffff80208300 <caml_sqrt_float>:
ffffffff80208300:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208304:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff80208308:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
ffffffff8020830c:	66 0f 28 c8          	movapd %xmm0,%xmm1
ffffffff80208310:	f2 0f 51 c9          	sqrtsd %xmm1,%xmm1
ffffffff80208314:	77 09                	ja     ffffffff8020831f <caml_sqrt_float+0x1f>
ffffffff80208316:	66 0f 28 c1          	movapd %xmm1,%xmm0
ffffffff8020831a:	e9 31 f3 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8020831f:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80208323:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
ffffffff80208329:	e8 b1 7d ff ff       	callq  ffffffff802000df <sqrt>
ffffffff8020832e:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
ffffffff80208334:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80208338:	66 0f 28 c1          	movapd %xmm1,%xmm0
ffffffff8020833c:	e9 0f f3 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208341:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80208348:	00 00 00 00 
ffffffff8020834c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80208350 <caml_power_float>:
ffffffff80208350:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208354:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
ffffffff80208358:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff8020835c:	e8 7d 7d ff ff       	callq  ffffffff802000de <pow>
ffffffff80208361:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208365:	e9 e6 f2 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8020836a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80208370 <caml_sin_float>:
ffffffff80208370:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208374:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208378:	e8 39 7d ff ff       	callq  ffffffff802000b6 <sin>
ffffffff8020837d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208381:	e9 ca f2 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208386:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020838d:	00 00 00 

ffffffff80208390 <caml_sinh_float>:
ffffffff80208390:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208394:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208398:	e8 40 7d ff ff       	callq  ffffffff802000dd <sinh>
ffffffff8020839d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802083a1:	e9 aa f2 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff802083a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802083ad:	00 00 00 

ffffffff802083b0 <caml_cos_float>:
ffffffff802083b0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802083b4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff802083b8:	e8 1f 7d ff ff       	callq  ffffffff802000dc <cos>
ffffffff802083bd:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802083c1:	e9 8a f2 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff802083c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802083cd:	00 00 00 

ffffffff802083d0 <caml_cosh_float>:
ffffffff802083d0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802083d4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff802083d8:	e8 fe 7c ff ff       	callq  ffffffff802000db <cosh>
ffffffff802083dd:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802083e1:	e9 6a f2 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff802083e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802083ed:	00 00 00 

ffffffff802083f0 <caml_tan_float>:
ffffffff802083f0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802083f4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff802083f8:	e8 b8 7c ff ff       	callq  ffffffff802000b5 <tan>
ffffffff802083fd:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208401:	e9 4a f2 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020840d:	00 00 00 

ffffffff80208410 <caml_tanh_float>:
ffffffff80208410:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208414:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208418:	e8 bd 7c ff ff       	callq  ffffffff802000da <tanh>
ffffffff8020841d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208421:	e9 2a f2 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208426:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020842d:	00 00 00 

ffffffff80208430 <caml_asin_float>:
ffffffff80208430:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208434:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208438:	e8 9c 7c ff ff       	callq  ffffffff802000d9 <asin>
ffffffff8020843d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208441:	e9 0a f2 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020844d:	00 00 00 

ffffffff80208450 <caml_acos_float>:
ffffffff80208450:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208454:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208458:	e8 7b 7c ff ff       	callq  ffffffff802000d8 <acos>
ffffffff8020845d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208461:	e9 ea f1 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020846d:	00 00 00 

ffffffff80208470 <caml_atan_float>:
ffffffff80208470:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208474:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208478:	e8 36 7c ff ff       	callq  ffffffff802000b3 <atan>
ffffffff8020847d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208481:	e9 ca f1 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020848d:	00 00 00 

ffffffff80208490 <caml_atan2_float>:
ffffffff80208490:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208494:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
ffffffff80208498:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff8020849c:	e8 13 7c ff ff       	callq  ffffffff802000b4 <atan2>
ffffffff802084a1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802084a5:	e9 a6 f1 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff802084aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802084b0 <caml_ceil_float>:
ffffffff802084b0:	f2 0f 10 1f          	movsd  (%rdi),%xmm3
ffffffff802084b4:	f2 0f 10 15 24 92 01 	movsd  0x19224(%rip),%xmm2        # ffffffff802216e0 <caml_absf_mask+0x530>
ffffffff802084bb:	00 
ffffffff802084bc:	f2 0f 10 25 f4 91 01 	movsd  0x191f4(%rip),%xmm4        # ffffffff802216b8 <caml_absf_mask+0x508>
ffffffff802084c3:	00 
ffffffff802084c4:	66 0f 28 cb          	movapd %xmm3,%xmm1
ffffffff802084c8:	66 0f 28 c3          	movapd %xmm3,%xmm0
ffffffff802084cc:	66 0f 54 ca          	andpd  %xmm2,%xmm1
ffffffff802084d0:	66 0f 2e e1          	ucomisd %xmm1,%xmm4
ffffffff802084d4:	76 2b                	jbe    ffffffff80208501 <caml_ceil_float+0x51>
ffffffff802084d6:	f2 48 0f 2c c3       	cvttsd2si %xmm3,%rax
ffffffff802084db:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff802084df:	f2 0f 10 25 d9 91 01 	movsd  0x191d9(%rip),%xmm4        # ffffffff802216c0 <caml_absf_mask+0x510>
ffffffff802084e6:	00 
ffffffff802084e7:	66 0f 55 d3          	andnpd %xmm3,%xmm2
ffffffff802084eb:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff802084f0:	f2 0f c2 c1 06       	cmpnlesd %xmm1,%xmm0
ffffffff802084f5:	66 0f 54 c4          	andpd  %xmm4,%xmm0
ffffffff802084f9:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
ffffffff802084fd:	66 0f 56 c2          	orpd   %xmm2,%xmm0
ffffffff80208501:	e9 4a f1 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208506:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020850d:	00 00 00 

ffffffff80208510 <caml_hypot>:
ffffffff80208510:	e9 a6 7b ff ff       	jmpq   ffffffff802000bb <hypot>
ffffffff80208515:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020851c:	00 00 00 00 

ffffffff80208520 <caml_hypot_float>:
ffffffff80208520:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208524:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
ffffffff80208528:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff8020852c:	e8 8a 7b ff ff       	callq  ffffffff802000bb <hypot>
ffffffff80208531:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208535:	e9 16 f1 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8020853a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80208540 <caml_expm1>:
ffffffff80208540:	e9 75 7b ff ff       	jmpq   ffffffff802000ba <expm1>
ffffffff80208545:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020854c:	00 00 00 00 

ffffffff80208550 <caml_log1p>:
ffffffff80208550:	e9 5b 7b ff ff       	jmpq   ffffffff802000b0 <log1p>
ffffffff80208555:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020855c:	00 00 00 00 

ffffffff80208560 <caml_expm1_float>:
ffffffff80208560:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208564:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208568:	e8 4d 7b ff ff       	callq  ffffffff802000ba <expm1>
ffffffff8020856d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208571:	e9 da f0 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020857d:	00 00 00 

ffffffff80208580 <caml_log1p_float>:
ffffffff80208580:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208584:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208588:	e8 23 7b ff ff       	callq  ffffffff802000b0 <log1p>
ffffffff8020858d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208591:	e9 ba f0 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80208596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020859d:	00 00 00 

ffffffff802085a0 <caml_copysign>:
ffffffff802085a0:	66 0f 54 05 38 91 01 	andpd  0x19138(%rip),%xmm0        # ffffffff802216e0 <caml_absf_mask+0x530>
ffffffff802085a7:	00 
ffffffff802085a8:	66 0f 28 d1          	movapd %xmm1,%xmm2
ffffffff802085ac:	66 0f 54 15 1c 91 01 	andpd  0x1911c(%rip),%xmm2        # ffffffff802216d0 <caml_absf_mask+0x520>
ffffffff802085b3:	00 
ffffffff802085b4:	66 0f 56 c2          	orpd   %xmm2,%xmm0
ffffffff802085b8:	c3                   	retq   
ffffffff802085b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802085c0 <caml_copysign_float>:
ffffffff802085c0:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
ffffffff802085c4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff802085c8:	66 0f 54 05 10 91 01 	andpd  0x19110(%rip),%xmm0        # ffffffff802216e0 <caml_absf_mask+0x530>
ffffffff802085cf:	00 
ffffffff802085d0:	66 0f 28 d1          	movapd %xmm1,%xmm2
ffffffff802085d4:	66 0f 54 15 f4 90 01 	andpd  0x190f4(%rip),%xmm2        # ffffffff802216d0 <caml_absf_mask+0x520>
ffffffff802085db:	00 
ffffffff802085dc:	66 0f 56 c2          	orpd   %xmm2,%xmm0
ffffffff802085e0:	e9 6b f0 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff802085e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802085ec:	00 00 00 00 

ffffffff802085f0 <caml_signbit>:
ffffffff802085f0:	66 0f 50 c0          	movmskpd %xmm0,%eax
ffffffff802085f4:	83 e0 01             	and    $0x1,%eax
ffffffff802085f7:	83 f8 01             	cmp    $0x1,%eax
ffffffff802085fa:	48 19 c0             	sbb    %rax,%rax
ffffffff802085fd:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff80208601:	48 83 c0 03          	add    $0x3,%rax
ffffffff80208605:	c3                   	retq   
ffffffff80208606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020860d:	00 00 00 

ffffffff80208610 <caml_signbit_float>:
ffffffff80208610:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208614:	66 0f 50 c0          	movmskpd %xmm0,%eax
ffffffff80208618:	83 e0 01             	and    $0x1,%eax
ffffffff8020861b:	83 f8 01             	cmp    $0x1,%eax
ffffffff8020861e:	48 19 c0             	sbb    %rax,%rax
ffffffff80208621:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff80208625:	48 83 c0 03          	add    $0x3,%rax
ffffffff80208629:	c3                   	retq   
ffffffff8020862a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80208630 <caml_neq_float>:
ffffffff80208630:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208634:	66 0f 2e 06          	ucomisd (%rsi),%xmm0
ffffffff80208638:	7a 0e                	jp     ffffffff80208648 <caml_neq_float+0x18>
ffffffff8020863a:	75 0c                	jne    ffffffff80208648 <caml_neq_float+0x18>
ffffffff8020863c:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80208641:	c3                   	retq   
ffffffff80208642:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80208648:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8020864d:	c3                   	retq   
ffffffff8020864e:	66 90                	xchg   %ax,%ax

ffffffff80208650 <caml_float_compare_unboxed>:
ffffffff80208650:	31 c0                	xor    %eax,%eax
ffffffff80208652:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff80208656:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8020865b:	0f 97 c0             	seta   %al
ffffffff8020865e:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
ffffffff80208662:	7a 44                	jp     ffffffff802086a8 <caml_float_compare_unboxed+0x58>
ffffffff80208664:	75 42                	jne    ffffffff802086a8 <caml_float_compare_unboxed+0x58>
ffffffff80208666:	48 01 d0             	add    %rdx,%rax
ffffffff80208669:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
ffffffff8020866d:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80208672:	7a 1c                	jp     ffffffff80208690 <caml_float_compare_unboxed+0x40>
ffffffff80208674:	75 1a                	jne    ffffffff80208690 <caml_float_compare_unboxed+0x40>
ffffffff80208676:	48 29 d0             	sub    %rdx,%rax
ffffffff80208679:	31 d2                	xor    %edx,%edx
ffffffff8020867b:	66 0f 2f c8          	comisd %xmm0,%xmm1
ffffffff8020867f:	0f 97 c2             	seta   %dl
ffffffff80208682:	48 29 d0             	sub    %rdx,%rax
ffffffff80208685:	c3                   	retq   
ffffffff80208686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020868d:	00 00 00 
ffffffff80208690:	31 d2                	xor    %edx,%edx
ffffffff80208692:	48 29 d0             	sub    %rdx,%rax
ffffffff80208695:	31 d2                	xor    %edx,%edx
ffffffff80208697:	66 0f 2f c8          	comisd %xmm0,%xmm1
ffffffff8020869b:	0f 97 c2             	seta   %dl
ffffffff8020869e:	48 29 d0             	sub    %rdx,%rax
ffffffff802086a1:	c3                   	retq   
ffffffff802086a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802086a8:	31 d2                	xor    %edx,%edx
ffffffff802086aa:	eb ba                	jmp    ffffffff80208666 <caml_float_compare_unboxed+0x16>
ffffffff802086ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802086b0 <caml_eq_float>:
ffffffff802086b0:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff802086b4:	66 0f 2e 06          	ucomisd (%rsi),%xmm0
ffffffff802086b8:	7b 06                	jnp    ffffffff802086c0 <caml_eq_float+0x10>
ffffffff802086ba:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802086bf:	c3                   	retq   
ffffffff802086c0:	75 f8                	jne    ffffffff802086ba <caml_eq_float+0xa>
ffffffff802086c2:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff802086c7:	c3                   	retq   
ffffffff802086c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802086cf:	00 

ffffffff802086d0 <caml_le_float>:
ffffffff802086d0:	f2 0f 10 06          	movsd  (%rsi),%xmm0
ffffffff802086d4:	66 0f 2f 07          	comisd (%rdi),%xmm0
ffffffff802086d8:	48 19 c0             	sbb    %rax,%rax
ffffffff802086db:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff802086df:	48 83 c0 03          	add    $0x3,%rax
ffffffff802086e3:	c3                   	retq   
ffffffff802086e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802086eb:	00 00 00 00 
ffffffff802086ef:	90                   	nop

ffffffff802086f0 <caml_lt_float>:
ffffffff802086f0:	f2 0f 10 06          	movsd  (%rsi),%xmm0
ffffffff802086f4:	31 c0                	xor    %eax,%eax
ffffffff802086f6:	66 0f 2f 07          	comisd (%rdi),%xmm0
ffffffff802086fa:	0f 97 c0             	seta   %al
ffffffff802086fd:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80208702:	c3                   	retq   
ffffffff80208703:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020870a:	00 00 00 00 
ffffffff8020870e:	66 90                	xchg   %ax,%ax

ffffffff80208710 <caml_ge_float>:
ffffffff80208710:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208714:	66 0f 2f 06          	comisd (%rsi),%xmm0
ffffffff80208718:	48 19 c0             	sbb    %rax,%rax
ffffffff8020871b:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff8020871f:	48 83 c0 03          	add    $0x3,%rax
ffffffff80208723:	c3                   	retq   
ffffffff80208724:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020872b:	00 00 00 00 
ffffffff8020872f:	90                   	nop

ffffffff80208730 <caml_gt_float>:
ffffffff80208730:	f2 0f 10 07          	movsd  (%rdi),%xmm0
ffffffff80208734:	31 c0                	xor    %eax,%eax
ffffffff80208736:	66 0f 2f 06          	comisd (%rsi),%xmm0
ffffffff8020873a:	0f 97 c0             	seta   %al
ffffffff8020873d:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80208742:	c3                   	retq   
ffffffff80208743:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020874a:	00 00 00 00 
ffffffff8020874e:	66 90                	xchg   %ax,%ax

ffffffff80208750 <caml_float_compare>:
ffffffff80208750:	f2 0f 10 0f          	movsd  (%rdi),%xmm1
ffffffff80208754:	f2 0f 10 06          	movsd  (%rsi),%xmm0
ffffffff80208758:	31 c0                	xor    %eax,%eax
ffffffff8020875a:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8020875f:	66 0f 2f c8          	comisd %xmm0,%xmm1
ffffffff80208763:	0f 97 c0             	seta   %al
ffffffff80208766:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
ffffffff8020876a:	7a 3c                	jp     ffffffff802087a8 <caml_float_compare+0x58>
ffffffff8020876c:	75 3a                	jne    ffffffff802087a8 <caml_float_compare+0x58>
ffffffff8020876e:	48 01 d0             	add    %rdx,%rax
ffffffff80208771:	31 d2                	xor    %edx,%edx
ffffffff80208773:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff80208777:	0f 97 c2             	seta   %dl
ffffffff8020877a:	48 29 d0             	sub    %rdx,%rax
ffffffff8020877d:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
ffffffff80208781:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80208786:	7a 10                	jp     ffffffff80208798 <caml_float_compare+0x48>
ffffffff80208788:	75 0e                	jne    ffffffff80208798 <caml_float_compare+0x48>
ffffffff8020878a:	48 29 d0             	sub    %rdx,%rax
ffffffff8020878d:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80208792:	c3                   	retq   
ffffffff80208793:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80208798:	31 d2                	xor    %edx,%edx
ffffffff8020879a:	48 29 d0             	sub    %rdx,%rax
ffffffff8020879d:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff802087a2:	c3                   	retq   
ffffffff802087a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802087a8:	31 d2                	xor    %edx,%edx
ffffffff802087aa:	eb c2                	jmp    ffffffff8020876e <caml_float_compare+0x1e>
ffffffff802087ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802087b0 <caml_classify_float_unboxed>:
ffffffff802087b0:	66 48 0f 7e c2       	movq   %xmm0,%rdx
ffffffff802087b5:	66 48 0f 7e c0       	movq   %xmm0,%rax
ffffffff802087ba:	41 b8 05 00 00 00    	mov    $0x5,%r8d
ffffffff802087c0:	48 01 d2             	add    %rdx,%rdx
ffffffff802087c3:	74 1a                	je     ffffffff802087df <caml_classify_float_unboxed+0x2f>
ffffffff802087c5:	48 c1 ea 35          	shr    $0x35,%rdx
ffffffff802087c9:	41 b8 03 00 00 00    	mov    $0x3,%r8d
ffffffff802087cf:	74 0e                	je     ffffffff802087df <caml_classify_float_unboxed+0x2f>
ffffffff802087d1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff802087d7:	81 fa ff 07 00 00    	cmp    $0x7ff,%edx
ffffffff802087dd:	74 09                	je     ffffffff802087e8 <caml_classify_float_unboxed+0x38>
ffffffff802087df:	4c 89 c0             	mov    %r8,%rax
ffffffff802087e2:	c3                   	retq   
ffffffff802087e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802087e8:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff802087ec:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff802087f0:	4d 19 c0             	sbb    %r8,%r8
ffffffff802087f3:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
ffffffff802087f7:	49 83 c0 09          	add    $0x9,%r8
ffffffff802087fb:	4c 89 c0             	mov    %r8,%rax
ffffffff802087fe:	c3                   	retq   
ffffffff802087ff:	90                   	nop

ffffffff80208800 <caml_classify_float>:
ffffffff80208800:	48 8b 0f             	mov    (%rdi),%rcx
ffffffff80208803:	b8 05 00 00 00       	mov    $0x5,%eax
ffffffff80208808:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020880b:	48 01 d2             	add    %rdx,%rdx
ffffffff8020880e:	74 18                	je     ffffffff80208828 <caml_classify_float+0x28>
ffffffff80208810:	48 c1 ea 35          	shr    $0x35,%rdx
ffffffff80208814:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80208819:	74 0d                	je     ffffffff80208828 <caml_classify_float+0x28>
ffffffff8020881b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80208820:	81 fa ff 07 00 00    	cmp    $0x7ff,%edx
ffffffff80208826:	74 08                	je     ffffffff80208830 <caml_classify_float+0x30>
ffffffff80208828:	c3                   	retq   
ffffffff80208829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80208830:	48 c1 e1 0c          	shl    $0xc,%rcx
ffffffff80208834:	48 83 f9 01          	cmp    $0x1,%rcx
ffffffff80208838:	48 19 c0             	sbb    %rax,%rax
ffffffff8020883b:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff8020883f:	48 83 c0 09          	add    $0x9,%rax
ffffffff80208843:	c3                   	retq   
ffffffff80208844:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020884b:	00 00 00 00 
ffffffff8020884f:	90                   	nop

ffffffff80208850 <caml_init_ieee_floats>:
ffffffff80208850:	c3                   	retq   
ffffffff80208851:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80208858:	00 00 00 
ffffffff8020885b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80208860 <caml_insert_global_root>:
ffffffff80208860:	55                   	push   %rbp
ffffffff80208861:	53                   	push   %rbx
ffffffff80208862:	48 89 f3             	mov    %rsi,%rbx
ffffffff80208865:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
ffffffff8020886c:	44 8b 8f 90 00 00 00 	mov    0x90(%rdi),%r9d
ffffffff80208873:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020887a:	00 00 
ffffffff8020887c:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff80208883:	00 
ffffffff80208884:	31 c0                	xor    %eax,%eax
ffffffff80208886:	45 85 c9             	test   %r9d,%r9d
ffffffff80208889:	0f 88 1e 01 00 00    	js     ffffffff802089ad <caml_insert_global_root+0x14d>
ffffffff8020888f:	49 63 c1             	movslq %r9d,%rax
ffffffff80208892:	44 89 ce             	mov    %r9d,%esi
ffffffff80208895:	48 89 fa             	mov    %rdi,%rdx
ffffffff80208898:	4c 8d 04 c4          	lea    (%rsp,%rax,8),%r8
ffffffff8020889c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802088a0:	48 89 d0             	mov    %rdx,%rax
ffffffff802088a3:	48 63 ce             	movslq %esi,%rcx
ffffffff802088a6:	eb 0d                	jmp    ffffffff802088b5 <caml_insert_global_root+0x55>
ffffffff802088a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802088af:	00 
ffffffff802088b0:	48 39 18             	cmp    %rbx,(%rax)
ffffffff802088b3:	73 0d                	jae    ffffffff802088c2 <caml_insert_global_root+0x62>
ffffffff802088b5:	48 89 c2             	mov    %rax,%rdx
ffffffff802088b8:	48 8b 44 c8 08       	mov    0x8(%rax,%rcx,8),%rax
ffffffff802088bd:	48 85 c0             	test   %rax,%rax
ffffffff802088c0:	75 ee                	jne    ffffffff802088b0 <caml_insert_global_root+0x50>
ffffffff802088c2:	83 ee 01             	sub    $0x1,%esi
ffffffff802088c5:	49 89 10             	mov    %rdx,(%r8)
ffffffff802088c8:	49 83 e8 08          	sub    $0x8,%r8
ffffffff802088cc:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff802088cf:	75 cf                	jne    ffffffff802088a0 <caml_insert_global_root+0x40>
ffffffff802088d1:	48 8b 42 08          	mov    0x8(%rdx),%rax
ffffffff802088d5:	48 85 c0             	test   %rax,%rax
ffffffff802088d8:	74 09                	je     ffffffff802088e3 <caml_insert_global_root+0x83>
ffffffff802088da:	48 39 18             	cmp    %rbx,(%rax)
ffffffff802088dd:	0f 84 ad 00 00 00    	je     ffffffff80208990 <caml_insert_global_root+0x130>
ffffffff802088e3:	69 05 4b 1a 03 00 cd 	imul   $0x10dcd,0x31a4b(%rip),%eax        # ffffffff8023a338 <random_seed>
ffffffff802088ea:	0d 01 00 
ffffffff802088ed:	05 55 62 00 00       	add    $0x6255,%eax
ffffffff802088f2:	89 c2                	mov    %eax,%edx
ffffffff802088f4:	89 05 3e 1a 03 00    	mov    %eax,0x31a3e(%rip)        # ffffffff8023a338 <random_seed>
ffffffff802088fa:	81 e2 00 00 00 c0    	and    $0xc0000000,%edx
ffffffff80208900:	81 fa 00 00 00 c0    	cmp    $0xc0000000,%edx
ffffffff80208906:	0f 85 a9 00 00 00    	jne    ffffffff802089b5 <caml_insert_global_root+0x155>
ffffffff8020890c:	31 ed                	xor    %ebp,%ebp
ffffffff8020890e:	66 90                	xchg   %ax,%ax
ffffffff80208910:	c1 e0 02             	shl    $0x2,%eax
ffffffff80208913:	83 c5 01             	add    $0x1,%ebp
ffffffff80208916:	89 c2                	mov    %eax,%edx
ffffffff80208918:	81 e2 00 00 00 c0    	and    $0xc0000000,%edx
ffffffff8020891e:	81 fa 00 00 00 c0    	cmp    $0xc0000000,%edx
ffffffff80208924:	74 ea                	je     ffffffff80208910 <caml_insert_global_root+0xb0>
ffffffff80208926:	48 63 c5             	movslq %ebp,%rax
ffffffff80208929:	4c 8d 04 c5 10 00 00 	lea    0x10(,%rax,8),%r8
ffffffff80208930:	00 
ffffffff80208931:	41 39 e9             	cmp    %ebp,%r9d
ffffffff80208934:	7d 1e                	jge    ffffffff80208954 <caml_insert_global_root+0xf4>
ffffffff80208936:	41 8d 41 01          	lea    0x1(%r9),%eax
ffffffff8020893a:	39 c5                	cmp    %eax,%ebp
ffffffff8020893c:	7c 10                	jl     ffffffff8020894e <caml_insert_global_root+0xee>
ffffffff8020893e:	66 90                	xchg   %ax,%ax
ffffffff80208940:	48 63 d0             	movslq %eax,%rdx
ffffffff80208943:	83 c0 01             	add    $0x1,%eax
ffffffff80208946:	48 89 3c d4          	mov    %rdi,(%rsp,%rdx,8)
ffffffff8020894a:	39 c5                	cmp    %eax,%ebp
ffffffff8020894c:	7d f2                	jge    ffffffff80208940 <caml_insert_global_root+0xe0>
ffffffff8020894e:	89 af 90 00 00 00    	mov    %ebp,0x90(%rdi)
ffffffff80208954:	4c 89 c7             	mov    %r8,%rdi
ffffffff80208957:	e8 d4 7f 00 00       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8020895c:	31 d2                	xor    %edx,%edx
ffffffff8020895e:	48 89 e7             	mov    %rsp,%rdi
ffffffff80208961:	48 89 18             	mov    %rbx,(%rax)
ffffffff80208964:	85 ed                	test   %ebp,%ebp
ffffffff80208966:	78 28                	js     ffffffff80208990 <caml_insert_global_root+0x130>
ffffffff80208968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020896f:	00 
ffffffff80208970:	48 8b 0c d7          	mov    (%rdi,%rdx,8),%rcx
ffffffff80208974:	48 63 f2             	movslq %edx,%rsi
ffffffff80208977:	48 8d 0c f1          	lea    (%rcx,%rsi,8),%rcx
ffffffff8020897b:	48 8b 71 08          	mov    0x8(%rcx),%rsi
ffffffff8020897f:	48 89 74 d0 08       	mov    %rsi,0x8(%rax,%rdx,8)
ffffffff80208984:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80208988:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff8020898c:	39 d5                	cmp    %edx,%ebp
ffffffff8020898e:	7d e0                	jge    ffffffff80208970 <caml_insert_global_root+0x110>
ffffffff80208990:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
ffffffff80208997:	00 
ffffffff80208998:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020899f:	00 00 
ffffffff802089a1:	75 43                	jne    ffffffff802089e6 <caml_insert_global_root+0x186>
ffffffff802089a3:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
ffffffff802089aa:	5b                   	pop    %rbx
ffffffff802089ab:	5d                   	pop    %rbp
ffffffff802089ac:	c3                   	retq   
ffffffff802089ad:	48 89 fa             	mov    %rdi,%rdx
ffffffff802089b0:	e9 1c ff ff ff       	jmpq   ffffffff802088d1 <caml_insert_global_root+0x71>
ffffffff802089b5:	45 85 c9             	test   %r9d,%r9d
ffffffff802089b8:	78 1f                	js     ffffffff802089d9 <caml_insert_global_root+0x179>
ffffffff802089ba:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff802089bf:	e8 6c 7f 00 00       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff802089c4:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff802089c8:	48 89 18             	mov    %rbx,(%rax)
ffffffff802089cb:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
ffffffff802089cf:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff802089d3:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff802089d7:	eb b7                	jmp    ffffffff80208990 <caml_insert_global_root+0x130>
ffffffff802089d9:	41 b8 10 00 00 00    	mov    $0x10,%r8d
ffffffff802089df:	31 ed                	xor    %ebp,%ebp
ffffffff802089e1:	e9 50 ff ff ff       	jmpq   ffffffff80208936 <caml_insert_global_root+0xd6>
ffffffff802089e6:	e8 b5 76 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802089eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802089f0 <classify_gc_root>:
ffffffff802089f0:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff802089f5:	40 f6 c7 01          	test   $0x1,%dil
ffffffff802089f9:	75 35                	jne    ffffffff80208a30 <classify_gc_root+0x40>
ffffffff802089fb:	48 3b 3d a6 35 03 00 	cmp    0x335a6(%rip),%rdi        # ffffffff8023bfa8 <caml_young_end>
ffffffff80208a02:	73 0b                	jae    ffffffff80208a0f <classify_gc_root+0x1f>
ffffffff80208a04:	31 c0                	xor    %eax,%eax
ffffffff80208a06:	48 3b 3d a3 35 03 00 	cmp    0x335a3(%rip),%rdi        # ffffffff8023bfb0 <caml_young_start>
ffffffff80208a0d:	77 21                	ja     ffffffff80208a30 <classify_gc_root+0x40>
ffffffff80208a0f:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208a13:	e8 08 7a 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80208a18:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208a1c:	83 e0 01             	and    $0x1,%eax
ffffffff80208a1f:	89 c2                	mov    %eax,%edx
ffffffff80208a21:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff80208a26:	29 d0                	sub    %edx,%eax
ffffffff80208a28:	c3                   	retq   
ffffffff80208a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80208a30:	c3                   	retq   
ffffffff80208a31:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80208a38:	00 00 00 00 
ffffffff80208a3c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80208a40 <caml_delete_global_root>:
ffffffff80208a40:	53                   	push   %rbx
ffffffff80208a41:	48 89 fb             	mov    %rdi,%rbx
ffffffff80208a44:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
ffffffff80208a4b:	44 8b 8f 90 00 00 00 	mov    0x90(%rdi),%r9d
ffffffff80208a52:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80208a59:	00 00 
ffffffff80208a5b:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff80208a62:	00 
ffffffff80208a63:	31 c0                	xor    %eax,%eax
ffffffff80208a65:	45 85 c9             	test   %r9d,%r9d
ffffffff80208a68:	0f 88 f3 00 00 00    	js     ffffffff80208b61 <caml_delete_global_root+0x121>
ffffffff80208a6e:	49 63 c1             	movslq %r9d,%rax
ffffffff80208a71:	44 89 cf             	mov    %r9d,%edi
ffffffff80208a74:	48 89 da             	mov    %rbx,%rdx
ffffffff80208a77:	4c 8d 04 c4          	lea    (%rsp,%rax,8),%r8
ffffffff80208a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80208a80:	48 89 d0             	mov    %rdx,%rax
ffffffff80208a83:	48 63 cf             	movslq %edi,%rcx
ffffffff80208a86:	eb 0d                	jmp    ffffffff80208a95 <caml_delete_global_root+0x55>
ffffffff80208a88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80208a8f:	00 
ffffffff80208a90:	48 39 30             	cmp    %rsi,(%rax)
ffffffff80208a93:	73 0d                	jae    ffffffff80208aa2 <caml_delete_global_root+0x62>
ffffffff80208a95:	48 89 c2             	mov    %rax,%rdx
ffffffff80208a98:	48 8b 44 c8 08       	mov    0x8(%rax,%rcx,8),%rax
ffffffff80208a9d:	48 85 c0             	test   %rax,%rax
ffffffff80208aa0:	75 ee                	jne    ffffffff80208a90 <caml_delete_global_root+0x50>
ffffffff80208aa2:	83 ef 01             	sub    $0x1,%edi
ffffffff80208aa5:	49 89 10             	mov    %rdx,(%r8)
ffffffff80208aa8:	49 83 e8 08          	sub    $0x8,%r8
ffffffff80208aac:	83 ff ff             	cmp    $0xffffffff,%edi
ffffffff80208aaf:	75 cf                	jne    ffffffff80208a80 <caml_delete_global_root+0x40>
ffffffff80208ab1:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
ffffffff80208ab5:	48 85 ff             	test   %rdi,%rdi
ffffffff80208ab8:	74 05                	je     ffffffff80208abf <caml_delete_global_root+0x7f>
ffffffff80208aba:	48 39 37             	cmp    %rsi,(%rdi)
ffffffff80208abd:	74 20                	je     ffffffff80208adf <caml_delete_global_root+0x9f>
ffffffff80208abf:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
ffffffff80208ac6:	00 
ffffffff80208ac7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80208ace:	00 00 
ffffffff80208ad0:	0f 85 93 00 00 00    	jne    ffffffff80208b69 <caml_delete_global_root+0x129>
ffffffff80208ad6:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
ffffffff80208add:	5b                   	pop    %rbx
ffffffff80208ade:	c3                   	retq   
ffffffff80208adf:	31 c0                	xor    %eax,%eax
ffffffff80208ae1:	48 89 e6             	mov    %rsp,%rsi
ffffffff80208ae4:	45 85 c9             	test   %r9d,%r9d
ffffffff80208ae7:	79 13                	jns    ffffffff80208afc <caml_delete_global_root+0xbc>
ffffffff80208ae9:	eb 37                	jmp    ffffffff80208b22 <caml_delete_global_root+0xe2>
ffffffff80208aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80208af0:	48 83 c0 01          	add    $0x1,%rax
ffffffff80208af4:	39 83 90 00 00 00    	cmp    %eax,0x90(%rbx)
ffffffff80208afa:	7c 26                	jl     ffffffff80208b22 <caml_delete_global_root+0xe2>
ffffffff80208afc:	48 8b 0c c6          	mov    (%rsi,%rax,8),%rcx
ffffffff80208b00:	48 63 d0             	movslq %eax,%rdx
ffffffff80208b03:	48 8d 14 d1          	lea    (%rcx,%rdx,8),%rdx
ffffffff80208b07:	48 39 7a 08          	cmp    %rdi,0x8(%rdx)
ffffffff80208b0b:	75 e3                	jne    ffffffff80208af0 <caml_delete_global_root+0xb0>
ffffffff80208b0d:	48 8b 4c c7 08       	mov    0x8(%rdi,%rax,8),%rcx
ffffffff80208b12:	48 83 c0 01          	add    $0x1,%rax
ffffffff80208b16:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
ffffffff80208b1a:	39 83 90 00 00 00    	cmp    %eax,0x90(%rbx)
ffffffff80208b20:	7d da                	jge    ffffffff80208afc <caml_delete_global_root+0xbc>
ffffffff80208b22:	e8 29 7e 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80208b27:	8b 83 90 00 00 00    	mov    0x90(%rbx),%eax
ffffffff80208b2d:	85 c0                	test   %eax,%eax
ffffffff80208b2f:	7e 8e                	jle    ffffffff80208abf <caml_delete_global_root+0x7f>
ffffffff80208b31:	48 63 d0             	movslq %eax,%rdx
ffffffff80208b34:	48 8d 14 d3          	lea    (%rbx,%rdx,8),%rdx
ffffffff80208b38:	eb 1b                	jmp    ffffffff80208b55 <caml_delete_global_root+0x115>
ffffffff80208b3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80208b40:	83 e8 01             	sub    $0x1,%eax
ffffffff80208b43:	48 83 ea 08          	sub    $0x8,%rdx
ffffffff80208b47:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
ffffffff80208b4d:	85 c0                	test   %eax,%eax
ffffffff80208b4f:	0f 84 6a ff ff ff    	je     ffffffff80208abf <caml_delete_global_root+0x7f>
ffffffff80208b55:	48 83 7a 08 00       	cmpq   $0x0,0x8(%rdx)
ffffffff80208b5a:	74 e4                	je     ffffffff80208b40 <caml_delete_global_root+0x100>
ffffffff80208b5c:	e9 5e ff ff ff       	jmpq   ffffffff80208abf <caml_delete_global_root+0x7f>
ffffffff80208b61:	48 89 fa             	mov    %rdi,%rdx
ffffffff80208b64:	e9 48 ff ff ff       	jmpq   ffffffff80208ab1 <caml_delete_global_root+0x71>
ffffffff80208b69:	e8 32 75 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80208b6e:	66 90                	xchg   %ax,%ax

ffffffff80208b70 <caml_register_global_root>:
ffffffff80208b70:	48 89 fe             	mov    %rdi,%rsi
ffffffff80208b73:	48 8d 3d 26 17 03 00 	lea    0x31726(%rip),%rdi        # ffffffff8023a2a0 <caml_global_roots>
ffffffff80208b7a:	e9 e1 fc ff ff       	jmpq   ffffffff80208860 <caml_insert_global_root>
ffffffff80208b7f:	90                   	nop

ffffffff80208b80 <caml_remove_global_root>:
ffffffff80208b80:	48 89 fe             	mov    %rdi,%rsi
ffffffff80208b83:	48 8d 3d 16 17 03 00 	lea    0x31716(%rip),%rdi        # ffffffff8023a2a0 <caml_global_roots>
ffffffff80208b8a:	e9 b1 fe ff ff       	jmpq   ffffffff80208a40 <caml_delete_global_root>
ffffffff80208b8f:	90                   	nop

ffffffff80208b90 <caml_register_generational_global_root>:
ffffffff80208b90:	55                   	push   %rbp
ffffffff80208b91:	48 89 fd             	mov    %rdi,%rbp
ffffffff80208b94:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80208b97:	e8 54 fe ff ff       	callq  ffffffff802089f0 <classify_gc_root>
ffffffff80208b9c:	85 c0                	test   %eax,%eax
ffffffff80208b9e:	74 10                	je     ffffffff80208bb0 <caml_register_generational_global_root+0x20>
ffffffff80208ba0:	83 f8 01             	cmp    $0x1,%eax
ffffffff80208ba3:	74 1b                	je     ffffffff80208bc0 <caml_register_generational_global_root+0x30>
ffffffff80208ba5:	5d                   	pop    %rbp
ffffffff80208ba6:	c3                   	retq   
ffffffff80208ba7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80208bae:	00 00 
ffffffff80208bb0:	48 89 ee             	mov    %rbp,%rsi
ffffffff80208bb3:	48 8d 3d 46 16 03 00 	lea    0x31646(%rip),%rdi        # ffffffff8023a200 <caml_global_roots_young>
ffffffff80208bba:	5d                   	pop    %rbp
ffffffff80208bbb:	e9 a0 fc ff ff       	jmpq   ffffffff80208860 <caml_insert_global_root>
ffffffff80208bc0:	48 89 ee             	mov    %rbp,%rsi
ffffffff80208bc3:	48 8d 3d 96 15 03 00 	lea    0x31596(%rip),%rdi        # ffffffff8023a160 <caml_global_roots_old>
ffffffff80208bca:	5d                   	pop    %rbp
ffffffff80208bcb:	e9 90 fc ff ff       	jmpq   ffffffff80208860 <caml_insert_global_root>

ffffffff80208bd0 <caml_remove_generational_global_root>:
ffffffff80208bd0:	55                   	push   %rbp
ffffffff80208bd1:	48 89 fd             	mov    %rdi,%rbp
ffffffff80208bd4:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80208bd7:	e8 14 fe ff ff       	callq  ffffffff802089f0 <classify_gc_root>
ffffffff80208bdc:	85 c0                	test   %eax,%eax
ffffffff80208bde:	74 14                	je     ffffffff80208bf4 <caml_remove_generational_global_root+0x24>
ffffffff80208be0:	83 f8 01             	cmp    $0x1,%eax
ffffffff80208be3:	75 23                	jne    ffffffff80208c08 <caml_remove_generational_global_root+0x38>
ffffffff80208be5:	48 89 ee             	mov    %rbp,%rsi
ffffffff80208be8:	48 8d 3d 71 15 03 00 	lea    0x31571(%rip),%rdi        # ffffffff8023a160 <caml_global_roots_old>
ffffffff80208bef:	e8 4c fe ff ff       	callq  ffffffff80208a40 <caml_delete_global_root>
ffffffff80208bf4:	48 89 ee             	mov    %rbp,%rsi
ffffffff80208bf7:	48 8d 3d 02 16 03 00 	lea    0x31602(%rip),%rdi        # ffffffff8023a200 <caml_global_roots_young>
ffffffff80208bfe:	5d                   	pop    %rbp
ffffffff80208bff:	e9 3c fe ff ff       	jmpq   ffffffff80208a40 <caml_delete_global_root>
ffffffff80208c04:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80208c08:	5d                   	pop    %rbp
ffffffff80208c09:	c3                   	retq   
ffffffff80208c0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80208c10 <caml_modify_generational_global_root>:
ffffffff80208c10:	55                   	push   %rbp
ffffffff80208c11:	48 89 fd             	mov    %rdi,%rbp
ffffffff80208c14:	48 89 f7             	mov    %rsi,%rdi
ffffffff80208c17:	53                   	push   %rbx
ffffffff80208c18:	48 89 f3             	mov    %rsi,%rbx
ffffffff80208c1b:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208c1f:	e8 cc fd ff ff       	callq  ffffffff802089f0 <classify_gc_root>
ffffffff80208c24:	83 f8 01             	cmp    $0x1,%eax
ffffffff80208c27:	74 17                	je     ffffffff80208c40 <caml_modify_generational_global_root+0x30>
ffffffff80208c29:	83 f8 02             	cmp    $0x2,%eax
ffffffff80208c2c:	74 52                	je     ffffffff80208c80 <caml_modify_generational_global_root+0x70>
ffffffff80208c2e:	85 c0                	test   %eax,%eax
ffffffff80208c30:	74 2e                	je     ffffffff80208c60 <caml_modify_generational_global_root+0x50>
ffffffff80208c32:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff80208c36:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208c3a:	5b                   	pop    %rbx
ffffffff80208c3b:	5d                   	pop    %rbp
ffffffff80208c3c:	c3                   	retq   
ffffffff80208c3d:	0f 1f 00             	nopl   (%rax)
ffffffff80208c40:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
ffffffff80208c44:	e8 a7 fd ff ff       	callq  ffffffff802089f0 <classify_gc_root>
ffffffff80208c49:	83 f8 02             	cmp    $0x2,%eax
ffffffff80208c4c:	75 e4                	jne    ffffffff80208c32 <caml_modify_generational_global_root+0x22>
ffffffff80208c4e:	48 89 ee             	mov    %rbp,%rsi
ffffffff80208c51:	48 8d 3d 08 15 03 00 	lea    0x31508(%rip),%rdi        # ffffffff8023a160 <caml_global_roots_old>
ffffffff80208c58:	e8 03 fc ff ff       	callq  ffffffff80208860 <caml_insert_global_root>
ffffffff80208c5d:	eb d3                	jmp    ffffffff80208c32 <caml_modify_generational_global_root+0x22>
ffffffff80208c5f:	90                   	nop
ffffffff80208c60:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
ffffffff80208c64:	e8 87 fd ff ff       	callq  ffffffff802089f0 <classify_gc_root>
ffffffff80208c69:	83 f8 01             	cmp    $0x1,%eax
ffffffff80208c6c:	74 2a                	je     ffffffff80208c98 <caml_modify_generational_global_root+0x88>
ffffffff80208c6e:	85 c0                	test   %eax,%eax
ffffffff80208c70:	75 35                	jne    ffffffff80208ca7 <caml_modify_generational_global_root+0x97>
ffffffff80208c72:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff80208c76:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208c7a:	5b                   	pop    %rbx
ffffffff80208c7b:	5d                   	pop    %rbp
ffffffff80208c7c:	c3                   	retq   
ffffffff80208c7d:	0f 1f 00             	nopl   (%rax)
ffffffff80208c80:	48 89 ef             	mov    %rbp,%rdi
ffffffff80208c83:	e8 48 ff ff ff       	callq  ffffffff80208bd0 <caml_remove_generational_global_root>
ffffffff80208c88:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff80208c8c:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208c90:	5b                   	pop    %rbx
ffffffff80208c91:	5d                   	pop    %rbp
ffffffff80208c92:	c3                   	retq   
ffffffff80208c93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80208c98:	48 89 ee             	mov    %rbp,%rsi
ffffffff80208c9b:	48 8d 3d be 14 03 00 	lea    0x314be(%rip),%rdi        # ffffffff8023a160 <caml_global_roots_old>
ffffffff80208ca2:	e8 99 fd ff ff       	callq  ffffffff80208a40 <caml_delete_global_root>
ffffffff80208ca7:	48 89 ee             	mov    %rbp,%rsi
ffffffff80208caa:	48 8d 3d 4f 15 03 00 	lea    0x3154f(%rip),%rdi        # ffffffff8023a200 <caml_global_roots_young>
ffffffff80208cb1:	e8 aa fb ff ff       	callq  ffffffff80208860 <caml_insert_global_root>
ffffffff80208cb6:	e9 77 ff ff ff       	jmpq   ffffffff80208c32 <caml_modify_generational_global_root+0x22>
ffffffff80208cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80208cc0 <caml_scan_global_roots>:
ffffffff80208cc0:	55                   	push   %rbp
ffffffff80208cc1:	48 89 fd             	mov    %rdi,%rbp
ffffffff80208cc4:	53                   	push   %rbx
ffffffff80208cc5:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208cc9:	48 8b 1d d8 15 03 00 	mov    0x315d8(%rip),%rbx        # ffffffff8023a2a8 <caml_global_roots+0x8>
ffffffff80208cd0:	48 85 db             	test   %rbx,%rbx
ffffffff80208cd3:	74 17                	je     ffffffff80208cec <caml_scan_global_roots+0x2c>
ffffffff80208cd5:	0f 1f 00             	nopl   (%rax)
ffffffff80208cd8:	48 8b 03             	mov    (%rbx),%rax
ffffffff80208cdb:	48 8b 38             	mov    (%rax),%rdi
ffffffff80208cde:	48 89 c6             	mov    %rax,%rsi
ffffffff80208ce1:	ff d5                	callq  *%rbp
ffffffff80208ce3:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff80208ce7:	48 85 db             	test   %rbx,%rbx
ffffffff80208cea:	75 ec                	jne    ffffffff80208cd8 <caml_scan_global_roots+0x18>
ffffffff80208cec:	48 8b 1d 15 15 03 00 	mov    0x31515(%rip),%rbx        # ffffffff8023a208 <caml_global_roots_young+0x8>
ffffffff80208cf3:	48 85 db             	test   %rbx,%rbx
ffffffff80208cf6:	74 1c                	je     ffffffff80208d14 <caml_scan_global_roots+0x54>
ffffffff80208cf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80208cff:	00 
ffffffff80208d00:	48 8b 03             	mov    (%rbx),%rax
ffffffff80208d03:	48 8b 38             	mov    (%rax),%rdi
ffffffff80208d06:	48 89 c6             	mov    %rax,%rsi
ffffffff80208d09:	ff d5                	callq  *%rbp
ffffffff80208d0b:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff80208d0f:	48 85 db             	test   %rbx,%rbx
ffffffff80208d12:	75 ec                	jne    ffffffff80208d00 <caml_scan_global_roots+0x40>
ffffffff80208d14:	48 8b 1d 4d 14 03 00 	mov    0x3144d(%rip),%rbx        # ffffffff8023a168 <caml_global_roots_old+0x8>
ffffffff80208d1b:	48 85 db             	test   %rbx,%rbx
ffffffff80208d1e:	74 14                	je     ffffffff80208d34 <caml_scan_global_roots+0x74>
ffffffff80208d20:	48 8b 03             	mov    (%rbx),%rax
ffffffff80208d23:	48 8b 38             	mov    (%rax),%rdi
ffffffff80208d26:	48 89 c6             	mov    %rax,%rsi
ffffffff80208d29:	ff d5                	callq  *%rbp
ffffffff80208d2b:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff80208d2f:	48 85 db             	test   %rbx,%rbx
ffffffff80208d32:	75 ec                	jne    ffffffff80208d20 <caml_scan_global_roots+0x60>
ffffffff80208d34:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208d38:	5b                   	pop    %rbx
ffffffff80208d39:	5d                   	pop    %rbp
ffffffff80208d3a:	c3                   	retq   
ffffffff80208d3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80208d40 <caml_scan_global_young_roots>:
ffffffff80208d40:	55                   	push   %rbp
ffffffff80208d41:	48 89 fd             	mov    %rdi,%rbp
ffffffff80208d44:	53                   	push   %rbx
ffffffff80208d45:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80208d49:	48 8b 1d 58 15 03 00 	mov    0x31558(%rip),%rbx        # ffffffff8023a2a8 <caml_global_roots+0x8>
ffffffff80208d50:	48 85 db             	test   %rbx,%rbx
ffffffff80208d53:	74 17                	je     ffffffff80208d6c <caml_scan_global_young_roots+0x2c>
ffffffff80208d55:	0f 1f 00             	nopl   (%rax)
ffffffff80208d58:	48 8b 03             	mov    (%rbx),%rax
ffffffff80208d5b:	48 8b 38             	mov    (%rax),%rdi
ffffffff80208d5e:	48 89 c6             	mov    %rax,%rsi
ffffffff80208d61:	ff d5                	callq  *%rbp
ffffffff80208d63:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff80208d67:	48 85 db             	test   %rbx,%rbx
ffffffff80208d6a:	75 ec                	jne    ffffffff80208d58 <caml_scan_global_young_roots+0x18>
ffffffff80208d6c:	48 8b 1d 95 14 03 00 	mov    0x31495(%rip),%rbx        # ffffffff8023a208 <caml_global_roots_young+0x8>
ffffffff80208d73:	48 85 db             	test   %rbx,%rbx
ffffffff80208d76:	74 69                	je     ffffffff80208de1 <caml_scan_global_young_roots+0xa1>
ffffffff80208d78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80208d7f:	00 
ffffffff80208d80:	48 8b 03             	mov    (%rbx),%rax
ffffffff80208d83:	48 8b 38             	mov    (%rax),%rdi
ffffffff80208d86:	48 89 c6             	mov    %rax,%rsi
ffffffff80208d89:	ff d5                	callq  *%rbp
ffffffff80208d8b:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff80208d8f:	48 85 db             	test   %rbx,%rbx
ffffffff80208d92:	75 ec                	jne    ffffffff80208d80 <caml_scan_global_young_roots+0x40>
ffffffff80208d94:	48 8b 1d 6d 14 03 00 	mov    0x3146d(%rip),%rbx        # ffffffff8023a208 <caml_global_roots_young+0x8>
ffffffff80208d9b:	48 85 db             	test   %rbx,%rbx
ffffffff80208d9e:	74 41                	je     ffffffff80208de1 <caml_scan_global_young_roots+0xa1>
ffffffff80208da0:	48 8d 2d b9 13 03 00 	lea    0x313b9(%rip),%rbp        # ffffffff8023a160 <caml_global_roots_old>
ffffffff80208da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80208dae:	00 00 
ffffffff80208db0:	48 8b 33             	mov    (%rbx),%rsi
ffffffff80208db3:	48 89 ef             	mov    %rbp,%rdi
ffffffff80208db6:	e8 a5 fa ff ff       	callq  ffffffff80208860 <caml_insert_global_root>
ffffffff80208dbb:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff80208dbf:	48 85 db             	test   %rbx,%rbx
ffffffff80208dc2:	75 ec                	jne    ffffffff80208db0 <caml_scan_global_young_roots+0x70>
ffffffff80208dc4:	48 8b 1d 3d 14 03 00 	mov    0x3143d(%rip),%rbx        # ffffffff8023a208 <caml_global_roots_young+0x8>
ffffffff80208dcb:	48 85 db             	test   %rbx,%rbx
ffffffff80208dce:	74 11                	je     ffffffff80208de1 <caml_scan_global_young_roots+0xa1>
ffffffff80208dd0:	48 89 df             	mov    %rbx,%rdi
ffffffff80208dd3:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff80208dd7:	e8 74 7b 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80208ddc:	48 85 db             	test   %rbx,%rbx
ffffffff80208ddf:	75 ef                	jne    ffffffff80208dd0 <caml_scan_global_young_roots+0x90>
ffffffff80208de1:	8b 35 a9 14 03 00    	mov    0x314a9(%rip),%esi        # ffffffff8023a290 <caml_global_roots_young+0x90>
ffffffff80208de7:	48 8d 05 1a 14 03 00 	lea    0x3141a(%rip),%rax        # ffffffff8023a208 <caml_global_roots_young+0x8>
ffffffff80208dee:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80208df2:	48 8d 14 f2          	lea    (%rdx,%rsi,8),%rdx
ffffffff80208df6:	85 f6                	test   %esi,%esi
ffffffff80208df8:	78 16                	js     ffffffff80208e10 <caml_scan_global_young_roots+0xd0>
ffffffff80208dfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80208e00:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80208e07:	48 83 c0 08          	add    $0x8,%rax
ffffffff80208e0b:	48 39 c2             	cmp    %rax,%rdx
ffffffff80208e0e:	75 f0                	jne    ffffffff80208e00 <caml_scan_global_young_roots+0xc0>
ffffffff80208e10:	c7 05 76 14 03 00 00 	movl   $0x0,0x31476(%rip)        # ffffffff8023a290 <caml_global_roots_young+0x90>
ffffffff80208e17:	00 00 00 
ffffffff80208e1a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208e1e:	5b                   	pop    %rbx
ffffffff80208e1f:	5d                   	pop    %rbp
ffffffff80208e20:	c3                   	retq   
ffffffff80208e21:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80208e28:	00 00 00 
ffffffff80208e2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80208e30 <read64u>:
ffffffff80208e30:	4c 8b 0d 49 2d 03 00 	mov    0x32d49(%rip),%r9        # ffffffff8023bb80 <intern_src>
ffffffff80208e37:	41 0f b6 39          	movzbl (%r9),%edi
ffffffff80208e3b:	45 0f b6 41 07       	movzbl 0x7(%r9),%r8d
ffffffff80208e40:	49 83 c1 08          	add    $0x8,%r9
ffffffff80208e44:	41 0f b6 71 fa       	movzbl -0x6(%r9),%esi
ffffffff80208e49:	41 0f b6 49 fb       	movzbl -0x5(%r9),%ecx
ffffffff80208e4e:	48 89 f8             	mov    %rdi,%rax
ffffffff80208e51:	41 0f b6 79 f9       	movzbl -0x7(%r9),%edi
ffffffff80208e56:	41 0f b6 51 fc       	movzbl -0x4(%r9),%edx
ffffffff80208e5b:	48 c1 e0 38          	shl    $0x38,%rax
ffffffff80208e5f:	48 c1 e6 28          	shl    $0x28,%rsi
ffffffff80208e63:	48 c1 e7 30          	shl    $0x30,%rdi
ffffffff80208e67:	48 c1 e1 20          	shl    $0x20,%rcx
ffffffff80208e6b:	48 01 c7             	add    %rax,%rdi
ffffffff80208e6e:	41 0f b6 41 fd       	movzbl -0x3(%r9),%eax
ffffffff80208e73:	48 c1 e2 18          	shl    $0x18,%rdx
ffffffff80208e77:	49 01 f8             	add    %rdi,%r8
ffffffff80208e7a:	49 8d 3c 30          	lea    (%r8,%rsi,1),%rdi
ffffffff80208e7e:	48 c1 e0 10          	shl    $0x10,%rax
ffffffff80208e82:	48 8d 34 0f          	lea    (%rdi,%rcx,1),%rsi
ffffffff80208e86:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx
ffffffff80208e8a:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
ffffffff80208e8e:	41 0f b6 41 fe       	movzbl -0x2(%r9),%eax
ffffffff80208e93:	4c 89 0d e6 2c 03 00 	mov    %r9,0x32ce6(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80208e9a:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff80208e9e:	48 01 d0             	add    %rdx,%rax
ffffffff80208ea1:	c3                   	retq   
ffffffff80208ea2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80208ea9:	00 00 00 00 
ffffffff80208ead:	0f 1f 00             	nopl   (%rax)

ffffffff80208eb0 <caml_parse_header>:
ffffffff80208eb0:	55                   	push   %rbp
ffffffff80208eb1:	49 89 f2             	mov    %rsi,%r10
ffffffff80208eb4:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff80208eb8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80208ebf:	00 00 
ffffffff80208ec1:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffff80208ec6:	31 c0                	xor    %eax,%eax
ffffffff80208ec8:	48 8b 05 b1 2c 03 00 	mov    0x32cb1(%rip),%rax        # ffffffff8023bb80 <intern_src>
ffffffff80208ecf:	44 0f b6 00          	movzbl (%rax),%r8d
ffffffff80208ed3:	44 0f b6 48 03       	movzbl 0x3(%rax),%r9d
ffffffff80208ed8:	48 8d 48 04          	lea    0x4(%rax),%rcx
ffffffff80208edc:	0f b6 50 01          	movzbl 0x1(%rax),%edx
ffffffff80208ee0:	48 89 0d 99 2c 03 00 	mov    %rcx,0x32c99(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80208ee7:	41 c1 e0 18          	shl    $0x18,%r8d
ffffffff80208eeb:	c1 e2 10             	shl    $0x10,%edx
ffffffff80208eee:	45 01 c1             	add    %r8d,%r9d
ffffffff80208ef1:	45 8d 04 11          	lea    (%r9,%rdx,1),%r8d
ffffffff80208ef5:	0f b6 50 02          	movzbl 0x2(%rax),%edx
ffffffff80208ef9:	c1 e2 08             	shl    $0x8,%edx
ffffffff80208efc:	44 01 c2             	add    %r8d,%edx
ffffffff80208eff:	89 16                	mov    %edx,(%rsi)
ffffffff80208f01:	81 fa be a6 95 84    	cmp    $0x8495a6be,%edx
ffffffff80208f07:	74 57                	je     ffffffff80208f60 <caml_parse_header+0xb0>
ffffffff80208f09:	81 fa bf a6 95 84    	cmp    $0x8495a6bf,%edx
ffffffff80208f0f:	0f 85 d2 00 00 00    	jne    ffffffff80208fe7 <caml_parse_header+0x137>
ffffffff80208f15:	c7 46 04 20 00 00 00 	movl   $0x20,0x4(%rsi)
ffffffff80208f1c:	48 83 c0 08          	add    $0x8,%rax
ffffffff80208f20:	48 89 05 59 2c 03 00 	mov    %rax,0x32c59(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80208f27:	e8 04 ff ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff80208f2c:	49 89 42 08          	mov    %rax,0x8(%r10)
ffffffff80208f30:	e8 fb fe ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff80208f35:	49 89 42 10          	mov    %rax,0x10(%r10)
ffffffff80208f39:	e8 f2 fe ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff80208f3e:	49 89 42 18          	mov    %rax,0x18(%r10)
ffffffff80208f42:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffff80208f47:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80208f4e:	00 00 
ffffffff80208f50:	0f 85 ba 00 00 00    	jne    ffffffff80209010 <caml_parse_header+0x160>
ffffffff80208f56:	48 83 c4 70          	add    $0x70,%rsp
ffffffff80208f5a:	5d                   	pop    %rbp
ffffffff80208f5b:	c3                   	retq   
ffffffff80208f5c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80208f60:	c7 46 04 14 00 00 00 	movl   $0x14,0x4(%rsi)
ffffffff80208f67:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
ffffffff80208f6b:	48 83 c0 14          	add    $0x14,%rax
ffffffff80208f6f:	0f b6 70 f3          	movzbl -0xd(%rax),%esi
ffffffff80208f73:	0f b6 50 f1          	movzbl -0xf(%rax),%edx
ffffffff80208f77:	c1 e1 18             	shl    $0x18,%ecx
ffffffff80208f7a:	01 ce                	add    %ecx,%esi
ffffffff80208f7c:	c1 e2 10             	shl    $0x10,%edx
ffffffff80208f7f:	8d 0c 16             	lea    (%rsi,%rdx,1),%ecx
ffffffff80208f82:	0f b6 50 f2          	movzbl -0xe(%rax),%edx
ffffffff80208f86:	c1 e2 08             	shl    $0x8,%edx
ffffffff80208f89:	8d 3c 0a             	lea    (%rdx,%rcx,1),%edi
ffffffff80208f8c:	49 89 7a 08          	mov    %rdi,0x8(%r10)
ffffffff80208f90:	0f b6 48 f4          	movzbl -0xc(%rax),%ecx
ffffffff80208f94:	0f b6 70 f7          	movzbl -0x9(%rax),%esi
ffffffff80208f98:	0f b6 50 f5          	movzbl -0xb(%rax),%edx
ffffffff80208f9c:	c1 e1 18             	shl    $0x18,%ecx
ffffffff80208f9f:	01 ce                	add    %ecx,%esi
ffffffff80208fa1:	c1 e2 10             	shl    $0x10,%edx
ffffffff80208fa4:	8d 0c 16             	lea    (%rsi,%rdx,1),%ecx
ffffffff80208fa7:	0f b6 50 f6          	movzbl -0xa(%rax),%edx
ffffffff80208fab:	c1 e2 08             	shl    $0x8,%edx
ffffffff80208fae:	8d 3c 0a             	lea    (%rdx,%rcx,1),%edi
ffffffff80208fb1:	49 89 7a 10          	mov    %rdi,0x10(%r10)
ffffffff80208fb5:	0f b6 48 fc          	movzbl -0x4(%rax),%ecx
ffffffff80208fb9:	0f b6 70 ff          	movzbl -0x1(%rax),%esi
ffffffff80208fbd:	0f b6 50 fd          	movzbl -0x3(%rax),%edx
ffffffff80208fc1:	c1 e1 18             	shl    $0x18,%ecx
ffffffff80208fc4:	c1 e2 10             	shl    $0x10,%edx
ffffffff80208fc7:	01 ce                	add    %ecx,%esi
ffffffff80208fc9:	8d 0c 16             	lea    (%rsi,%rdx,1),%ecx
ffffffff80208fcc:	0f b6 50 fe          	movzbl -0x2(%rax),%edx
ffffffff80208fd0:	48 89 05 a9 2b 03 00 	mov    %rax,0x32ba9(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80208fd7:	c1 e2 08             	shl    $0x8,%edx
ffffffff80208fda:	01 ca                	add    %ecx,%edx
ffffffff80208fdc:	89 d0                	mov    %edx,%eax
ffffffff80208fde:	49 89 42 18          	mov    %rax,0x18(%r10)
ffffffff80208fe2:	e9 5b ff ff ff       	jmpq   ffffffff80208f42 <caml_parse_header+0x92>
ffffffff80208fe7:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208fea:	48 89 f9             	mov    %rdi,%rcx
ffffffff80208fed:	48 8d 15 fc 86 01 00 	lea    0x186fc(%rip),%rdx        # ffffffff802216f0 <caml_absf_mask+0x540>
ffffffff80208ff4:	31 c0                	xor    %eax,%eax
ffffffff80208ff6:	48 89 ef             	mov    %rbp,%rdi
ffffffff80208ff9:	be 63 00 00 00       	mov    $0x63,%esi
ffffffff80208ffe:	c6 44 24 63 00       	movb   $0x0,0x63(%rsp)
ffffffff80209003:	e8 a5 70 ff ff       	callq  ffffffff802000ad <snprintf>
ffffffff80209008:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020900b:	e8 30 e4 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff80209010:	e8 8b 70 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80209015:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020901c:	00 00 00 00 

ffffffff80209020 <intern_bad_code_pointer>:
ffffffff80209020:	55                   	push   %rbp
ffffffff80209021:	48 8d 15 88 87 01 00 	lea    0x18788(%rip),%rdx        # ffffffff802217b0 <caml_absf_mask+0x600>
ffffffff80209028:	be 00 01 00 00       	mov    $0x100,%esi
ffffffff8020902d:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
ffffffff80209034:	0f b6 0f             	movzbl (%rdi),%ecx
ffffffff80209037:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020903e:	00 00 
ffffffff80209040:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
ffffffff80209047:	00 
ffffffff80209048:	31 c0                	xor    %eax,%eax
ffffffff8020904a:	0f b6 47 0f          	movzbl 0xf(%rdi),%eax
ffffffff8020904e:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209051:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80209055:	50                   	push   %rax
ffffffff80209056:	0f b6 47 0e          	movzbl 0xe(%rdi),%eax
ffffffff8020905a:	50                   	push   %rax
ffffffff8020905b:	0f b6 47 0d          	movzbl 0xd(%rdi),%eax
ffffffff8020905f:	50                   	push   %rax
ffffffff80209060:	0f b6 47 0c          	movzbl 0xc(%rdi),%eax
ffffffff80209064:	50                   	push   %rax
ffffffff80209065:	0f b6 47 0b          	movzbl 0xb(%rdi),%eax
ffffffff80209069:	50                   	push   %rax
ffffffff8020906a:	0f b6 47 0a          	movzbl 0xa(%rdi),%eax
ffffffff8020906e:	50                   	push   %rax
ffffffff8020906f:	0f b6 47 09          	movzbl 0x9(%rdi),%eax
ffffffff80209073:	50                   	push   %rax
ffffffff80209074:	0f b6 47 08          	movzbl 0x8(%rdi),%eax
ffffffff80209078:	50                   	push   %rax
ffffffff80209079:	0f b6 47 07          	movzbl 0x7(%rdi),%eax
ffffffff8020907d:	50                   	push   %rax
ffffffff8020907e:	0f b6 47 06          	movzbl 0x6(%rdi),%eax
ffffffff80209082:	50                   	push   %rax
ffffffff80209083:	0f b6 47 05          	movzbl 0x5(%rdi),%eax
ffffffff80209087:	50                   	push   %rax
ffffffff80209088:	0f b6 47 04          	movzbl 0x4(%rdi),%eax
ffffffff8020908c:	50                   	push   %rax
ffffffff8020908d:	0f b6 47 03          	movzbl 0x3(%rdi),%eax
ffffffff80209091:	50                   	push   %rax
ffffffff80209092:	44 0f b6 4f 02       	movzbl 0x2(%rdi),%r9d
ffffffff80209097:	31 c0                	xor    %eax,%eax
ffffffff80209099:	44 0f b6 47 01       	movzbl 0x1(%rdi),%r8d
ffffffff8020909e:	48 89 ef             	mov    %rbp,%rdi
ffffffff802090a1:	e8 07 70 ff ff       	callq  ffffffff802000ad <snprintf>
ffffffff802090a6:	48 83 c4 70          	add    $0x70,%rsp
ffffffff802090aa:	48 89 ef             	mov    %rbp,%rdi
ffffffff802090ad:	e8 8e e3 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff802090b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802090b9:	00 00 00 00 
ffffffff802090bd:	0f 1f 00             	nopl   (%rax)

ffffffff802090c0 <intern_stack_overflow>:
ffffffff802090c0:	53                   	push   %rbx
ffffffff802090c1:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff802090c6:	48 8d 35 4b 87 01 00 	lea    0x1874b(%rip),%rsi        # ffffffff80221818 <caml_absf_mask+0x668>
ffffffff802090cd:	31 c0                	xor    %eax,%eax
ffffffff802090cf:	48 8d 1d 6a 12 03 00 	lea    0x3126a(%rip),%rbx        # ffffffff8023a340 <intern_stack_init>
ffffffff802090d6:	e8 15 91 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff802090db:	48 8b 3d 16 2b 02 00 	mov    0x22b16(%rip),%rdi        # ffffffff8022bbf8 <intern_stack>
ffffffff802090e2:	48 39 df             	cmp    %rbx,%rdi
ffffffff802090e5:	74 1a                	je     ffffffff80209101 <intern_stack_overflow+0x41>
ffffffff802090e7:	e8 64 78 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802090ec:	48 8d 83 00 18 00 00 	lea    0x1800(%rbx),%rax
ffffffff802090f3:	48 89 1d fe 2a 02 00 	mov    %rbx,0x22afe(%rip)        # ffffffff8022bbf8 <intern_stack>
ffffffff802090fa:	48 89 05 ef 2a 02 00 	mov    %rax,0x22aef(%rip)        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff80209101:	e8 ba e3 ff ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff80209106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020910d:	00 00 00 

ffffffff80209110 <intern_resize_stack>:
ffffffff80209110:	41 54                	push   %r12
ffffffff80209112:	48 8b 15 d7 2a 02 00 	mov    0x22ad7(%rip),%rdx        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff80209119:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
ffffffff80209120:	aa aa aa 
ffffffff80209123:	55                   	push   %rbp
ffffffff80209124:	48 8b 2d cd 2a 02 00 	mov    0x22acd(%rip),%rbp        # ffffffff8022bbf8 <intern_stack>
ffffffff8020912b:	53                   	push   %rbx
ffffffff8020912c:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020912f:	48 29 ea             	sub    %rbp,%rdx
ffffffff80209132:	48 29 eb             	sub    %rbp,%rbx
ffffffff80209135:	48 c1 fa 03          	sar    $0x3,%rdx
ffffffff80209139:	48 0f af d0          	imul   %rax,%rdx
ffffffff8020913d:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
ffffffff80209141:	48 81 f9 ff ff 3f 06 	cmp    $0x63fffff,%rcx
ffffffff80209148:	0f 87 86 00 00 00    	ja     ffffffff802091d4 <intern_resize_stack+0xc4>
ffffffff8020914e:	48 8d 14 91          	lea    (%rcx,%rdx,4),%rdx
ffffffff80209152:	48 8d 05 e7 11 03 00 	lea    0x311e7(%rip),%rax        # ffffffff8023a340 <intern_stack_init>
ffffffff80209159:	4c 8d 24 d5 00 00 00 	lea    0x0(,%rdx,8),%r12
ffffffff80209160:	00 
ffffffff80209161:	48 39 c5             	cmp    %rax,%rbp
ffffffff80209164:	74 2a                	je     ffffffff80209190 <intern_resize_stack+0x80>
ffffffff80209166:	4c 89 e6             	mov    %r12,%rsi
ffffffff80209169:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020916c:	e8 4f 78 00 00       	callq  ffffffff802109c0 <caml_stat_resize_noexc>
ffffffff80209171:	48 85 c0             	test   %rax,%rax
ffffffff80209174:	74 5e                	je     ffffffff802091d4 <intern_resize_stack+0xc4>
ffffffff80209176:	4a 8d 14 20          	lea    (%rax,%r12,1),%rdx
ffffffff8020917a:	48 89 05 77 2a 02 00 	mov    %rax,0x22a77(%rip)        # ffffffff8022bbf8 <intern_stack>
ffffffff80209181:	48 01 d8             	add    %rbx,%rax
ffffffff80209184:	5b                   	pop    %rbx
ffffffff80209185:	48 89 15 64 2a 02 00 	mov    %rdx,0x22a64(%rip)        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff8020918c:	5d                   	pop    %rbp
ffffffff8020918d:	41 5c                	pop    %r12
ffffffff8020918f:	c3                   	retq   
ffffffff80209190:	4c 89 e7             	mov    %r12,%rdi
ffffffff80209193:	e8 18 76 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80209198:	48 85 c0             	test   %rax,%rax
ffffffff8020919b:	74 37                	je     ffffffff802091d4 <intern_resize_stack+0xc4>
ffffffff8020919d:	48 8b 55 00          	mov    0x0(%rbp),%rdx
ffffffff802091a1:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff802091a5:	48 89 c1             	mov    %rax,%rcx
ffffffff802091a8:	48 89 ee             	mov    %rbp,%rsi
ffffffff802091ab:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
ffffffff802091af:	48 29 f9             	sub    %rdi,%rcx
ffffffff802091b2:	48 89 10             	mov    %rdx,(%rax)
ffffffff802091b5:	48 8b 15 7c 29 03 00 	mov    0x3297c(%rip),%rdx        # ffffffff8023bb38 <intern_stack_init+0x17f8>
ffffffff802091bc:	48 29 ce             	sub    %rcx,%rsi
ffffffff802091bf:	81 c1 00 18 00 00    	add    $0x1800,%ecx
ffffffff802091c5:	48 89 90 f8 17 00 00 	mov    %rdx,0x17f8(%rax)
ffffffff802091cc:	c1 e9 03             	shr    $0x3,%ecx
ffffffff802091cf:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
ffffffff802091d2:	eb a2                	jmp    ffffffff80209176 <intern_resize_stack+0x66>
ffffffff802091d4:	e8 e7 fe ff ff       	callq  ffffffff802090c0 <intern_stack_overflow>
ffffffff802091d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802091e0 <intern_cleanup>:
ffffffff802091e0:	48 8b 3d 91 29 03 00 	mov    0x32991(%rip),%rdi        # ffffffff8023bb78 <intern_input>
ffffffff802091e7:	53                   	push   %rbx
ffffffff802091e8:	48 85 ff             	test   %rdi,%rdi
ffffffff802091eb:	74 10                	je     ffffffff802091fd <intern_cleanup+0x1d>
ffffffff802091ed:	e8 5e 77 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802091f2:	48 c7 05 7b 29 03 00 	movq   $0x0,0x3297b(%rip)        # ffffffff8023bb78 <intern_input>
ffffffff802091f9:	00 00 00 00 
ffffffff802091fd:	48 8b 3d 54 29 03 00 	mov    0x32954(%rip),%rdi        # ffffffff8023bb58 <intern_obj_table>
ffffffff80209204:	48 85 ff             	test   %rdi,%rdi
ffffffff80209207:	74 10                	je     ffffffff80209219 <intern_cleanup+0x39>
ffffffff80209209:	e8 42 77 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8020920e:	48 c7 05 3f 29 03 00 	movq   $0x0,0x3293f(%rip)        # ffffffff8023bb58 <intern_obj_table>
ffffffff80209215:	00 00 00 00 
ffffffff80209219:	48 8b 3d 48 29 03 00 	mov    0x32948(%rip),%rdi        # ffffffff8023bb68 <intern_extra_block>
ffffffff80209220:	48 85 ff             	test   %rdi,%rdi
ffffffff80209223:	74 43                	je     ffffffff80209268 <intern_cleanup+0x88>
ffffffff80209225:	e8 66 77 00 00       	callq  ffffffff80210990 <caml_free_for_heap>
ffffffff8020922a:	48 c7 05 33 29 03 00 	movq   $0x0,0x32933(%rip)        # ffffffff8023bb68 <intern_extra_block>
ffffffff80209231:	00 00 00 00 
ffffffff80209235:	48 8b 3d bc 29 02 00 	mov    0x229bc(%rip),%rdi        # ffffffff8022bbf8 <intern_stack>
ffffffff8020923c:	48 8d 1d fd 10 03 00 	lea    0x310fd(%rip),%rbx        # ffffffff8023a340 <intern_stack_init>
ffffffff80209243:	48 39 df             	cmp    %rbx,%rdi
ffffffff80209246:	74 1a                	je     ffffffff80209262 <intern_cleanup+0x82>
ffffffff80209248:	e8 03 77 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8020924d:	48 8d 83 00 18 00 00 	lea    0x1800(%rbx),%rax
ffffffff80209254:	48 89 1d 9d 29 02 00 	mov    %rbx,0x2299d(%rip)        # ffffffff8022bbf8 <intern_stack>
ffffffff8020925b:	48 89 05 8e 29 02 00 	mov    %rax,0x2298e(%rip)        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff80209262:	5b                   	pop    %rbx
ffffffff80209263:	c3                   	retq   
ffffffff80209264:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80209268:	48 8b 05 d1 28 03 00 	mov    0x328d1(%rip),%rax        # ffffffff8023bb40 <intern_block>
ffffffff8020926f:	48 85 c0             	test   %rax,%rax
ffffffff80209272:	74 c1                	je     ffffffff80209235 <intern_cleanup+0x55>
ffffffff80209274:	48 8b 15 cd 28 03 00 	mov    0x328cd(%rip),%rdx        # ffffffff8023bb48 <intern_header>
ffffffff8020927b:	48 c7 05 ba 28 03 00 	movq   $0x0,0x328ba(%rip)        # ffffffff8023bb40 <intern_block>
ffffffff80209282:	00 00 00 00 
ffffffff80209286:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
ffffffff8020928a:	eb a9                	jmp    ffffffff80209235 <intern_cleanup+0x55>
ffffffff8020928c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80209290 <intern_rec>:
ffffffff80209290:	41 57                	push   %r15
ffffffff80209292:	41 56                	push   %r14
ffffffff80209294:	41 55                	push   %r13
ffffffff80209296:	41 54                	push   %r12
ffffffff80209298:	55                   	push   %rbp
ffffffff80209299:	53                   	push   %rbx
ffffffff8020929a:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020929d:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff802092a1:	4c 8b 25 50 29 02 00 	mov    0x22950(%rip),%r12        # ffffffff8022bbf8 <intern_stack>
ffffffff802092a8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802092af:	00 00 
ffffffff802092b1:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff802092b6:	31 c0                	xor    %eax,%eax
ffffffff802092b8:	49 8d 6c 24 18       	lea    0x18(%r12),%rbp
ffffffff802092bd:	48 39 2d 2c 29 02 00 	cmp    %rbp,0x2292c(%rip)        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff802092c4:	0f 86 18 03 00 00    	jbe    ffffffff802095e2 <intern_rec+0x352>
ffffffff802092ca:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%rbp)
ffffffff802092d1:	48 8d 0d 9c 86 01 00 	lea    0x1869c(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff802092d8:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff802092dc:	48 c7 45 08 01 00 00 	movq   $0x1,0x8(%rbp)
ffffffff802092e3:	00 
ffffffff802092e4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802092e8:	4c 39 e5             	cmp    %r12,%rbp
ffffffff802092eb:	0f 84 93 00 00 00    	je     ffffffff80209384 <intern_rec+0xf4>
ffffffff802092f1:	8b 45 10             	mov    0x10(%rbp),%eax
ffffffff802092f4:	4c 8b 45 00          	mov    0x0(%rbp),%r8
ffffffff802092f8:	83 f8 01             	cmp    $0x1,%eax
ffffffff802092fb:	0f 84 df 00 00 00    	je     ffffffff802093e0 <intern_rec+0x150>
ffffffff80209301:	83 f8 02             	cmp    $0x2,%eax
ffffffff80209304:	0f 84 c6 00 00 00    	je     ffffffff802093d0 <intern_rec+0x140>
ffffffff8020930a:	85 c0                	test   %eax,%eax
ffffffff8020930c:	75 da                	jne    ffffffff802092e8 <intern_rec+0x58>
ffffffff8020930e:	48 83 6d 08 01       	subq   $0x1,0x8(%rbp)
ffffffff80209313:	49 8d 40 08          	lea    0x8(%r8),%rax
ffffffff80209317:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
ffffffff8020931b:	48 89 45 00          	mov    %rax,0x0(%rbp)
ffffffff8020931f:	48 0f 44 ea          	cmove  %rdx,%rbp
ffffffff80209323:	48 8b 15 56 28 03 00 	mov    0x32856(%rip),%rdx        # ffffffff8023bb80 <intern_src>
ffffffff8020932a:	44 0f b6 2a          	movzbl (%rdx),%r13d
ffffffff8020932e:	4c 8d 72 01          	lea    0x1(%rdx),%r14
ffffffff80209332:	4c 89 35 47 28 03 00 	mov    %r14,0x32847(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209339:	4c 89 e8             	mov    %r13,%rax
ffffffff8020933c:	41 80 fd 3f          	cmp    $0x3f,%r13b
ffffffff80209340:	0f 86 ba 00 00 00    	jbe    ffffffff80209400 <intern_rec+0x170>
ffffffff80209346:	41 83 fd 7f          	cmp    $0x7f,%r13d
ffffffff8020934a:	0f 86 88 01 00 00    	jbe    ffffffff802094d8 <intern_rec+0x248>
ffffffff80209350:	41 c1 ed 04          	shr    $0x4,%r13d
ffffffff80209354:	83 e0 0f             	and    $0xf,%eax
ffffffff80209357:	41 83 e5 07          	and    $0x7,%r13d
ffffffff8020935b:	89 c7                	mov    %eax,%edi
ffffffff8020935d:	4d 85 ed             	test   %r13,%r13
ffffffff80209360:	0f 85 8a 01 00 00    	jne    ffffffff802094f0 <intern_rec+0x260>
ffffffff80209366:	48 8b 05 c3 cf 03 00 	mov    0x3cfc3(%rip),%rax        # ffffffff80246330 <caml_atom_table>
ffffffff8020936d:	4c 8d 7c f8 08       	lea    0x8(%rax,%rdi,8),%r15
ffffffff80209372:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80209378:	4d 89 38             	mov    %r15,(%r8)
ffffffff8020937b:	4c 39 e5             	cmp    %r12,%rbp
ffffffff8020937e:	0f 85 6d ff ff ff    	jne    ffffffff802092f1 <intern_rec+0x61>
ffffffff80209384:	48 8d 1d b5 0f 03 00 	lea    0x30fb5(%rip),%rbx        # ffffffff8023a340 <intern_stack_init>
ffffffff8020938b:	48 39 dd             	cmp    %rbx,%rbp
ffffffff8020938e:	74 1d                	je     ffffffff802093ad <intern_rec+0x11d>
ffffffff80209390:	48 89 ef             	mov    %rbp,%rdi
ffffffff80209393:	e8 b8 75 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80209398:	48 8d 83 00 18 00 00 	lea    0x1800(%rbx),%rax
ffffffff8020939f:	48 89 1d 52 28 02 00 	mov    %rbx,0x22852(%rip)        # ffffffff8022bbf8 <intern_stack>
ffffffff802093a6:	48 89 05 43 28 02 00 	mov    %rax,0x22843(%rip)        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff802093ad:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
ffffffff802093b2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff802093b9:	00 00 
ffffffff802093bb:	0f 85 ea 0a 00 00    	jne    ffffffff80209eab <intern_rec+0xc1b>
ffffffff802093c1:	48 83 c4 58          	add    $0x58,%rsp
ffffffff802093c5:	5b                   	pop    %rbx
ffffffff802093c6:	5d                   	pop    %rbp
ffffffff802093c7:	41 5c                	pop    %r12
ffffffff802093c9:	41 5d                	pop    %r13
ffffffff802093cb:	41 5e                	pop    %r14
ffffffff802093cd:	41 5f                	pop    %r15
ffffffff802093cf:	c3                   	retq   
ffffffff802093d0:	48 8b 45 08          	mov    0x8(%rbp),%rax
ffffffff802093d4:	49 01 00             	add    %rax,(%r8)
ffffffff802093d7:	48 83 ed 18          	sub    $0x18,%rbp
ffffffff802093db:	e9 08 ff ff ff       	jmpq   ffffffff802092e8 <intern_rec+0x58>
ffffffff802093e0:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
ffffffff802093e5:	78 f0                	js     ffffffff802093d7 <intern_rec+0x147>
ffffffff802093e7:	4c 89 c7             	mov    %r8,%rdi
ffffffff802093ea:	e8 a1 96 00 00       	callq  ffffffff80212a90 <caml_set_oo_id>
ffffffff802093ef:	4c 8b 25 02 28 02 00 	mov    0x22802(%rip),%r12        # ffffffff8022bbf8 <intern_stack>
ffffffff802093f6:	48 8d 0d 77 85 01 00 	lea    0x18577(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff802093fd:	eb d8                	jmp    ffffffff802093d7 <intern_rec+0x147>
ffffffff802093ff:	90                   	nop
ffffffff80209400:	41 83 fd 1f          	cmp    $0x1f,%r13d
ffffffff80209404:	0f 86 b6 00 00 00    	jbe    ffffffff802094c0 <intern_rec+0x230>
ffffffff8020940a:	45 89 e9             	mov    %r13d,%r9d
ffffffff8020940d:	4c 89 eb             	mov    %r13,%rbx
ffffffff80209410:	41 83 e1 1f          	and    $0x1f,%r9d
ffffffff80209414:	83 e3 1f             	and    $0x1f,%ebx
ffffffff80209417:	48 8b 15 52 27 03 00 	mov    0x32752(%rip),%rdx        # ffffffff8023bb70 <intern_dest>
ffffffff8020941e:	48 8d 43 08          	lea    0x8(%rbx),%rax
ffffffff80209422:	4c 8b 15 2f 27 03 00 	mov    0x3272f(%rip),%r10        # ffffffff8023bb58 <intern_obj_table>
ffffffff80209429:	48 89 c6             	mov    %rax,%rsi
ffffffff8020942c:	48 8d 7a 08          	lea    0x8(%rdx),%rdi
ffffffff80209430:	48 c1 ee 03          	shr    $0x3,%rsi
ffffffff80209434:	49 89 ff             	mov    %rdi,%r15
ffffffff80209437:	4d 85 d2             	test   %r10,%r10
ffffffff8020943a:	74 16                	je     ffffffff80209452 <intern_rec+0x1c2>
ffffffff8020943c:	4c 8b 1d 1d 27 03 00 	mov    0x3271d(%rip),%r11        # ffffffff8023bb60 <obj_counter>
ffffffff80209443:	4d 8d 6b 01          	lea    0x1(%r11),%r13
ffffffff80209447:	4b 89 3c da          	mov    %rdi,(%r10,%r11,8)
ffffffff8020944b:	4c 89 2d 0e 27 03 00 	mov    %r13,0x3270e(%rip)        # ffffffff8023bb60 <obj_counter>
ffffffff80209452:	4c 8b 1d f7 26 03 00 	mov    0x326f7(%rip),%r11        # ffffffff8023bb50 <intern_color>
ffffffff80209459:	49 89 f2             	mov    %rsi,%r10
ffffffff8020945c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff80209460:	48 8d 74 f2 08       	lea    0x8(%rdx,%rsi,8),%rsi
ffffffff80209465:	49 c1 e2 0a          	shl    $0xa,%r10
ffffffff80209469:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8020946d:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209472:	4f 8d 94 13 fc 00 00 	lea    0xfc(%r11,%r10,1),%r10
ffffffff80209479:	00 
ffffffff8020947a:	48 89 35 ef 26 03 00 	mov    %rsi,0x326ef(%rip)        # ffffffff8023bb70 <intern_dest>
ffffffff80209481:	4c 89 12             	mov    %r10,(%rdx)
ffffffff80209484:	48 c7 44 38 f9 00 00 	movq   $0x0,-0x7(%rax,%rdi,1)
ffffffff8020948b:	00 00 
ffffffff8020948d:	89 c6                	mov    %eax,%esi
ffffffff8020948f:	44 29 ce             	sub    %r9d,%esi
ffffffff80209492:	40 88 74 02 08       	mov    %sil,0x8(%rdx,%rax,1)
ffffffff80209497:	48 89 da             	mov    %rbx,%rdx
ffffffff8020949a:	4c 89 f6             	mov    %r14,%rsi
ffffffff8020949d:	e8 01 6c ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff802094a2:	49 8d 04 1e          	lea    (%r14,%rbx,1),%rax
ffffffff802094a6:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff802094ab:	48 8d 0d c2 84 01 00 	lea    0x184c2(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff802094b2:	48 89 05 c7 26 03 00 	mov    %rax,0x326c7(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff802094b9:	e9 ba fe ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff802094be:	66 90                	xchg   %ax,%ax
ffffffff802094c0:	41 80 fd 19          	cmp    $0x19,%r13b
ffffffff802094c4:	0f 87 e6 09 00 00    	ja     ffffffff80209eb0 <intern_rec+0xc20>
ffffffff802094ca:	4a 63 04 a9          	movslq (%rcx,%r13,4),%rax
ffffffff802094ce:	48 01 c8             	add    %rcx,%rax
ffffffff802094d1:	ff e0                	jmpq   *%rax
ffffffff802094d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802094d8:	48 01 c0             	add    %rax,%rax
ffffffff802094db:	83 e0 7e             	and    $0x7e,%eax
ffffffff802094de:	4c 8d 78 01          	lea    0x1(%rax),%r15
ffffffff802094e2:	e9 91 fe ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff802094e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802094ee:	00 00 
ffffffff802094f0:	48 8b 35 79 26 03 00 	mov    0x32679(%rip),%rsi        # ffffffff8023bb70 <intern_dest>
ffffffff802094f7:	48 8b 15 5a 26 03 00 	mov    0x3265a(%rip),%rdx        # ffffffff8023bb58 <intern_obj_table>
ffffffff802094fe:	48 8d 5e 08          	lea    0x8(%rsi),%rbx
ffffffff80209502:	49 89 df             	mov    %rbx,%r15
ffffffff80209505:	48 85 d2             	test   %rdx,%rdx
ffffffff80209508:	74 16                	je     ffffffff80209520 <intern_rec+0x290>
ffffffff8020950a:	4c 8b 0d 4f 26 03 00 	mov    0x3264f(%rip),%r9        # ffffffff8023bb60 <obj_counter>
ffffffff80209511:	4d 8d 51 01          	lea    0x1(%r9),%r10
ffffffff80209515:	4a 89 1c ca          	mov    %rbx,(%rdx,%r9,8)
ffffffff80209519:	4c 89 15 40 26 03 00 	mov    %r10,0x32640(%rip)        # ffffffff8023bb60 <obj_counter>
ffffffff80209520:	4c 89 ea             	mov    %r13,%rdx
ffffffff80209523:	48 83 c5 18          	add    $0x18,%rbp
ffffffff80209527:	48 c1 e2 0a          	shl    $0xa,%rdx
ffffffff8020952b:	48 01 fa             	add    %rdi,%rdx
ffffffff8020952e:	48 03 15 1b 26 03 00 	add    0x3261b(%rip),%rdx        # ffffffff8023bb50 <intern_color>
ffffffff80209535:	48 89 16             	mov    %rdx,(%rsi)
ffffffff80209538:	4a 8d 54 ee 08       	lea    0x8(%rsi,%r13,8),%rdx
ffffffff8020953d:	48 89 15 2c 26 03 00 	mov    %rdx,0x3262c(%rip)        # ffffffff8023bb70 <intern_dest>
ffffffff80209544:	48 8b 15 a5 26 02 00 	mov    0x226a5(%rip),%rdx        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff8020954b:	3d f8 00 00 00       	cmp    $0xf8,%eax
ffffffff80209550:	74 1e                	je     ffffffff80209570 <intern_rec+0x2e0>
ffffffff80209552:	48 39 ea             	cmp    %rbp,%rdx
ffffffff80209555:	0f 86 9e 00 00 00    	jbe    ffffffff802095f9 <intern_rec+0x369>
ffffffff8020955b:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%rbp)
ffffffff80209562:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff80209566:	4c 89 6d 08          	mov    %r13,0x8(%rbp)
ffffffff8020956a:	e9 09 fe ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff8020956f:	90                   	nop
ffffffff80209570:	49 83 fd 02          	cmp    $0x2,%r13
ffffffff80209574:	74 24                	je     ffffffff8020959a <intern_rec+0x30a>
ffffffff80209576:	48 39 ea             	cmp    %rbp,%rdx
ffffffff80209579:	0f 86 6a 06 00 00    	jbe    ffffffff80209be9 <intern_rec+0x959>
ffffffff8020957f:	48 8d 43 10          	lea    0x10(%rbx),%rax
ffffffff80209583:	49 83 ed 02          	sub    $0x2,%r13
ffffffff80209587:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%rbp)
ffffffff8020958e:	48 83 c5 18          	add    $0x18,%rbp
ffffffff80209592:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80209596:	4c 89 6d f0          	mov    %r13,-0x10(%rbp)
ffffffff8020959a:	48 39 ea             	cmp    %rbp,%rdx
ffffffff8020959d:	0f 86 d7 06 00 00    	jbe    ffffffff80209c7a <intern_rec+0x9ea>
ffffffff802095a3:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
ffffffff802095aa:	48 83 c5 18          	add    $0x18,%rbp
ffffffff802095ae:	48 89 5d e8          	mov    %rbx,-0x18(%rbp)
ffffffff802095b2:	48 c7 45 f0 01 00 00 	movq   $0x1,-0x10(%rbp)
ffffffff802095b9:	00 
ffffffff802095ba:	48 39 d5             	cmp    %rdx,%rbp
ffffffff802095bd:	0f 83 96 06 00 00    	jae    ffffffff80209c59 <intern_rec+0x9c9>
ffffffff802095c3:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%rbp)
ffffffff802095ca:	4c 8b 25 27 26 02 00 	mov    0x22627(%rip),%r12        # ffffffff8022bbf8 <intern_stack>
ffffffff802095d1:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff802095d5:	48 c7 45 08 02 00 00 	movq   $0x2,0x8(%rbp)
ffffffff802095dc:	00 
ffffffff802095dd:	e9 96 fd ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff802095e2:	48 89 ef             	mov    %rbp,%rdi
ffffffff802095e5:	e8 26 fb ff ff       	callq  ffffffff80209110 <intern_resize_stack>
ffffffff802095ea:	4c 8b 25 07 26 02 00 	mov    0x22607(%rip),%r12        # ffffffff8022bbf8 <intern_stack>
ffffffff802095f1:	48 89 c5             	mov    %rax,%rbp
ffffffff802095f4:	e9 d1 fc ff ff       	jmpq   ffffffff802092ca <intern_rec+0x3a>
ffffffff802095f9:	48 89 ef             	mov    %rbp,%rdi
ffffffff802095fc:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209601:	e8 0a fb ff ff       	callq  ffffffff80209110 <intern_resize_stack>
ffffffff80209606:	4c 8b 25 eb 25 02 00 	mov    0x225eb(%rip),%r12        # ffffffff8022bbf8 <intern_stack>
ffffffff8020960d:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209612:	48 8d 0d 5b 83 01 00 	lea    0x1835b(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209619:	48 89 c5             	mov    %rax,%rbp
ffffffff8020961c:	e9 3a ff ff ff       	jmpq   ffffffff8020955b <intern_rec+0x2cb>
ffffffff80209621:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209626:	e8 05 f8 ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff8020962b:	4c 8b 35 4e 25 03 00 	mov    0x3254e(%rip),%r14        # ffffffff8023bb80 <intern_src>
ffffffff80209632:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209637:	48 89 c3             	mov    %rax,%rbx
ffffffff8020963a:	41 89 c1             	mov    %eax,%r9d
ffffffff8020963d:	e9 d5 fd ff ff       	jmpq   ffffffff80209417 <intern_rec+0x187>
ffffffff80209642:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209647:	e8 e4 f7 ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff8020964c:	4c 8b 35 2d 25 03 00 	mov    0x3252d(%rip),%r14        # ffffffff8023bb80 <intern_src>
ffffffff80209653:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209658:	49 89 c1             	mov    %rax,%r9
ffffffff8020965b:	48 8b 05 0e 25 03 00 	mov    0x3250e(%rip),%rax        # ffffffff8023bb70 <intern_dest>
ffffffff80209662:	48 8b 15 ef 24 03 00 	mov    0x324ef(%rip),%rdx        # ffffffff8023bb58 <intern_obj_table>
ffffffff80209669:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8020966d:	49 89 ff             	mov    %rdi,%r15
ffffffff80209670:	48 85 d2             	test   %rdx,%rdx
ffffffff80209673:	74 16                	je     ffffffff8020968b <intern_rec+0x3fb>
ffffffff80209675:	48 8b 35 e4 24 03 00 	mov    0x324e4(%rip),%rsi        # ffffffff8023bb60 <obj_counter>
ffffffff8020967c:	4c 8d 56 01          	lea    0x1(%rsi),%r10
ffffffff80209680:	48 89 3c f2          	mov    %rdi,(%rdx,%rsi,8)
ffffffff80209684:	4c 89 15 d5 24 03 00 	mov    %r10,0x324d5(%rip)        # ffffffff8023bb60 <obj_counter>
ffffffff8020968b:	48 8b 35 be 24 03 00 	mov    0x324be(%rip),%rsi        # ffffffff8023bb50 <intern_color>
ffffffff80209692:	4c 89 ca             	mov    %r9,%rdx
ffffffff80209695:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff8020969a:	48 c1 e2 0a          	shl    $0xa,%rdx
ffffffff8020969e:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
ffffffff802096a3:	48 8d 94 16 fe 00 00 	lea    0xfe(%rsi,%rdx,1),%rdx
ffffffff802096aa:	00 
ffffffff802096ab:	4c 89 f6             	mov    %r14,%rsi
ffffffff802096ae:	48 89 10             	mov    %rdx,(%rax)
ffffffff802096b1:	4a 8d 14 cd 08 00 00 	lea    0x8(,%r9,8),%rdx
ffffffff802096b8:	00 
ffffffff802096b9:	48 8d 5a f8          	lea    -0x8(%rdx),%rbx
ffffffff802096bd:	48 01 d0             	add    %rdx,%rax
ffffffff802096c0:	48 89 da             	mov    %rbx,%rdx
ffffffff802096c3:	49 01 de             	add    %rbx,%r14
ffffffff802096c6:	48 89 05 a3 24 03 00 	mov    %rax,0x324a3(%rip)        # ffffffff8023bb70 <intern_dest>
ffffffff802096cd:	e8 d1 69 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff802096d2:	41 83 fd 0e          	cmp    $0xe,%r13d
ffffffff802096d6:	4c 89 35 a3 24 03 00 	mov    %r14,0x324a3(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff802096dd:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff802096e2:	48 8d 0d 8b 82 01 00 	lea    0x1828b(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff802096e9:	0f 84 89 fc ff ff    	je     ffffffff80209378 <intern_rec+0xe8>
ffffffff802096ef:	41 83 fd 07          	cmp    $0x7,%r13d
ffffffff802096f3:	0f 84 7f fc ff ff    	je     ffffffff80209378 <intern_rec+0xe8>
ffffffff802096f9:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff802096fe:	4d 85 c9             	test   %r9,%r9
ffffffff80209701:	0f 84 71 fc ff ff    	je     ffffffff80209378 <intern_rec+0xe8>
ffffffff80209707:	48 8d 14 18          	lea    (%rax,%rbx,1),%rdx
ffffffff8020970b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80209710:	44 0f b6 48 07       	movzbl 0x7(%rax),%r9d
ffffffff80209715:	0f b6 38             	movzbl (%rax),%edi
ffffffff80209718:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020971c:	0f b6 70 f9          	movzbl -0x7(%rax),%esi
ffffffff80209720:	44 88 48 f8          	mov    %r9b,-0x8(%rax)
ffffffff80209724:	44 0f b6 48 fe       	movzbl -0x2(%rax),%r9d
ffffffff80209729:	40 88 78 ff          	mov    %dil,-0x1(%rax)
ffffffff8020972d:	0f b6 78 fa          	movzbl -0x6(%rax),%edi
ffffffff80209731:	44 88 48 f9          	mov    %r9b,-0x7(%rax)
ffffffff80209735:	44 0f b6 48 fd       	movzbl -0x3(%rax),%r9d
ffffffff8020973a:	40 88 70 fe          	mov    %sil,-0x2(%rax)
ffffffff8020973e:	0f b6 70 fb          	movzbl -0x5(%rax),%esi
ffffffff80209742:	44 88 48 fa          	mov    %r9b,-0x6(%rax)
ffffffff80209746:	44 0f b6 48 fc       	movzbl -0x4(%rax),%r9d
ffffffff8020974b:	40 88 78 fd          	mov    %dil,-0x3(%rax)
ffffffff8020974f:	44 88 48 fb          	mov    %r9b,-0x5(%rax)
ffffffff80209753:	40 88 70 fc          	mov    %sil,-0x4(%rax)
ffffffff80209757:	48 39 c2             	cmp    %rax,%rdx
ffffffff8020975a:	75 b4                	jne    ffffffff80209710 <intern_rec+0x480>
ffffffff8020975c:	e9 17 fc ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff80209761:	48 8d 42 02          	lea    0x2(%rdx),%rax
ffffffff80209765:	48 89 05 14 24 03 00 	mov    %rax,0x32414(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020976c:	48 0f be 42 01       	movsbq 0x1(%rdx),%rax
ffffffff80209771:	4c 8d 7c 00 01       	lea    0x1(%rax,%rax,1),%r15
ffffffff80209776:	e9 fd fb ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff8020977b:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
ffffffff8020977f:	48 83 c2 03          	add    $0x3,%rdx
ffffffff80209783:	c1 e0 08             	shl    $0x8,%eax
ffffffff80209786:	89 c6                	mov    %eax,%esi
ffffffff80209788:	0f b6 42 ff          	movzbl -0x1(%rdx),%eax
ffffffff8020978c:	48 89 15 ed 23 03 00 	mov    %rdx,0x323ed(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209793:	01 f0                	add    %esi,%eax
ffffffff80209795:	48 0f bf c0          	movswq %ax,%rax
ffffffff80209799:	4c 8d 7c 00 01       	lea    0x1(%rax,%rax,1),%r15
ffffffff8020979e:	e9 d5 fb ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff802097a3:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
ffffffff802097a7:	0f b6 72 04          	movzbl 0x4(%rdx),%esi
ffffffff802097ab:	48 83 c2 05          	add    $0x5,%rdx
ffffffff802097af:	c1 e0 18             	shl    $0x18,%eax
ffffffff802097b2:	01 f0                	add    %esi,%eax
ffffffff802097b4:	0f b6 72 fd          	movzbl -0x3(%rdx),%esi
ffffffff802097b8:	c1 e6 10             	shl    $0x10,%esi
ffffffff802097bb:	01 f0                	add    %esi,%eax
ffffffff802097bd:	0f b6 72 fe          	movzbl -0x2(%rdx),%esi
ffffffff802097c1:	48 89 15 b8 23 03 00 	mov    %rdx,0x323b8(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff802097c8:	c1 e6 08             	shl    $0x8,%esi
ffffffff802097cb:	01 f0                	add    %esi,%eax
ffffffff802097cd:	48 98                	cltq   
ffffffff802097cf:	4c 8d 7c 00 01       	lea    0x1(%rax,%rax,1),%r15
ffffffff802097d4:	e9 9f fb ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff802097d9:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff802097de:	e8 4d f6 ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff802097e3:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff802097e8:	48 8d 0d 85 81 01 00 	lea    0x18185(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff802097ef:	4c 8d 7c 00 01       	lea    0x1(%rax,%rax,1),%r15
ffffffff802097f4:	e9 7f fb ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff802097f9:	48 8d 42 02          	lea    0x2(%rdx),%rax
ffffffff802097fd:	48 89 05 7c 23 03 00 	mov    %rax,0x3237c(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209804:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
ffffffff80209808:	48 8b 1d 51 23 03 00 	mov    0x32351(%rip),%rbx        # ffffffff8023bb60 <obj_counter>
ffffffff8020980f:	48 8b 15 42 23 03 00 	mov    0x32342(%rip),%rdx        # ffffffff8023bb58 <intern_obj_table>
ffffffff80209816:	48 29 c3             	sub    %rax,%rbx
ffffffff80209819:	4c 8b 3c da          	mov    (%rdx,%rbx,8),%r15
ffffffff8020981d:	e9 56 fb ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff80209822:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
ffffffff80209826:	48 83 c2 03          	add    $0x3,%rdx
ffffffff8020982a:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020982d:	89 c6                	mov    %eax,%esi
ffffffff8020982f:	0f b6 42 ff          	movzbl -0x1(%rdx),%eax
ffffffff80209833:	48 89 15 46 23 03 00 	mov    %rdx,0x32346(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020983a:	01 f0                	add    %esi,%eax
ffffffff8020983c:	0f b7 c0             	movzwl %ax,%eax
ffffffff8020983f:	eb c7                	jmp    ffffffff80209808 <intern_rec+0x578>
ffffffff80209841:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
ffffffff80209845:	0f b6 72 04          	movzbl 0x4(%rdx),%esi
ffffffff80209849:	48 83 c2 05          	add    $0x5,%rdx
ffffffff8020984d:	c1 e0 18             	shl    $0x18,%eax
ffffffff80209850:	01 f0                	add    %esi,%eax
ffffffff80209852:	0f b6 72 fd          	movzbl -0x3(%rdx),%esi
ffffffff80209856:	c1 e6 10             	shl    $0x10,%esi
ffffffff80209859:	01 f0                	add    %esi,%eax
ffffffff8020985b:	0f b6 72 fe          	movzbl -0x2(%rdx),%esi
ffffffff8020985f:	48 89 15 1a 23 03 00 	mov    %rdx,0x3231a(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209866:	c1 e6 08             	shl    $0x8,%esi
ffffffff80209869:	01 f0                	add    %esi,%eax
ffffffff8020986b:	eb 9b                	jmp    ffffffff80209808 <intern_rec+0x578>
ffffffff8020986d:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
ffffffff80209871:	0f b6 72 04          	movzbl 0x4(%rdx),%esi
ffffffff80209875:	4c 8d 72 05          	lea    0x5(%rdx),%r14
ffffffff80209879:	4c 89 35 00 23 03 00 	mov    %r14,0x32300(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209880:	c1 e0 18             	shl    $0x18,%eax
ffffffff80209883:	01 f0                	add    %esi,%eax
ffffffff80209885:	0f b6 72 02          	movzbl 0x2(%rdx),%esi
ffffffff80209889:	c1 e6 10             	shl    $0x10,%esi
ffffffff8020988c:	01 f0                	add    %esi,%eax
ffffffff8020988e:	0f b6 72 03          	movzbl 0x3(%rdx),%esi
ffffffff80209892:	c1 e6 08             	shl    $0x8,%esi
ffffffff80209895:	44 8d 0c 30          	lea    (%rax,%rsi,1),%r9d
ffffffff80209899:	e9 bd fd ff ff       	jmpq   ffffffff8020965b <intern_rec+0x3cb>
ffffffff8020989e:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
ffffffff802098a2:	0f b6 72 04          	movzbl 0x4(%rdx),%esi
ffffffff802098a6:	48 83 c2 05          	add    $0x5,%rdx
ffffffff802098aa:	c1 e0 18             	shl    $0x18,%eax
ffffffff802098ad:	01 f0                	add    %esi,%eax
ffffffff802098af:	0f b6 72 fd          	movzbl -0x3(%rdx),%esi
ffffffff802098b3:	c1 e6 10             	shl    $0x10,%esi
ffffffff802098b6:	8d 3c 30             	lea    (%rax,%rsi,1),%edi
ffffffff802098b9:	0f b6 72 fe          	movzbl -0x2(%rdx),%esi
ffffffff802098bd:	0f b6 c0             	movzbl %al,%eax
ffffffff802098c0:	48 89 15 b9 22 03 00 	mov    %rdx,0x322b9(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff802098c7:	c1 e6 08             	shl    $0x8,%esi
ffffffff802098ca:	44 8d 2c 37          	lea    (%rdi,%rsi,1),%r13d
ffffffff802098ce:	49 c1 ed 0a          	shr    $0xa,%r13
ffffffff802098d2:	e9 84 fa ff ff       	jmpq   ffffffff8020935b <intern_rec+0xcb>
ffffffff802098d7:	0f b6 5a 01          	movzbl 0x1(%rdx),%ebx
ffffffff802098db:	4c 8d 72 02          	lea    0x2(%rdx),%r14
ffffffff802098df:	4c 89 35 9a 22 03 00 	mov    %r14,0x3229a(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff802098e6:	49 89 d9             	mov    %rbx,%r9
ffffffff802098e9:	e9 29 fb ff ff       	jmpq   ffffffff80209417 <intern_rec+0x187>
ffffffff802098ee:	44 0f b6 4a 01       	movzbl 0x1(%rdx),%r9d
ffffffff802098f3:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
ffffffff802098f7:	4c 8d 72 05          	lea    0x5(%rdx),%r14
ffffffff802098fb:	4c 89 35 7e 22 03 00 	mov    %r14,0x3227e(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209902:	41 c1 e1 18          	shl    $0x18,%r9d
ffffffff80209906:	41 01 c1             	add    %eax,%r9d
ffffffff80209909:	0f b6 42 02          	movzbl 0x2(%rdx),%eax
ffffffff8020990d:	c1 e0 10             	shl    $0x10,%eax
ffffffff80209910:	41 01 c1             	add    %eax,%r9d
ffffffff80209913:	0f b6 42 03          	movzbl 0x3(%rdx),%eax
ffffffff80209917:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020991a:	41 8d 1c 01          	lea    (%r9,%rax,1),%ebx
ffffffff8020991e:	49 89 d9             	mov    %rbx,%r9
ffffffff80209921:	e9 f1 fa ff ff       	jmpq   ffffffff80209417 <intern_rec+0x187>
ffffffff80209926:	48 8b 05 43 22 03 00 	mov    0x32243(%rip),%rax        # ffffffff8023bb70 <intern_dest>
ffffffff8020992d:	48 8b 35 24 22 03 00 	mov    0x32224(%rip),%rsi        # ffffffff8023bb58 <intern_obj_table>
ffffffff80209934:	4c 8d 78 08          	lea    0x8(%rax),%r15
ffffffff80209938:	48 85 f6             	test   %rsi,%rsi
ffffffff8020993b:	74 16                	je     ffffffff80209953 <intern_rec+0x6c3>
ffffffff8020993d:	48 8b 3d 1c 22 03 00 	mov    0x3221c(%rip),%rdi        # ffffffff8023bb60 <obj_counter>
ffffffff80209944:	4c 8d 4f 01          	lea    0x1(%rdi),%r9
ffffffff80209948:	4c 89 3c fe          	mov    %r15,(%rsi,%rdi,8)
ffffffff8020994c:	4c 89 0d 0d 22 03 00 	mov    %r9,0x3220d(%rip)        # ffffffff8023bb60 <obj_counter>
ffffffff80209953:	48 8b 1d f6 21 03 00 	mov    0x321f6(%rip),%rbx        # ffffffff8023bb50 <intern_color>
ffffffff8020995a:	48 83 c2 09          	add    $0x9,%rdx
ffffffff8020995e:	48 8d b3 fd 04 00 00 	lea    0x4fd(%rbx),%rsi
ffffffff80209965:	48 89 30             	mov    %rsi,(%rax)
ffffffff80209968:	48 8d 70 10          	lea    0x10(%rax),%rsi
ffffffff8020996c:	48 89 35 fd 21 03 00 	mov    %rsi,0x321fd(%rip)        # ffffffff8023bb70 <intern_dest>
ffffffff80209973:	48 8b 72 f8          	mov    -0x8(%rdx),%rsi
ffffffff80209977:	48 89 15 02 22 03 00 	mov    %rdx,0x32202(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020997e:	48 89 70 08          	mov    %rsi,0x8(%rax)
ffffffff80209982:	41 83 fd 0c          	cmp    $0xc,%r13d
ffffffff80209986:	0f 84 ec f9 ff ff    	je     ffffffff80209378 <intern_rec+0xe8>
ffffffff8020998c:	0f b7 50 08          	movzwl 0x8(%rax),%edx
ffffffff80209990:	0f b7 70 0e          	movzwl 0xe(%rax),%esi
ffffffff80209994:	66 c1 c2 08          	rol    $0x8,%dx
ffffffff80209998:	66 c1 c6 08          	rol    $0x8,%si
ffffffff8020999c:	66 89 70 08          	mov    %si,0x8(%rax)
ffffffff802099a0:	0f b7 70 0c          	movzwl 0xc(%rax),%esi
ffffffff802099a4:	66 89 50 0e          	mov    %dx,0xe(%rax)
ffffffff802099a8:	0f b7 50 0a          	movzwl 0xa(%rax),%edx
ffffffff802099ac:	66 c1 c6 08          	rol    $0x8,%si
ffffffff802099b0:	66 c1 c2 08          	rol    $0x8,%dx
ffffffff802099b4:	66 89 70 0a          	mov    %si,0xa(%rax)
ffffffff802099b8:	66 89 50 0c          	mov    %dx,0xc(%rax)
ffffffff802099bc:	e9 b7 f9 ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff802099c1:	4c 8d 72 02          	lea    0x2(%rdx),%r14
ffffffff802099c5:	44 0f b6 4a 01       	movzbl 0x1(%rdx),%r9d
ffffffff802099ca:	4c 89 35 af 21 03 00 	mov    %r14,0x321af(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff802099d1:	e9 85 fc ff ff       	jmpq   ffffffff8020965b <intern_rec+0x3cb>
ffffffff802099d6:	0f b6 42 02          	movzbl 0x2(%rdx),%eax
ffffffff802099da:	f3 0f 6f 42 05       	movdqu 0x5(%rdx),%xmm0
ffffffff802099df:	48 83 c2 15          	add    $0x15,%rdx
ffffffff802099e3:	0f b6 5a ec          	movzbl -0x14(%rdx),%ebx
ffffffff802099e7:	88 44 24 08          	mov    %al,0x8(%rsp)
ffffffff802099eb:	0f b6 42 ee          	movzbl -0x12(%rdx),%eax
ffffffff802099ef:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
ffffffff802099f4:	88 44 24 10          	mov    %al,0x10(%rsp)
ffffffff802099f8:	0f b6 42 ef          	movzbl -0x11(%rdx),%eax
ffffffff802099fc:	48 89 15 7d 21 03 00 	mov    %rdx,0x3217d(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209a03:	88 44 24 1f          	mov    %al,0x1f(%rsp)
ffffffff80209a07:	8b 05 23 ca 03 00    	mov    0x3ca23(%rip),%eax        # ffffffff80246430 <caml_code_fragments_table>
ffffffff80209a0d:	83 e8 01             	sub    $0x1,%eax
ffffffff80209a10:	0f 88 8c 02 00 00    	js     ffffffff80209ca2 <intern_rec+0xa12>
ffffffff80209a16:	4c 63 f8             	movslq %eax,%r15
ffffffff80209a19:	89 c0                	mov    %eax,%eax
ffffffff80209a1b:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
ffffffff80209a20:	4e 8d 24 fd 00 00 00 	lea    0x0(,%r15,8),%r12
ffffffff80209a27:	00 
ffffffff80209a28:	49 29 c7             	sub    %rax,%r15
ffffffff80209a2b:	4a 8d 04 fd 00 00 00 	lea    0x0(,%r15,8),%rax
ffffffff80209a32:	00 
ffffffff80209a33:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80209a38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80209a3f:	00 
ffffffff80209a40:	48 8b 05 f1 c9 03 00 	mov    0x3c9f1(%rip),%rax        # ffffffff80246438 <caml_code_fragments_table+0x8>
ffffffff80209a47:	4e 8b 3c 20          	mov    (%rax,%r12,1),%r15
ffffffff80209a4b:	41 80 7f 20 00       	cmpb   $0x0,0x20(%r15)
ffffffff80209a50:	4d 8d 6f 10          	lea    0x10(%r15),%r13
ffffffff80209a54:	0f 84 d2 01 00 00    	je     ffffffff80209c2c <intern_rec+0x99c>
ffffffff80209a5a:	49 8b 06             	mov    (%r14),%rax
ffffffff80209a5d:	49 8b 56 08          	mov    0x8(%r14),%rdx
ffffffff80209a61:	49 33 47 10          	xor    0x10(%r15),%rax
ffffffff80209a65:	49 33 55 08          	xor    0x8(%r13),%rdx
ffffffff80209a69:	48 09 c2             	or     %rax,%rdx
ffffffff80209a6c:	0f 85 a6 01 00 00    	jne    ffffffff80209c18 <intern_rec+0x988>
ffffffff80209a72:	0f b6 44 24 1f       	movzbl 0x1f(%rsp),%eax
ffffffff80209a77:	44 0f b6 6c 24 08    	movzbl 0x8(%rsp),%r13d
ffffffff80209a7d:	c1 e3 18             	shl    $0x18,%ebx
ffffffff80209a80:	44 0f b6 64 24 10    	movzbl 0x10(%rsp),%r12d
ffffffff80209a86:	8d 14 03             	lea    (%rbx,%rax,1),%edx
ffffffff80209a89:	41 c1 e5 10          	shl    $0x10,%r13d
ffffffff80209a8d:	42 8d 04 2a          	lea    (%rdx,%r13,1),%eax
ffffffff80209a91:	41 c1 e4 08          	shl    $0x8,%r12d
ffffffff80209a95:	44 01 e0             	add    %r12d,%eax
ffffffff80209a98:	49 03 07             	add    (%r15),%rax
ffffffff80209a9b:	49 3b 47 08          	cmp    0x8(%r15),%rax
ffffffff80209a9f:	0f 83 fd 01 00 00    	jae    ffffffff80209ca2 <intern_rec+0xa12>
ffffffff80209aa5:	48 85 c0             	test   %rax,%rax
ffffffff80209aa8:	0f 84 f4 01 00 00    	je     ffffffff80209ca2 <intern_rec+0xa12>
ffffffff80209aae:	4c 8b 25 43 21 02 00 	mov    0x22143(%rip),%r12        # ffffffff8022bbf8 <intern_stack>
ffffffff80209ab5:	49 89 c7             	mov    %rax,%r15
ffffffff80209ab8:	e9 bb f8 ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff80209abd:	0f b6 5a 01          	movzbl 0x1(%rdx),%ebx
ffffffff80209ac1:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
ffffffff80209ac5:	48 83 c5 18          	add    $0x18,%rbp
ffffffff80209ac9:	48 83 c2 05          	add    $0x5,%rdx
ffffffff80209acd:	c1 e3 18             	shl    $0x18,%ebx
ffffffff80209ad0:	01 c3                	add    %eax,%ebx
ffffffff80209ad2:	0f b6 42 fd          	movzbl -0x3(%rdx),%eax
ffffffff80209ad6:	c1 e0 10             	shl    $0x10,%eax
ffffffff80209ad9:	01 c3                	add    %eax,%ebx
ffffffff80209adb:	0f b6 42 fe          	movzbl -0x2(%rdx),%eax
ffffffff80209adf:	48 89 15 9a 20 03 00 	mov    %rdx,0x3209a(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209ae6:	c1 e0 08             	shl    $0x8,%eax
ffffffff80209ae9:	01 c3                	add    %eax,%ebx
ffffffff80209aeb:	48 8b 05 fe 20 02 00 	mov    0x220fe(%rip),%rax        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff80209af2:	48 39 e8             	cmp    %rbp,%rax
ffffffff80209af5:	0f 86 36 03 00 00    	jbe    ffffffff80209e31 <intern_rec+0xba1>
ffffffff80209afb:	4c 89 45 00          	mov    %r8,0x0(%rbp)
ffffffff80209aff:	48 83 c5 18          	add    $0x18,%rbp
ffffffff80209b03:	c7 45 f8 02 00 00 00 	movl   $0x2,-0x8(%rbp)
ffffffff80209b0a:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
ffffffff80209b0e:	48 39 c5             	cmp    %rax,%rbp
ffffffff80209b11:	0f 83 f9 02 00 00    	jae    ffffffff80209e10 <intern_rec+0xb80>
ffffffff80209b17:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%rbp)
ffffffff80209b1e:	4c 8b 25 d3 20 02 00 	mov    0x220d3(%rip),%r12        # ffffffff8022bbf8 <intern_stack>
ffffffff80209b25:	4c 89 45 00          	mov    %r8,0x0(%rbp)
ffffffff80209b29:	48 c7 45 08 01 00 00 	movq   $0x1,0x8(%rbp)
ffffffff80209b30:	00 
ffffffff80209b31:	e9 b2 f7 ff ff       	jmpq   ffffffff802092e8 <intern_rec+0x58>
ffffffff80209b36:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209b3b:	e8 f0 f2 ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff80209b40:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209b45:	48 8d 0d 28 7e 01 00 	lea    0x17e28(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209b4c:	49 89 c5             	mov    %rax,%r13
ffffffff80209b4f:	0f b6 c0             	movzbl %al,%eax
ffffffff80209b52:	49 c1 ed 0a          	shr    $0xa,%r13
ffffffff80209b56:	e9 00 f8 ff ff       	jmpq   ffffffff8020935b <intern_rec+0xcb>
ffffffff80209b5b:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209b60:	e8 cb f2 ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff80209b65:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209b6a:	48 8d 0d 03 7e 01 00 	lea    0x17e03(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209b71:	e9 92 fc ff ff       	jmpq   ffffffff80209808 <intern_rec+0x578>
ffffffff80209b76:	4c 89 f7             	mov    %r14,%rdi
ffffffff80209b79:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209b7e:	e8 dd 05 01 00       	callq  ffffffff8021a160 <caml_find_custom_operations>
ffffffff80209b83:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209b88:	48 85 c0             	test   %rax,%rax
ffffffff80209b8b:	49 89 c4             	mov    %rax,%r12
ffffffff80209b8e:	0f 84 06 03 00 00    	je     ffffffff80209e9a <intern_rec+0xc0a>
ffffffff80209b94:	41 83 fd 19          	cmp    $0x19,%r13d
ffffffff80209b98:	0f 84 50 02 00 00    	je     ffffffff80209dee <intern_rec+0xb5e>
ffffffff80209b9e:	48 8b 05 db 1f 03 00 	mov    0x31fdb(%rip),%rax        # ffffffff8023bb80 <intern_src>
ffffffff80209ba5:	0f 1f 00             	nopl   (%rax)
ffffffff80209ba8:	48 89 c2             	mov    %rax,%rdx
ffffffff80209bab:	48 83 c0 01          	add    $0x1,%rax
ffffffff80209baf:	80 78 ff 00          	cmpb   $0x0,-0x1(%rax)
ffffffff80209bb3:	75 f3                	jne    ffffffff80209ba8 <intern_rec+0x918>
ffffffff80209bb5:	48 89 05 c4 1f 03 00 	mov    %rax,0x31fc4(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209bbc:	48 8b 05 ad 1f 03 00 	mov    0x31fad(%rip),%rax        # ffffffff8023bb70 <intern_dest>
ffffffff80209bc3:	4c 8d 50 10          	lea    0x10(%rax),%r10
ffffffff80209bc7:	41 83 fd 12          	cmp    $0x12,%r13d
ffffffff80209bcb:	0f 84 ff 01 00 00    	je     ffffffff80209dd0 <intern_rec+0xb40>
ffffffff80209bd1:	41 83 fd 19          	cmp    $0x19,%r13d
ffffffff80209bd5:	0f 85 fc 00 00 00    	jne    ffffffff80209cd7 <intern_rec+0xa47>
ffffffff80209bdb:	49 8b 44 24 38       	mov    0x38(%r12),%rax
ffffffff80209be0:	48 8b 58 08          	mov    0x8(%rax),%rbx
ffffffff80209be4:	e9 0b 01 00 00       	jmpq   ffffffff80209cf4 <intern_rec+0xa64>
ffffffff80209be9:	48 89 ef             	mov    %rbp,%rdi
ffffffff80209bec:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209bf1:	e8 1a f5 ff ff       	callq  ffffffff80209110 <intern_resize_stack>
ffffffff80209bf6:	48 8b 15 f3 1f 02 00 	mov    0x21ff3(%rip),%rdx        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff80209bfd:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209c02:	48 8d 0d 6b 7d 01 00 	lea    0x17d6b(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209c09:	48 89 c5             	mov    %rax,%rbp
ffffffff80209c0c:	e9 6e f9 ff ff       	jmpq   ffffffff8020957f <intern_rec+0x2ef>
ffffffff80209c11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80209c18:	49 8d 44 24 f8       	lea    -0x8(%r12),%rax
ffffffff80209c1d:	4c 39 64 24 28       	cmp    %r12,0x28(%rsp)
ffffffff80209c22:	74 7e                	je     ffffffff80209ca2 <intern_rec+0xa12>
ffffffff80209c24:	49 89 c4             	mov    %rax,%r12
ffffffff80209c27:	e9 14 fe ff ff       	jmpq   ffffffff80209a40 <intern_rec+0x7b0>
ffffffff80209c2c:	49 8b 37             	mov    (%r15),%rsi
ffffffff80209c2f:	49 8b 57 08          	mov    0x8(%r15),%rdx
ffffffff80209c33:	4c 89 ef             	mov    %r13,%rdi
ffffffff80209c36:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
ffffffff80209c3b:	48 29 f2             	sub    %rsi,%rdx
ffffffff80209c3e:	e8 5d 67 00 00       	callq  ffffffff802103a0 <caml_md5_block>
ffffffff80209c43:	41 c6 47 20 01       	movb   $0x1,0x20(%r15)
ffffffff80209c48:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
ffffffff80209c4d:	48 8d 0d 20 7d 01 00 	lea    0x17d20(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209c54:	e9 01 fe ff ff       	jmpq   ffffffff80209a5a <intern_rec+0x7ca>
ffffffff80209c59:	48 89 ef             	mov    %rbp,%rdi
ffffffff80209c5c:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209c61:	e8 aa f4 ff ff       	callq  ffffffff80209110 <intern_resize_stack>
ffffffff80209c66:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209c6b:	48 8d 0d 02 7d 01 00 	lea    0x17d02(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209c72:	48 89 c5             	mov    %rax,%rbp
ffffffff80209c75:	e9 49 f9 ff ff       	jmpq   ffffffff802095c3 <intern_rec+0x333>
ffffffff80209c7a:	48 89 ef             	mov    %rbp,%rdi
ffffffff80209c7d:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209c82:	e8 89 f4 ff ff       	callq  ffffffff80209110 <intern_resize_stack>
ffffffff80209c87:	48 8b 15 62 1f 02 00 	mov    0x21f62(%rip),%rdx        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff80209c8e:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209c93:	48 8d 0d da 7c 01 00 	lea    0x17cda(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209c9a:	48 89 c5             	mov    %rax,%rbp
ffffffff80209c9d:	e9 01 f9 ff ff       	jmpq   ffffffff802095a3 <intern_rec+0x313>
ffffffff80209ca2:	48 8d 3d 56 7a 01 00 	lea    0x17a56(%rip),%rdi        # ffffffff802216ff <caml_absf_mask+0x54f>
ffffffff80209ca9:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209cae:	e8 9d b3 ff ff       	callq  ffffffff80205050 <caml_named_value>
ffffffff80209cb3:	48 85 c0             	test   %rax,%rax
ffffffff80209cb6:	0f 84 05 02 00 00    	je     ffffffff80209ec1 <intern_rec+0xc31>
ffffffff80209cbc:	4c 8b 38             	mov    (%rax),%r15
ffffffff80209cbf:	4c 8b 25 32 1f 02 00 	mov    0x21f32(%rip),%r12        # ffffffff8022bbf8 <intern_stack>
ffffffff80209cc6:	48 8d 0d a7 7c 01 00 	lea    0x17ca7(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209ccd:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209cd2:	e9 a1 f6 ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff80209cd7:	48 83 c2 05          	add    $0x5,%rdx
ffffffff80209cdb:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209ce0:	48 89 15 99 1e 03 00 	mov    %rdx,0x31e99(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff80209ce7:	e8 44 f1 ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff80209cec:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209cf1:	48 89 c3             	mov    %rax,%rbx
ffffffff80209cf4:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209cf9:	4c 89 d7             	mov    %r10,%rdi
ffffffff80209cfc:	41 ff 54 24 28       	callq  *0x28(%r12)
ffffffff80209d01:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209d06:	48 8d 0d 67 7c 01 00 	lea    0x17c67(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209d0d:	48 39 c3             	cmp    %rax,%rbx
ffffffff80209d10:	0f 85 73 01 00 00    	jne    ffffffff80209e89 <intern_rec+0xbf9>
ffffffff80209d16:	48 8d 58 07          	lea    0x7(%rax),%rbx
ffffffff80209d1a:	48 8b 05 4f 1e 03 00 	mov    0x31e4f(%rip),%rax        # ffffffff8023bb70 <intern_dest>
ffffffff80209d21:	48 8b 35 30 1e 03 00 	mov    0x31e30(%rip),%rsi        # ffffffff8023bb58 <intern_obj_table>
ffffffff80209d28:	48 c1 eb 03          	shr    $0x3,%rbx
ffffffff80209d2c:	4c 8d 68 08          	lea    0x8(%rax),%r13
ffffffff80209d30:	48 8d 53 01          	lea    0x1(%rbx),%rdx
ffffffff80209d34:	4d 89 ef             	mov    %r13,%r15
ffffffff80209d37:	48 85 f6             	test   %rsi,%rsi
ffffffff80209d3a:	74 16                	je     ffffffff80209d52 <intern_rec+0xac2>
ffffffff80209d3c:	48 8b 3d 1d 1e 03 00 	mov    0x31e1d(%rip),%rdi        # ffffffff8023bb60 <obj_counter>
ffffffff80209d43:	4c 8d 4f 01          	lea    0x1(%rdi),%r9
ffffffff80209d47:	4c 89 2c fe          	mov    %r13,(%rsi,%rdi,8)
ffffffff80209d4b:	4c 89 0d 0e 1e 03 00 	mov    %r9,0x31e0e(%rip)        # ffffffff8023bb60 <obj_counter>
ffffffff80209d52:	48 8b 35 f7 1d 03 00 	mov    0x31df7(%rip),%rsi        # ffffffff8023bb50 <intern_color>
ffffffff80209d59:	48 c1 e2 0a          	shl    $0xa,%rdx
ffffffff80209d5d:	4c 89 60 08          	mov    %r12,0x8(%rax)
ffffffff80209d61:	48 8d 94 16 ff 00 00 	lea    0xff(%rsi,%rdx,1),%rdx
ffffffff80209d68:	00 
ffffffff80209d69:	48 89 10             	mov    %rdx,(%rax)
ffffffff80209d6c:	49 83 7c 24 08 00    	cmpq   $0x0,0x8(%r12)
ffffffff80209d72:	74 44                	je     ffffffff80209db8 <intern_rec+0xb28>
ffffffff80209d74:	4c 3b 2d 2d 22 03 00 	cmp    0x3222d(%rip),%r13        # ffffffff8023bfa8 <caml_young_end>
ffffffff80209d7b:	73 3b                	jae    ffffffff80209db8 <intern_rec+0xb28>
ffffffff80209d7d:	4c 3b 2d 2c 22 03 00 	cmp    0x3222c(%rip),%r13        # ffffffff8023bfb0 <caml_young_start>
ffffffff80209d84:	76 32                	jbe    ffffffff80209db8 <intern_rec+0xb28>
ffffffff80209d86:	48 8b 15 4b 21 03 00 	mov    0x3214b(%rip),%rdx        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80209d8d:	48 3b 15 4c 21 03 00 	cmp    0x3214c(%rip),%rdx        # ffffffff8023bee0 <caml_custom_table+0x20>
ffffffff80209d94:	0f 83 bf 00 00 00    	jae    ffffffff80209e59 <intern_rec+0xbc9>
ffffffff80209d9a:	48 8d 72 18          	lea    0x18(%rdx),%rsi
ffffffff80209d9e:	48 89 35 33 21 03 00 	mov    %rsi,0x32133(%rip)        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80209da5:	4c 89 2a             	mov    %r13,(%rdx)
ffffffff80209da8:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
ffffffff80209daf:	00 
ffffffff80209db0:	48 c7 42 10 01 00 00 	movq   $0x1,0x10(%rdx)
ffffffff80209db7:	00 
ffffffff80209db8:	48 8d 44 d8 10       	lea    0x10(%rax,%rbx,8),%rax
ffffffff80209dbd:	4c 8b 25 34 1e 02 00 	mov    0x21e34(%rip),%r12        # ffffffff8022bbf8 <intern_stack>
ffffffff80209dc4:	48 89 05 a5 1d 03 00 	mov    %rax,0x31da5(%rip)        # ffffffff8023bb70 <intern_dest>
ffffffff80209dcb:	e9 a8 f5 ff ff       	jmpq   ffffffff80209378 <intern_rec+0xe8>
ffffffff80209dd0:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209dd5:	4c 89 d7             	mov    %r10,%rdi
ffffffff80209dd8:	41 ff 54 24 28       	callq  *0x28(%r12)
ffffffff80209ddd:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209de2:	48 8d 0d 8b 7b 01 00 	lea    0x17b8b(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209de9:	e9 28 ff ff ff       	jmpq   ffffffff80209d16 <intern_rec+0xa86>
ffffffff80209dee:	48 83 78 38 00       	cmpq   $0x0,0x38(%rax)
ffffffff80209df3:	0f 85 a5 fd ff ff    	jne    ffffffff80209b9e <intern_rec+0x90e>
ffffffff80209df9:	e8 e2 f3 ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff80209dfe:	48 8d 3d 6b 7a 01 00 	lea    0x17a6b(%rip),%rdi        # ffffffff80221870 <caml_absf_mask+0x6c0>
ffffffff80209e05:	e8 36 d6 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff80209e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80209e10:	48 89 ef             	mov    %rbp,%rdi
ffffffff80209e13:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209e18:	e8 f3 f2 ff ff       	callq  ffffffff80209110 <intern_resize_stack>
ffffffff80209e1d:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209e22:	48 8d 0d 4b 7b 01 00 	lea    0x17b4b(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209e29:	48 89 c5             	mov    %rax,%rbp
ffffffff80209e2c:	e9 e6 fc ff ff       	jmpq   ffffffff80209b17 <intern_rec+0x887>
ffffffff80209e31:	48 89 ef             	mov    %rbp,%rdi
ffffffff80209e34:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209e39:	e8 d2 f2 ff ff       	callq  ffffffff80209110 <intern_resize_stack>
ffffffff80209e3e:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209e43:	48 8d 0d 2a 7b 01 00 	lea    0x17b2a(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209e4a:	48 89 c5             	mov    %rax,%rbp
ffffffff80209e4d:	48 8b 05 9c 1d 02 00 	mov    0x21d9c(%rip),%rax        # ffffffff8022bbf0 <intern_stack_limit>
ffffffff80209e54:	e9 a2 fc ff ff       	jmpq   ffffffff80209afb <intern_rec+0x86b>
ffffffff80209e59:	48 8d 3d 60 20 03 00 	lea    0x32060(%rip),%rdi        # ffffffff8023bec0 <caml_custom_table>
ffffffff80209e60:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff80209e65:	e8 66 83 00 00       	callq  ffffffff802121d0 <caml_realloc_custom_table>
ffffffff80209e6a:	48 8b 15 67 20 03 00 	mov    0x32067(%rip),%rdx        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80209e71:	48 8b 05 f8 1c 03 00 	mov    0x31cf8(%rip),%rax        # ffffffff8023bb70 <intern_dest>
ffffffff80209e78:	48 8d 0d f5 7a 01 00 	lea    0x17af5(%rip),%rcx        # ffffffff80221974 <caml_absf_mask+0x7c4>
ffffffff80209e7f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80209e84:	e9 11 ff ff ff       	jmpq   ffffffff80209d9a <intern_rec+0xb0a>
ffffffff80209e89:	e8 52 f3 ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff80209e8e:	48 8d 3d 0b 7a 01 00 	lea    0x17a0b(%rip),%rdi        # ffffffff802218a0 <caml_absf_mask+0x6f0>
ffffffff80209e95:	e8 a6 d5 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff80209e9a:	e8 41 f3 ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff80209e9f:	48 8d 3d 9a 79 01 00 	lea    0x1799a(%rip),%rdi        # ffffffff80221840 <caml_absf_mask+0x690>
ffffffff80209ea6:	e8 95 d5 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff80209eab:	e8 f0 61 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80209eb0:	e8 2b f3 ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff80209eb5:	48 8d 3d 24 7a 01 00 	lea    0x17a24(%rip),%rdi        # ffffffff802218e0 <caml_absf_mask+0x730>
ffffffff80209ebc:	e8 7f d5 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff80209ec1:	e8 1a f3 ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff80209ec6:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
ffffffff80209ecb:	e8 50 f1 ff ff       	callq  ffffffff80209020 <intern_bad_code_pointer>

ffffffff80209ed0 <intern_add_to_heap.isra.0>:
ffffffff80209ed0:	4c 8b 05 91 1c 03 00 	mov    0x31c91(%rip),%r8        # ffffffff8023bb68 <intern_extra_block>
ffffffff80209ed7:	4d 85 c0             	test   %r8,%r8
ffffffff80209eda:	74 64                	je     ffffffff80209f40 <intern_add_to_heap.isra.0+0x70>
ffffffff80209edc:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80209ee0:	49 8b 70 f0          	mov    -0x10(%r8),%rsi
ffffffff80209ee4:	48 8b 3d 85 1c 03 00 	mov    0x31c85(%rip),%rdi        # ffffffff8023bb70 <intern_dest>
ffffffff80209eeb:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
ffffffff80209eef:	4c 01 c6             	add    %r8,%rsi
ffffffff80209ef2:	48 39 fe             	cmp    %rdi,%rsi
ffffffff80209ef5:	77 29                	ja     ffffffff80209f20 <intern_add_to_heap.isra.0+0x50>
ffffffff80209ef7:	4c 29 c7             	sub    %r8,%rdi
ffffffff80209efa:	48 c1 ef 03          	shr    $0x3,%rdi
ffffffff80209efe:	48 01 3d 93 1e 03 00 	add    %rdi,0x31e93(%rip)        # ffffffff8023bd98 <caml_allocated_words>
ffffffff80209f05:	4c 89 c7             	mov    %r8,%rdi
ffffffff80209f08:	e8 73 6e 00 00       	callq  ffffffff80210d80 <caml_add_to_heap>
ffffffff80209f0d:	48 c7 05 50 1c 03 00 	movq   $0x0,0x31c50(%rip)        # ffffffff8023bb68 <intern_extra_block>
ffffffff80209f14:	00 00 00 00 
ffffffff80209f18:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80209f1c:	c3                   	retq   
ffffffff80209f1d:	0f 1f 00             	nopl   (%rax)
ffffffff80209f20:	48 29 fe             	sub    %rdi,%rsi
ffffffff80209f23:	31 c9                	xor    %ecx,%ecx
ffffffff80209f25:	31 d2                	xor    %edx,%edx
ffffffff80209f27:	48 c1 fe 03          	sar    $0x3,%rsi
ffffffff80209f2b:	e8 60 18 01 00       	callq  ffffffff8021b790 <caml_make_free_blocks>
ffffffff80209f30:	48 8b 3d 39 1c 03 00 	mov    0x31c39(%rip),%rdi        # ffffffff8023bb70 <intern_dest>
ffffffff80209f37:	4c 8b 05 2a 1c 03 00 	mov    0x31c2a(%rip),%r8        # ffffffff8023bb68 <intern_extra_block>
ffffffff80209f3e:	eb b7                	jmp    ffffffff80209ef7 <intern_add_to_heap.isra.0+0x27>
ffffffff80209f40:	48 c7 05 f5 1b 03 00 	movq   $0x0,0x31bf5(%rip)        # ffffffff8023bb40 <intern_block>
ffffffff80209f47:	00 00 00 00 
ffffffff80209f4b:	c3                   	retq   
ffffffff80209f4c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80209f50 <intern_alloc.part.0>:
ffffffff80209f50:	55                   	push   %rbp
ffffffff80209f51:	48 89 f8             	mov    %rdi,%rax
ffffffff80209f54:	89 d5                	mov    %edx,%ebp
ffffffff80209f56:	53                   	push   %rbx
ffffffff80209f57:	48 89 f3             	mov    %rsi,%rbx
ffffffff80209f5a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80209f5e:	85 d2                	test   %edx,%edx
ffffffff80209f60:	0f 85 9a 00 00 00    	jne    ffffffff8020a000 <intern_alloc.part.0+0xb0>
ffffffff80209f66:	48 ba ff ff ff ff ff 	movabs $0x3fffffffffffff,%rdx
ffffffff80209f6d:	ff 3f 00 
ffffffff80209f70:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80209f74:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80209f77:	0f 87 83 00 00 00    	ja     ffffffff8020a000 <intern_alloc.part.0+0xb0>
ffffffff80209f7d:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
ffffffff80209f84:	77 5a                	ja     ffffffff80209fe0 <intern_alloc.part.0+0x90>
ffffffff80209f86:	48 85 ff             	test   %rdi,%rdi
ffffffff80209f89:	0f 85 e1 00 00 00    	jne    ffffffff8020a070 <intern_alloc.part.0+0x120>
ffffffff80209f8f:	48 8b 05 9a c3 03 00 	mov    0x3c39a(%rip),%rax        # ffffffff80246330 <caml_atom_table>
ffffffff80209f96:	48 05 e8 07 00 00    	add    $0x7e8,%rax
ffffffff80209f9c:	48 89 05 9d 1b 03 00 	mov    %rax,0x31b9d(%rip)        # ffffffff8023bb40 <intern_block>
ffffffff80209fa3:	48 c7 05 b2 1b 03 00 	movq   $0x0,0x31bb2(%rip)        # ffffffff8023bb60 <obj_counter>
ffffffff80209faa:	00 00 00 00 
ffffffff80209fae:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
ffffffff80209fb2:	48 8b 40 f8          	mov    -0x8(%rax),%rax
ffffffff80209fb6:	48 89 15 b3 1b 03 00 	mov    %rdx,0x31bb3(%rip)        # ffffffff8023bb70 <intern_dest>
ffffffff80209fbd:	48 89 05 84 1b 03 00 	mov    %rax,0x31b84(%rip)        # ffffffff8023bb48 <intern_header>
ffffffff80209fc4:	25 00 03 00 00       	and    $0x300,%eax
ffffffff80209fc9:	48 89 05 80 1b 03 00 	mov    %rax,0x31b80(%rip)        # ffffffff8023bb50 <intern_color>
ffffffff80209fd0:	48 85 db             	test   %rbx,%rbx
ffffffff80209fd3:	75 75                	jne    ffffffff8020a04a <intern_alloc.part.0+0xfa>
ffffffff80209fd5:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80209fd9:	5b                   	pop    %rbx
ffffffff80209fda:	5d                   	pop    %rbp
ffffffff80209fdb:	c3                   	retq   
ffffffff80209fdc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80209fe0:	be fc 00 00 00       	mov    $0xfc,%esi
ffffffff80209fe5:	e8 d6 70 00 00       	callq  ffffffff802110c0 <caml_alloc_shr_no_raise>
ffffffff80209fea:	48 89 05 4f 1b 03 00 	mov    %rax,0x31b4f(%rip)        # ffffffff8023bb40 <intern_block>
ffffffff80209ff1:	48 85 c0             	test   %rax,%rax
ffffffff80209ff4:	75 ad                	jne    ffffffff80209fa3 <intern_alloc.part.0+0x53>
ffffffff80209ff6:	e8 e5 f1 ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff80209ffb:	e8 c0 d4 ff ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff8020a000:	48 8d 3c c5 ff 0f 00 	lea    0xfff(,%rax,8),%rdi
ffffffff8020a007:	00 
ffffffff8020a008:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
ffffffff8020a00f:	e8 1c 68 00 00       	callq  ffffffff80210830 <caml_alloc_for_heap>
ffffffff8020a014:	48 89 05 4d 1b 03 00 	mov    %rax,0x31b4d(%rip)        # ffffffff8023bb68 <intern_extra_block>
ffffffff8020a01b:	48 89 c7             	mov    %rax,%rdi
ffffffff8020a01e:	48 85 c0             	test   %rax,%rax
ffffffff8020a021:	74 d3                	je     ffffffff80209ff6 <intern_alloc.part.0+0xa6>
ffffffff8020a023:	b8 00 03 00 00       	mov    $0x300,%eax
ffffffff8020a028:	85 ed                	test   %ebp,%ebp
ffffffff8020a02a:	74 64                	je     ffffffff8020a090 <intern_alloc.part.0+0x140>
ffffffff8020a02c:	48 89 05 1d 1b 03 00 	mov    %rax,0x31b1d(%rip)        # ffffffff8023bb50 <intern_color>
ffffffff8020a033:	48 89 3d 36 1b 03 00 	mov    %rdi,0x31b36(%rip)        # ffffffff8023bb70 <intern_dest>
ffffffff8020a03a:	48 c7 05 1b 1b 03 00 	movq   $0x0,0x31b1b(%rip)        # ffffffff8023bb60 <obj_counter>
ffffffff8020a041:	00 00 00 00 
ffffffff8020a045:	48 85 db             	test   %rbx,%rbx
ffffffff8020a048:	74 8b                	je     ffffffff80209fd5 <intern_alloc.part.0+0x85>
ffffffff8020a04a:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
ffffffff8020a051:	00 
ffffffff8020a052:	e8 59 67 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff8020a057:	48 89 05 fa 1a 03 00 	mov    %rax,0x31afa(%rip)        # ffffffff8023bb58 <intern_obj_table>
ffffffff8020a05e:	48 85 c0             	test   %rax,%rax
ffffffff8020a061:	74 93                	je     ffffffff80209ff6 <intern_alloc.part.0+0xa6>
ffffffff8020a063:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020a067:	5b                   	pop    %rbx
ffffffff8020a068:	5d                   	pop    %rbp
ffffffff8020a069:	c3                   	retq   
ffffffff8020a06a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020a070:	be fc 00 00 00       	mov    $0xfc,%esi
ffffffff8020a075:	e8 86 eb 00 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff8020a07a:	48 89 05 bf 1a 03 00 	mov    %rax,0x31abf(%rip)        # ffffffff8023bb40 <intern_block>
ffffffff8020a081:	e9 1d ff ff ff       	jmpq   ffffffff80209fa3 <intern_alloc.part.0+0x53>
ffffffff8020a086:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020a08d:	00 00 00 
ffffffff8020a090:	e8 2b 64 00 00       	callq  ffffffff802104c0 <caml_allocation_color>
ffffffff8020a095:	48 8b 3d cc 1a 03 00 	mov    0x31acc(%rip),%rdi        # ffffffff8023bb68 <intern_extra_block>
ffffffff8020a09c:	eb 8e                	jmp    ffffffff8020a02c <intern_alloc.part.0+0xdc>
ffffffff8020a09e:	66 90                	xchg   %ax,%ax

ffffffff8020a0a0 <caml_input_val_core>:
ffffffff8020a0a0:	41 54                	push   %r12
ffffffff8020a0a2:	55                   	push   %rbp
ffffffff8020a0a3:	48 89 fd             	mov    %rdi,%rbp
ffffffff8020a0a6:	53                   	push   %rbx
ffffffff8020a0a7:	89 f3                	mov    %esi,%ebx
ffffffff8020a0a9:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8020a0ad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020a0b4:	00 00 
ffffffff8020a0b6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff8020a0bb:	31 c0                	xor    %eax,%eax
ffffffff8020a0bd:	e8 1e 25 00 00       	callq  ffffffff8020c5e0 <caml_channel_binary_mode>
ffffffff8020a0c2:	85 c0                	test   %eax,%eax
ffffffff8020a0c4:	0f 84 6d 01 00 00    	je     ffffffff8020a237 <caml_input_val_core+0x197>
ffffffff8020a0ca:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
ffffffff8020a0cf:	ba 14 00 00 00       	mov    $0x14,%edx
ffffffff8020a0d4:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020a0d7:	4c 89 e6             	mov    %r12,%rsi
ffffffff8020a0da:	e8 71 29 00 00       	callq  ffffffff8020ca50 <caml_really_getblock>
ffffffff8020a0df:	48 85 c0             	test   %rax,%rax
ffffffff8020a0e2:	0f 84 4a 01 00 00    	je     ffffffff8020a232 <caml_input_val_core+0x192>
ffffffff8020a0e8:	48 83 f8 13          	cmp    $0x13,%rax
ffffffff8020a0ec:	0f 8e 2a 01 00 00    	jle    ffffffff8020a21c <caml_input_val_core+0x17c>
ffffffff8020a0f2:	0f b6 54 24 30       	movzbl 0x30(%rsp),%edx
ffffffff8020a0f7:	0f b6 4c 24 33       	movzbl 0x33(%rsp),%ecx
ffffffff8020a0fc:	0f b6 44 24 31       	movzbl 0x31(%rsp),%eax
ffffffff8020a101:	c1 e2 18             	shl    $0x18,%edx
ffffffff8020a104:	c1 e0 10             	shl    $0x10,%eax
ffffffff8020a107:	01 d1                	add    %edx,%ecx
ffffffff8020a109:	8d 14 01             	lea    (%rcx,%rax,1),%edx
ffffffff8020a10c:	0f b6 44 24 32       	movzbl 0x32(%rsp),%eax
ffffffff8020a111:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020a114:	01 d0                	add    %edx,%eax
ffffffff8020a116:	48 8d 54 24 34       	lea    0x34(%rsp),%rdx
ffffffff8020a11b:	48 89 15 5e 1a 03 00 	mov    %rdx,0x31a5e(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a122:	3d bf a6 95 84       	cmp    $0x8495a6bf,%eax
ffffffff8020a127:	0f 84 d3 00 00 00    	je     ffffffff8020a200 <caml_input_val_core+0x160>
ffffffff8020a12d:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
ffffffff8020a132:	48 8d 3d 02 76 01 00 	lea    0x17602(%rip),%rdi        # ffffffff8022173b <caml_absf_mask+0x58b>
ffffffff8020a139:	4c 89 25 40 1a 03 00 	mov    %r12,0x31a40(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a140:	e8 6b ed ff ff       	callq  ffffffff80208eb0 <caml_parse_header>
ffffffff8020a145:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
ffffffff8020a14a:	e8 e1 67 00 00       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8020a14f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff8020a154:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020a157:	48 89 c6             	mov    %rax,%rsi
ffffffff8020a15a:	49 89 c4             	mov    %rax,%r12
ffffffff8020a15d:	e8 ee 28 00 00       	callq  ffffffff8020ca50 <caml_really_getblock>
ffffffff8020a162:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
ffffffff8020a167:	0f 82 bb 00 00 00    	jb     ffffffff8020a228 <caml_input_val_core+0x188>
ffffffff8020a16d:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
ffffffff8020a172:	4c 89 25 07 1a 03 00 	mov    %r12,0x31a07(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a179:	4c 89 25 f8 19 03 00 	mov    %r12,0x319f8(%rip)        # ffffffff8023bb78 <intern_input>
ffffffff8020a180:	48 85 ff             	test   %rdi,%rdi
ffffffff8020a183:	74 0c                	je     ffffffff8020a191 <caml_input_val_core+0xf1>
ffffffff8020a185:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
ffffffff8020a18a:	89 da                	mov    %ebx,%edx
ffffffff8020a18c:	e8 bf fd ff ff       	callq  ffffffff80209f50 <intern_alloc.part.0>
ffffffff8020a191:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
ffffffff8020a196:	e8 f5 f0 ff ff       	callq  ffffffff80209290 <intern_rec>
ffffffff8020a19b:	85 db                	test   %ebx,%ebx
ffffffff8020a19d:	74 51                	je     ffffffff8020a1f0 <caml_input_val_core+0x150>
ffffffff8020a19f:	48 8b 3d c2 19 03 00 	mov    0x319c2(%rip),%rdi        # ffffffff8023bb68 <intern_extra_block>
ffffffff8020a1a6:	e8 05 63 00 00       	callq  ffffffff802104b0 <caml_disown_for_heap>
ffffffff8020a1ab:	48 c7 05 b2 19 03 00 	movq   $0x0,0x319b2(%rip)        # ffffffff8023bb68 <intern_extra_block>
ffffffff8020a1b2:	00 00 00 00 
ffffffff8020a1b6:	48 c7 05 7f 19 03 00 	movq   $0x0,0x3197f(%rip)        # ffffffff8023bb40 <intern_block>
ffffffff8020a1bd:	00 00 00 00 
ffffffff8020a1c1:	e8 1a f0 ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff8020a1c6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8020a1cb:	e8 20 7f 00 00       	callq  ffffffff802120f0 <caml_check_urgent_gc>
ffffffff8020a1d0:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
ffffffff8020a1d5:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8020a1dc:	00 00 
ffffffff8020a1de:	75 63                	jne    ffffffff8020a243 <caml_input_val_core+0x1a3>
ffffffff8020a1e0:	48 83 c4 60          	add    $0x60,%rsp
ffffffff8020a1e4:	5b                   	pop    %rbx
ffffffff8020a1e5:	5d                   	pop    %rbp
ffffffff8020a1e6:	41 5c                	pop    %r12
ffffffff8020a1e8:	c3                   	retq   
ffffffff8020a1e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020a1f0:	e8 db fc ff ff       	callq  ffffffff80209ed0 <intern_add_to_heap.isra.0>
ffffffff8020a1f5:	eb ca                	jmp    ffffffff8020a1c1 <caml_input_val_core+0x121>
ffffffff8020a1f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020a1fe:	00 00 
ffffffff8020a200:	48 8d 74 24 44       	lea    0x44(%rsp),%rsi
ffffffff8020a205:	ba 0c 00 00 00       	mov    $0xc,%edx
ffffffff8020a20a:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020a20d:	e8 3e 28 00 00       	callq  ffffffff8020ca50 <caml_really_getblock>
ffffffff8020a212:	48 83 f8 0b          	cmp    $0xb,%rax
ffffffff8020a216:	0f 8f 11 ff ff ff    	jg     ffffffff8020a12d <caml_input_val_core+0x8d>
ffffffff8020a21c:	48 8d 3d fa 74 01 00 	lea    0x174fa(%rip),%rdi        # ffffffff8022171d <caml_absf_mask+0x56d>
ffffffff8020a223:	e8 18 d2 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff8020a228:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020a22b:	e8 20 67 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8020a230:	eb ea                	jmp    ffffffff8020a21c <caml_input_val_core+0x17c>
ffffffff8020a232:	e8 c9 d2 ff ff       	callq  ffffffff80207500 <caml_raise_end_of_file>
ffffffff8020a237:	48 8d 3d c2 76 01 00 	lea    0x176c2(%rip),%rdi        # ffffffff80221900 <caml_absf_mask+0x750>
ffffffff8020a23e:	e8 fd d1 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff8020a243:	e8 58 5e ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020a248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020a24f:	00 

ffffffff8020a250 <input_val_from_block.isra.0>:
ffffffff8020a250:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8020a254:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020a25b:	00 00 
ffffffff8020a25d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020a262:	31 c0                	xor    %eax,%eax
ffffffff8020a264:	48 85 f6             	test   %rsi,%rsi
ffffffff8020a267:	74 10                	je     ffffffff8020a279 <input_val_from_block.isra.0+0x29>
ffffffff8020a269:	49 89 f8             	mov    %rdi,%r8
ffffffff8020a26c:	31 d2                	xor    %edx,%edx
ffffffff8020a26e:	48 89 f7             	mov    %rsi,%rdi
ffffffff8020a271:	4c 89 c6             	mov    %r8,%rsi
ffffffff8020a274:	e8 d7 fc ff ff       	callq  ffffffff80209f50 <intern_alloc.part.0>
ffffffff8020a279:	48 89 e7             	mov    %rsp,%rdi
ffffffff8020a27c:	e8 0f f0 ff ff       	callq  ffffffff80209290 <intern_rec>
ffffffff8020a281:	e8 4a fc ff ff       	callq  ffffffff80209ed0 <intern_add_to_heap.isra.0>
ffffffff8020a286:	e8 55 ef ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff8020a28b:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff8020a28f:	e8 5c 7e 00 00       	callq  ffffffff802120f0 <caml_check_urgent_gc>
ffffffff8020a294:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff8020a299:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8020a2a0:	00 00 
ffffffff8020a2a2:	75 05                	jne    ffffffff8020a2a9 <input_val_from_block.isra.0+0x59>
ffffffff8020a2a4:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020a2a8:	c3                   	retq   
ffffffff8020a2a9:	e8 f2 5d ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020a2ae:	66 90                	xchg   %ax,%ax

ffffffff8020a2b0 <caml_input_val>:
ffffffff8020a2b0:	31 f6                	xor    %esi,%esi
ffffffff8020a2b2:	e9 e9 fd ff ff       	jmpq   ffffffff8020a0a0 <caml_input_val_core>
ffffffff8020a2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020a2be:	00 00 

ffffffff8020a2c0 <caml_input_value>:
ffffffff8020a2c0:	55                   	push   %rbp
ffffffff8020a2c1:	53                   	push   %rbx
ffffffff8020a2c2:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff8020a2c9:	48 8b 1d a8 9d 03 00 	mov    0x39da8(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8020a2d0:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020a2d5:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
ffffffff8020a2da:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020a2e1:	00 00 
ffffffff8020a2e3:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff8020a2ea:	00 
ffffffff8020a2eb:	31 c0                	xor    %eax,%eax
ffffffff8020a2ed:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff8020a2f2:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8020a2f7:	48 89 05 7a 9d 03 00 	mov    %rax,0x39d7a(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020a2fe:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8020a305:	00 00 
ffffffff8020a307:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff8020a30e:	00 00 
ffffffff8020a310:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
ffffffff8020a315:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020a319:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff8020a31e:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff8020a323:	48 89 05 4e 9d 03 00 	mov    %rax,0x39d4e(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020a32a:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff8020a32f:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff8020a334:	48 8b 05 65 18 03 00 	mov    0x31865(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020a33b:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020a342:	00 00 
ffffffff8020a344:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff8020a34b:	00 00 
ffffffff8020a34d:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff8020a354:	00 00 
ffffffff8020a356:	48 85 c0             	test   %rax,%rax
ffffffff8020a359:	74 05                	je     ffffffff8020a360 <caml_input_value+0xa0>
ffffffff8020a35b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020a35e:	ff d0                	callq  *%rax
ffffffff8020a360:	31 f6                	xor    %esi,%esi
ffffffff8020a362:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020a365:	e8 36 fd ff ff       	callq  ffffffff8020a0a0 <caml_input_val_core>
ffffffff8020a36a:	48 8b 15 27 18 03 00 	mov    0x31827(%rip),%rdx        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020a371:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8020a376:	48 85 d2             	test   %rdx,%rdx
ffffffff8020a379:	74 0a                	je     ffffffff8020a385 <caml_input_value+0xc5>
ffffffff8020a37b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020a37e:	ff d2                	callq  *%rdx
ffffffff8020a380:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8020a385:	48 89 1d ec 9c 03 00 	mov    %rbx,0x39cec(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020a38c:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
ffffffff8020a393:	00 
ffffffff8020a394:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff8020a39b:	00 00 
ffffffff8020a39d:	75 0a                	jne    ffffffff8020a3a9 <caml_input_value+0xe9>
ffffffff8020a39f:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
ffffffff8020a3a6:	5b                   	pop    %rbx
ffffffff8020a3a7:	5d                   	pop    %rbp
ffffffff8020a3a8:	c3                   	retq   
ffffffff8020a3a9:	e8 f2 5c ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020a3ae:	66 90                	xchg   %ax,%ax

ffffffff8020a3b0 <caml_input_value_to_outside_heap>:
ffffffff8020a3b0:	55                   	push   %rbp
ffffffff8020a3b1:	53                   	push   %rbx
ffffffff8020a3b2:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff8020a3b9:	48 8b 1d b8 9c 03 00 	mov    0x39cb8(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8020a3c0:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020a3c5:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
ffffffff8020a3ca:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020a3d1:	00 00 
ffffffff8020a3d3:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff8020a3da:	00 
ffffffff8020a3db:	31 c0                	xor    %eax,%eax
ffffffff8020a3dd:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff8020a3e2:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8020a3e7:	48 89 05 8a 9c 03 00 	mov    %rax,0x39c8a(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020a3ee:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8020a3f5:	00 00 
ffffffff8020a3f7:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff8020a3fe:	00 00 
ffffffff8020a400:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
ffffffff8020a405:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020a409:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff8020a40e:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff8020a413:	48 89 05 5e 9c 03 00 	mov    %rax,0x39c5e(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020a41a:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff8020a41f:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff8020a424:	48 8b 05 75 17 03 00 	mov    0x31775(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020a42b:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020a432:	00 00 
ffffffff8020a434:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff8020a43b:	00 00 
ffffffff8020a43d:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff8020a444:	00 00 
ffffffff8020a446:	48 85 c0             	test   %rax,%rax
ffffffff8020a449:	74 05                	je     ffffffff8020a450 <caml_input_value_to_outside_heap+0xa0>
ffffffff8020a44b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020a44e:	ff d0                	callq  *%rax
ffffffff8020a450:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020a455:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020a458:	e8 43 fc ff ff       	callq  ffffffff8020a0a0 <caml_input_val_core>
ffffffff8020a45d:	48 8b 15 34 17 03 00 	mov    0x31734(%rip),%rdx        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020a464:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8020a469:	48 85 d2             	test   %rdx,%rdx
ffffffff8020a46c:	74 0a                	je     ffffffff8020a478 <caml_input_value_to_outside_heap+0xc8>
ffffffff8020a46e:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020a471:	ff d2                	callq  *%rdx
ffffffff8020a473:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8020a478:	48 89 1d f9 9b 03 00 	mov    %rbx,0x39bf9(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020a47f:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
ffffffff8020a486:	00 
ffffffff8020a487:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff8020a48e:	00 00 
ffffffff8020a490:	75 0a                	jne    ffffffff8020a49c <caml_input_value_to_outside_heap+0xec>
ffffffff8020a492:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
ffffffff8020a499:	5b                   	pop    %rbx
ffffffff8020a49a:	5d                   	pop    %rbp
ffffffff8020a49b:	c3                   	retq   
ffffffff8020a49c:	e8 ff 5b ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020a4a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020a4a8:	00 00 00 00 
ffffffff8020a4ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020a4b0 <caml_input_val_from_bytes>:
ffffffff8020a4b0:	41 55                	push   %r13
ffffffff8020a4b2:	48 89 f8             	mov    %rdi,%rax
ffffffff8020a4b5:	41 54                	push   %r12
ffffffff8020a4b7:	48 01 f0             	add    %rsi,%rax
ffffffff8020a4ba:	55                   	push   %rbp
ffffffff8020a4bb:	48 89 f5             	mov    %rsi,%rbp
ffffffff8020a4be:	53                   	push   %rbx
ffffffff8020a4bf:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
ffffffff8020a4c6:	4c 8b 25 ab 9b 03 00 	mov    0x39bab(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff8020a4cd:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020a4d2:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020a4d7:	48 8d 3d 69 72 01 00 	lea    0x17269(%rip),%rdi        # ffffffff80221747 <caml_absf_mask+0x597>
ffffffff8020a4de:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
ffffffff8020a4e3:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
ffffffff8020a4e8:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020a4ef:	00 00 
ffffffff8020a4f1:	48 89 8c 24 c8 00 00 	mov    %rcx,0xc8(%rsp)
ffffffff8020a4f8:	00 
ffffffff8020a4f9:	31 c9                	xor    %ecx,%ecx
ffffffff8020a4fb:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
ffffffff8020a500:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
ffffffff8020a505:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
ffffffff8020a50c:	00 
ffffffff8020a50d:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
ffffffff8020a514:	00 
ffffffff8020a515:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
ffffffff8020a51a:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
ffffffff8020a521:	00 00 
ffffffff8020a523:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
ffffffff8020a52a:	00 00 
ffffffff8020a52c:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020a533:	00 00 
ffffffff8020a535:	48 89 15 3c 9b 03 00 	mov    %rdx,0x39b3c(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020a53c:	48 c7 84 24 90 00 00 	movq   $0x1,0x90(%rsp)
ffffffff8020a543:	00 01 00 00 00 
ffffffff8020a548:	48 c7 84 24 88 00 00 	movq   $0x1,0x88(%rsp)
ffffffff8020a54f:	00 01 00 00 00 
ffffffff8020a554:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
ffffffff8020a55b:	00 
ffffffff8020a55c:	48 89 05 1d 16 03 00 	mov    %rax,0x3161d(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a563:	48 c7 05 0a 16 03 00 	movq   $0x0,0x3160a(%rip)        # ffffffff8023bb78 <intern_input>
ffffffff8020a56a:	00 00 00 00 
ffffffff8020a56e:	e8 3d e9 ff ff       	callq  ffffffff80208eb0 <caml_parse_header>
ffffffff8020a573:	48 63 5c 24 24       	movslq 0x24(%rsp),%rbx
ffffffff8020a578:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8020a57d:	48 01 eb             	add    %rbp,%rbx
ffffffff8020a580:	48 03 5c 24 28       	add    0x28(%rsp),%rbx
ffffffff8020a585:	e8 26 a8 00 00       	callq  ffffffff80214db0 <caml_string_length>
ffffffff8020a58a:	48 39 c3             	cmp    %rax,%rbx
ffffffff8020a58d:	77 6e                	ja     ffffffff8020a5fd <caml_input_val_from_bytes+0x14d>
ffffffff8020a58f:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
ffffffff8020a594:	48 85 ff             	test   %rdi,%rdi
ffffffff8020a597:	74 0c                	je     ffffffff8020a5a5 <caml_input_val_from_bytes+0xf5>
ffffffff8020a599:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
ffffffff8020a59e:	31 d2                	xor    %edx,%edx
ffffffff8020a5a0:	e8 ab f9 ff ff       	callq  ffffffff80209f50 <intern_alloc.part.0>
ffffffff8020a5a5:	48 63 74 24 24       	movslq 0x24(%rsp),%rsi
ffffffff8020a5aa:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020a5ad:	48 01 f5             	add    %rsi,%rbp
ffffffff8020a5b0:	48 03 6c 24 08       	add    0x8(%rsp),%rbp
ffffffff8020a5b5:	48 89 2d c4 15 03 00 	mov    %rbp,0x315c4(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a5bc:	e8 cf ec ff ff       	callq  ffffffff80209290 <intern_rec>
ffffffff8020a5c1:	e8 0a f9 ff ff       	callq  ffffffff80209ed0 <intern_add_to_heap.isra.0>
ffffffff8020a5c6:	e8 15 ec ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff8020a5cb:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
ffffffff8020a5d0:	e8 1b 7b 00 00       	callq  ffffffff802120f0 <caml_check_urgent_gc>
ffffffff8020a5d5:	4c 89 25 9c 9a 03 00 	mov    %r12,0x39a9c(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020a5dc:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
ffffffff8020a5e3:	00 
ffffffff8020a5e4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8020a5eb:	00 00 
ffffffff8020a5ed:	75 1a                	jne    ffffffff8020a609 <caml_input_val_from_bytes+0x159>
ffffffff8020a5ef:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
ffffffff8020a5f6:	5b                   	pop    %rbx
ffffffff8020a5f7:	5d                   	pop    %rbp
ffffffff8020a5f8:	41 5c                	pop    %r12
ffffffff8020a5fa:	41 5d                	pop    %r13
ffffffff8020a5fc:	c3                   	retq   
ffffffff8020a5fd:	48 8d 3d 24 73 01 00 	lea    0x17324(%rip),%rdi        # ffffffff80221928 <caml_absf_mask+0x778>
ffffffff8020a604:	e8 37 ce ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff8020a609:	e8 92 5a ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020a60e:	66 90                	xchg   %ax,%ax

ffffffff8020a610 <caml_input_value_from_string>:
ffffffff8020a610:	48 d1 fe             	sar    %rsi
ffffffff8020a613:	e9 98 fe ff ff       	jmpq   ffffffff8020a4b0 <caml_input_val_from_bytes>
ffffffff8020a618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020a61f:	00 

ffffffff8020a620 <caml_input_value_from_bytes>:
ffffffff8020a620:	eb ee                	jmp    ffffffff8020a610 <caml_input_value_from_string>
ffffffff8020a622:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020a629:	00 00 00 00 
ffffffff8020a62d:	0f 1f 00             	nopl   (%rax)

ffffffff8020a630 <caml_input_value_from_malloc>:
ffffffff8020a630:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8020a634:	48 01 fe             	add    %rdi,%rsi
ffffffff8020a637:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020a63e:	00 00 
ffffffff8020a640:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8020a645:	31 c0                	xor    %eax,%eax
ffffffff8020a647:	48 89 35 32 15 03 00 	mov    %rsi,0x31532(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a64e:	48 89 e6             	mov    %rsp,%rsi
ffffffff8020a651:	48 89 3d 20 15 03 00 	mov    %rdi,0x31520(%rip)        # ffffffff8023bb78 <intern_input>
ffffffff8020a658:	48 8d 3d fe 70 01 00 	lea    0x170fe(%rip),%rdi        # ffffffff8022175d <caml_absf_mask+0x5ad>
ffffffff8020a65f:	e8 4c e8 ff ff       	callq  ffffffff80208eb0 <caml_parse_header>
ffffffff8020a664:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
ffffffff8020a669:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8020a66e:	e8 dd fb ff ff       	callq  ffffffff8020a250 <input_val_from_block.isra.0>
ffffffff8020a673:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
ffffffff8020a678:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff8020a67f:	00 00 
ffffffff8020a681:	75 05                	jne    ffffffff8020a688 <caml_input_value_from_malloc+0x58>
ffffffff8020a683:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8020a687:	c3                   	retq   
ffffffff8020a688:	e8 13 5a ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020a68d:	0f 1f 00             	nopl   (%rax)

ffffffff8020a690 <caml_input_value_from_block>:
ffffffff8020a690:	53                   	push   %rbx
ffffffff8020a691:	48 89 f3             	mov    %rsi,%rbx
ffffffff8020a694:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020a698:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020a69f:	00 00 
ffffffff8020a6a1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8020a6a6:	31 c0                	xor    %eax,%eax
ffffffff8020a6a8:	48 89 e6             	mov    %rsp,%rsi
ffffffff8020a6ab:	48 89 3d ce 14 03 00 	mov    %rdi,0x314ce(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a6b2:	48 8d 3d bc 70 01 00 	lea    0x170bc(%rip),%rdi        # ffffffff80221775 <caml_absf_mask+0x5c5>
ffffffff8020a6b9:	48 c7 05 b4 14 03 00 	movq   $0x0,0x314b4(%rip)        # ffffffff8023bb78 <intern_input>
ffffffff8020a6c0:	00 00 00 00 
ffffffff8020a6c4:	e8 e7 e7 ff ff       	callq  ffffffff80208eb0 <caml_parse_header>
ffffffff8020a6c9:	48 63 44 24 04       	movslq 0x4(%rsp),%rax
ffffffff8020a6ce:	48 03 44 24 08       	add    0x8(%rsp),%rax
ffffffff8020a6d3:	48 39 d8             	cmp    %rbx,%rax
ffffffff8020a6d6:	77 25                	ja     ffffffff8020a6fd <caml_input_value_from_block+0x6d>
ffffffff8020a6d8:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
ffffffff8020a6dd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8020a6e2:	e8 69 fb ff ff       	callq  ffffffff8020a250 <input_val_from_block.isra.0>
ffffffff8020a6e7:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
ffffffff8020a6ec:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff8020a6f3:	00 00 
ffffffff8020a6f5:	75 12                	jne    ffffffff8020a709 <caml_input_value_from_block+0x79>
ffffffff8020a6f7:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020a6fb:	5b                   	pop    %rbx
ffffffff8020a6fc:	c3                   	retq   
ffffffff8020a6fd:	48 8d 3d 4c 72 01 00 	lea    0x1724c(%rip),%rdi        # ffffffff80221950 <caml_absf_mask+0x7a0>
ffffffff8020a704:	e8 37 cd ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff8020a709:	e8 92 59 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020a70e:	66 90                	xchg   %ax,%ax

ffffffff8020a710 <caml_marshal_data_size>:
ffffffff8020a710:	48 d1 fe             	sar    %rsi
ffffffff8020a713:	48 01 f7             	add    %rsi,%rdi
ffffffff8020a716:	0f b6 17             	movzbl (%rdi),%edx
ffffffff8020a719:	0f b6 4f 03          	movzbl 0x3(%rdi),%ecx
ffffffff8020a71d:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
ffffffff8020a721:	c1 e2 18             	shl    $0x18,%edx
ffffffff8020a724:	c1 e0 10             	shl    $0x10,%eax
ffffffff8020a727:	01 d1                	add    %edx,%ecx
ffffffff8020a729:	8d 14 01             	lea    (%rcx,%rax,1),%edx
ffffffff8020a72c:	0f b6 47 02          	movzbl 0x2(%rdi),%eax
ffffffff8020a730:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020a733:	01 d0                	add    %edx,%eax
ffffffff8020a735:	48 8d 57 04          	lea    0x4(%rdi),%rdx
ffffffff8020a739:	48 89 15 40 14 03 00 	mov    %rdx,0x31440(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a740:	3d be a6 95 84       	cmp    $0x8495a6be,%eax
ffffffff8020a745:	74 29                	je     ffffffff8020a770 <caml_marshal_data_size+0x60>
ffffffff8020a747:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020a74b:	3d bf a6 95 84       	cmp    $0x8495a6bf,%eax
ffffffff8020a750:	75 4e                	jne    ffffffff8020a7a0 <caml_marshal_data_size+0x90>
ffffffff8020a752:	48 83 c7 08          	add    $0x8,%rdi
ffffffff8020a756:	48 89 3d 23 14 03 00 	mov    %rdi,0x31423(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a75d:	e8 ce e6 ff ff       	callq  ffffffff80208e30 <read64u>
ffffffff8020a762:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020a766:	48 83 c0 0c          	add    $0xc,%rax
ffffffff8020a76a:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020a76f:	c3                   	retq   
ffffffff8020a770:	0f b6 47 04          	movzbl 0x4(%rdi),%eax
ffffffff8020a774:	0f b6 57 07          	movzbl 0x7(%rdi),%edx
ffffffff8020a778:	48 83 c7 08          	add    $0x8,%rdi
ffffffff8020a77c:	c1 e0 18             	shl    $0x18,%eax
ffffffff8020a77f:	01 c2                	add    %eax,%edx
ffffffff8020a781:	0f b6 47 fd          	movzbl -0x3(%rdi),%eax
ffffffff8020a785:	c1 e0 10             	shl    $0x10,%eax
ffffffff8020a788:	01 d0                	add    %edx,%eax
ffffffff8020a78a:	0f b6 57 fe          	movzbl -0x2(%rdi),%edx
ffffffff8020a78e:	48 89 3d eb 13 03 00 	mov    %rdi,0x313eb(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a795:	c1 e2 08             	shl    $0x8,%edx
ffffffff8020a798:	01 d0                	add    %edx,%eax
ffffffff8020a79a:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020a79f:	c3                   	retq   
ffffffff8020a7a0:	48 8d 3d e5 6f 01 00 	lea    0x16fe5(%rip),%rdi        # ffffffff8022178c <caml_absf_mask+0x5dc>
ffffffff8020a7a7:	e8 94 cc ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff8020a7ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020a7b0 <caml_deserialize_uint_1>:
ffffffff8020a7b0:	48 8b 05 c9 13 03 00 	mov    0x313c9(%rip),%rax        # ffffffff8023bb80 <intern_src>
ffffffff8020a7b7:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8020a7bb:	0f b6 00             	movzbl (%rax),%eax
ffffffff8020a7be:	48 89 15 bb 13 03 00 	mov    %rdx,0x313bb(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a7c5:	c3                   	retq   
ffffffff8020a7c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020a7cd:	00 00 00 

ffffffff8020a7d0 <caml_deserialize_sint_1>:
ffffffff8020a7d0:	48 8b 05 a9 13 03 00 	mov    0x313a9(%rip),%rax        # ffffffff8023bb80 <intern_src>
ffffffff8020a7d7:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8020a7db:	0f be 00             	movsbl (%rax),%eax
ffffffff8020a7de:	48 89 15 9b 13 03 00 	mov    %rdx,0x3139b(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a7e5:	c3                   	retq   
ffffffff8020a7e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020a7ed:	00 00 00 

ffffffff8020a7f0 <caml_deserialize_uint_2>:
ffffffff8020a7f0:	48 8b 15 89 13 03 00 	mov    0x31389(%rip),%rdx        # ffffffff8023bb80 <intern_src>
ffffffff8020a7f7:	0f b6 02             	movzbl (%rdx),%eax
ffffffff8020a7fa:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8020a7fe:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020a801:	89 c1                	mov    %eax,%ecx
ffffffff8020a803:	0f b6 42 ff          	movzbl -0x1(%rdx),%eax
ffffffff8020a807:	48 89 15 72 13 03 00 	mov    %rdx,0x31372(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a80e:	01 c8                	add    %ecx,%eax
ffffffff8020a810:	0f b7 c0             	movzwl %ax,%eax
ffffffff8020a813:	c3                   	retq   
ffffffff8020a814:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020a81b:	00 00 00 00 
ffffffff8020a81f:	90                   	nop

ffffffff8020a820 <caml_deserialize_sint_2>:
ffffffff8020a820:	48 8b 15 59 13 03 00 	mov    0x31359(%rip),%rdx        # ffffffff8023bb80 <intern_src>
ffffffff8020a827:	0f b6 02             	movzbl (%rdx),%eax
ffffffff8020a82a:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8020a82e:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020a831:	89 c1                	mov    %eax,%ecx
ffffffff8020a833:	0f b6 42 ff          	movzbl -0x1(%rdx),%eax
ffffffff8020a837:	48 89 15 42 13 03 00 	mov    %rdx,0x31342(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a83e:	01 c8                	add    %ecx,%eax
ffffffff8020a840:	98                   	cwtl   
ffffffff8020a841:	c3                   	retq   
ffffffff8020a842:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020a849:	00 00 00 00 
ffffffff8020a84d:	0f 1f 00             	nopl   (%rax)

ffffffff8020a850 <caml_deserialize_uint_4>:
ffffffff8020a850:	48 8b 35 29 13 03 00 	mov    0x31329(%rip),%rsi        # ffffffff8023bb80 <intern_src>
ffffffff8020a857:	0f b6 16             	movzbl (%rsi),%edx
ffffffff8020a85a:	0f b6 4e 03          	movzbl 0x3(%rsi),%ecx
ffffffff8020a85e:	48 83 c6 04          	add    $0x4,%rsi
ffffffff8020a862:	0f b6 46 fd          	movzbl -0x3(%rsi),%eax
ffffffff8020a866:	c1 e2 18             	shl    $0x18,%edx
ffffffff8020a869:	c1 e0 10             	shl    $0x10,%eax
ffffffff8020a86c:	01 d1                	add    %edx,%ecx
ffffffff8020a86e:	8d 14 01             	lea    (%rcx,%rax,1),%edx
ffffffff8020a871:	0f b6 46 fe          	movzbl -0x2(%rsi),%eax
ffffffff8020a875:	48 89 35 04 13 03 00 	mov    %rsi,0x31304(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a87c:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020a87f:	01 d0                	add    %edx,%eax
ffffffff8020a881:	c3                   	retq   
ffffffff8020a882:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020a889:	00 00 00 00 
ffffffff8020a88d:	0f 1f 00             	nopl   (%rax)

ffffffff8020a890 <caml_deserialize_sint_4>:
ffffffff8020a890:	48 8b 35 e9 12 03 00 	mov    0x312e9(%rip),%rsi        # ffffffff8023bb80 <intern_src>
ffffffff8020a897:	0f b6 16             	movzbl (%rsi),%edx
ffffffff8020a89a:	0f b6 4e 03          	movzbl 0x3(%rsi),%ecx
ffffffff8020a89e:	48 83 c6 04          	add    $0x4,%rsi
ffffffff8020a8a2:	0f b6 46 fd          	movzbl -0x3(%rsi),%eax
ffffffff8020a8a6:	c1 e2 18             	shl    $0x18,%edx
ffffffff8020a8a9:	c1 e0 10             	shl    $0x10,%eax
ffffffff8020a8ac:	01 d1                	add    %edx,%ecx
ffffffff8020a8ae:	8d 14 01             	lea    (%rcx,%rax,1),%edx
ffffffff8020a8b1:	0f b6 46 fe          	movzbl -0x2(%rsi),%eax
ffffffff8020a8b5:	48 89 35 c4 12 03 00 	mov    %rsi,0x312c4(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a8bc:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020a8bf:	01 d0                	add    %edx,%eax
ffffffff8020a8c1:	c3                   	retq   
ffffffff8020a8c2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020a8c9:	00 00 00 00 
ffffffff8020a8cd:	0f 1f 00             	nopl   (%rax)

ffffffff8020a8d0 <caml_deserialize_float_4>:
ffffffff8020a8d0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8020a8d4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020a8db:	00 00 
ffffffff8020a8dd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020a8e2:	31 c0                	xor    %eax,%eax
ffffffff8020a8e4:	48 8b 05 95 12 03 00 	mov    0x31295(%rip),%rax        # ffffffff8023bb80 <intern_src>
ffffffff8020a8eb:	8b 10                	mov    (%rax),%edx
ffffffff8020a8ed:	48 83 c0 04          	add    $0x4,%rax
ffffffff8020a8f1:	48 89 05 88 12 03 00 	mov    %rax,0x31288(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a8f8:	0f ca                	bswap  %edx
ffffffff8020a8fa:	89 54 24 04          	mov    %edx,0x4(%rsp)
ffffffff8020a8fe:	f3 0f 10 44 24 04    	movss  0x4(%rsp),%xmm0
ffffffff8020a904:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8020a909:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020a910:	00 00 
ffffffff8020a912:	75 05                	jne    ffffffff8020a919 <caml_deserialize_float_4+0x49>
ffffffff8020a914:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020a918:	c3                   	retq   
ffffffff8020a919:	e8 82 57 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020a91e:	66 90                	xchg   %ax,%ax

ffffffff8020a920 <caml_deserialize_float_8>:
ffffffff8020a920:	48 8b 05 59 12 03 00 	mov    0x31259(%rip),%rax        # ffffffff8023bb80 <intern_src>
ffffffff8020a927:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8020a92b:	f2 0f 10 00          	movsd  (%rax),%xmm0
ffffffff8020a92f:	48 89 15 4a 12 03 00 	mov    %rdx,0x3124a(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a936:	c3                   	retq   
ffffffff8020a937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020a93e:	00 00 

ffffffff8020a940 <caml_deserialize_block_1>:
ffffffff8020a940:	55                   	push   %rbp
ffffffff8020a941:	48 89 f5             	mov    %rsi,%rbp
ffffffff8020a944:	48 89 f2             	mov    %rsi,%rdx
ffffffff8020a947:	53                   	push   %rbx
ffffffff8020a948:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020a94c:	48 8b 1d 2d 12 03 00 	mov    0x3122d(%rip),%rbx        # ffffffff8023bb80 <intern_src>
ffffffff8020a953:	48 89 de             	mov    %rbx,%rsi
ffffffff8020a956:	48 01 eb             	add    %rbp,%rbx
ffffffff8020a959:	e8 45 57 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff8020a95e:	48 89 1d 1b 12 03 00 	mov    %rbx,0x3121b(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a965:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020a969:	5b                   	pop    %rbx
ffffffff8020a96a:	5d                   	pop    %rbp
ffffffff8020a96b:	c3                   	retq   
ffffffff8020a96c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020a970 <caml_deserialize_block_2>:
ffffffff8020a970:	48 8b 05 09 12 03 00 	mov    0x31209(%rip),%rax        # ffffffff8023bb80 <intern_src>
ffffffff8020a977:	48 85 f6             	test   %rsi,%rsi
ffffffff8020a97a:	7e 2c                	jle    ffffffff8020a9a8 <caml_deserialize_block_2+0x38>
ffffffff8020a97c:	48 8d 34 70          	lea    (%rax,%rsi,2),%rsi
ffffffff8020a980:	0f b6 10             	movzbl (%rax),%edx
ffffffff8020a983:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
ffffffff8020a987:	48 83 c0 02          	add    $0x2,%rax
ffffffff8020a98b:	48 83 c7 02          	add    $0x2,%rdi
ffffffff8020a98f:	88 4f fe             	mov    %cl,-0x2(%rdi)
ffffffff8020a992:	88 57 ff             	mov    %dl,-0x1(%rdi)
ffffffff8020a995:	48 39 f0             	cmp    %rsi,%rax
ffffffff8020a998:	75 e6                	jne    ffffffff8020a980 <caml_deserialize_block_2+0x10>
ffffffff8020a99a:	48 89 35 df 11 03 00 	mov    %rsi,0x311df(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a9a1:	c3                   	retq   
ffffffff8020a9a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020a9a8:	48 89 c6             	mov    %rax,%rsi
ffffffff8020a9ab:	48 89 35 ce 11 03 00 	mov    %rsi,0x311ce(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020a9b2:	c3                   	retq   
ffffffff8020a9b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020a9ba:	00 00 00 00 
ffffffff8020a9be:	66 90                	xchg   %ax,%ax

ffffffff8020a9c0 <caml_deserialize_block_4>:
ffffffff8020a9c0:	4c 8b 15 b9 11 03 00 	mov    0x311b9(%rip),%r10        # ffffffff8023bb80 <intern_src>
ffffffff8020a9c7:	48 85 f6             	test   %rsi,%rsi
ffffffff8020a9ca:	7e 3f                	jle    ffffffff8020aa0b <caml_deserialize_block_4+0x4b>
ffffffff8020a9cc:	4c 89 d0             	mov    %r10,%rax
ffffffff8020a9cf:	48 89 f2             	mov    %rsi,%rdx
ffffffff8020a9d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020a9d8:	44 0f b6 00          	movzbl (%rax),%r8d
ffffffff8020a9dc:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
ffffffff8020a9e0:	48 83 c7 04          	add    $0x4,%rdi
ffffffff8020a9e4:	48 83 c0 04          	add    $0x4,%rax
ffffffff8020a9e8:	44 0f b6 48 ff       	movzbl -0x1(%rax),%r9d
ffffffff8020a9ed:	44 88 4f fc          	mov    %r9b,-0x4(%rdi)
ffffffff8020a9f1:	44 0f b6 48 fe       	movzbl -0x2(%rax),%r9d
ffffffff8020a9f6:	44 88 47 ff          	mov    %r8b,-0x1(%rdi)
ffffffff8020a9fa:	44 88 4f fd          	mov    %r9b,-0x3(%rdi)
ffffffff8020a9fe:	88 4f fe             	mov    %cl,-0x2(%rdi)
ffffffff8020aa01:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff8020aa05:	75 d1                	jne    ffffffff8020a9d8 <caml_deserialize_block_4+0x18>
ffffffff8020aa07:	4d 8d 14 b2          	lea    (%r10,%rsi,4),%r10
ffffffff8020aa0b:	4c 89 15 6e 11 03 00 	mov    %r10,0x3116e(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020aa12:	c3                   	retq   
ffffffff8020aa13:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020aa1a:	00 00 00 00 
ffffffff8020aa1e:	66 90                	xchg   %ax,%ax

ffffffff8020aa20 <caml_deserialize_block_8>:
ffffffff8020aa20:	4c 8b 15 59 11 03 00 	mov    0x31159(%rip),%r10        # ffffffff8023bb80 <intern_src>
ffffffff8020aa27:	48 85 f6             	test   %rsi,%rsi
ffffffff8020aa2a:	7e 61                	jle    ffffffff8020aa8d <caml_deserialize_block_8+0x6d>
ffffffff8020aa2c:	4c 89 d0             	mov    %r10,%rax
ffffffff8020aa2f:	48 89 f2             	mov    %rsi,%rdx
ffffffff8020aa32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020aa38:	44 0f b6 00          	movzbl (%rax),%r8d
ffffffff8020aa3c:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
ffffffff8020aa40:	48 83 c7 08          	add    $0x8,%rdi
ffffffff8020aa44:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020aa48:	44 0f b6 48 ff       	movzbl -0x1(%rax),%r9d
ffffffff8020aa4d:	44 88 4f f8          	mov    %r9b,-0x8(%rdi)
ffffffff8020aa51:	44 0f b6 48 fe       	movzbl -0x2(%rax),%r9d
ffffffff8020aa56:	44 88 47 ff          	mov    %r8b,-0x1(%rdi)
ffffffff8020aa5a:	44 88 4f f9          	mov    %r9b,-0x7(%rdi)
ffffffff8020aa5e:	88 4f fe             	mov    %cl,-0x2(%rdi)
ffffffff8020aa61:	44 0f b6 48 fd       	movzbl -0x3(%rax),%r9d
ffffffff8020aa66:	44 0f b6 40 fa       	movzbl -0x6(%rax),%r8d
ffffffff8020aa6b:	0f b6 48 fb          	movzbl -0x5(%rax),%ecx
ffffffff8020aa6f:	44 88 4f fa          	mov    %r9b,-0x6(%rdi)
ffffffff8020aa73:	44 0f b6 48 fc       	movzbl -0x4(%rax),%r9d
ffffffff8020aa78:	44 88 47 fd          	mov    %r8b,-0x3(%rdi)
ffffffff8020aa7c:	44 88 4f fb          	mov    %r9b,-0x5(%rdi)
ffffffff8020aa80:	88 4f fc             	mov    %cl,-0x4(%rdi)
ffffffff8020aa83:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff8020aa87:	75 af                	jne    ffffffff8020aa38 <caml_deserialize_block_8+0x18>
ffffffff8020aa89:	4d 8d 14 f2          	lea    (%r10,%rsi,8),%r10
ffffffff8020aa8d:	4c 89 15 ec 10 03 00 	mov    %r10,0x310ec(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020aa94:	c3                   	retq   
ffffffff8020aa95:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020aa9c:	00 00 00 00 

ffffffff8020aaa0 <caml_deserialize_uint_8>:
ffffffff8020aaa0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8020aaa4:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020aaa9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020aab0:	00 00 
ffffffff8020aab2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020aab7:	31 c0                	xor    %eax,%eax
ffffffff8020aab9:	48 89 e7             	mov    %rsp,%rdi
ffffffff8020aabc:	e8 5f ff ff ff       	callq  ffffffff8020aa20 <caml_deserialize_block_8>
ffffffff8020aac1:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8020aac5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8020aaca:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff8020aad1:	00 00 
ffffffff8020aad3:	75 05                	jne    ffffffff8020aada <caml_deserialize_uint_8+0x3a>
ffffffff8020aad5:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020aad9:	c3                   	retq   
ffffffff8020aada:	e8 c1 55 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020aadf:	90                   	nop

ffffffff8020aae0 <caml_deserialize_sint_8>:
ffffffff8020aae0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8020aae4:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020aae9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020aaf0:	00 00 
ffffffff8020aaf2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020aaf7:	31 c0                	xor    %eax,%eax
ffffffff8020aaf9:	48 89 e7             	mov    %rsp,%rdi
ffffffff8020aafc:	e8 1f ff ff ff       	callq  ffffffff8020aa20 <caml_deserialize_block_8>
ffffffff8020ab01:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8020ab05:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8020ab0a:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff8020ab11:	00 00 
ffffffff8020ab13:	75 05                	jne    ffffffff8020ab1a <caml_deserialize_sint_8+0x3a>
ffffffff8020ab15:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020ab19:	c3                   	retq   
ffffffff8020ab1a:	e8 81 55 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020ab1f:	90                   	nop

ffffffff8020ab20 <caml_deserialize_block_float_8>:
ffffffff8020ab20:	55                   	push   %rbp
ffffffff8020ab21:	48 8d 2c f5 00 00 00 	lea    0x0(,%rsi,8),%rbp
ffffffff8020ab28:	00 
ffffffff8020ab29:	53                   	push   %rbx
ffffffff8020ab2a:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020ab2d:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020ab31:	48 8b 1d 48 10 03 00 	mov    0x31048(%rip),%rbx        # ffffffff8023bb80 <intern_src>
ffffffff8020ab38:	48 89 de             	mov    %rbx,%rsi
ffffffff8020ab3b:	48 01 eb             	add    %rbp,%rbx
ffffffff8020ab3e:	e8 60 55 ff ff       	callq  ffffffff802000a3 <memcpy>
ffffffff8020ab43:	48 89 1d 36 10 03 00 	mov    %rbx,0x31036(%rip)        # ffffffff8023bb80 <intern_src>
ffffffff8020ab4a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020ab4e:	5b                   	pop    %rbx
ffffffff8020ab4f:	5d                   	pop    %rbp
ffffffff8020ab50:	c3                   	retq   
ffffffff8020ab51:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020ab58:	00 00 00 00 
ffffffff8020ab5c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020ab60 <caml_deserialize_error>:
ffffffff8020ab60:	55                   	push   %rbp
ffffffff8020ab61:	48 89 fd             	mov    %rdi,%rbp
ffffffff8020ab64:	e8 77 e6 ff ff       	callq  ffffffff802091e0 <intern_cleanup>
ffffffff8020ab69:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020ab6c:	e8 cf c8 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff8020ab71:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ab78:	00 00 00 
ffffffff8020ab7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020ab80 <parse_sign_and_base>:
ffffffff8020ab80:	c7 01 01 00 00 00    	movl   $0x1,(%rcx)
ffffffff8020ab86:	0f b6 07             	movzbl (%rdi),%eax
ffffffff8020ab89:	3c 2d                	cmp    $0x2d,%al
ffffffff8020ab8b:	74 43                	je     ffffffff8020abd0 <parse_sign_and_base+0x50>
ffffffff8020ab8d:	3c 2b                	cmp    $0x2b,%al
ffffffff8020ab8f:	0f 94 c0             	sete   %al
ffffffff8020ab92:	0f b6 c0             	movzbl %al,%eax
ffffffff8020ab95:	48 01 f8             	add    %rdi,%rax
ffffffff8020ab98:	c7 06 0a 00 00 00    	movl   $0xa,(%rsi)
ffffffff8020ab9e:	c7 02 01 00 00 00    	movl   $0x1,(%rdx)
ffffffff8020aba4:	80 38 30             	cmpb   $0x30,(%rax)
ffffffff8020aba7:	74 07                	je     ffffffff8020abb0 <parse_sign_and_base+0x30>
ffffffff8020aba9:	c3                   	retq   
ffffffff8020abaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020abb0:	0f b6 78 01          	movzbl 0x1(%rax),%edi
ffffffff8020abb4:	8d 4f be             	lea    -0x42(%rdi),%ecx
ffffffff8020abb7:	80 f9 36             	cmp    $0x36,%cl
ffffffff8020abba:	77 ed                	ja     ffffffff8020aba9 <parse_sign_and_base+0x29>
ffffffff8020abbc:	48 8d 3d 1d 6e 01 00 	lea    0x16e1d(%rip),%rdi        # ffffffff802219e0 <caml_absf_mask+0x830>
ffffffff8020abc3:	0f b6 c9             	movzbl %cl,%ecx
ffffffff8020abc6:	48 63 0c 8f          	movslq (%rdi,%rcx,4),%rcx
ffffffff8020abca:	48 01 f9             	add    %rdi,%rcx
ffffffff8020abcd:	ff e1                	jmpq   *%rcx
ffffffff8020abcf:	90                   	nop
ffffffff8020abd0:	c7 01 ff ff ff ff    	movl   $0xffffffff,(%rcx)
ffffffff8020abd6:	48 8d 47 01          	lea    0x1(%rdi),%rax
ffffffff8020abda:	eb bc                	jmp    ffffffff8020ab98 <parse_sign_and_base+0x18>
ffffffff8020abdc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020abe0:	c7 06 10 00 00 00    	movl   $0x10,(%rsi)
ffffffff8020abe6:	48 83 c0 02          	add    $0x2,%rax
ffffffff8020abea:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
ffffffff8020abf0:	c3                   	retq   
ffffffff8020abf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020abf8:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
ffffffff8020abfe:	48 83 c0 02          	add    $0x2,%rax
ffffffff8020ac02:	c3                   	retq   
ffffffff8020ac03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020ac08:	c7 06 08 00 00 00    	movl   $0x8,(%rsi)
ffffffff8020ac0e:	48 83 c0 02          	add    $0x2,%rax
ffffffff8020ac12:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
ffffffff8020ac18:	c3                   	retq   
ffffffff8020ac19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020ac20:	c7 06 02 00 00 00    	movl   $0x2,(%rsi)
ffffffff8020ac26:	48 83 c0 02          	add    $0x2,%rax
ffffffff8020ac2a:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
ffffffff8020ac30:	c3                   	retq   
ffffffff8020ac31:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020ac38:	00 00 00 00 
ffffffff8020ac3c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020ac40 <int32_cmp>:
ffffffff8020ac40:	8b 56 08             	mov    0x8(%rsi),%edx
ffffffff8020ac43:	8b 4f 08             	mov    0x8(%rdi),%ecx
ffffffff8020ac46:	31 c0                	xor    %eax,%eax
ffffffff8020ac48:	39 d1                	cmp    %edx,%ecx
ffffffff8020ac4a:	0f 9c c2             	setl   %dl
ffffffff8020ac4d:	0f 9f c0             	setg   %al
ffffffff8020ac50:	0f b6 d2             	movzbl %dl,%edx
ffffffff8020ac53:	29 d0                	sub    %edx,%eax
ffffffff8020ac55:	c3                   	retq   
ffffffff8020ac56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ac5d:	00 00 00 

ffffffff8020ac60 <int32_hash>:
ffffffff8020ac60:	48 63 47 08          	movslq 0x8(%rdi),%rax
ffffffff8020ac64:	c3                   	retq   
ffffffff8020ac65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020ac6c:	00 00 00 00 

ffffffff8020ac70 <int64_cmp>:
ffffffff8020ac70:	48 8b 56 08          	mov    0x8(%rsi),%rdx
ffffffff8020ac74:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8020ac78:	31 c0                	xor    %eax,%eax
ffffffff8020ac7a:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8020ac7d:	0f 9c c2             	setl   %dl
ffffffff8020ac80:	0f 9f c0             	setg   %al
ffffffff8020ac83:	0f b6 d2             	movzbl %dl,%edx
ffffffff8020ac86:	29 d0                	sub    %edx,%eax
ffffffff8020ac88:	c3                   	retq   
ffffffff8020ac89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020ac90 <int64_hash>:
ffffffff8020ac90:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8020ac94:	48 89 d0             	mov    %rdx,%rax
ffffffff8020ac97:	48 c1 f8 20          	sar    $0x20,%rax
ffffffff8020ac9b:	31 d0                	xor    %edx,%eax
ffffffff8020ac9d:	c3                   	retq   
ffffffff8020ac9e:	66 90                	xchg   %ax,%ax

ffffffff8020aca0 <caml_swap64>:
ffffffff8020aca0:	48 89 f8             	mov    %rdi,%rax
ffffffff8020aca3:	48 0f c8             	bswap  %rax
ffffffff8020aca6:	c3                   	retq   
ffffffff8020aca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020acae:	00 00 

ffffffff8020acb0 <nativeint_cmp>:
ffffffff8020acb0:	eb be                	jmp    ffffffff8020ac70 <int64_cmp>
ffffffff8020acb2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020acb9:	00 00 00 00 
ffffffff8020acbd:	0f 1f 00             	nopl   (%rax)

ffffffff8020acc0 <nativeint_hash>:
ffffffff8020acc0:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8020acc4:	48 89 d0             	mov    %rdx,%rax
ffffffff8020acc7:	48 89 d1             	mov    %rdx,%rcx
ffffffff8020acca:	48 c1 f8 20          	sar    $0x20,%rax
ffffffff8020acce:	48 c1 f9 3f          	sar    $0x3f,%rcx
ffffffff8020acd2:	48 31 c8             	xor    %rcx,%rax
ffffffff8020acd5:	48 31 d0             	xor    %rdx,%rax
ffffffff8020acd8:	c3                   	retq   
ffffffff8020acd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020ace0 <parse_intnat>:
ffffffff8020ace0:	41 56                	push   %r14
ffffffff8020ace2:	49 89 fe             	mov    %rdi,%r14
ffffffff8020ace5:	41 55                	push   %r13
ffffffff8020ace7:	41 54                	push   %r12
ffffffff8020ace9:	49 89 d4             	mov    %rdx,%r12
ffffffff8020acec:	55                   	push   %rbp
ffffffff8020aced:	89 f5                	mov    %esi,%ebp
ffffffff8020acef:	53                   	push   %rbx
ffffffff8020acf0:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020acf4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020acfb:	00 00 
ffffffff8020acfd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8020ad02:	31 c0                	xor    %eax,%eax
ffffffff8020ad04:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
ffffffff8020ad09:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
ffffffff8020ad0e:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
ffffffff8020ad13:	e8 68 fe ff ff       	callq  ffffffff8020ab80 <parse_sign_and_base>
ffffffff8020ad18:	48 63 4c 24 10       	movslq 0x10(%rsp),%rcx
ffffffff8020ad1d:	0f be 18             	movsbl (%rax),%ebx
ffffffff8020ad20:	48 89 cf             	mov    %rcx,%rdi
ffffffff8020ad23:	8d 73 d0             	lea    -0x30(%rbx),%esi
ffffffff8020ad26:	40 80 fe 09          	cmp    $0x9,%sil
ffffffff8020ad2a:	0f 86 38 01 00 00    	jbe    ffffffff8020ae68 <parse_intnat+0x188>
ffffffff8020ad30:	8d 73 bf             	lea    -0x41(%rbx),%esi
ffffffff8020ad33:	89 da                	mov    %ebx,%edx
ffffffff8020ad35:	40 80 fe 05          	cmp    $0x5,%sil
ffffffff8020ad39:	0f 86 e5 00 00 00    	jbe    ffffffff8020ae24 <parse_intnat+0x144>
ffffffff8020ad3f:	83 ea 61             	sub    $0x61,%edx
ffffffff8020ad42:	80 fa 05             	cmp    $0x5,%dl
ffffffff8020ad45:	0f 87 2a 01 00 00    	ja     ffffffff8020ae75 <parse_intnat+0x195>
ffffffff8020ad4b:	83 eb 57             	sub    $0x57,%ebx
ffffffff8020ad4e:	39 df                	cmp    %ebx,%edi
ffffffff8020ad50:	0f 8e 1f 01 00 00    	jle    ffffffff8020ae75 <parse_intnat+0x195>
ffffffff8020ad56:	85 db                	test   %ebx,%ebx
ffffffff8020ad58:	0f 88 17 01 00 00    	js     ffffffff8020ae75 <parse_intnat+0x195>
ffffffff8020ad5e:	4c 8d 68 01          	lea    0x1(%rax),%r13
ffffffff8020ad62:	48 63 db             	movslq %ebx,%rbx
ffffffff8020ad65:	eb 46                	jmp    ffffffff8020adad <parse_intnat+0xcd>
ffffffff8020ad67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020ad6e:	00 00 
ffffffff8020ad70:	8d 50 bf             	lea    -0x41(%rax),%edx
ffffffff8020ad73:	80 fa 05             	cmp    $0x5,%dl
ffffffff8020ad76:	0f 86 b4 00 00 00    	jbe    ffffffff8020ae30 <parse_intnat+0x150>
ffffffff8020ad7c:	83 e8 61             	sub    $0x61,%eax
ffffffff8020ad7f:	3c 05                	cmp    $0x5,%al
ffffffff8020ad81:	77 4d                	ja     ffffffff8020add0 <parse_intnat+0xf0>
ffffffff8020ad83:	83 ee 57             	sub    $0x57,%esi
ffffffff8020ad86:	39 f7                	cmp    %esi,%edi
ffffffff8020ad88:	7e 46                	jle    ffffffff8020add0 <parse_intnat+0xf0>
ffffffff8020ad8a:	85 f6                	test   %esi,%esi
ffffffff8020ad8c:	78 42                	js     ffffffff8020add0 <parse_intnat+0xf0>
ffffffff8020ad8e:	48 89 d8             	mov    %rbx,%rax
ffffffff8020ad91:	48 f7 e1             	mul    %rcx
ffffffff8020ad94:	48 89 c3             	mov    %rax,%rbx
ffffffff8020ad97:	0f 80 d8 00 00 00    	jo     ffffffff8020ae75 <parse_intnat+0x195>
ffffffff8020ad9d:	48 63 f6             	movslq %esi,%rsi
ffffffff8020ada0:	48 01 f3             	add    %rsi,%rbx
ffffffff8020ada3:	0f 82 cc 00 00 00    	jb     ffffffff8020ae75 <parse_intnat+0x195>
ffffffff8020ada9:	49 83 c5 01          	add    $0x1,%r13
ffffffff8020adad:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
ffffffff8020adb2:	3c 5f                	cmp    $0x5f,%al
ffffffff8020adb4:	74 f3                	je     ffffffff8020ada9 <parse_intnat+0xc9>
ffffffff8020adb6:	8d 50 d0             	lea    -0x30(%rax),%edx
ffffffff8020adb9:	0f be f0             	movsbl %al,%esi
ffffffff8020adbc:	80 fa 09             	cmp    $0x9,%dl
ffffffff8020adbf:	77 af                	ja     ffffffff8020ad70 <parse_intnat+0x90>
ffffffff8020adc1:	83 ee 30             	sub    $0x30,%esi
ffffffff8020adc4:	39 f7                	cmp    %esi,%edi
ffffffff8020adc6:	7f c2                	jg     ffffffff8020ad8a <parse_intnat+0xaa>
ffffffff8020adc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020adcf:	00 
ffffffff8020add0:	4c 89 f7             	mov    %r14,%rdi
ffffffff8020add3:	e8 d8 9f 00 00       	callq  ffffffff80214db0 <caml_string_length>
ffffffff8020add8:	49 01 c6             	add    %rax,%r14
ffffffff8020addb:	4d 39 f5             	cmp    %r14,%r13
ffffffff8020adde:	0f 85 91 00 00 00    	jne    ffffffff8020ae75 <parse_intnat+0x195>
ffffffff8020ade4:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
ffffffff8020ade8:	85 c9                	test   %ecx,%ecx
ffffffff8020adea:	74 54                	je     ffffffff8020ae40 <parse_intnat+0x160>
ffffffff8020adec:	8b 54 24 0c          	mov    0xc(%rsp),%edx
ffffffff8020adf0:	8d 4d ff             	lea    -0x1(%rbp),%ecx
ffffffff8020adf3:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020adf8:	48 d3 e0             	shl    %cl,%rax
ffffffff8020adfb:	85 d2                	test   %edx,%edx
ffffffff8020adfd:	78 71                	js     ffffffff8020ae70 <parse_intnat+0x190>
ffffffff8020adff:	48 39 c3             	cmp    %rax,%rbx
ffffffff8020ae02:	73 71                	jae    ffffffff8020ae75 <parse_intnat+0x195>
ffffffff8020ae04:	48 89 d8             	mov    %rbx,%rax
ffffffff8020ae07:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
ffffffff8020ae0c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8020ae13:	00 00 
ffffffff8020ae15:	75 66                	jne    ffffffff8020ae7d <parse_intnat+0x19d>
ffffffff8020ae17:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ae1b:	5b                   	pop    %rbx
ffffffff8020ae1c:	5d                   	pop    %rbp
ffffffff8020ae1d:	41 5c                	pop    %r12
ffffffff8020ae1f:	41 5d                	pop    %r13
ffffffff8020ae21:	41 5e                	pop    %r14
ffffffff8020ae23:	c3                   	retq   
ffffffff8020ae24:	83 eb 37             	sub    $0x37,%ebx
ffffffff8020ae27:	e9 22 ff ff ff       	jmpq   ffffffff8020ad4e <parse_intnat+0x6e>
ffffffff8020ae2c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020ae30:	83 ee 37             	sub    $0x37,%esi
ffffffff8020ae33:	e9 4e ff ff ff       	jmpq   ffffffff8020ad86 <parse_intnat+0xa6>
ffffffff8020ae38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020ae3f:	00 
ffffffff8020ae40:	83 fd 3f             	cmp    $0x3f,%ebp
ffffffff8020ae43:	77 0f                	ja     ffffffff8020ae54 <parse_intnat+0x174>
ffffffff8020ae45:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020ae4a:	89 e9                	mov    %ebp,%ecx
ffffffff8020ae4c:	48 d3 e0             	shl    %cl,%rax
ffffffff8020ae4f:	48 39 d8             	cmp    %rbx,%rax
ffffffff8020ae52:	76 21                	jbe    ffffffff8020ae75 <parse_intnat+0x195>
ffffffff8020ae54:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff8020ae58:	85 c0                	test   %eax,%eax
ffffffff8020ae5a:	79 a8                	jns    ffffffff8020ae04 <parse_intnat+0x124>
ffffffff8020ae5c:	48 89 d8             	mov    %rbx,%rax
ffffffff8020ae5f:	48 f7 d8             	neg    %rax
ffffffff8020ae62:	eb a3                	jmp    ffffffff8020ae07 <parse_intnat+0x127>
ffffffff8020ae64:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020ae68:	83 eb 30             	sub    $0x30,%ebx
ffffffff8020ae6b:	e9 de fe ff ff       	jmpq   ffffffff8020ad4e <parse_intnat+0x6e>
ffffffff8020ae70:	48 39 c3             	cmp    %rax,%rbx
ffffffff8020ae73:	76 e7                	jbe    ffffffff8020ae5c <parse_intnat+0x17c>
ffffffff8020ae75:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020ae78:	e8 c3 c5 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff8020ae7d:	e8 1e 52 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020ae82:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020ae89:	00 00 00 00 
ffffffff8020ae8d:	0f 1f 00             	nopl   (%rax)

ffffffff8020ae90 <parse_format>:
ffffffff8020ae90:	41 56                	push   %r14
ffffffff8020ae92:	49 89 fe             	mov    %rdi,%r14
ffffffff8020ae95:	41 55                	push   %r13
ffffffff8020ae97:	49 89 d5             	mov    %rdx,%r13
ffffffff8020ae9a:	41 54                	push   %r12
ffffffff8020ae9c:	49 89 f4             	mov    %rsi,%r12
ffffffff8020ae9f:	55                   	push   %rbp
ffffffff8020aea0:	53                   	push   %rbx
ffffffff8020aea1:	e8 0a 9f 00 00       	callq  ffffffff80214db0 <caml_string_length>
ffffffff8020aea6:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020aea9:	48 89 c5             	mov    %rax,%rbp
ffffffff8020aeac:	e8 f7 51 ff ff       	callq  ffffffff802000a8 <strlen>
ffffffff8020aeb1:	48 89 c3             	mov    %rax,%rbx
ffffffff8020aeb4:	48 8d 44 05 01       	lea    0x1(%rbp,%rax,1),%rax
ffffffff8020aeb9:	48 83 f8 1f          	cmp    $0x1f,%rax
ffffffff8020aebd:	77 54                	ja     ffffffff8020af13 <parse_format+0x83>
ffffffff8020aebf:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020aec2:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020aec5:	4c 89 f6             	mov    %r14,%rsi
ffffffff8020aec8:	e8 d8 51 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020aecd:	49 8d 4c 2d ff       	lea    -0x1(%r13,%rbp,1),%rcx
ffffffff8020aed2:	0f b6 41 ff          	movzbl -0x1(%rcx),%eax
ffffffff8020aed6:	44 0f b6 29          	movzbl (%rcx),%r13d
ffffffff8020aeda:	89 c2                	mov    %eax,%edx
ffffffff8020aedc:	83 e2 df             	and    $0xffffffdf,%edx
ffffffff8020aedf:	80 fa 4c             	cmp    $0x4c,%dl
ffffffff8020aee2:	74 04                	je     ffffffff8020aee8 <parse_format+0x58>
ffffffff8020aee4:	3c 6e                	cmp    $0x6e,%al
ffffffff8020aee6:	75 04                	jne    ffffffff8020aeec <parse_format+0x5c>
ffffffff8020aee8:	48 83 e9 01          	sub    $0x1,%rcx
ffffffff8020aeec:	48 89 da             	mov    %rbx,%rdx
ffffffff8020aeef:	4c 89 e6             	mov    %r12,%rsi
ffffffff8020aef2:	48 89 cf             	mov    %rcx,%rdi
ffffffff8020aef5:	e8 ab 51 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020aefa:	48 89 c1             	mov    %rax,%rcx
ffffffff8020aefd:	44 89 e8             	mov    %r13d,%eax
ffffffff8020af00:	48 01 d9             	add    %rbx,%rcx
ffffffff8020af03:	44 88 29             	mov    %r13b,(%rcx)
ffffffff8020af06:	c6 41 01 00          	movb   $0x0,0x1(%rcx)
ffffffff8020af0a:	5b                   	pop    %rbx
ffffffff8020af0b:	5d                   	pop    %rbp
ffffffff8020af0c:	41 5c                	pop    %r12
ffffffff8020af0e:	41 5d                	pop    %r13
ffffffff8020af10:	41 5e                	pop    %r14
ffffffff8020af12:	c3                   	retq   
ffffffff8020af13:	48 8d 3d d6 6b 01 00 	lea    0x16bd6(%rip),%rdi        # ffffffff80221af0 <int32_length+0x10>
ffffffff8020af1a:	e8 61 c5 ff ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8020af1f:	90                   	nop

ffffffff8020af20 <int32_deserialize>:
ffffffff8020af20:	53                   	push   %rbx
ffffffff8020af21:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020af24:	e8 67 f9 ff ff       	callq  ffffffff8020a890 <caml_deserialize_sint_4>
ffffffff8020af29:	89 03                	mov    %eax,(%rbx)
ffffffff8020af2b:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8020af30:	5b                   	pop    %rbx
ffffffff8020af31:	c3                   	retq   
ffffffff8020af32:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020af39:	00 00 00 00 
ffffffff8020af3d:	0f 1f 00             	nopl   (%rax)

ffffffff8020af40 <int32_serialize>:
ffffffff8020af40:	55                   	push   %rbp
ffffffff8020af41:	48 89 d5             	mov    %rdx,%rbp
ffffffff8020af44:	53                   	push   %rbx
ffffffff8020af45:	48 89 f3             	mov    %rsi,%rbx
ffffffff8020af48:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020af4c:	8b 7f 08             	mov    0x8(%rdi),%edi
ffffffff8020af4f:	e8 ac ae ff ff       	callq  ffffffff80205e00 <caml_serialize_int_4>
ffffffff8020af54:	48 c7 45 00 04 00 00 	movq   $0x4,0x0(%rbp)
ffffffff8020af5b:	00 
ffffffff8020af5c:	48 c7 03 04 00 00 00 	movq   $0x4,(%rbx)
ffffffff8020af63:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020af67:	5b                   	pop    %rbx
ffffffff8020af68:	5d                   	pop    %rbp
ffffffff8020af69:	c3                   	retq   
ffffffff8020af6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020af70 <int64_deserialize>:
ffffffff8020af70:	53                   	push   %rbx
ffffffff8020af71:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020af74:	e8 67 fb ff ff       	callq  ffffffff8020aae0 <caml_deserialize_sint_8>
ffffffff8020af79:	48 89 03             	mov    %rax,(%rbx)
ffffffff8020af7c:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8020af81:	5b                   	pop    %rbx
ffffffff8020af82:	c3                   	retq   
ffffffff8020af83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020af8a:	00 00 00 00 
ffffffff8020af8e:	66 90                	xchg   %ax,%ax

ffffffff8020af90 <int64_serialize>:
ffffffff8020af90:	55                   	push   %rbp
ffffffff8020af91:	48 89 d5             	mov    %rdx,%rbp
ffffffff8020af94:	53                   	push   %rbx
ffffffff8020af95:	48 89 f3             	mov    %rsi,%rbx
ffffffff8020af98:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020af9c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8020afa0:	e8 ab ae ff ff       	callq  ffffffff80205e50 <caml_serialize_int_8>
ffffffff8020afa5:	48 c7 45 00 08 00 00 	movq   $0x8,0x0(%rbp)
ffffffff8020afac:	00 
ffffffff8020afad:	48 c7 03 08 00 00 00 	movq   $0x8,(%rbx)
ffffffff8020afb4:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020afb8:	5b                   	pop    %rbx
ffffffff8020afb9:	5d                   	pop    %rbp
ffffffff8020afba:	c3                   	retq   
ffffffff8020afbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020afc0 <nativeint_deserialize>:
ffffffff8020afc0:	53                   	push   %rbx
ffffffff8020afc1:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020afc4:	e8 e7 f7 ff ff       	callq  ffffffff8020a7b0 <caml_deserialize_uint_1>
ffffffff8020afc9:	83 f8 01             	cmp    $0x1,%eax
ffffffff8020afcc:	74 1a                	je     ffffffff8020afe8 <nativeint_deserialize+0x28>
ffffffff8020afce:	83 f8 02             	cmp    $0x2,%eax
ffffffff8020afd1:	75 26                	jne    ffffffff8020aff9 <nativeint_deserialize+0x39>
ffffffff8020afd3:	e8 08 fb ff ff       	callq  ffffffff8020aae0 <caml_deserialize_sint_8>
ffffffff8020afd8:	48 89 03             	mov    %rax,(%rbx)
ffffffff8020afdb:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8020afe0:	5b                   	pop    %rbx
ffffffff8020afe1:	c3                   	retq   
ffffffff8020afe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020afe8:	e8 a3 f8 ff ff       	callq  ffffffff8020a890 <caml_deserialize_sint_4>
ffffffff8020afed:	48 98                	cltq   
ffffffff8020afef:	48 89 03             	mov    %rax,(%rbx)
ffffffff8020aff2:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8020aff7:	5b                   	pop    %rbx
ffffffff8020aff8:	c3                   	retq   
ffffffff8020aff9:	48 8d 3d 58 6b 01 00 	lea    0x16b58(%rip),%rdi        # ffffffff80221b58 <int32_length+0x78>
ffffffff8020b000:	e8 5b fb ff ff       	callq  ffffffff8020ab60 <caml_deserialize_error>
ffffffff8020b005:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b00c:	00 00 00 00 

ffffffff8020b010 <nativeint_serialize>:
ffffffff8020b010:	41 54                	push   %r12
ffffffff8020b012:	b8 00 00 00 80       	mov    $0x80000000,%eax
ffffffff8020b017:	55                   	push   %rbp
ffffffff8020b018:	48 89 f5             	mov    %rsi,%rbp
ffffffff8020b01b:	53                   	push   %rbx
ffffffff8020b01c:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8020b020:	48 89 d3             	mov    %rdx,%rbx
ffffffff8020b023:	ba ff ff ff ff       	mov    $0xffffffff,%edx
ffffffff8020b028:	4c 01 e0             	add    %r12,%rax
ffffffff8020b02b:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020b02e:	77 30                	ja     ffffffff8020b060 <nativeint_serialize+0x50>
ffffffff8020b030:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020b035:	e8 16 ad ff ff       	callq  ffffffff80205d50 <caml_serialize_int_1>
ffffffff8020b03a:	44 89 e7             	mov    %r12d,%edi
ffffffff8020b03d:	e8 be ad ff ff       	callq  ffffffff80205e00 <caml_serialize_int_4>
ffffffff8020b042:	48 c7 45 00 04 00 00 	movq   $0x4,0x0(%rbp)
ffffffff8020b049:	00 
ffffffff8020b04a:	48 c7 03 08 00 00 00 	movq   $0x8,(%rbx)
ffffffff8020b051:	5b                   	pop    %rbx
ffffffff8020b052:	5d                   	pop    %rbp
ffffffff8020b053:	41 5c                	pop    %r12
ffffffff8020b055:	c3                   	retq   
ffffffff8020b056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020b05d:	00 00 00 
ffffffff8020b060:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff8020b065:	e8 e6 ac ff ff       	callq  ffffffff80205d50 <caml_serialize_int_1>
ffffffff8020b06a:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020b06d:	e8 de ad ff ff       	callq  ffffffff80205e50 <caml_serialize_int_8>
ffffffff8020b072:	eb ce                	jmp    ffffffff8020b042 <nativeint_serialize+0x32>
ffffffff8020b074:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b07b:	00 00 00 00 
ffffffff8020b07f:	90                   	nop

ffffffff8020b080 <caml_bswap16_direct>:
ffffffff8020b080:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b083:	48 89 fa             	mov    %rdi,%rdx
ffffffff8020b086:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff8020b08a:	0f b7 f8             	movzwl %ax,%edi
ffffffff8020b08d:	0f b6 c6             	movzbl %dh,%eax
ffffffff8020b090:	48 09 f8             	or     %rdi,%rax
ffffffff8020b093:	c3                   	retq   
ffffffff8020b094:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b09b:	00 00 00 00 
ffffffff8020b09f:	90                   	nop

ffffffff8020b0a0 <caml_bswap16>:
ffffffff8020b0a0:	48 d1 ff             	sar    %rdi
ffffffff8020b0a3:	48 63 c7             	movslq %edi,%rax
ffffffff8020b0a6:	48 89 c7             	mov    %rax,%rdi
ffffffff8020b0a9:	0f b6 c4             	movzbl %ah,%eax
ffffffff8020b0ac:	48 c1 e7 08          	shl    $0x8,%rdi
ffffffff8020b0b0:	0f b7 ff             	movzwl %di,%edi
ffffffff8020b0b3:	48 09 f8             	or     %rdi,%rax
ffffffff8020b0b6:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020b0bb:	c3                   	retq   
ffffffff8020b0bc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020b0c0 <caml_int_compare>:
ffffffff8020b0c0:	31 c0                	xor    %eax,%eax
ffffffff8020b0c2:	48 39 f7             	cmp    %rsi,%rdi
ffffffff8020b0c5:	0f 9c c2             	setl   %dl
ffffffff8020b0c8:	0f 9f c0             	setg   %al
ffffffff8020b0cb:	0f b6 d2             	movzbl %dl,%edx
ffffffff8020b0ce:	48 29 d0             	sub    %rdx,%rax
ffffffff8020b0d1:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020b0d6:	c3                   	retq   
ffffffff8020b0d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b0de:	00 00 

ffffffff8020b0e0 <caml_int_of_string>:
ffffffff8020b0e0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020b0e4:	48 8d 15 21 6a 01 00 	lea    0x16a21(%rip),%rdx        # ffffffff80221b0c <int32_length+0x2c>
ffffffff8020b0eb:	be 3f 00 00 00       	mov    $0x3f,%esi
ffffffff8020b0f0:	e8 eb fb ff ff       	callq  ffffffff8020ace0 <parse_intnat>
ffffffff8020b0f5:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020b0f9:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020b0fe:	c3                   	retq   
ffffffff8020b0ff:	90                   	nop

ffffffff8020b100 <caml_format_int>:
ffffffff8020b100:	55                   	push   %rbp
ffffffff8020b101:	53                   	push   %rbx
ffffffff8020b102:	48 89 f3             	mov    %rsi,%rbx
ffffffff8020b105:	48 8d 35 29 74 01 00 	lea    0x17429(%rip),%rsi        # ffffffff80222535 <posix_signals+0x455>
ffffffff8020b10c:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8020b110:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020b117:	00 00 
ffffffff8020b119:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8020b11e:	31 c0                	xor    %eax,%eax
ffffffff8020b120:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b123:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020b126:	e8 65 fd ff ff       	callq  ffffffff8020ae90 <parse_format>
ffffffff8020b12b:	83 e8 58             	sub    $0x58,%eax
ffffffff8020b12e:	3c 20                	cmp    $0x20,%al
ffffffff8020b130:	77 10                	ja     ffffffff8020b142 <caml_format_int+0x42>
ffffffff8020b132:	48 ba 01 00 80 20 01 	movabs $0x120800001,%rdx
ffffffff8020b139:	00 00 00 
ffffffff8020b13c:	48 0f a3 c2          	bt     %rax,%rdx
ffffffff8020b140:	72 27                	jb     ffffffff8020b169 <caml_format_int+0x69>
ffffffff8020b142:	48 d1 fb             	sar    %rbx
ffffffff8020b145:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020b148:	31 c0                	xor    %eax,%eax
ffffffff8020b14a:	48 89 de             	mov    %rbx,%rsi
ffffffff8020b14d:	e8 ee a2 00 00       	callq  ffffffff80215440 <caml_alloc_sprintf>
ffffffff8020b152:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
ffffffff8020b157:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8020b15e:	00 00 
ffffffff8020b160:	75 19                	jne    ffffffff8020b17b <caml_format_int+0x7b>
ffffffff8020b162:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8020b166:	5b                   	pop    %rbx
ffffffff8020b167:	5d                   	pop    %rbp
ffffffff8020b168:	c3                   	retq   
ffffffff8020b169:	48 d1 eb             	shr    %rbx
ffffffff8020b16c:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020b16f:	31 c0                	xor    %eax,%eax
ffffffff8020b171:	48 89 de             	mov    %rbx,%rsi
ffffffff8020b174:	e8 c7 a2 00 00       	callq  ffffffff80215440 <caml_alloc_sprintf>
ffffffff8020b179:	eb d7                	jmp    ffffffff8020b152 <caml_format_int+0x52>
ffffffff8020b17b:	e8 20 4f ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>

ffffffff8020b180 <caml_copy_int32>:
ffffffff8020b180:	53                   	push   %rbx
ffffffff8020b181:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b186:	89 fb                	mov    %edi,%ebx
ffffffff8020b188:	31 d2                	xor    %edx,%edx
ffffffff8020b18a:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b18f:	48 8d 3d ea 0a 02 00 	lea    0x20aea(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b196:	e8 05 ef 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b19b:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b19e:	5b                   	pop    %rbx
ffffffff8020b19f:	c3                   	retq   

ffffffff8020b1a0 <caml_int32_neg>:
ffffffff8020b1a0:	53                   	push   %rbx
ffffffff8020b1a1:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b1a4:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b1a9:	31 d2                	xor    %edx,%edx
ffffffff8020b1ab:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b1b0:	48 8d 3d c9 0a 02 00 	lea    0x20ac9(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b1b7:	f7 db                	neg    %ebx
ffffffff8020b1b9:	e8 e2 ee 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b1be:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b1c1:	5b                   	pop    %rbx
ffffffff8020b1c2:	c3                   	retq   
ffffffff8020b1c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b1ca:	00 00 00 00 
ffffffff8020b1ce:	66 90                	xchg   %ax,%ax

ffffffff8020b1d0 <caml_int32_add>:
ffffffff8020b1d0:	53                   	push   %rbx
ffffffff8020b1d1:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b1d6:	8b 5e 08             	mov    0x8(%rsi),%ebx
ffffffff8020b1d9:	31 d2                	xor    %edx,%edx
ffffffff8020b1db:	03 5f 08             	add    0x8(%rdi),%ebx
ffffffff8020b1de:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b1e3:	48 8d 3d 96 0a 02 00 	lea    0x20a96(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b1ea:	e8 b1 ee 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b1ef:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b1f2:	5b                   	pop    %rbx
ffffffff8020b1f3:	c3                   	retq   
ffffffff8020b1f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b1fb:	00 00 00 00 
ffffffff8020b1ff:	90                   	nop

ffffffff8020b200 <caml_int32_sub>:
ffffffff8020b200:	53                   	push   %rbx
ffffffff8020b201:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b206:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b209:	31 d2                	xor    %edx,%edx
ffffffff8020b20b:	2b 5e 08             	sub    0x8(%rsi),%ebx
ffffffff8020b20e:	48 8d 3d 6b 0a 02 00 	lea    0x20a6b(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b215:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b21a:	e8 81 ee 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b21f:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b222:	5b                   	pop    %rbx
ffffffff8020b223:	c3                   	retq   
ffffffff8020b224:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b22b:	00 00 00 00 
ffffffff8020b22f:	90                   	nop

ffffffff8020b230 <caml_int32_mul>:
ffffffff8020b230:	53                   	push   %rbx
ffffffff8020b231:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b234:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b239:	31 d2                	xor    %edx,%edx
ffffffff8020b23b:	0f af 5e 08          	imul   0x8(%rsi),%ebx
ffffffff8020b23f:	48 8d 3d 3a 0a 02 00 	lea    0x20a3a(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b246:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b24b:	e8 50 ee 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b250:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b253:	5b                   	pop    %rbx
ffffffff8020b254:	c3                   	retq   
ffffffff8020b255:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b25c:	00 00 00 00 

ffffffff8020b260 <caml_int32_div>:
ffffffff8020b260:	53                   	push   %rbx
ffffffff8020b261:	8b 4e 08             	mov    0x8(%rsi),%ecx
ffffffff8020b264:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b267:	85 c9                	test   %ecx,%ecx
ffffffff8020b269:	74 39                	je     ffffffff8020b2a4 <caml_int32_div+0x44>
ffffffff8020b26b:	81 fb 00 00 00 80    	cmp    $0x80000000,%ebx
ffffffff8020b271:	75 0d                	jne    ffffffff8020b280 <caml_int32_div+0x20>
ffffffff8020b273:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b276:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff8020b279:	75 05                	jne    ffffffff8020b280 <caml_int32_div+0x20>
ffffffff8020b27b:	5b                   	pop    %rbx
ffffffff8020b27c:	c3                   	retq   
ffffffff8020b27d:	0f 1f 00             	nopl   (%rax)
ffffffff8020b280:	89 d8                	mov    %ebx,%eax
ffffffff8020b282:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b287:	48 8d 3d f2 09 02 00 	lea    0x209f2(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b28e:	99                   	cltd   
ffffffff8020b28f:	f7 f9                	idiv   %ecx
ffffffff8020b291:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b296:	31 d2                	xor    %edx,%edx
ffffffff8020b298:	89 c3                	mov    %eax,%ebx
ffffffff8020b29a:	e8 01 ee 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b29f:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b2a2:	5b                   	pop    %rbx
ffffffff8020b2a3:	c3                   	retq   
ffffffff8020b2a4:	e8 67 c2 ff ff       	callq  ffffffff80207510 <caml_raise_zero_divide>
ffffffff8020b2a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020b2b0 <caml_int32_mod>:
ffffffff8020b2b0:	53                   	push   %rbx
ffffffff8020b2b1:	8b 4e 08             	mov    0x8(%rsi),%ecx
ffffffff8020b2b4:	8b 47 08             	mov    0x8(%rdi),%eax
ffffffff8020b2b7:	85 c9                	test   %ecx,%ecx
ffffffff8020b2b9:	74 57                	je     ffffffff8020b312 <caml_int32_mod+0x62>
ffffffff8020b2bb:	3d 00 00 00 80       	cmp    $0x80000000,%eax
ffffffff8020b2c0:	75 2e                	jne    ffffffff8020b2f0 <caml_int32_mod+0x40>
ffffffff8020b2c2:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff8020b2c5:	75 29                	jne    ffffffff8020b2f0 <caml_int32_mod+0x40>
ffffffff8020b2c7:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b2cc:	31 d2                	xor    %edx,%edx
ffffffff8020b2ce:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b2d3:	48 8d 3d a6 09 02 00 	lea    0x209a6(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b2da:	e8 c1 ed 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b2df:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
ffffffff8020b2e6:	5b                   	pop    %rbx
ffffffff8020b2e7:	c3                   	retq   
ffffffff8020b2e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020b2ef:	00 
ffffffff8020b2f0:	99                   	cltd   
ffffffff8020b2f1:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b2f6:	48 8d 3d 83 09 02 00 	lea    0x20983(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b2fd:	f7 f9                	idiv   %ecx
ffffffff8020b2ff:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b304:	89 d3                	mov    %edx,%ebx
ffffffff8020b306:	31 d2                	xor    %edx,%edx
ffffffff8020b308:	e8 93 ed 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b30d:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b310:	5b                   	pop    %rbx
ffffffff8020b311:	c3                   	retq   
ffffffff8020b312:	e8 f9 c1 ff ff       	callq  ffffffff80207510 <caml_raise_zero_divide>
ffffffff8020b317:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b31e:	00 00 

ffffffff8020b320 <caml_int32_and>:
ffffffff8020b320:	53                   	push   %rbx
ffffffff8020b321:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b326:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b329:	31 d2                	xor    %edx,%edx
ffffffff8020b32b:	23 5e 08             	and    0x8(%rsi),%ebx
ffffffff8020b32e:	48 8d 3d 4b 09 02 00 	lea    0x2094b(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b335:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b33a:	e8 61 ed 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b33f:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b342:	5b                   	pop    %rbx
ffffffff8020b343:	c3                   	retq   
ffffffff8020b344:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b34b:	00 00 00 00 
ffffffff8020b34f:	90                   	nop

ffffffff8020b350 <caml_int32_or>:
ffffffff8020b350:	53                   	push   %rbx
ffffffff8020b351:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b356:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b359:	31 d2                	xor    %edx,%edx
ffffffff8020b35b:	0b 5e 08             	or     0x8(%rsi),%ebx
ffffffff8020b35e:	48 8d 3d 1b 09 02 00 	lea    0x2091b(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b365:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b36a:	e8 31 ed 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b36f:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b372:	5b                   	pop    %rbx
ffffffff8020b373:	c3                   	retq   
ffffffff8020b374:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b37b:	00 00 00 00 
ffffffff8020b37f:	90                   	nop

ffffffff8020b380 <caml_int32_xor>:
ffffffff8020b380:	53                   	push   %rbx
ffffffff8020b381:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b386:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b389:	31 d2                	xor    %edx,%edx
ffffffff8020b38b:	33 5e 08             	xor    0x8(%rsi),%ebx
ffffffff8020b38e:	48 8d 3d eb 08 02 00 	lea    0x208eb(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b395:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b39a:	e8 01 ed 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b39f:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b3a2:	5b                   	pop    %rbx
ffffffff8020b3a3:	c3                   	retq   
ffffffff8020b3a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b3ab:	00 00 00 00 
ffffffff8020b3af:	90                   	nop

ffffffff8020b3b0 <caml_int32_shift_left>:
ffffffff8020b3b0:	53                   	push   %rbx
ffffffff8020b3b1:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020b3b4:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b3b7:	31 d2                	xor    %edx,%edx
ffffffff8020b3b9:	48 d1 f9             	sar    %rcx
ffffffff8020b3bc:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b3c1:	48 8d 3d b8 08 02 00 	lea    0x208b8(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b3c8:	d3 e3                	shl    %cl,%ebx
ffffffff8020b3ca:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b3cf:	e8 cc ec 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b3d4:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b3d7:	5b                   	pop    %rbx
ffffffff8020b3d8:	c3                   	retq   
ffffffff8020b3d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020b3e0 <caml_int32_shift_right>:
ffffffff8020b3e0:	53                   	push   %rbx
ffffffff8020b3e1:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020b3e4:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b3e7:	31 d2                	xor    %edx,%edx
ffffffff8020b3e9:	48 d1 f9             	sar    %rcx
ffffffff8020b3ec:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b3f1:	48 8d 3d 88 08 02 00 	lea    0x20888(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b3f8:	d3 fb                	sar    %cl,%ebx
ffffffff8020b3fa:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b3ff:	e8 9c ec 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b404:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b407:	5b                   	pop    %rbx
ffffffff8020b408:	c3                   	retq   
ffffffff8020b409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020b410 <caml_int32_shift_right_unsigned>:
ffffffff8020b410:	53                   	push   %rbx
ffffffff8020b411:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020b414:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b417:	31 d2                	xor    %edx,%edx
ffffffff8020b419:	48 d1 f9             	sar    %rcx
ffffffff8020b41c:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b421:	48 8d 3d 58 08 02 00 	lea    0x20858(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b428:	d3 eb                	shr    %cl,%ebx
ffffffff8020b42a:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b42f:	e8 6c ec 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b434:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b437:	5b                   	pop    %rbx
ffffffff8020b438:	c3                   	retq   
ffffffff8020b439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020b440 <caml_int32_direct_bswap>:
ffffffff8020b440:	0f cf                	bswap  %edi
ffffffff8020b442:	48 63 c7             	movslq %edi,%rax
ffffffff8020b445:	c3                   	retq   
ffffffff8020b446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020b44d:	00 00 00 

ffffffff8020b450 <caml_int32_bswap>:
ffffffff8020b450:	53                   	push   %rbx
ffffffff8020b451:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b456:	8b 5f 08             	mov    0x8(%rdi),%ebx
ffffffff8020b459:	31 d2                	xor    %edx,%edx
ffffffff8020b45b:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b460:	48 8d 3d 19 08 02 00 	lea    0x20819(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b467:	0f cb                	bswap  %ebx
ffffffff8020b469:	e8 32 ec 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b46e:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b471:	5b                   	pop    %rbx
ffffffff8020b472:	c3                   	retq   
ffffffff8020b473:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b47a:	00 00 00 00 
ffffffff8020b47e:	66 90                	xchg   %ax,%ax

ffffffff8020b480 <caml_int32_of_int>:
ffffffff8020b480:	53                   	push   %rbx
ffffffff8020b481:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b486:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020b489:	31 d2                	xor    %edx,%edx
ffffffff8020b48b:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b490:	48 8d 3d e9 07 02 00 	lea    0x207e9(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b497:	48 d1 fb             	sar    %rbx
ffffffff8020b49a:	e8 01 ec 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b49f:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b4a2:	5b                   	pop    %rbx
ffffffff8020b4a3:	c3                   	retq   
ffffffff8020b4a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b4ab:	00 00 00 00 
ffffffff8020b4af:	90                   	nop

ffffffff8020b4b0 <caml_int32_to_int>:
ffffffff8020b4b0:	48 63 47 08          	movslq 0x8(%rdi),%rax
ffffffff8020b4b4:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020b4b9:	c3                   	retq   
ffffffff8020b4ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020b4c0 <caml_int32_of_float_unboxed>:
ffffffff8020b4c0:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
ffffffff8020b4c4:	c3                   	retq   
ffffffff8020b4c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b4cc:	00 00 00 00 

ffffffff8020b4d0 <caml_int32_of_float>:
ffffffff8020b4d0:	53                   	push   %rbx
ffffffff8020b4d1:	f2 0f 2c 1f          	cvttsd2si (%rdi),%ebx
ffffffff8020b4d5:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b4da:	31 d2                	xor    %edx,%edx
ffffffff8020b4dc:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b4e1:	48 8d 3d 98 07 02 00 	lea    0x20798(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b4e8:	e8 b3 eb 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b4ed:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b4f0:	5b                   	pop    %rbx
ffffffff8020b4f1:	c3                   	retq   
ffffffff8020b4f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b4f9:	00 00 00 00 
ffffffff8020b4fd:	0f 1f 00             	nopl   (%rax)

ffffffff8020b500 <caml_int32_to_float_unboxed>:
ffffffff8020b500:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020b504:	f2 0f 2a c7          	cvtsi2sd %edi,%xmm0
ffffffff8020b508:	c3                   	retq   
ffffffff8020b509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020b510 <caml_int32_to_float>:
ffffffff8020b510:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020b514:	f2 0f 2a 47 08       	cvtsi2sdl 0x8(%rdi),%xmm0
ffffffff8020b519:	e9 32 c1 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8020b51e:	66 90                	xchg   %ax,%ax

ffffffff8020b520 <caml_int32_compare_unboxed>:
ffffffff8020b520:	31 c0                	xor    %eax,%eax
ffffffff8020b522:	39 f7                	cmp    %esi,%edi
ffffffff8020b524:	0f 9c c2             	setl   %dl
ffffffff8020b527:	0f 9f c0             	setg   %al
ffffffff8020b52a:	0f b6 d2             	movzbl %dl,%edx
ffffffff8020b52d:	48 29 d0             	sub    %rdx,%rax
ffffffff8020b530:	c3                   	retq   
ffffffff8020b531:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b538:	00 00 00 00 
ffffffff8020b53c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020b540 <caml_int32_compare>:
ffffffff8020b540:	8b 57 08             	mov    0x8(%rdi),%edx
ffffffff8020b543:	8b 4e 08             	mov    0x8(%rsi),%ecx
ffffffff8020b546:	31 c0                	xor    %eax,%eax
ffffffff8020b548:	39 d1                	cmp    %edx,%ecx
ffffffff8020b54a:	0f 9f c2             	setg   %dl
ffffffff8020b54d:	0f 9c c0             	setl   %al
ffffffff8020b550:	0f b6 d2             	movzbl %dl,%edx
ffffffff8020b553:	48 29 d0             	sub    %rdx,%rax
ffffffff8020b556:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020b55b:	c3                   	retq   
ffffffff8020b55c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020b560 <caml_int32_format>:
ffffffff8020b560:	55                   	push   %rbp
ffffffff8020b561:	53                   	push   %rbx
ffffffff8020b562:	48 89 f3             	mov    %rsi,%rbx
ffffffff8020b565:	48 8d 35 22 6f 01 00 	lea    0x16f22(%rip),%rsi        # ffffffff8022248e <posix_signals+0x3ae>
ffffffff8020b56c:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8020b570:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020b577:	00 00 
ffffffff8020b579:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8020b57e:	31 c0                	xor    %eax,%eax
ffffffff8020b580:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b583:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020b586:	e8 05 f9 ff ff       	callq  ffffffff8020ae90 <parse_format>
ffffffff8020b58b:	8b 73 08             	mov    0x8(%rbx),%esi
ffffffff8020b58e:	31 c0                	xor    %eax,%eax
ffffffff8020b590:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020b593:	e8 a8 9e 00 00       	callq  ffffffff80215440 <caml_alloc_sprintf>
ffffffff8020b598:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
ffffffff8020b59d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8020b5a4:	00 00 
ffffffff8020b5a6:	75 07                	jne    ffffffff8020b5af <caml_int32_format+0x4f>
ffffffff8020b5a8:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8020b5ac:	5b                   	pop    %rbx
ffffffff8020b5ad:	5d                   	pop    %rbp
ffffffff8020b5ae:	c3                   	retq   
ffffffff8020b5af:	e8 ec 4a ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020b5b4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b5bb:	00 00 00 00 
ffffffff8020b5bf:	90                   	nop

ffffffff8020b5c0 <caml_int32_of_string>:
ffffffff8020b5c0:	53                   	push   %rbx
ffffffff8020b5c1:	48 8d 15 52 65 01 00 	lea    0x16552(%rip),%rdx        # ffffffff80221b1a <int32_length+0x3a>
ffffffff8020b5c8:	be 20 00 00 00       	mov    $0x20,%esi
ffffffff8020b5cd:	e8 0e f7 ff ff       	callq  ffffffff8020ace0 <parse_intnat>
ffffffff8020b5d2:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b5d7:	31 d2                	xor    %edx,%edx
ffffffff8020b5d9:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b5de:	48 8d 3d 9b 06 02 00 	lea    0x2069b(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b5e5:	48 89 c3             	mov    %rax,%rbx
ffffffff8020b5e8:	e8 b3 ea 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b5ed:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b5f0:	5b                   	pop    %rbx
ffffffff8020b5f1:	c3                   	retq   
ffffffff8020b5f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b5f9:	00 00 00 00 
ffffffff8020b5fd:	0f 1f 00             	nopl   (%rax)

ffffffff8020b600 <caml_int32_bits_of_float_unboxed>:
ffffffff8020b600:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020b604:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
ffffffff8020b608:	66 0f 7e c8          	movd   %xmm1,%eax
ffffffff8020b60c:	c3                   	retq   
ffffffff8020b60d:	0f 1f 00             	nopl   (%rax)

ffffffff8020b610 <caml_int32_float_of_bits_unboxed>:
ffffffff8020b610:	66 0f 6e cf          	movd   %edi,%xmm1
ffffffff8020b614:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020b618:	f3 0f 5a c1          	cvtss2sd %xmm1,%xmm0
ffffffff8020b61c:	c3                   	retq   
ffffffff8020b61d:	0f 1f 00             	nopl   (%rax)

ffffffff8020b620 <caml_int32_bits_of_float>:
ffffffff8020b620:	53                   	push   %rbx
ffffffff8020b621:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020b625:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b62a:	31 d2                	xor    %edx,%edx
ffffffff8020b62c:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020b631:	f2 0f 5a 07          	cvtsd2ss (%rdi),%xmm0
ffffffff8020b635:	48 8d 3d 44 06 02 00 	lea    0x20644(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020b63c:	66 0f 7e c3          	movd   %xmm0,%ebx
ffffffff8020b640:	e8 5b ea 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b645:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020b648:	5b                   	pop    %rbx
ffffffff8020b649:	c3                   	retq   
ffffffff8020b64a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020b650 <caml_int32_float_of_bits>:
ffffffff8020b650:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020b654:	f3 0f 5a 47 08       	cvtss2sd 0x8(%rdi),%xmm0
ffffffff8020b659:	e9 f2 bf ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8020b65e:	66 90                	xchg   %ax,%ax

ffffffff8020b660 <caml_copy_int64>:
ffffffff8020b660:	53                   	push   %rbx
ffffffff8020b661:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b666:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020b669:	31 d2                	xor    %edx,%edx
ffffffff8020b66b:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b670:	48 8d 3d c9 05 02 00 	lea    0x205c9(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b677:	e8 24 ea 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b67c:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b680:	5b                   	pop    %rbx
ffffffff8020b681:	c3                   	retq   
ffffffff8020b682:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b689:	00 00 00 00 
ffffffff8020b68d:	0f 1f 00             	nopl   (%rax)

ffffffff8020b690 <caml_int64_neg>:
ffffffff8020b690:	53                   	push   %rbx
ffffffff8020b691:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020b695:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b69a:	31 d2                	xor    %edx,%edx
ffffffff8020b69c:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b6a1:	48 8d 3d 98 05 02 00 	lea    0x20598(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b6a8:	48 f7 db             	neg    %rbx
ffffffff8020b6ab:	e8 f0 e9 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b6b0:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b6b4:	5b                   	pop    %rbx
ffffffff8020b6b5:	c3                   	retq   
ffffffff8020b6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020b6bd:	00 00 00 

ffffffff8020b6c0 <caml_int64_neg_native>:
ffffffff8020b6c0:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b6c3:	48 f7 d8             	neg    %rax
ffffffff8020b6c6:	c3                   	retq   
ffffffff8020b6c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b6ce:	00 00 

ffffffff8020b6d0 <caml_int64_add>:
ffffffff8020b6d0:	53                   	push   %rbx
ffffffff8020b6d1:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b6d6:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020b6da:	31 d2                	xor    %edx,%edx
ffffffff8020b6dc:	48 03 5e 08          	add    0x8(%rsi),%rbx
ffffffff8020b6e0:	48 8d 3d 59 05 02 00 	lea    0x20559(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b6e7:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b6ec:	e8 af e9 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b6f1:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b6f5:	5b                   	pop    %rbx
ffffffff8020b6f6:	c3                   	retq   
ffffffff8020b6f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b6fe:	00 00 

ffffffff8020b700 <caml_int64_add_native>:
ffffffff8020b700:	48 8d 04 37          	lea    (%rdi,%rsi,1),%rax
ffffffff8020b704:	c3                   	retq   
ffffffff8020b705:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020b70c:	00 00 00 00 

ffffffff8020b710 <caml_int64_sub>:
ffffffff8020b710:	53                   	push   %rbx
ffffffff8020b711:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b716:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020b71a:	31 d2                	xor    %edx,%edx
ffffffff8020b71c:	48 2b 5e 08          	sub    0x8(%rsi),%rbx
ffffffff8020b720:	48 8d 3d 19 05 02 00 	lea    0x20519(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b727:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b72c:	e8 6f e9 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b731:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b735:	5b                   	pop    %rbx
ffffffff8020b736:	c3                   	retq   
ffffffff8020b737:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b73e:	00 00 

ffffffff8020b740 <caml_int64_sub_native>:
ffffffff8020b740:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b743:	48 29 f0             	sub    %rsi,%rax
ffffffff8020b746:	c3                   	retq   
ffffffff8020b747:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b74e:	00 00 

ffffffff8020b750 <caml_int64_mul>:
ffffffff8020b750:	53                   	push   %rbx
ffffffff8020b751:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
ffffffff8020b755:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b75a:	31 d2                	xor    %edx,%edx
ffffffff8020b75c:	48 0f af 5f 08       	imul   0x8(%rdi),%rbx
ffffffff8020b761:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b766:	48 8d 3d d3 04 02 00 	lea    0x204d3(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b76d:	e8 2e e9 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b772:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b776:	5b                   	pop    %rbx
ffffffff8020b777:	c3                   	retq   
ffffffff8020b778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020b77f:	00 

ffffffff8020b780 <caml_int64_mul_native>:
ffffffff8020b780:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b783:	48 0f af c6          	imul   %rsi,%rax
ffffffff8020b787:	c3                   	retq   
ffffffff8020b788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020b78f:	00 

ffffffff8020b790 <caml_int64_div>:
ffffffff8020b790:	53                   	push   %rbx
ffffffff8020b791:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8020b795:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020b799:	48 85 f6             	test   %rsi,%rsi
ffffffff8020b79c:	74 44                	je     ffffffff8020b7e2 <caml_int64_div+0x52>
ffffffff8020b79e:	48 b9 00 00 00 00 00 	movabs $0x8000000000000000,%rcx
ffffffff8020b7a5:	00 00 80 
ffffffff8020b7a8:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020b7ab:	75 2b                	jne    ffffffff8020b7d8 <caml_int64_div+0x48>
ffffffff8020b7ad:	48 89 cb             	mov    %rcx,%rbx
ffffffff8020b7b0:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
ffffffff8020b7b4:	75 22                	jne    ffffffff8020b7d8 <caml_int64_div+0x48>
ffffffff8020b7b6:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b7bb:	31 d2                	xor    %edx,%edx
ffffffff8020b7bd:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b7c2:	48 8d 3d 77 04 02 00 	lea    0x20477(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b7c9:	e8 d2 e8 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b7ce:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b7d2:	5b                   	pop    %rbx
ffffffff8020b7d3:	c3                   	retq   
ffffffff8020b7d4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020b7d8:	48 99                	cqto   
ffffffff8020b7da:	48 f7 fe             	idiv   %rsi
ffffffff8020b7dd:	48 89 c3             	mov    %rax,%rbx
ffffffff8020b7e0:	eb d4                	jmp    ffffffff8020b7b6 <caml_int64_div+0x26>
ffffffff8020b7e2:	e8 29 bd ff ff       	callq  ffffffff80207510 <caml_raise_zero_divide>
ffffffff8020b7e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b7ee:	00 00 

ffffffff8020b7f0 <caml_int64_div_native>:
ffffffff8020b7f0:	48 85 f6             	test   %rsi,%rsi
ffffffff8020b7f3:	74 24                	je     ffffffff8020b819 <caml_int64_div_native+0x29>
ffffffff8020b7f5:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff8020b7fc:	00 00 80 
ffffffff8020b7ff:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020b802:	75 0c                	jne    ffffffff8020b810 <caml_int64_div_native+0x20>
ffffffff8020b804:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
ffffffff8020b808:	75 06                	jne    ffffffff8020b810 <caml_int64_div_native+0x20>
ffffffff8020b80a:	c3                   	retq   
ffffffff8020b80b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020b810:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b813:	48 99                	cqto   
ffffffff8020b815:	48 f7 fe             	idiv   %rsi
ffffffff8020b818:	c3                   	retq   
ffffffff8020b819:	50                   	push   %rax
ffffffff8020b81a:	e8 f1 bc ff ff       	callq  ffffffff80207510 <caml_raise_zero_divide>
ffffffff8020b81f:	90                   	nop

ffffffff8020b820 <caml_int64_mod>:
ffffffff8020b820:	53                   	push   %rbx
ffffffff8020b821:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8020b825:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020b829:	48 85 f6             	test   %rsi,%rsi
ffffffff8020b82c:	74 44                	je     ffffffff8020b872 <caml_int64_mod+0x52>
ffffffff8020b82e:	48 b9 00 00 00 00 00 	movabs $0x8000000000000000,%rcx
ffffffff8020b835:	00 00 80 
ffffffff8020b838:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020b83b:	75 2b                	jne    ffffffff8020b868 <caml_int64_mod+0x48>
ffffffff8020b83d:	31 db                	xor    %ebx,%ebx
ffffffff8020b83f:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
ffffffff8020b843:	75 23                	jne    ffffffff8020b868 <caml_int64_mod+0x48>
ffffffff8020b845:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b84a:	31 d2                	xor    %edx,%edx
ffffffff8020b84c:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b851:	48 8d 3d e8 03 02 00 	lea    0x203e8(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b858:	e8 43 e8 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b85d:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b861:	5b                   	pop    %rbx
ffffffff8020b862:	c3                   	retq   
ffffffff8020b863:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020b868:	48 99                	cqto   
ffffffff8020b86a:	48 f7 fe             	idiv   %rsi
ffffffff8020b86d:	48 89 d3             	mov    %rdx,%rbx
ffffffff8020b870:	eb d3                	jmp    ffffffff8020b845 <caml_int64_mod+0x25>
ffffffff8020b872:	e8 99 bc ff ff       	callq  ffffffff80207510 <caml_raise_zero_divide>
ffffffff8020b877:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b87e:	00 00 

ffffffff8020b880 <caml_int64_mod_native>:
ffffffff8020b880:	48 85 f6             	test   %rsi,%rsi
ffffffff8020b883:	74 2f                	je     ffffffff8020b8b4 <caml_int64_mod_native+0x34>
ffffffff8020b885:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
ffffffff8020b88c:	00 00 80 
ffffffff8020b88f:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b892:	48 39 d7             	cmp    %rdx,%rdi
ffffffff8020b895:	75 11                	jne    ffffffff8020b8a8 <caml_int64_mod_native+0x28>
ffffffff8020b897:	45 31 c0             	xor    %r8d,%r8d
ffffffff8020b89a:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
ffffffff8020b89e:	75 08                	jne    ffffffff8020b8a8 <caml_int64_mod_native+0x28>
ffffffff8020b8a0:	4c 89 c0             	mov    %r8,%rax
ffffffff8020b8a3:	c3                   	retq   
ffffffff8020b8a4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020b8a8:	48 99                	cqto   
ffffffff8020b8aa:	48 f7 fe             	idiv   %rsi
ffffffff8020b8ad:	49 89 d0             	mov    %rdx,%r8
ffffffff8020b8b0:	4c 89 c0             	mov    %r8,%rax
ffffffff8020b8b3:	c3                   	retq   
ffffffff8020b8b4:	50                   	push   %rax
ffffffff8020b8b5:	e8 56 bc ff ff       	callq  ffffffff80207510 <caml_raise_zero_divide>
ffffffff8020b8ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020b8c0 <caml_int64_and>:
ffffffff8020b8c0:	53                   	push   %rbx
ffffffff8020b8c1:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b8c6:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
ffffffff8020b8ca:	31 d2                	xor    %edx,%edx
ffffffff8020b8cc:	48 23 5f 08          	and    0x8(%rdi),%rbx
ffffffff8020b8d0:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b8d5:	48 8d 3d 64 03 02 00 	lea    0x20364(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b8dc:	e8 bf e7 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b8e1:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b8e5:	5b                   	pop    %rbx
ffffffff8020b8e6:	c3                   	retq   
ffffffff8020b8e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b8ee:	00 00 

ffffffff8020b8f0 <caml_int64_and_native>:
ffffffff8020b8f0:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b8f3:	48 21 f0             	and    %rsi,%rax
ffffffff8020b8f6:	c3                   	retq   
ffffffff8020b8f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b8fe:	00 00 

ffffffff8020b900 <caml_int64_or>:
ffffffff8020b900:	53                   	push   %rbx
ffffffff8020b901:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b906:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
ffffffff8020b90a:	31 d2                	xor    %edx,%edx
ffffffff8020b90c:	48 0b 5f 08          	or     0x8(%rdi),%rbx
ffffffff8020b910:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b915:	48 8d 3d 24 03 02 00 	lea    0x20324(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b91c:	e8 7f e7 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b921:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b925:	5b                   	pop    %rbx
ffffffff8020b926:	c3                   	retq   
ffffffff8020b927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b92e:	00 00 

ffffffff8020b930 <caml_int64_or_native>:
ffffffff8020b930:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b933:	48 09 f0             	or     %rsi,%rax
ffffffff8020b936:	c3                   	retq   
ffffffff8020b937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b93e:	00 00 

ffffffff8020b940 <caml_int64_xor>:
ffffffff8020b940:	53                   	push   %rbx
ffffffff8020b941:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b946:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
ffffffff8020b94a:	31 d2                	xor    %edx,%edx
ffffffff8020b94c:	48 33 5f 08          	xor    0x8(%rdi),%rbx
ffffffff8020b950:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b955:	48 8d 3d e4 02 02 00 	lea    0x202e4(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b95c:	e8 3f e7 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b961:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b965:	5b                   	pop    %rbx
ffffffff8020b966:	c3                   	retq   
ffffffff8020b967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b96e:	00 00 

ffffffff8020b970 <caml_int64_xor_native>:
ffffffff8020b970:	48 89 f8             	mov    %rdi,%rax
ffffffff8020b973:	48 31 f0             	xor    %rsi,%rax
ffffffff8020b976:	c3                   	retq   
ffffffff8020b977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020b97e:	00 00 

ffffffff8020b980 <caml_int64_shift_left>:
ffffffff8020b980:	53                   	push   %rbx
ffffffff8020b981:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020b984:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020b988:	31 d2                	xor    %edx,%edx
ffffffff8020b98a:	48 d1 f9             	sar    %rcx
ffffffff8020b98d:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b992:	48 8d 3d a7 02 02 00 	lea    0x202a7(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b999:	48 d3 e3             	shl    %cl,%rbx
ffffffff8020b99c:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b9a1:	e8 fa e6 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b9a6:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b9aa:	5b                   	pop    %rbx
ffffffff8020b9ab:	c3                   	retq   
ffffffff8020b9ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020b9b0 <caml_int64_shift_right>:
ffffffff8020b9b0:	53                   	push   %rbx
ffffffff8020b9b1:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020b9b4:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020b9b8:	31 d2                	xor    %edx,%edx
ffffffff8020b9ba:	48 d1 f9             	sar    %rcx
ffffffff8020b9bd:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b9c2:	48 8d 3d 77 02 02 00 	lea    0x20277(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b9c9:	48 d3 fb             	sar    %cl,%rbx
ffffffff8020b9cc:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020b9d1:	e8 ca e6 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020b9d6:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020b9da:	5b                   	pop    %rbx
ffffffff8020b9db:	c3                   	retq   
ffffffff8020b9dc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020b9e0 <caml_int64_shift_right_unsigned>:
ffffffff8020b9e0:	53                   	push   %rbx
ffffffff8020b9e1:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020b9e4:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020b9e8:	31 d2                	xor    %edx,%edx
ffffffff8020b9ea:	48 d1 f9             	sar    %rcx
ffffffff8020b9ed:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020b9f2:	48 8d 3d 47 02 02 00 	lea    0x20247(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020b9f9:	48 d3 eb             	shr    %cl,%rbx
ffffffff8020b9fc:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020ba01:	e8 9a e6 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020ba06:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020ba0a:	5b                   	pop    %rbx
ffffffff8020ba0b:	c3                   	retq   
ffffffff8020ba0c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020ba10 <caml_int64_direct_bswap>:
ffffffff8020ba10:	e9 8b f2 ff ff       	jmpq   ffffffff8020aca0 <caml_swap64>
ffffffff8020ba15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020ba1c:	00 00 00 00 

ffffffff8020ba20 <caml_int64_bswap>:
ffffffff8020ba20:	53                   	push   %rbx
ffffffff8020ba21:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020ba26:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020ba2a:	31 d2                	xor    %edx,%edx
ffffffff8020ba2c:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020ba31:	48 8d 3d 08 02 02 00 	lea    0x20208(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020ba38:	48 0f cb             	bswap  %rbx
ffffffff8020ba3b:	e8 60 e6 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020ba40:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020ba44:	5b                   	pop    %rbx
ffffffff8020ba45:	c3                   	retq   
ffffffff8020ba46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ba4d:	00 00 00 

ffffffff8020ba50 <caml_int64_of_int>:
ffffffff8020ba50:	53                   	push   %rbx
ffffffff8020ba51:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020ba56:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020ba59:	31 d2                	xor    %edx,%edx
ffffffff8020ba5b:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020ba60:	48 8d 3d d9 01 02 00 	lea    0x201d9(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020ba67:	48 d1 fb             	sar    %rbx
ffffffff8020ba6a:	e8 31 e6 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020ba6f:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020ba73:	5b                   	pop    %rbx
ffffffff8020ba74:	c3                   	retq   
ffffffff8020ba75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020ba7c:	00 00 00 00 

ffffffff8020ba80 <caml_int64_to_int>:
ffffffff8020ba80:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020ba84:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020ba89:	c3                   	retq   
ffffffff8020ba8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020ba90 <caml_int64_of_float_unboxed>:
ffffffff8020ba90:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
ffffffff8020ba95:	c3                   	retq   
ffffffff8020ba96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ba9d:	00 00 00 

ffffffff8020baa0 <caml_int64_of_float>:
ffffffff8020baa0:	53                   	push   %rbx
ffffffff8020baa1:	f2 48 0f 2c 1f       	cvttsd2si (%rdi),%rbx
ffffffff8020baa6:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020baab:	31 d2                	xor    %edx,%edx
ffffffff8020baad:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bab2:	48 8d 3d 87 01 02 00 	lea    0x20187(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020bab9:	e8 e2 e5 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020babe:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bac2:	5b                   	pop    %rbx
ffffffff8020bac3:	c3                   	retq   
ffffffff8020bac4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020bacb:	00 00 00 00 
ffffffff8020bacf:	90                   	nop

ffffffff8020bad0 <caml_int64_to_float_unboxed>:
ffffffff8020bad0:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020bad4:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
ffffffff8020bad9:	c3                   	retq   
ffffffff8020bada:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020bae0 <caml_int64_to_float>:
ffffffff8020bae0:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020bae4:	f2 48 0f 2a 47 08    	cvtsi2sdq 0x8(%rdi),%xmm0
ffffffff8020baea:	e9 61 bb ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8020baef:	90                   	nop

ffffffff8020baf0 <caml_int64_of_int32>:
ffffffff8020baf0:	53                   	push   %rbx
ffffffff8020baf1:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020baf6:	48 63 5f 08          	movslq 0x8(%rdi),%rbx
ffffffff8020bafa:	31 d2                	xor    %edx,%edx
ffffffff8020bafc:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bb01:	48 8d 3d 38 01 02 00 	lea    0x20138(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020bb08:	e8 93 e5 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bb0d:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bb11:	5b                   	pop    %rbx
ffffffff8020bb12:	c3                   	retq   
ffffffff8020bb13:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020bb1a:	00 00 00 00 
ffffffff8020bb1e:	66 90                	xchg   %ax,%ax

ffffffff8020bb20 <caml_int64_to_int32>:
ffffffff8020bb20:	53                   	push   %rbx
ffffffff8020bb21:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020bb26:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020bb2a:	31 d2                	xor    %edx,%edx
ffffffff8020bb2c:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020bb31:	48 8d 3d 48 01 02 00 	lea    0x20148(%rip),%rdi        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8020bb38:	e8 63 e5 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bb3d:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8020bb40:	5b                   	pop    %rbx
ffffffff8020bb41:	c3                   	retq   
ffffffff8020bb42:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020bb49:	00 00 00 00 
ffffffff8020bb4d:	0f 1f 00             	nopl   (%rax)

ffffffff8020bb50 <caml_int64_of_nativeint>:
ffffffff8020bb50:	53                   	push   %rbx
ffffffff8020bb51:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020bb56:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020bb5a:	31 d2                	xor    %edx,%edx
ffffffff8020bb5c:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bb61:	48 8d 3d d8 00 02 00 	lea    0x200d8(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020bb68:	e8 33 e5 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bb6d:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bb71:	5b                   	pop    %rbx
ffffffff8020bb72:	c3                   	retq   
ffffffff8020bb73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020bb7a:	00 00 00 00 
ffffffff8020bb7e:	66 90                	xchg   %ax,%ax

ffffffff8020bb80 <caml_int64_to_nativeint>:
ffffffff8020bb80:	53                   	push   %rbx
ffffffff8020bb81:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020bb86:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020bb8a:	31 d2                	xor    %edx,%edx
ffffffff8020bb8c:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bb91:	48 8d 3d 68 00 02 00 	lea    0x20068(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020bb98:	e8 03 e5 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bb9d:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bba1:	5b                   	pop    %rbx
ffffffff8020bba2:	c3                   	retq   
ffffffff8020bba3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020bbaa:	00 00 00 00 
ffffffff8020bbae:	66 90                	xchg   %ax,%ax

ffffffff8020bbb0 <caml_int64_compare_unboxed>:
ffffffff8020bbb0:	31 c0                	xor    %eax,%eax
ffffffff8020bbb2:	48 39 f7             	cmp    %rsi,%rdi
ffffffff8020bbb5:	0f 9c c2             	setl   %dl
ffffffff8020bbb8:	0f 9f c0             	setg   %al
ffffffff8020bbbb:	0f b6 d2             	movzbl %dl,%edx
ffffffff8020bbbe:	48 29 d0             	sub    %rdx,%rax
ffffffff8020bbc1:	c3                   	retq   
ffffffff8020bbc2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020bbc9:	00 00 00 00 
ffffffff8020bbcd:	0f 1f 00             	nopl   (%rax)

ffffffff8020bbd0 <caml_int64_compare>:
ffffffff8020bbd0:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8020bbd4:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8020bbd8:	31 c0                	xor    %eax,%eax
ffffffff8020bbda:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8020bbdd:	0f 9f c2             	setg   %dl
ffffffff8020bbe0:	0f 9c c0             	setl   %al
ffffffff8020bbe3:	0f b6 d2             	movzbl %dl,%edx
ffffffff8020bbe6:	48 29 d0             	sub    %rdx,%rax
ffffffff8020bbe9:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020bbee:	c3                   	retq   
ffffffff8020bbef:	90                   	nop

ffffffff8020bbf0 <caml_int64_format>:
ffffffff8020bbf0:	55                   	push   %rbp
ffffffff8020bbf1:	53                   	push   %rbx
ffffffff8020bbf2:	48 89 f3             	mov    %rsi,%rbx
ffffffff8020bbf5:	48 8d 35 39 69 01 00 	lea    0x16939(%rip),%rsi        # ffffffff80222535 <posix_signals+0x455>
ffffffff8020bbfc:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8020bc00:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020bc07:	00 00 
ffffffff8020bc09:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8020bc0e:	31 c0                	xor    %eax,%eax
ffffffff8020bc10:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020bc13:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020bc16:	e8 75 f2 ff ff       	callq  ffffffff8020ae90 <parse_format>
ffffffff8020bc1b:	48 8b 73 08          	mov    0x8(%rbx),%rsi
ffffffff8020bc1f:	31 c0                	xor    %eax,%eax
ffffffff8020bc21:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020bc24:	e8 17 98 00 00       	callq  ffffffff80215440 <caml_alloc_sprintf>
ffffffff8020bc29:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
ffffffff8020bc2e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8020bc35:	00 00 
ffffffff8020bc37:	75 07                	jne    ffffffff8020bc40 <caml_int64_format+0x50>
ffffffff8020bc39:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8020bc3d:	5b                   	pop    %rbx
ffffffff8020bc3e:	5d                   	pop    %rbp
ffffffff8020bc3f:	c3                   	retq   
ffffffff8020bc40:	e8 5b 44 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020bc45:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020bc4c:	00 00 00 00 

ffffffff8020bc50 <caml_int64_of_string>:
ffffffff8020bc50:	41 54                	push   %r12
ffffffff8020bc52:	49 89 fc             	mov    %rdi,%r12
ffffffff8020bc55:	55                   	push   %rbp
ffffffff8020bc56:	53                   	push   %rbx
ffffffff8020bc57:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020bc5b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020bc62:	00 00 
ffffffff8020bc64:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8020bc69:	31 c0                	xor    %eax,%eax
ffffffff8020bc6b:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
ffffffff8020bc70:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
ffffffff8020bc75:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
ffffffff8020bc7a:	e8 01 ef ff ff       	callq  ffffffff8020ab80 <parse_sign_and_base>
ffffffff8020bc7f:	48 63 74 24 10       	movslq 0x10(%rsp),%rsi
ffffffff8020bc84:	0f be 18             	movsbl (%rax),%ebx
ffffffff8020bc87:	48 89 f7             	mov    %rsi,%rdi
ffffffff8020bc8a:	8d 4b d0             	lea    -0x30(%rbx),%ecx
ffffffff8020bc8d:	80 f9 09             	cmp    $0x9,%cl
ffffffff8020bc90:	0f 86 2a 01 00 00    	jbe    ffffffff8020bdc0 <caml_int64_of_string+0x170>
ffffffff8020bc96:	8d 4b bf             	lea    -0x41(%rbx),%ecx
ffffffff8020bc99:	89 da                	mov    %ebx,%edx
ffffffff8020bc9b:	80 f9 05             	cmp    $0x5,%cl
ffffffff8020bc9e:	0f 86 ea 00 00 00    	jbe    ffffffff8020bd8e <caml_int64_of_string+0x13e>
ffffffff8020bca4:	83 ea 61             	sub    $0x61,%edx
ffffffff8020bca7:	80 fa 05             	cmp    $0x5,%dl
ffffffff8020bcaa:	0f 87 27 01 00 00    	ja     ffffffff8020bdd7 <caml_int64_of_string+0x187>
ffffffff8020bcb0:	83 eb 57             	sub    $0x57,%ebx
ffffffff8020bcb3:	39 df                	cmp    %ebx,%edi
ffffffff8020bcb5:	0f 8e 1c 01 00 00    	jle    ffffffff8020bdd7 <caml_int64_of_string+0x187>
ffffffff8020bcbb:	85 db                	test   %ebx,%ebx
ffffffff8020bcbd:	0f 88 14 01 00 00    	js     ffffffff8020bdd7 <caml_int64_of_string+0x187>
ffffffff8020bcc3:	48 63 db             	movslq %ebx,%rbx
ffffffff8020bcc6:	48 8d 68 01          	lea    0x1(%rax),%rbp
ffffffff8020bcca:	eb 41                	jmp    ffffffff8020bd0d <caml_int64_of_string+0xbd>
ffffffff8020bccc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020bcd0:	8d 50 bf             	lea    -0x41(%rax),%edx
ffffffff8020bcd3:	80 fa 05             	cmp    $0x5,%dl
ffffffff8020bcd6:	0f 86 c4 00 00 00    	jbe    ffffffff8020bda0 <caml_int64_of_string+0x150>
ffffffff8020bcdc:	83 e8 61             	sub    $0x61,%eax
ffffffff8020bcdf:	3c 05                	cmp    $0x5,%al
ffffffff8020bce1:	77 4d                	ja     ffffffff8020bd30 <caml_int64_of_string+0xe0>
ffffffff8020bce3:	83 e9 57             	sub    $0x57,%ecx
ffffffff8020bce6:	39 cf                	cmp    %ecx,%edi
ffffffff8020bce8:	7e 46                	jle    ffffffff8020bd30 <caml_int64_of_string+0xe0>
ffffffff8020bcea:	85 c9                	test   %ecx,%ecx
ffffffff8020bcec:	78 42                	js     ffffffff8020bd30 <caml_int64_of_string+0xe0>
ffffffff8020bcee:	48 89 d8             	mov    %rbx,%rax
ffffffff8020bcf1:	48 f7 e6             	mul    %rsi
ffffffff8020bcf4:	48 89 c3             	mov    %rax,%rbx
ffffffff8020bcf7:	0f 80 da 00 00 00    	jo     ffffffff8020bdd7 <caml_int64_of_string+0x187>
ffffffff8020bcfd:	48 63 c9             	movslq %ecx,%rcx
ffffffff8020bd00:	48 01 cb             	add    %rcx,%rbx
ffffffff8020bd03:	0f 82 ce 00 00 00    	jb     ffffffff8020bdd7 <caml_int64_of_string+0x187>
ffffffff8020bd09:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8020bd0d:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
ffffffff8020bd11:	3c 5f                	cmp    $0x5f,%al
ffffffff8020bd13:	74 f4                	je     ffffffff8020bd09 <caml_int64_of_string+0xb9>
ffffffff8020bd15:	8d 50 d0             	lea    -0x30(%rax),%edx
ffffffff8020bd18:	0f be c8             	movsbl %al,%ecx
ffffffff8020bd1b:	80 fa 09             	cmp    $0x9,%dl
ffffffff8020bd1e:	77 b0                	ja     ffffffff8020bcd0 <caml_int64_of_string+0x80>
ffffffff8020bd20:	83 e9 30             	sub    $0x30,%ecx
ffffffff8020bd23:	39 cf                	cmp    %ecx,%edi
ffffffff8020bd25:	7f c3                	jg     ffffffff8020bcea <caml_int64_of_string+0x9a>
ffffffff8020bd27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020bd2e:	00 00 
ffffffff8020bd30:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020bd33:	e8 78 90 00 00       	callq  ffffffff80214db0 <caml_string_length>
ffffffff8020bd38:	49 01 c4             	add    %rax,%r12
ffffffff8020bd3b:	4c 39 e5             	cmp    %r12,%rbp
ffffffff8020bd3e:	0f 85 93 00 00 00    	jne    ffffffff8020bdd7 <caml_int64_of_string+0x187>
ffffffff8020bd44:	8b 54 24 14          	mov    0x14(%rsp),%edx
ffffffff8020bd48:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff8020bd4c:	85 d2                	test   %edx,%edx
ffffffff8020bd4e:	74 60                	je     ffffffff8020bdb0 <caml_int64_of_string+0x160>
ffffffff8020bd50:	85 c0                	test   %eax,%eax
ffffffff8020bd52:	78 74                	js     ffffffff8020bdc8 <caml_int64_of_string+0x178>
ffffffff8020bd54:	48 85 db             	test   %rbx,%rbx
ffffffff8020bd57:	78 7e                	js     ffffffff8020bdd7 <caml_int64_of_string+0x187>
ffffffff8020bd59:	31 d2                	xor    %edx,%edx
ffffffff8020bd5b:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bd60:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020bd65:	48 8d 3d d4 fe 01 00 	lea    0x1fed4(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020bd6c:	e8 2f e3 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bd71:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bd75:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
ffffffff8020bd7a:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff8020bd81:	00 00 
ffffffff8020bd83:	75 5e                	jne    ffffffff8020bde3 <caml_int64_of_string+0x193>
ffffffff8020bd85:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020bd89:	5b                   	pop    %rbx
ffffffff8020bd8a:	5d                   	pop    %rbp
ffffffff8020bd8b:	41 5c                	pop    %r12
ffffffff8020bd8d:	c3                   	retq   
ffffffff8020bd8e:	83 eb 37             	sub    $0x37,%ebx
ffffffff8020bd91:	e9 1d ff ff ff       	jmpq   ffffffff8020bcb3 <caml_int64_of_string+0x63>
ffffffff8020bd96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020bd9d:	00 00 00 
ffffffff8020bda0:	83 e9 37             	sub    $0x37,%ecx
ffffffff8020bda3:	e9 3e ff ff ff       	jmpq   ffffffff8020bce6 <caml_int64_of_string+0x96>
ffffffff8020bda8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020bdaf:	00 
ffffffff8020bdb0:	85 c0                	test   %eax,%eax
ffffffff8020bdb2:	79 a5                	jns    ffffffff8020bd59 <caml_int64_of_string+0x109>
ffffffff8020bdb4:	48 f7 db             	neg    %rbx
ffffffff8020bdb7:	eb a0                	jmp    ffffffff8020bd59 <caml_int64_of_string+0x109>
ffffffff8020bdb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020bdc0:	83 eb 30             	sub    $0x30,%ebx
ffffffff8020bdc3:	e9 eb fe ff ff       	jmpq   ffffffff8020bcb3 <caml_int64_of_string+0x63>
ffffffff8020bdc8:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
ffffffff8020bdcf:	00 00 80 
ffffffff8020bdd2:	48 39 c3             	cmp    %rax,%rbx
ffffffff8020bdd5:	76 dd                	jbe    ffffffff8020bdb4 <caml_int64_of_string+0x164>
ffffffff8020bdd7:	48 8d 3d 4c 5d 01 00 	lea    0x15d4c(%rip),%rdi        # ffffffff80221b2a <int32_length+0x4a>
ffffffff8020bdde:	e8 5d b6 ff ff       	callq  ffffffff80207440 <caml_failwith>
ffffffff8020bde3:	e8 b8 42 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020bde8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020bdef:	00 

ffffffff8020bdf0 <caml_int64_bits_of_float_unboxed>:
ffffffff8020bdf0:	66 48 0f 7e c0       	movq   %xmm0,%rax
ffffffff8020bdf5:	c3                   	retq   
ffffffff8020bdf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020bdfd:	00 00 00 

ffffffff8020be00 <caml_int64_float_of_bits_unboxed>:
ffffffff8020be00:	66 48 0f 6e c7       	movq   %rdi,%xmm0
ffffffff8020be05:	c3                   	retq   
ffffffff8020be06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020be0d:	00 00 00 

ffffffff8020be10 <caml_int64_bits_of_float>:
ffffffff8020be10:	53                   	push   %rbx
ffffffff8020be11:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020be16:	48 8b 1f             	mov    (%rdi),%rbx
ffffffff8020be19:	31 d2                	xor    %edx,%edx
ffffffff8020be1b:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020be20:	48 8d 3d 19 fe 01 00 	lea    0x1fe19(%rip),%rdi        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8020be27:	e8 74 e2 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020be2c:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020be30:	5b                   	pop    %rbx
ffffffff8020be31:	c3                   	retq   
ffffffff8020be32:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020be39:	00 00 00 00 
ffffffff8020be3d:	0f 1f 00             	nopl   (%rax)

ffffffff8020be40 <caml_int64_float_of_bits>:
ffffffff8020be40:	f3 0f 7e 47 08       	movq   0x8(%rdi),%xmm0
ffffffff8020be45:	e9 06 b8 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8020be4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020be50 <caml_copy_nativeint>:
ffffffff8020be50:	53                   	push   %rbx
ffffffff8020be51:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020be56:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020be59:	31 d2                	xor    %edx,%edx
ffffffff8020be5b:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020be60:	48 8d 3d 99 fd 01 00 	lea    0x1fd99(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020be67:	e8 34 e2 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020be6c:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020be70:	5b                   	pop    %rbx
ffffffff8020be71:	c3                   	retq   
ffffffff8020be72:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020be79:	00 00 00 00 
ffffffff8020be7d:	0f 1f 00             	nopl   (%rax)

ffffffff8020be80 <caml_nativeint_neg>:
ffffffff8020be80:	53                   	push   %rbx
ffffffff8020be81:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020be85:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020be8a:	31 d2                	xor    %edx,%edx
ffffffff8020be8c:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020be91:	48 8d 3d 68 fd 01 00 	lea    0x1fd68(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020be98:	48 f7 db             	neg    %rbx
ffffffff8020be9b:	e8 00 e2 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bea0:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bea4:	5b                   	pop    %rbx
ffffffff8020bea5:	c3                   	retq   
ffffffff8020bea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020bead:	00 00 00 

ffffffff8020beb0 <caml_nativeint_add>:
ffffffff8020beb0:	53                   	push   %rbx
ffffffff8020beb1:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020beb6:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
ffffffff8020beba:	31 d2                	xor    %edx,%edx
ffffffff8020bebc:	48 03 5f 08          	add    0x8(%rdi),%rbx
ffffffff8020bec0:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bec5:	48 8d 3d 34 fd 01 00 	lea    0x1fd34(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020becc:	e8 cf e1 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bed1:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bed5:	5b                   	pop    %rbx
ffffffff8020bed6:	c3                   	retq   
ffffffff8020bed7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020bede:	00 00 

ffffffff8020bee0 <caml_nativeint_sub>:
ffffffff8020bee0:	53                   	push   %rbx
ffffffff8020bee1:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020bee6:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020beea:	31 d2                	xor    %edx,%edx
ffffffff8020beec:	48 2b 5e 08          	sub    0x8(%rsi),%rbx
ffffffff8020bef0:	48 8d 3d 09 fd 01 00 	lea    0x1fd09(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020bef7:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020befc:	e8 9f e1 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bf01:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bf05:	5b                   	pop    %rbx
ffffffff8020bf06:	c3                   	retq   
ffffffff8020bf07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020bf0e:	00 00 

ffffffff8020bf10 <caml_nativeint_mul>:
ffffffff8020bf10:	53                   	push   %rbx
ffffffff8020bf11:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020bf15:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020bf1a:	31 d2                	xor    %edx,%edx
ffffffff8020bf1c:	48 0f af 5e 08       	imul   0x8(%rsi),%rbx
ffffffff8020bf21:	48 8d 3d d8 fc 01 00 	lea    0x1fcd8(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020bf28:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bf2d:	e8 6e e1 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bf32:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bf36:	5b                   	pop    %rbx
ffffffff8020bf37:	c3                   	retq   
ffffffff8020bf38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020bf3f:	00 

ffffffff8020bf40 <caml_nativeint_div>:
ffffffff8020bf40:	53                   	push   %rbx
ffffffff8020bf41:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8020bf45:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020bf49:	48 85 c9             	test   %rcx,%rcx
ffffffff8020bf4c:	74 4b                	je     ffffffff8020bf99 <caml_nativeint_div+0x59>
ffffffff8020bf4e:	48 be 00 00 00 00 00 	movabs $0x8000000000000000,%rsi
ffffffff8020bf55:	00 00 80 
ffffffff8020bf58:	48 39 f3             	cmp    %rsi,%rbx
ffffffff8020bf5b:	75 13                	jne    ffffffff8020bf70 <caml_nativeint_div+0x30>
ffffffff8020bf5d:	48 89 f8             	mov    %rdi,%rax
ffffffff8020bf60:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8020bf64:	75 0a                	jne    ffffffff8020bf70 <caml_nativeint_div+0x30>
ffffffff8020bf66:	5b                   	pop    %rbx
ffffffff8020bf67:	c3                   	retq   
ffffffff8020bf68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020bf6f:	00 
ffffffff8020bf70:	48 89 d8             	mov    %rbx,%rax
ffffffff8020bf73:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bf78:	48 8d 3d 81 fc 01 00 	lea    0x1fc81(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020bf7f:	48 99                	cqto   
ffffffff8020bf81:	48 f7 f9             	idiv   %rcx
ffffffff8020bf84:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020bf89:	31 d2                	xor    %edx,%edx
ffffffff8020bf8b:	48 89 c3             	mov    %rax,%rbx
ffffffff8020bf8e:	e8 0d e1 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bf93:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020bf97:	5b                   	pop    %rbx
ffffffff8020bf98:	c3                   	retq   
ffffffff8020bf99:	e8 72 b5 ff ff       	callq  ffffffff80207510 <caml_raise_zero_divide>
ffffffff8020bf9e:	66 90                	xchg   %ax,%ax

ffffffff8020bfa0 <caml_nativeint_mod>:
ffffffff8020bfa0:	53                   	push   %rbx
ffffffff8020bfa1:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8020bfa5:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020bfa9:	48 85 c9             	test   %rcx,%rcx
ffffffff8020bfac:	74 60                	je     ffffffff8020c00e <caml_nativeint_mod+0x6e>
ffffffff8020bfae:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
ffffffff8020bfb5:	00 00 80 
ffffffff8020bfb8:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020bfbb:	75 2b                	jne    ffffffff8020bfe8 <caml_nativeint_mod+0x48>
ffffffff8020bfbd:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8020bfc1:	75 25                	jne    ffffffff8020bfe8 <caml_nativeint_mod+0x48>
ffffffff8020bfc3:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020bfc8:	31 d2                	xor    %edx,%edx
ffffffff8020bfca:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bfcf:	48 8d 3d 2a fc 01 00 	lea    0x1fc2a(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020bfd6:	e8 c5 e0 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020bfdb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8020bfe2:	00 
ffffffff8020bfe3:	5b                   	pop    %rbx
ffffffff8020bfe4:	c3                   	retq   
ffffffff8020bfe5:	0f 1f 00             	nopl   (%rax)
ffffffff8020bfe8:	48 99                	cqto   
ffffffff8020bfea:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020bfef:	48 8d 3d 0a fc 01 00 	lea    0x1fc0a(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020bff6:	48 f7 f9             	idiv   %rcx
ffffffff8020bff9:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020bffe:	48 89 d3             	mov    %rdx,%rbx
ffffffff8020c001:	31 d2                	xor    %edx,%edx
ffffffff8020c003:	e8 98 e0 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c008:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c00c:	5b                   	pop    %rbx
ffffffff8020c00d:	c3                   	retq   
ffffffff8020c00e:	e8 fd b4 ff ff       	callq  ffffffff80207510 <caml_raise_zero_divide>
ffffffff8020c013:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c01a:	00 00 00 00 
ffffffff8020c01e:	66 90                	xchg   %ax,%ax

ffffffff8020c020 <caml_nativeint_and>:
ffffffff8020c020:	53                   	push   %rbx
ffffffff8020c021:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c026:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020c02a:	31 d2                	xor    %edx,%edx
ffffffff8020c02c:	48 23 5e 08          	and    0x8(%rsi),%rbx
ffffffff8020c030:	48 8d 3d c9 fb 01 00 	lea    0x1fbc9(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c037:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c03c:	e8 5f e0 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c041:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c045:	5b                   	pop    %rbx
ffffffff8020c046:	c3                   	retq   
ffffffff8020c047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020c04e:	00 00 

ffffffff8020c050 <caml_nativeint_or>:
ffffffff8020c050:	53                   	push   %rbx
ffffffff8020c051:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c056:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020c05a:	31 d2                	xor    %edx,%edx
ffffffff8020c05c:	48 0b 5e 08          	or     0x8(%rsi),%rbx
ffffffff8020c060:	48 8d 3d 99 fb 01 00 	lea    0x1fb99(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c067:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c06c:	e8 2f e0 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c071:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c075:	5b                   	pop    %rbx
ffffffff8020c076:	c3                   	retq   
ffffffff8020c077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020c07e:	00 00 

ffffffff8020c080 <caml_nativeint_xor>:
ffffffff8020c080:	53                   	push   %rbx
ffffffff8020c081:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c086:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020c08a:	31 d2                	xor    %edx,%edx
ffffffff8020c08c:	48 33 5e 08          	xor    0x8(%rsi),%rbx
ffffffff8020c090:	48 8d 3d 69 fb 01 00 	lea    0x1fb69(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c097:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c09c:	e8 ff df 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c0a1:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c0a5:	5b                   	pop    %rbx
ffffffff8020c0a6:	c3                   	retq   
ffffffff8020c0a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020c0ae:	00 00 

ffffffff8020c0b0 <caml_nativeint_shift_left>:
ffffffff8020c0b0:	53                   	push   %rbx
ffffffff8020c0b1:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020c0b4:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020c0b8:	31 d2                	xor    %edx,%edx
ffffffff8020c0ba:	48 d1 f9             	sar    %rcx
ffffffff8020c0bd:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c0c2:	48 8d 3d 37 fb 01 00 	lea    0x1fb37(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c0c9:	48 d3 e3             	shl    %cl,%rbx
ffffffff8020c0cc:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c0d1:	e8 ca df 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c0d6:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c0da:	5b                   	pop    %rbx
ffffffff8020c0db:	c3                   	retq   
ffffffff8020c0dc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020c0e0 <caml_nativeint_shift_right>:
ffffffff8020c0e0:	53                   	push   %rbx
ffffffff8020c0e1:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020c0e4:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020c0e8:	31 d2                	xor    %edx,%edx
ffffffff8020c0ea:	48 d1 f9             	sar    %rcx
ffffffff8020c0ed:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c0f2:	48 8d 3d 07 fb 01 00 	lea    0x1fb07(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c0f9:	48 d3 fb             	sar    %cl,%rbx
ffffffff8020c0fc:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c101:	e8 9a df 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c106:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c10a:	5b                   	pop    %rbx
ffffffff8020c10b:	c3                   	retq   
ffffffff8020c10c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020c110 <caml_nativeint_shift_right_unsigned>:
ffffffff8020c110:	53                   	push   %rbx
ffffffff8020c111:	48 89 f1             	mov    %rsi,%rcx
ffffffff8020c114:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020c118:	31 d2                	xor    %edx,%edx
ffffffff8020c11a:	48 d1 f9             	sar    %rcx
ffffffff8020c11d:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c122:	48 8d 3d d7 fa 01 00 	lea    0x1fad7(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c129:	48 d3 eb             	shr    %cl,%rbx
ffffffff8020c12c:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c131:	e8 6a df 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c136:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c13a:	5b                   	pop    %rbx
ffffffff8020c13b:	c3                   	retq   
ffffffff8020c13c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020c140 <caml_nativeint_direct_bswap>:
ffffffff8020c140:	e9 5b eb ff ff       	jmpq   ffffffff8020aca0 <caml_swap64>
ffffffff8020c145:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c14c:	00 00 00 00 

ffffffff8020c150 <caml_nativeint_bswap>:
ffffffff8020c150:	53                   	push   %rbx
ffffffff8020c151:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8020c155:	e8 46 eb ff ff       	callq  ffffffff8020aca0 <caml_swap64>
ffffffff8020c15a:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c15f:	31 d2                	xor    %edx,%edx
ffffffff8020c161:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c166:	48 8d 3d 93 fa 01 00 	lea    0x1fa93(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c16d:	48 89 c3             	mov    %rax,%rbx
ffffffff8020c170:	e8 2b df 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c175:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c179:	5b                   	pop    %rbx
ffffffff8020c17a:	c3                   	retq   
ffffffff8020c17b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020c180 <caml_nativeint_of_int>:
ffffffff8020c180:	53                   	push   %rbx
ffffffff8020c181:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c186:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020c189:	31 d2                	xor    %edx,%edx
ffffffff8020c18b:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c190:	48 8d 3d 69 fa 01 00 	lea    0x1fa69(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c197:	48 d1 fb             	sar    %rbx
ffffffff8020c19a:	e8 01 df 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c19f:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c1a3:	5b                   	pop    %rbx
ffffffff8020c1a4:	c3                   	retq   
ffffffff8020c1a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c1ac:	00 00 00 00 

ffffffff8020c1b0 <caml_nativeint_to_int>:
ffffffff8020c1b0:	e9 cb f8 ff ff       	jmpq   ffffffff8020ba80 <caml_int64_to_int>
ffffffff8020c1b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c1bc:	00 00 00 00 

ffffffff8020c1c0 <caml_nativeint_of_float_unboxed>:
ffffffff8020c1c0:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
ffffffff8020c1c5:	c3                   	retq   
ffffffff8020c1c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c1cd:	00 00 00 

ffffffff8020c1d0 <caml_nativeint_of_float>:
ffffffff8020c1d0:	53                   	push   %rbx
ffffffff8020c1d1:	f2 48 0f 2c 1f       	cvttsd2si (%rdi),%rbx
ffffffff8020c1d6:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c1db:	31 d2                	xor    %edx,%edx
ffffffff8020c1dd:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c1e2:	48 8d 3d 17 fa 01 00 	lea    0x1fa17(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c1e9:	e8 b2 de 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c1ee:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c1f2:	5b                   	pop    %rbx
ffffffff8020c1f3:	c3                   	retq   
ffffffff8020c1f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c1fb:	00 00 00 00 
ffffffff8020c1ff:	90                   	nop

ffffffff8020c200 <caml_nativeint_to_float_unboxed>:
ffffffff8020c200:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020c204:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
ffffffff8020c209:	c3                   	retq   
ffffffff8020c20a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020c210 <caml_nativeint_to_float>:
ffffffff8020c210:	e9 cb f8 ff ff       	jmpq   ffffffff8020bae0 <caml_int64_to_float>
ffffffff8020c215:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c21c:	00 00 00 00 

ffffffff8020c220 <caml_nativeint_of_int32>:
ffffffff8020c220:	53                   	push   %rbx
ffffffff8020c221:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c226:	48 63 5f 08          	movslq 0x8(%rdi),%rbx
ffffffff8020c22a:	31 d2                	xor    %edx,%edx
ffffffff8020c22c:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c231:	48 8d 3d c8 f9 01 00 	lea    0x1f9c8(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c238:	e8 63 de 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c23d:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c241:	5b                   	pop    %rbx
ffffffff8020c242:	c3                   	retq   
ffffffff8020c243:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c24a:	00 00 00 00 
ffffffff8020c24e:	66 90                	xchg   %ax,%ax

ffffffff8020c250 <caml_nativeint_to_int32>:
ffffffff8020c250:	e9 cb f8 ff ff       	jmpq   ffffffff8020bb20 <caml_int64_to_int32>
ffffffff8020c255:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c25c:	00 00 00 00 

ffffffff8020c260 <caml_nativeint_compare_unboxed>:
ffffffff8020c260:	31 c0                	xor    %eax,%eax
ffffffff8020c262:	48 39 f7             	cmp    %rsi,%rdi
ffffffff8020c265:	0f 9c c2             	setl   %dl
ffffffff8020c268:	0f 9f c0             	setg   %al
ffffffff8020c26b:	0f b6 d2             	movzbl %dl,%edx
ffffffff8020c26e:	48 29 d0             	sub    %rdx,%rax
ffffffff8020c271:	c3                   	retq   
ffffffff8020c272:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c279:	00 00 00 00 
ffffffff8020c27d:	0f 1f 00             	nopl   (%rax)

ffffffff8020c280 <caml_nativeint_compare>:
ffffffff8020c280:	e9 4b f9 ff ff       	jmpq   ffffffff8020bbd0 <caml_int64_compare>
ffffffff8020c285:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c28c:	00 00 00 00 

ffffffff8020c290 <caml_nativeint_format>:
ffffffff8020c290:	e9 5b f9 ff ff       	jmpq   ffffffff8020bbf0 <caml_int64_format>
ffffffff8020c295:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c29c:	00 00 00 00 

ffffffff8020c2a0 <caml_nativeint_of_string>:
ffffffff8020c2a0:	53                   	push   %rbx
ffffffff8020c2a1:	48 8d 15 92 58 01 00 	lea    0x15892(%rip),%rdx        # ffffffff80221b3a <int32_length+0x5a>
ffffffff8020c2a8:	be 40 00 00 00       	mov    $0x40,%esi
ffffffff8020c2ad:	e8 2e ea ff ff       	callq  ffffffff8020ace0 <parse_intnat>
ffffffff8020c2b2:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020c2b7:	31 d2                	xor    %edx,%edx
ffffffff8020c2b9:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020c2be:	48 8d 3d 3b f9 01 00 	lea    0x1f93b(%rip),%rdi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8020c2c5:	48 89 c3             	mov    %rax,%rbx
ffffffff8020c2c8:	e8 d3 dd 00 00       	callq  ffffffff8021a0a0 <caml_alloc_custom>
ffffffff8020c2cd:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020c2d1:	5b                   	pop    %rbx
ffffffff8020c2d2:	c3                   	retq   
ffffffff8020c2d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c2da:	00 00 00 
ffffffff8020c2dd:	0f 1f 00             	nopl   (%rax)

ffffffff8020c2e0 <compare_channel>:
ffffffff8020c2e0:	48 8b 56 08          	mov    0x8(%rsi),%rdx
ffffffff8020c2e4:	31 c0                	xor    %eax,%eax
ffffffff8020c2e6:	48 39 57 08          	cmp    %rdx,0x8(%rdi)
ffffffff8020c2ea:	74 05                	je     ffffffff8020c2f1 <compare_channel+0x11>
ffffffff8020c2ec:	19 c0                	sbb    %eax,%eax
ffffffff8020c2ee:	83 c8 01             	or     $0x1,%eax
ffffffff8020c2f1:	c3                   	retq   
ffffffff8020c2f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c2f9:	00 00 00 00 
ffffffff8020c2fd:	0f 1f 00             	nopl   (%rax)

ffffffff8020c300 <hash_channel>:
ffffffff8020c300:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020c304:	c3                   	retq   
ffffffff8020c305:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c30c:	00 00 00 00 

ffffffff8020c310 <unlink_channel.isra.0.part.0>:
ffffffff8020c310:	48 8b 05 71 f8 02 00 	mov    0x2f871(%rip),%rax        # ffffffff8023bb88 <caml_all_opened_channels>
ffffffff8020c317:	48 8b 40 30          	mov    0x30(%rax),%rax
ffffffff8020c31b:	48 89 05 66 f8 02 00 	mov    %rax,0x2f866(%rip)        # ffffffff8023bb88 <caml_all_opened_channels>
ffffffff8020c322:	48 85 c0             	test   %rax,%rax
ffffffff8020c325:	74 08                	je     ffffffff8020c32f <unlink_channel.isra.0.part.0+0x1f>
ffffffff8020c327:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
ffffffff8020c32e:	00 
ffffffff8020c32f:	c3                   	retq   

ffffffff8020c330 <caml_finalize_channel>:
ffffffff8020c330:	55                   	push   %rbp
ffffffff8020c331:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020c335:	f6 45 4c 04          	testb  $0x4,0x4c(%rbp)
ffffffff8020c339:	0f 84 85 00 00 00    	je     ffffffff8020c3c4 <caml_finalize_channel+0x94>
ffffffff8020c33f:	8b 45 48             	mov    0x48(%rbp),%eax
ffffffff8020c342:	83 e8 01             	sub    $0x1,%eax
ffffffff8020c345:	89 45 48             	mov    %eax,0x48(%rbp)
ffffffff8020c348:	85 c0                	test   %eax,%eax
ffffffff8020c34a:	7f 78                	jg     ffffffff8020c3c4 <caml_finalize_channel+0x94>
ffffffff8020c34c:	48 8b 05 55 f8 02 00 	mov    0x2f855(%rip),%rax        # ffffffff8023bba8 <caml_channel_mutex_free>
ffffffff8020c353:	48 85 c0             	test   %rax,%rax
ffffffff8020c356:	74 05                	je     ffffffff8020c35d <caml_finalize_channel+0x2d>
ffffffff8020c358:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020c35b:	ff d0                	callq  *%rax
ffffffff8020c35d:	83 7d 00 ff          	cmpl   $0xffffffff,0x0(%rbp)
ffffffff8020c361:	74 13                	je     ffffffff8020c376 <caml_finalize_channel+0x46>
ffffffff8020c363:	48 83 bd 50 00 01 00 	cmpq   $0x0,0x10050(%rbp)
ffffffff8020c36a:	00 
ffffffff8020c36b:	74 09                	je     ffffffff8020c376 <caml_finalize_channel+0x46>
ffffffff8020c36d:	e8 ae 61 00 00       	callq  ffffffff80212520 <caml_runtime_warnings_active>
ffffffff8020c372:	85 c0                	test   %eax,%eax
ffffffff8020c374:	75 6a                	jne    ffffffff8020c3e0 <caml_finalize_channel+0xb0>
ffffffff8020c376:	48 83 7d 20 00       	cmpq   $0x0,0x20(%rbp)
ffffffff8020c37b:	74 33                	je     ffffffff8020c3b0 <caml_finalize_channel+0x80>
ffffffff8020c37d:	48 8b 45 38          	mov    0x38(%rbp),%rax
ffffffff8020c381:	48 85 c0             	test   %rax,%rax
ffffffff8020c384:	74 4a                	je     ffffffff8020c3d0 <caml_finalize_channel+0xa0>
ffffffff8020c386:	48 8b 55 30          	mov    0x30(%rbp),%rdx
ffffffff8020c38a:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff8020c38e:	48 85 d2             	test   %rdx,%rdx
ffffffff8020c391:	74 08                	je     ffffffff8020c39b <caml_finalize_channel+0x6b>
ffffffff8020c393:	48 8b 45 38          	mov    0x38(%rbp),%rax
ffffffff8020c397:	48 89 42 38          	mov    %rax,0x38(%rdx)
ffffffff8020c39b:	48 8b bd 50 00 01 00 	mov    0x10050(%rbp),%rdi
ffffffff8020c3a2:	e8 a9 45 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8020c3a7:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020c3aa:	5d                   	pop    %rbp
ffffffff8020c3ab:	e9 a0 45 00 00       	jmpq   ffffffff80210950 <caml_stat_free>
ffffffff8020c3b0:	48 8d 45 50          	lea    0x50(%rbp),%rax
ffffffff8020c3b4:	48 39 45 18          	cmp    %rax,0x18(%rbp)
ffffffff8020c3b8:	74 c3                	je     ffffffff8020c37d <caml_finalize_channel+0x4d>
ffffffff8020c3ba:	48 83 bd 50 00 01 00 	cmpq   $0x0,0x10050(%rbp)
ffffffff8020c3c1:	00 
ffffffff8020c3c2:	75 44                	jne    ffffffff8020c408 <caml_finalize_channel+0xd8>
ffffffff8020c3c4:	5d                   	pop    %rbp
ffffffff8020c3c5:	c3                   	retq   
ffffffff8020c3c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c3cd:	00 00 00 
ffffffff8020c3d0:	e8 3b ff ff ff       	callq  ffffffff8020c310 <unlink_channel.isra.0.part.0>
ffffffff8020c3d5:	eb c4                	jmp    ffffffff8020c39b <caml_finalize_channel+0x6b>
ffffffff8020c3d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020c3de:	00 00 
ffffffff8020c3e0:	48 8b 95 50 00 01 00 	mov    0x10050(%rbp),%rdx
ffffffff8020c3e7:	48 8b 3d fa c0 03 00 	mov    0x3c0fa(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8020c3ee:	48 8d 35 8b 57 01 00 	lea    0x1578b(%rip),%rsi        # ffffffff80221b80 <int32_length+0xa0>
ffffffff8020c3f5:	31 c0                	xor    %eax,%eax
ffffffff8020c3f7:	e8 af 3c ff ff       	callq  ffffffff802000ab <fprintf>
ffffffff8020c3fc:	e9 75 ff ff ff       	jmpq   ffffffff8020c376 <caml_finalize_channel+0x46>
ffffffff8020c401:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020c408:	e8 13 61 00 00       	callq  ffffffff80212520 <caml_runtime_warnings_active>
ffffffff8020c40d:	85 c0                	test   %eax,%eax
ffffffff8020c40f:	74 b3                	je     ffffffff8020c3c4 <caml_finalize_channel+0x94>
ffffffff8020c411:	48 8b 0d d0 c0 03 00 	mov    0x3c0d0(%rip),%rcx        # ffffffff802484e8 <stderr>
ffffffff8020c418:	ba 2a 00 00 00       	mov    $0x2a,%edx
ffffffff8020c41d:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020c422:	5d                   	pop    %rbp
ffffffff8020c423:	48 8d 3d 96 57 01 00 	lea    0x15796(%rip),%rdi        # ffffffff80221bc0 <int32_length+0xe0>
ffffffff8020c42a:	e9 7d 3c ff ff       	jmpq   ffffffff802000ac <fwrite>
ffffffff8020c42f:	90                   	nop

ffffffff8020c430 <caml_channel_size.part.0>:
ffffffff8020c430:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020c434:	e8 07 7f 00 00       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff8020c439:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020c43e:	e8 9d 91 00 00       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff8020c443:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c44a:	00 00 00 00 
ffffffff8020c44e:	66 90                	xchg   %ax,%ax

ffffffff8020c450 <caml_open_descriptor_in>:
ffffffff8020c450:	41 54                	push   %r12
ffffffff8020c452:	55                   	push   %rbp
ffffffff8020c453:	89 fd                	mov    %edi,%ebp
ffffffff8020c455:	bf 58 00 01 00       	mov    $0x10058,%edi
ffffffff8020c45a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020c45e:	e8 cd 44 00 00       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8020c463:	89 28                	mov    %ebp,(%rax)
ffffffff8020c465:	49 89 c4             	mov    %rax,%r12
ffffffff8020c468:	e8 93 7e 00 00       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8020c46d:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8020c472:	31 f6                	xor    %esi,%esi
ffffffff8020c474:	89 ef                	mov    %ebp,%edi
ffffffff8020c476:	e8 3c 3c ff ff       	callq  ffffffff802000b7 <lseek64>
ffffffff8020c47b:	49 89 44 24 08       	mov    %rax,0x8(%r12)
ffffffff8020c480:	e8 bb 7e 00 00       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff8020c485:	49 8d 44 24 50       	lea    0x50(%r12),%rax
ffffffff8020c48a:	49 c7 44 24 28 00 00 	movq   $0x0,0x28(%r12)
ffffffff8020c491:	00 00 
ffffffff8020c493:	49 89 44 24 20       	mov    %rax,0x20(%r12)
ffffffff8020c498:	49 89 44 24 18       	mov    %rax,0x18(%r12)
ffffffff8020c49d:	49 8d 84 24 50 00 01 	lea    0x10050(%r12),%rax
ffffffff8020c4a4:	00 
ffffffff8020c4a5:	49 89 44 24 10       	mov    %rax,0x10(%r12)
ffffffff8020c4aa:	48 8b 05 d7 f6 02 00 	mov    0x2f6d7(%rip),%rax        # ffffffff8023bb88 <caml_all_opened_channels>
ffffffff8020c4b1:	49 c7 44 24 38 00 00 	movq   $0x0,0x38(%r12)
ffffffff8020c4b8:	00 00 
ffffffff8020c4ba:	49 89 44 24 30       	mov    %rax,0x30(%r12)
ffffffff8020c4bf:	49 c7 44 24 40 00 00 	movq   $0x0,0x40(%r12)
ffffffff8020c4c6:	00 00 
ffffffff8020c4c8:	49 c7 44 24 48 00 00 	movq   $0x0,0x48(%r12)
ffffffff8020c4cf:	00 00 
ffffffff8020c4d1:	49 c7 84 24 50 00 01 	movq   $0x0,0x10050(%r12)
ffffffff8020c4d8:	00 00 00 00 00 
ffffffff8020c4dd:	48 85 c0             	test   %rax,%rax
ffffffff8020c4e0:	74 04                	je     ffffffff8020c4e6 <caml_open_descriptor_in+0x96>
ffffffff8020c4e2:	4c 89 60 38          	mov    %r12,0x38(%rax)
ffffffff8020c4e6:	4c 89 25 9b f6 02 00 	mov    %r12,0x2f69b(%rip)        # ffffffff8023bb88 <caml_all_opened_channels>
ffffffff8020c4ed:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020c4f1:	4c 89 e0             	mov    %r12,%rax
ffffffff8020c4f4:	5d                   	pop    %rbp
ffffffff8020c4f5:	41 5c                	pop    %r12
ffffffff8020c4f7:	c3                   	retq   
ffffffff8020c4f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020c4ff:	00 

ffffffff8020c500 <caml_open_descriptor_out>:
ffffffff8020c500:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020c504:	e8 47 ff ff ff       	callq  ffffffff8020c450 <caml_open_descriptor_in>
ffffffff8020c509:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8020c510:	00 
ffffffff8020c511:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020c515:	c3                   	retq   
ffffffff8020c516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c51d:	00 00 00 

ffffffff8020c520 <caml_close_channel>:
ffffffff8020c520:	55                   	push   %rbp
ffffffff8020c521:	48 89 fd             	mov    %rdi,%rbp
ffffffff8020c524:	8b 3f                	mov    (%rdi),%edi
ffffffff8020c526:	e8 87 3b ff ff       	callq  ffffffff802000b2 <close>
ffffffff8020c52b:	8b 45 48             	mov    0x48(%rbp),%eax
ffffffff8020c52e:	85 c0                	test   %eax,%eax
ffffffff8020c530:	7f 4e                	jg     ffffffff8020c580 <caml_close_channel+0x60>
ffffffff8020c532:	48 8b 05 6f f6 02 00 	mov    0x2f66f(%rip),%rax        # ffffffff8023bba8 <caml_channel_mutex_free>
ffffffff8020c539:	48 85 c0             	test   %rax,%rax
ffffffff8020c53c:	74 05                	je     ffffffff8020c543 <caml_close_channel+0x23>
ffffffff8020c53e:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020c541:	ff d0                	callq  *%rax
ffffffff8020c543:	48 8b 45 38          	mov    0x38(%rbp),%rax
ffffffff8020c547:	48 85 c0             	test   %rax,%rax
ffffffff8020c54a:	74 3c                	je     ffffffff8020c588 <caml_close_channel+0x68>
ffffffff8020c54c:	48 8b 55 30          	mov    0x30(%rbp),%rdx
ffffffff8020c550:	48 89 50 30          	mov    %rdx,0x30(%rax)
ffffffff8020c554:	48 85 d2             	test   %rdx,%rdx
ffffffff8020c557:	74 08                	je     ffffffff8020c561 <caml_close_channel+0x41>
ffffffff8020c559:	48 8b 45 38          	mov    0x38(%rbp),%rax
ffffffff8020c55d:	48 89 42 38          	mov    %rax,0x38(%rdx)
ffffffff8020c561:	48 8b bd 50 00 01 00 	mov    0x10050(%rbp),%rdi
ffffffff8020c568:	e8 e3 43 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8020c56d:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020c570:	5d                   	pop    %rbp
ffffffff8020c571:	e9 da 43 00 00       	jmpq   ffffffff80210950 <caml_stat_free>
ffffffff8020c576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c57d:	00 00 00 
ffffffff8020c580:	5d                   	pop    %rbp
ffffffff8020c581:	c3                   	retq   
ffffffff8020c582:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020c588:	e8 83 fd ff ff       	callq  ffffffff8020c310 <unlink_channel.isra.0.part.0>
ffffffff8020c58d:	eb d2                	jmp    ffffffff8020c561 <caml_close_channel+0x41>
ffffffff8020c58f:	90                   	nop

ffffffff8020c590 <caml_channel_size>:
ffffffff8020c590:	41 54                	push   %r12
ffffffff8020c592:	55                   	push   %rbp
ffffffff8020c593:	53                   	push   %rbx
ffffffff8020c594:	8b 2f                	mov    (%rdi),%ebp
ffffffff8020c596:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020c59a:	e8 61 7d 00 00       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8020c59f:	31 f6                	xor    %esi,%esi
ffffffff8020c5a1:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8020c5a6:	89 ef                	mov    %ebp,%edi
ffffffff8020c5a8:	e8 0a 3b ff ff       	callq  ffffffff802000b7 <lseek64>
ffffffff8020c5ad:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff8020c5b1:	74 21                	je     ffffffff8020c5d4 <caml_channel_size+0x44>
ffffffff8020c5b3:	31 d2                	xor    %edx,%edx
ffffffff8020c5b5:	48 89 de             	mov    %rbx,%rsi
ffffffff8020c5b8:	89 ef                	mov    %ebp,%edi
ffffffff8020c5ba:	49 89 c4             	mov    %rax,%r12
ffffffff8020c5bd:	e8 f5 3a ff ff       	callq  ffffffff802000b7 <lseek64>
ffffffff8020c5c2:	48 39 d8             	cmp    %rbx,%rax
ffffffff8020c5c5:	75 0d                	jne    ffffffff8020c5d4 <caml_channel_size+0x44>
ffffffff8020c5c7:	e8 74 7d 00 00       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff8020c5cc:	4c 89 e0             	mov    %r12,%rax
ffffffff8020c5cf:	5b                   	pop    %rbx
ffffffff8020c5d0:	5d                   	pop    %rbp
ffffffff8020c5d1:	41 5c                	pop    %r12
ffffffff8020c5d3:	c3                   	retq   
ffffffff8020c5d4:	e8 57 fe ff ff       	callq  ffffffff8020c430 <caml_channel_size.part.0>
ffffffff8020c5d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020c5e0 <caml_channel_binary_mode>:
ffffffff8020c5e0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020c5e5:	c3                   	retq   
ffffffff8020c5e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c5ed:	00 00 00 

ffffffff8020c5f0 <caml_flush_partial>:
ffffffff8020c5f0:	41 55                	push   %r13
ffffffff8020c5f2:	41 54                	push   %r12
ffffffff8020c5f4:	55                   	push   %rbp
ffffffff8020c5f5:	48 8d 6f 50          	lea    0x50(%rdi),%rbp
ffffffff8020c5f9:	53                   	push   %rbx
ffffffff8020c5fa:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020c5fe:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff8020c602:	49 89 c4             	mov    %rax,%r12
ffffffff8020c605:	49 29 ec             	sub    %rbp,%r12
ffffffff8020c608:	45 85 e4             	test   %r12d,%r12d
ffffffff8020c60b:	7f 1b                	jg     ffffffff8020c628 <caml_flush_partial+0x38>
ffffffff8020c60d:	48 39 c5             	cmp    %rax,%rbp
ffffffff8020c610:	0f 94 c0             	sete   %al
ffffffff8020c613:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020c617:	5b                   	pop    %rbx
ffffffff8020c618:	0f b6 c0             	movzbl %al,%eax
ffffffff8020c61b:	5d                   	pop    %rbp
ffffffff8020c61c:	41 5c                	pop    %r12
ffffffff8020c61e:	41 5d                	pop    %r13
ffffffff8020c620:	c3                   	retq   
ffffffff8020c621:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020c628:	8b 77 4c             	mov    0x4c(%rdi),%esi
ffffffff8020c62b:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020c62e:	8b 3f                	mov    (%rdi),%edi
ffffffff8020c630:	44 89 e1             	mov    %r12d,%ecx
ffffffff8020c633:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020c636:	e8 55 a1 00 00       	callq  ffffffff80216790 <caml_write_fd>
ffffffff8020c63b:	4c 63 e8             	movslq %eax,%r13
ffffffff8020c63e:	4c 01 6b 08          	add    %r13,0x8(%rbx)
ffffffff8020c642:	41 39 c4             	cmp    %eax,%r12d
ffffffff8020c645:	7f 11                	jg     ffffffff8020c658 <caml_flush_partial+0x68>
ffffffff8020c647:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8020c64b:	4c 29 e8             	sub    %r13,%rax
ffffffff8020c64e:	48 89 43 18          	mov    %rax,0x18(%rbx)
ffffffff8020c652:	eb b9                	jmp    ffffffff8020c60d <caml_flush_partial+0x1d>
ffffffff8020c654:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020c658:	41 29 c4             	sub    %eax,%r12d
ffffffff8020c65b:	4a 8d 74 2d 00       	lea    0x0(%rbp,%r13,1),%rsi
ffffffff8020c660:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020c663:	49 63 d4             	movslq %r12d,%rdx
ffffffff8020c666:	e8 3a 3a ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020c66b:	eb da                	jmp    ffffffff8020c647 <caml_flush_partial+0x57>
ffffffff8020c66d:	0f 1f 00             	nopl   (%rax)

ffffffff8020c670 <caml_flush>:
ffffffff8020c670:	53                   	push   %rbx
ffffffff8020c671:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020c674:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020c678:	48 89 df             	mov    %rbx,%rdi
ffffffff8020c67b:	e8 70 ff ff ff       	callq  ffffffff8020c5f0 <caml_flush_partial>
ffffffff8020c680:	85 c0                	test   %eax,%eax
ffffffff8020c682:	74 f4                	je     ffffffff8020c678 <caml_flush+0x8>
ffffffff8020c684:	5b                   	pop    %rbx
ffffffff8020c685:	c3                   	retq   
ffffffff8020c686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c68d:	00 00 00 

ffffffff8020c690 <caml_putword>:
ffffffff8020c690:	55                   	push   %rbp
ffffffff8020c691:	89 f5                	mov    %esi,%ebp
ffffffff8020c693:	53                   	push   %rbx
ffffffff8020c694:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020c697:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020c69b:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff8020c69f:	48 3b 47 10          	cmp    0x10(%rdi),%rax
ffffffff8020c6a3:	73 5b                	jae    ffffffff8020c700 <caml_putword+0x70>
ffffffff8020c6a5:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8020c6a9:	48 89 53 18          	mov    %rdx,0x18(%rbx)
ffffffff8020c6ad:	89 ea                	mov    %ebp,%edx
ffffffff8020c6af:	c1 ea 18             	shr    $0x18,%edx
ffffffff8020c6b2:	88 10                	mov    %dl,(%rax)
ffffffff8020c6b4:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8020c6b8:	48 3b 43 10          	cmp    0x10(%rbx),%rax
ffffffff8020c6bc:	73 72                	jae    ffffffff8020c730 <caml_putword+0xa0>
ffffffff8020c6be:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8020c6c2:	48 89 53 18          	mov    %rdx,0x18(%rbx)
ffffffff8020c6c6:	89 ea                	mov    %ebp,%edx
ffffffff8020c6c8:	c1 ea 10             	shr    $0x10,%edx
ffffffff8020c6cb:	88 10                	mov    %dl,(%rax)
ffffffff8020c6cd:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8020c6d1:	48 3b 43 10          	cmp    0x10(%rbx),%rax
ffffffff8020c6d5:	73 49                	jae    ffffffff8020c720 <caml_putword+0x90>
ffffffff8020c6d7:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8020c6db:	89 e9                	mov    %ebp,%ecx
ffffffff8020c6dd:	48 89 53 18          	mov    %rdx,0x18(%rbx)
ffffffff8020c6e1:	88 28                	mov    %ch,(%rax)
ffffffff8020c6e3:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8020c6e7:	48 3b 43 10          	cmp    0x10(%rbx),%rax
ffffffff8020c6eb:	73 23                	jae    ffffffff8020c710 <caml_putword+0x80>
ffffffff8020c6ed:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8020c6f1:	48 89 53 18          	mov    %rdx,0x18(%rbx)
ffffffff8020c6f5:	40 88 28             	mov    %bpl,(%rax)
ffffffff8020c6f8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020c6fc:	5b                   	pop    %rbx
ffffffff8020c6fd:	5d                   	pop    %rbp
ffffffff8020c6fe:	c3                   	retq   
ffffffff8020c6ff:	90                   	nop
ffffffff8020c700:	e8 eb fe ff ff       	callq  ffffffff8020c5f0 <caml_flush_partial>
ffffffff8020c705:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8020c709:	eb 9a                	jmp    ffffffff8020c6a5 <caml_putword+0x15>
ffffffff8020c70b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020c710:	48 89 df             	mov    %rbx,%rdi
ffffffff8020c713:	e8 d8 fe ff ff       	callq  ffffffff8020c5f0 <caml_flush_partial>
ffffffff8020c718:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8020c71c:	eb cf                	jmp    ffffffff8020c6ed <caml_putword+0x5d>
ffffffff8020c71e:	66 90                	xchg   %ax,%ax
ffffffff8020c720:	48 89 df             	mov    %rbx,%rdi
ffffffff8020c723:	e8 c8 fe ff ff       	callq  ffffffff8020c5f0 <caml_flush_partial>
ffffffff8020c728:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8020c72c:	eb a9                	jmp    ffffffff8020c6d7 <caml_putword+0x47>
ffffffff8020c72e:	66 90                	xchg   %ax,%ax
ffffffff8020c730:	48 89 df             	mov    %rbx,%rdi
ffffffff8020c733:	e8 b8 fe ff ff       	callq  ffffffff8020c5f0 <caml_flush_partial>
ffffffff8020c738:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8020c73c:	eb 80                	jmp    ffffffff8020c6be <caml_putword+0x2e>
ffffffff8020c73e:	66 90                	xchg   %ax,%ax

ffffffff8020c740 <caml_putblock>:
ffffffff8020c740:	41 56                	push   %r14
ffffffff8020c742:	41 55                	push   %r13
ffffffff8020c744:	41 54                	push   %r12
ffffffff8020c746:	55                   	push   %rbp
ffffffff8020c747:	53                   	push   %rbx
ffffffff8020c748:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020c74b:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
ffffffff8020c74f:	48 8b 6b 10          	mov    0x10(%rbx),%rbp
ffffffff8020c753:	48 29 fd             	sub    %rdi,%rbp
ffffffff8020c756:	48 81 fa fe ff ff 7f 	cmp    $0x7ffffffe,%rdx
ffffffff8020c75d:	7f 29                	jg     ffffffff8020c788 <caml_putblock+0x48>
ffffffff8020c75f:	41 89 d4             	mov    %edx,%r12d
ffffffff8020c762:	39 ea                	cmp    %ebp,%edx
ffffffff8020c764:	7d 22                	jge    ffffffff8020c788 <caml_putblock+0x48>
ffffffff8020c766:	48 63 ea             	movslq %edx,%rbp
ffffffff8020c769:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020c76c:	e8 34 39 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020c771:	48 01 6b 18          	add    %rbp,0x18(%rbx)
ffffffff8020c775:	44 89 e0             	mov    %r12d,%eax
ffffffff8020c778:	5b                   	pop    %rbx
ffffffff8020c779:	5d                   	pop    %rbp
ffffffff8020c77a:	41 5c                	pop    %r12
ffffffff8020c77c:	41 5d                	pop    %r13
ffffffff8020c77e:	41 5e                	pop    %r14
ffffffff8020c780:	c3                   	retq   
ffffffff8020c781:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020c788:	48 63 d5             	movslq %ebp,%rdx
ffffffff8020c78b:	4c 8d 6b 50          	lea    0x50(%rbx),%r13
ffffffff8020c78f:	e8 11 39 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020c794:	4c 8b 63 10          	mov    0x10(%rbx),%r12
ffffffff8020c798:	8b 73 4c             	mov    0x4c(%rbx),%esi
ffffffff8020c79b:	4c 89 ea             	mov    %r13,%rdx
ffffffff8020c79e:	8b 3b                	mov    (%rbx),%edi
ffffffff8020c7a0:	4d 29 ec             	sub    %r13,%r12
ffffffff8020c7a3:	44 89 e1             	mov    %r12d,%ecx
ffffffff8020c7a6:	e8 e5 9f 00 00       	callq  ffffffff80216790 <caml_write_fd>
ffffffff8020c7ab:	4c 63 f0             	movslq %eax,%r14
ffffffff8020c7ae:	41 39 c4             	cmp    %eax,%r12d
ffffffff8020c7b1:	7f 25                	jg     ffffffff8020c7d8 <caml_putblock+0x98>
ffffffff8020c7b3:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8020c7b7:	41 89 ec             	mov    %ebp,%r12d
ffffffff8020c7ba:	4c 01 73 08          	add    %r14,0x8(%rbx)
ffffffff8020c7be:	4c 29 f0             	sub    %r14,%rax
ffffffff8020c7c1:	48 89 43 18          	mov    %rax,0x18(%rbx)
ffffffff8020c7c5:	5b                   	pop    %rbx
ffffffff8020c7c6:	44 89 e0             	mov    %r12d,%eax
ffffffff8020c7c9:	5d                   	pop    %rbp
ffffffff8020c7ca:	41 5c                	pop    %r12
ffffffff8020c7cc:	41 5d                	pop    %r13
ffffffff8020c7ce:	41 5e                	pop    %r14
ffffffff8020c7d0:	c3                   	retq   
ffffffff8020c7d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020c7d8:	41 29 c4             	sub    %eax,%r12d
ffffffff8020c7db:	4b 8d 74 35 00       	lea    0x0(%r13,%r14,1),%rsi
ffffffff8020c7e0:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020c7e3:	49 63 d4             	movslq %r12d,%rdx
ffffffff8020c7e6:	e8 ba 38 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020c7eb:	eb c6                	jmp    ffffffff8020c7b3 <caml_putblock+0x73>
ffffffff8020c7ed:	0f 1f 00             	nopl   (%rax)

ffffffff8020c7f0 <caml_really_putblock>:
ffffffff8020c7f0:	48 85 d2             	test   %rdx,%rdx
ffffffff8020c7f3:	7e 3b                	jle    ffffffff8020c830 <caml_really_putblock+0x40>
ffffffff8020c7f5:	41 54                	push   %r12
ffffffff8020c7f7:	49 89 fc             	mov    %rdi,%r12
ffffffff8020c7fa:	55                   	push   %rbp
ffffffff8020c7fb:	48 89 f5             	mov    %rsi,%rbp
ffffffff8020c7fe:	53                   	push   %rbx
ffffffff8020c7ff:	48 89 d3             	mov    %rdx,%rbx
ffffffff8020c802:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020c808:	48 89 da             	mov    %rbx,%rdx
ffffffff8020c80b:	48 89 ee             	mov    %rbp,%rsi
ffffffff8020c80e:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020c811:	e8 2a ff ff ff       	callq  ffffffff8020c740 <caml_putblock>
ffffffff8020c816:	48 98                	cltq   
ffffffff8020c818:	48 29 c3             	sub    %rax,%rbx
ffffffff8020c81b:	48 01 c5             	add    %rax,%rbp
ffffffff8020c81e:	48 85 db             	test   %rbx,%rbx
ffffffff8020c821:	7f e5                	jg     ffffffff8020c808 <caml_really_putblock+0x18>
ffffffff8020c823:	5b                   	pop    %rbx
ffffffff8020c824:	5d                   	pop    %rbp
ffffffff8020c825:	41 5c                	pop    %r12
ffffffff8020c827:	c3                   	retq   
ffffffff8020c828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020c82f:	00 
ffffffff8020c830:	c3                   	retq   
ffffffff8020c831:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c838:	00 00 00 00 
ffffffff8020c83c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020c840 <caml_seek_out>:
ffffffff8020c840:	55                   	push   %rbp
ffffffff8020c841:	48 89 f5             	mov    %rsi,%rbp
ffffffff8020c844:	53                   	push   %rbx
ffffffff8020c845:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020c848:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020c84c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020c850:	48 89 df             	mov    %rbx,%rdi
ffffffff8020c853:	e8 98 fd ff ff       	callq  ffffffff8020c5f0 <caml_flush_partial>
ffffffff8020c858:	85 c0                	test   %eax,%eax
ffffffff8020c85a:	74 f4                	je     ffffffff8020c850 <caml_seek_out+0x10>
ffffffff8020c85c:	e8 9f 7a 00 00       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8020c861:	8b 3b                	mov    (%rbx),%edi
ffffffff8020c863:	31 d2                	xor    %edx,%edx
ffffffff8020c865:	48 89 ee             	mov    %rbp,%rsi
ffffffff8020c868:	e8 4a 38 ff ff       	callq  ffffffff802000b7 <lseek64>
ffffffff8020c86d:	48 39 e8             	cmp    %rbp,%rax
ffffffff8020c870:	75 10                	jne    ffffffff8020c882 <caml_seek_out+0x42>
ffffffff8020c872:	e8 c9 7a 00 00       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff8020c877:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
ffffffff8020c87b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020c87f:	5b                   	pop    %rbx
ffffffff8020c880:	5d                   	pop    %rbp
ffffffff8020c881:	c3                   	retq   
ffffffff8020c882:	e8 a9 fb ff ff       	callq  ffffffff8020c430 <caml_channel_size.part.0>
ffffffff8020c887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020c88e:	00 00 

ffffffff8020c890 <caml_pos_out>:
ffffffff8020c890:	48 8b 57 18          	mov    0x18(%rdi),%rdx
ffffffff8020c894:	48 8d 47 50          	lea    0x50(%rdi),%rax
ffffffff8020c898:	48 29 c2             	sub    %rax,%rdx
ffffffff8020c89b:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020c89f:	48 01 d0             	add    %rdx,%rax
ffffffff8020c8a2:	c3                   	retq   
ffffffff8020c8a3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020c8aa:	00 00 00 00 
ffffffff8020c8ae:	66 90                	xchg   %ax,%ax

ffffffff8020c8b0 <caml_do_read>:
ffffffff8020c8b0:	89 d1                	mov    %edx,%ecx
ffffffff8020c8b2:	48 89 f2             	mov    %rsi,%rdx
ffffffff8020c8b5:	31 f6                	xor    %esi,%esi
ffffffff8020c8b7:	e9 74 9e 00 00       	jmpq   ffffffff80216730 <caml_read_fd>
ffffffff8020c8bc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020c8c0 <caml_refill>:
ffffffff8020c8c0:	55                   	push   %rbp
ffffffff8020c8c1:	48 8d 6f 50          	lea    0x50(%rdi),%rbp
ffffffff8020c8c5:	53                   	push   %rbx
ffffffff8020c8c6:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020c8c9:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020c8cc:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020c8d0:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
ffffffff8020c8d4:	8b 77 4c             	mov    0x4c(%rdi),%esi
ffffffff8020c8d7:	8b 3f                	mov    (%rdi),%edi
ffffffff8020c8d9:	48 29 e9             	sub    %rbp,%rcx
ffffffff8020c8dc:	e8 4f 9e 00 00       	callq  ffffffff80216730 <caml_read_fd>
ffffffff8020c8e1:	85 c0                	test   %eax,%eax
ffffffff8020c8e3:	74 20                	je     ffffffff8020c905 <caml_refill+0x45>
ffffffff8020c8e5:	48 98                	cltq   
ffffffff8020c8e7:	48 01 43 08          	add    %rax,0x8(%rbx)
ffffffff8020c8eb:	48 01 e8             	add    %rbp,%rax
ffffffff8020c8ee:	48 89 43 20          	mov    %rax,0x20(%rbx)
ffffffff8020c8f2:	48 8d 43 51          	lea    0x51(%rbx),%rax
ffffffff8020c8f6:	48 89 43 18          	mov    %rax,0x18(%rbx)
ffffffff8020c8fa:	0f b6 43 50          	movzbl 0x50(%rbx),%eax
ffffffff8020c8fe:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020c902:	5b                   	pop    %rbx
ffffffff8020c903:	5d                   	pop    %rbp
ffffffff8020c904:	c3                   	retq   
ffffffff8020c905:	e8 f6 ab ff ff       	callq  ffffffff80207500 <caml_raise_end_of_file>
ffffffff8020c90a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020c910 <caml_getword>:
ffffffff8020c910:	41 54                	push   %r12
ffffffff8020c912:	41 bc 04 00 00 00    	mov    $0x4,%r12d
ffffffff8020c918:	55                   	push   %rbp
ffffffff8020c919:	48 89 fd             	mov    %rdi,%rbp
ffffffff8020c91c:	53                   	push   %rbx
ffffffff8020c91d:	31 db                	xor    %ebx,%ebx
ffffffff8020c91f:	48 8b 45 18          	mov    0x18(%rbp),%rax
ffffffff8020c923:	c1 e3 08             	shl    $0x8,%ebx
ffffffff8020c926:	48 3b 45 20          	cmp    0x20(%rbp),%rax
ffffffff8020c92a:	73 24                	jae    ffffffff8020c950 <caml_getword+0x40>
ffffffff8020c92c:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8020c930:	48 89 55 18          	mov    %rdx,0x18(%rbp)
ffffffff8020c934:	0f b6 00             	movzbl (%rax),%eax
ffffffff8020c937:	01 c3                	add    %eax,%ebx
ffffffff8020c939:	41 83 ec 01          	sub    $0x1,%r12d
ffffffff8020c93d:	75 e0                	jne    ffffffff8020c91f <caml_getword+0xf>
ffffffff8020c93f:	89 d8                	mov    %ebx,%eax
ffffffff8020c941:	5b                   	pop    %rbx
ffffffff8020c942:	5d                   	pop    %rbp
ffffffff8020c943:	41 5c                	pop    %r12
ffffffff8020c945:	c3                   	retq   
ffffffff8020c946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c94d:	00 00 00 
ffffffff8020c950:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020c953:	e8 68 ff ff ff       	callq  ffffffff8020c8c0 <caml_refill>
ffffffff8020c958:	0f b6 c0             	movzbl %al,%eax
ffffffff8020c95b:	eb da                	jmp    ffffffff8020c937 <caml_getword+0x27>
ffffffff8020c95d:	0f 1f 00             	nopl   (%rax)

ffffffff8020c960 <caml_getblock>:
ffffffff8020c960:	41 56                	push   %r14
ffffffff8020c962:	48 81 fa ff ff ff 7f 	cmp    $0x7fffffff,%rdx
ffffffff8020c969:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
ffffffff8020c96e:	41 55                	push   %r13
ffffffff8020c970:	49 89 f5             	mov    %rsi,%r13
ffffffff8020c973:	41 54                	push   %r12
ffffffff8020c975:	55                   	push   %rbp
ffffffff8020c976:	48 89 d5             	mov    %rdx,%rbp
ffffffff8020c979:	53                   	push   %rbx
ffffffff8020c97a:	48 0f 4d e8          	cmovge %rax,%rbp
ffffffff8020c97e:	48 8b 77 18          	mov    0x18(%rdi),%rsi
ffffffff8020c982:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020c985:	48 8b 47 20          	mov    0x20(%rdi),%rax
ffffffff8020c989:	48 29 f0             	sub    %rsi,%rax
ffffffff8020c98c:	39 e8                	cmp    %ebp,%eax
ffffffff8020c98e:	0f 8d 8c 00 00 00    	jge    ffffffff8020ca20 <caml_getblock+0xc0>
ffffffff8020c994:	85 c0                	test   %eax,%eax
ffffffff8020c996:	7e 28                	jle    ffffffff8020c9c0 <caml_getblock+0x60>
ffffffff8020c998:	48 63 e8             	movslq %eax,%rbp
ffffffff8020c99b:	41 89 c4             	mov    %eax,%r12d
ffffffff8020c99e:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020c9a1:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020c9a4:	e8 fc 36 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020c9a9:	48 01 6b 18          	add    %rbp,0x18(%rbx)
ffffffff8020c9ad:	44 89 e0             	mov    %r12d,%eax
ffffffff8020c9b0:	5b                   	pop    %rbx
ffffffff8020c9b1:	5d                   	pop    %rbp
ffffffff8020c9b2:	41 5c                	pop    %r12
ffffffff8020c9b4:	41 5d                	pop    %r13
ffffffff8020c9b6:	41 5e                	pop    %r14
ffffffff8020c9b8:	c3                   	retq   
ffffffff8020c9b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020c9c0:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
ffffffff8020c9c4:	8b 77 4c             	mov    0x4c(%rdi),%esi
ffffffff8020c9c7:	41 89 ee             	mov    %ebp,%r14d
ffffffff8020c9ca:	48 8d 6f 50          	lea    0x50(%rdi),%rbp
ffffffff8020c9ce:	8b 3f                	mov    (%rdi),%edi
ffffffff8020c9d0:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020c9d3:	48 29 e9             	sub    %rbp,%rcx
ffffffff8020c9d6:	e8 55 9d 00 00       	callq  ffffffff80216730 <caml_read_fd>
ffffffff8020c9db:	48 89 ee             	mov    %rbp,%rsi
ffffffff8020c9de:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020c9e1:	48 63 d0             	movslq %eax,%rdx
ffffffff8020c9e4:	48 01 53 08          	add    %rdx,0x8(%rbx)
ffffffff8020c9e8:	48 01 ea             	add    %rbp,%rdx
ffffffff8020c9eb:	44 39 f0             	cmp    %r14d,%eax
ffffffff8020c9ee:	44 0f 4e f0          	cmovle %eax,%r14d
ffffffff8020c9f2:	48 89 53 20          	mov    %rdx,0x20(%rbx)
ffffffff8020c9f6:	45 89 f4             	mov    %r14d,%r12d
ffffffff8020c9f9:	4d 63 f6             	movslq %r14d,%r14
ffffffff8020c9fc:	4c 01 f5             	add    %r14,%rbp
ffffffff8020c9ff:	4c 89 f2             	mov    %r14,%rdx
ffffffff8020ca02:	e8 9e 36 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020ca07:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
ffffffff8020ca0b:	44 89 e0             	mov    %r12d,%eax
ffffffff8020ca0e:	5b                   	pop    %rbx
ffffffff8020ca0f:	5d                   	pop    %rbp
ffffffff8020ca10:	41 5c                	pop    %r12
ffffffff8020ca12:	41 5d                	pop    %r13
ffffffff8020ca14:	41 5e                	pop    %r14
ffffffff8020ca16:	c3                   	retq   
ffffffff8020ca17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020ca1e:	00 00 
ffffffff8020ca20:	4c 63 e5             	movslq %ebp,%r12
ffffffff8020ca23:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020ca26:	4c 89 e2             	mov    %r12,%rdx
ffffffff8020ca29:	e8 77 36 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020ca2e:	4c 01 63 18          	add    %r12,0x18(%rbx)
ffffffff8020ca32:	41 89 ec             	mov    %ebp,%r12d
ffffffff8020ca35:	5b                   	pop    %rbx
ffffffff8020ca36:	44 89 e0             	mov    %r12d,%eax
ffffffff8020ca39:	5d                   	pop    %rbp
ffffffff8020ca3a:	41 5c                	pop    %r12
ffffffff8020ca3c:	41 5d                	pop    %r13
ffffffff8020ca3e:	41 5e                	pop    %r14
ffffffff8020ca40:	c3                   	retq   
ffffffff8020ca41:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020ca48:	00 00 00 00 
ffffffff8020ca4c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020ca50 <caml_really_getblock>:
ffffffff8020ca50:	48 85 d2             	test   %rdx,%rdx
ffffffff8020ca53:	7e 6c                	jle    ffffffff8020cac1 <caml_really_getblock+0x71>
ffffffff8020ca55:	41 55                	push   %r13
ffffffff8020ca57:	49 89 d5             	mov    %rdx,%r13
ffffffff8020ca5a:	41 54                	push   %r12
ffffffff8020ca5c:	49 89 fc             	mov    %rdi,%r12
ffffffff8020ca5f:	55                   	push   %rbp
ffffffff8020ca60:	48 89 d5             	mov    %rdx,%rbp
ffffffff8020ca63:	53                   	push   %rbx
ffffffff8020ca64:	48 89 f3             	mov    %rsi,%rbx
ffffffff8020ca67:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020ca6b:	eb 16                	jmp    ffffffff8020ca83 <caml_really_getblock+0x33>
ffffffff8020ca6d:	0f 1f 00             	nopl   (%rax)
ffffffff8020ca70:	48 98                	cltq   
ffffffff8020ca72:	4c 89 ea             	mov    %r13,%rdx
ffffffff8020ca75:	48 29 c2             	sub    %rax,%rdx
ffffffff8020ca78:	48 01 c3             	add    %rax,%rbx
ffffffff8020ca7b:	48 85 d2             	test   %rdx,%rdx
ffffffff8020ca7e:	7e 30                	jle    ffffffff8020cab0 <caml_really_getblock+0x60>
ffffffff8020ca80:	49 89 d5             	mov    %rdx,%r13
ffffffff8020ca83:	4c 89 ea             	mov    %r13,%rdx
ffffffff8020ca86:	48 89 de             	mov    %rbx,%rsi
ffffffff8020ca89:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020ca8c:	e8 cf fe ff ff       	callq  ffffffff8020c960 <caml_getblock>
ffffffff8020ca91:	85 c0                	test   %eax,%eax
ffffffff8020ca93:	75 db                	jne    ffffffff8020ca70 <caml_really_getblock+0x20>
ffffffff8020ca95:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020ca99:	48 89 e8             	mov    %rbp,%rax
ffffffff8020ca9c:	5b                   	pop    %rbx
ffffffff8020ca9d:	4c 29 e8             	sub    %r13,%rax
ffffffff8020caa0:	5d                   	pop    %rbp
ffffffff8020caa1:	41 5c                	pop    %r12
ffffffff8020caa3:	41 5d                	pop    %r13
ffffffff8020caa5:	c3                   	retq   
ffffffff8020caa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020caad:	00 00 00 
ffffffff8020cab0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020cab4:	4c 29 e8             	sub    %r13,%rax
ffffffff8020cab7:	5b                   	pop    %rbx
ffffffff8020cab8:	48 01 e8             	add    %rbp,%rax
ffffffff8020cabb:	5d                   	pop    %rbp
ffffffff8020cabc:	41 5c                	pop    %r12
ffffffff8020cabe:	41 5d                	pop    %r13
ffffffff8020cac0:	c3                   	retq   
ffffffff8020cac1:	31 c0                	xor    %eax,%eax
ffffffff8020cac3:	c3                   	retq   
ffffffff8020cac4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020cacb:	00 00 00 00 
ffffffff8020cacf:	90                   	nop

ffffffff8020cad0 <caml_seek_in>:
ffffffff8020cad0:	41 54                	push   %r12
ffffffff8020cad2:	4c 8d 67 50          	lea    0x50(%rdi),%r12
ffffffff8020cad6:	55                   	push   %rbp
ffffffff8020cad7:	48 89 f5             	mov    %rsi,%rbp
ffffffff8020cada:	53                   	push   %rbx
ffffffff8020cadb:	48 8b 57 20          	mov    0x20(%rdi),%rdx
ffffffff8020cadf:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020cae2:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020cae6:	48 89 d1             	mov    %rdx,%rcx
ffffffff8020cae9:	4c 29 e1             	sub    %r12,%rcx
ffffffff8020caec:	48 89 c6             	mov    %rax,%rsi
ffffffff8020caef:	48 29 ce             	sub    %rcx,%rsi
ffffffff8020caf2:	48 39 ee             	cmp    %rbp,%rsi
ffffffff8020caf5:	7f 19                	jg     ffffffff8020cb10 <caml_seek_in+0x40>
ffffffff8020caf7:	48 39 e8             	cmp    %rbp,%rax
ffffffff8020cafa:	7c 14                	jl     ffffffff8020cb10 <caml_seek_in+0x40>
ffffffff8020cafc:	48 29 e8             	sub    %rbp,%rax
ffffffff8020caff:	48 29 c2             	sub    %rax,%rdx
ffffffff8020cb02:	48 89 57 18          	mov    %rdx,0x18(%rdi)
ffffffff8020cb06:	5b                   	pop    %rbx
ffffffff8020cb07:	5d                   	pop    %rbp
ffffffff8020cb08:	41 5c                	pop    %r12
ffffffff8020cb0a:	c3                   	retq   
ffffffff8020cb0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020cb10:	e8 eb 77 00 00       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8020cb15:	8b 3b                	mov    (%rbx),%edi
ffffffff8020cb17:	31 d2                	xor    %edx,%edx
ffffffff8020cb19:	48 89 ee             	mov    %rbp,%rsi
ffffffff8020cb1c:	e8 96 35 ff ff       	callq  ffffffff802000b7 <lseek64>
ffffffff8020cb21:	48 39 e8             	cmp    %rbp,%rax
ffffffff8020cb24:	75 16                	jne    ffffffff8020cb3c <caml_seek_in+0x6c>
ffffffff8020cb26:	e8 15 78 00 00       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff8020cb2b:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
ffffffff8020cb2f:	4c 89 63 20          	mov    %r12,0x20(%rbx)
ffffffff8020cb33:	4c 89 63 18          	mov    %r12,0x18(%rbx)
ffffffff8020cb37:	5b                   	pop    %rbx
ffffffff8020cb38:	5d                   	pop    %rbp
ffffffff8020cb39:	41 5c                	pop    %r12
ffffffff8020cb3b:	c3                   	retq   
ffffffff8020cb3c:	e8 ef f8 ff ff       	callq  ffffffff8020c430 <caml_channel_size.part.0>
ffffffff8020cb41:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020cb48:	00 00 00 00 
ffffffff8020cb4c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020cb50 <caml_pos_in>:
ffffffff8020cb50:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020cb54:	48 8b 57 20          	mov    0x20(%rdi),%rdx
ffffffff8020cb58:	48 2b 57 18          	sub    0x18(%rdi),%rdx
ffffffff8020cb5c:	48 29 d0             	sub    %rdx,%rax
ffffffff8020cb5f:	c3                   	retq   

ffffffff8020cb60 <caml_input_scan_line>:
ffffffff8020cb60:	41 56                	push   %r14
ffffffff8020cb62:	41 55                	push   %r13
ffffffff8020cb64:	4c 8d 6f 50          	lea    0x50(%rdi),%r13
ffffffff8020cb68:	41 54                	push   %r12
ffffffff8020cb6a:	55                   	push   %rbp
ffffffff8020cb6b:	53                   	push   %rbx
ffffffff8020cb6c:	48 8b 6f 18          	mov    0x18(%rdi),%rbp
ffffffff8020cb70:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020cb73:	49 89 ee             	mov    %rbp,%r14
ffffffff8020cb76:	eb 4c                	jmp    ffffffff8020cbc4 <caml_input_scan_line+0x64>
ffffffff8020cb78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020cb7f:	00 
ffffffff8020cb80:	4d 39 f5             	cmp    %r14,%r13
ffffffff8020cb83:	72 6b                	jb     ffffffff8020cbf0 <caml_input_scan_line+0x90>
ffffffff8020cb85:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
ffffffff8020cb89:	4c 39 e1             	cmp    %r12,%rcx
ffffffff8020cb8c:	0f 86 95 00 00 00    	jbe    ffffffff8020cc27 <caml_input_scan_line+0xc7>
ffffffff8020cb92:	8b 73 4c             	mov    0x4c(%rbx),%esi
ffffffff8020cb95:	8b 3b                	mov    (%rbx),%edi
ffffffff8020cb97:	4c 29 e1             	sub    %r12,%rcx
ffffffff8020cb9a:	4c 89 e2             	mov    %r12,%rdx
ffffffff8020cb9d:	e8 8e 9b 00 00       	callq  ffffffff80216730 <caml_read_fd>
ffffffff8020cba2:	85 c0                	test   %eax,%eax
ffffffff8020cba4:	0f 84 96 00 00 00    	je     ffffffff8020cc40 <caml_input_scan_line+0xe0>
ffffffff8020cbaa:	48 98                	cltq   
ffffffff8020cbac:	48 01 43 08          	add    %rax,0x8(%rbx)
ffffffff8020cbb0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
ffffffff8020cbb4:	48 01 43 20          	add    %rax,0x20(%rbx)
ffffffff8020cbb8:	48 89 e8             	mov    %rbp,%rax
ffffffff8020cbbb:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8020cbbf:	80 38 0a             	cmpb   $0xa,(%rax)
ffffffff8020cbc2:	74 15                	je     ffffffff8020cbd9 <caml_input_scan_line+0x79>
ffffffff8020cbc4:	4c 8b 63 20          	mov    0x20(%rbx),%r12
ffffffff8020cbc8:	49 39 ec             	cmp    %rbp,%r12
ffffffff8020cbcb:	76 b3                	jbe    ffffffff8020cb80 <caml_input_scan_line+0x20>
ffffffff8020cbcd:	48 89 e8             	mov    %rbp,%rax
ffffffff8020cbd0:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8020cbd4:	80 38 0a             	cmpb   $0xa,(%rax)
ffffffff8020cbd7:	75 eb                	jne    ffffffff8020cbc4 <caml_input_scan_line+0x64>
ffffffff8020cbd9:	48 89 e8             	mov    %rbp,%rax
ffffffff8020cbdc:	5b                   	pop    %rbx
ffffffff8020cbdd:	5d                   	pop    %rbp
ffffffff8020cbde:	4c 29 f0             	sub    %r14,%rax
ffffffff8020cbe1:	41 5c                	pop    %r12
ffffffff8020cbe3:	41 5d                	pop    %r13
ffffffff8020cbe5:	41 5e                	pop    %r14
ffffffff8020cbe7:	c3                   	retq   
ffffffff8020cbe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020cbef:	00 
ffffffff8020cbf0:	4c 89 e2             	mov    %r12,%rdx
ffffffff8020cbf3:	4c 89 f6             	mov    %r14,%rsi
ffffffff8020cbf6:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020cbf9:	4c 29 f2             	sub    %r14,%rdx
ffffffff8020cbfc:	e8 a4 34 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020cc01:	4c 89 f0             	mov    %r14,%rax
ffffffff8020cc04:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
ffffffff8020cc08:	4c 29 e8             	sub    %r13,%rax
ffffffff8020cc0b:	48 98                	cltq   
ffffffff8020cc0d:	49 29 c6             	sub    %rax,%r14
ffffffff8020cc10:	49 29 c4             	sub    %rax,%r12
ffffffff8020cc13:	48 29 c5             	sub    %rax,%rbp
ffffffff8020cc16:	4c 89 73 18          	mov    %r14,0x18(%rbx)
ffffffff8020cc1a:	4c 89 63 20          	mov    %r12,0x20(%rbx)
ffffffff8020cc1e:	4c 39 e1             	cmp    %r12,%rcx
ffffffff8020cc21:	0f 87 6b ff ff ff    	ja     ffffffff8020cb92 <caml_input_scan_line+0x32>
ffffffff8020cc27:	4c 89 e0             	mov    %r12,%rax
ffffffff8020cc2a:	48 2b 43 18          	sub    0x18(%rbx),%rax
ffffffff8020cc2e:	5b                   	pop    %rbx
ffffffff8020cc2f:	48 f7 d8             	neg    %rax
ffffffff8020cc32:	5d                   	pop    %rbp
ffffffff8020cc33:	41 5c                	pop    %r12
ffffffff8020cc35:	41 5d                	pop    %r13
ffffffff8020cc37:	41 5e                	pop    %r14
ffffffff8020cc39:	c3                   	retq   
ffffffff8020cc3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020cc40:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8020cc44:	48 2b 43 20          	sub    0x20(%rbx),%rax
ffffffff8020cc48:	5b                   	pop    %rbx
ffffffff8020cc49:	5d                   	pop    %rbp
ffffffff8020cc4a:	41 5c                	pop    %r12
ffffffff8020cc4c:	41 5d                	pop    %r13
ffffffff8020cc4e:	41 5e                	pop    %r14
ffffffff8020cc50:	c3                   	retq   
ffffffff8020cc51:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020cc58:	00 00 00 00 
ffffffff8020cc5c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020cc60 <caml_alloc_channel>:
ffffffff8020cc60:	53                   	push   %rbx
ffffffff8020cc61:	ba 58 00 01 00       	mov    $0x10058,%edx
ffffffff8020cc66:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020cc69:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020cc6e:	83 47 48 01          	addl   $0x1,0x48(%rdi)
ffffffff8020cc72:	48 8d 3d 47 f0 01 00 	lea    0x1f047(%rip),%rdi        # ffffffff8022bcc0 <channel_operations>
ffffffff8020cc79:	e8 32 d4 00 00       	callq  ffffffff8021a0b0 <caml_alloc_custom_mem>
ffffffff8020cc7e:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020cc82:	5b                   	pop    %rbx
ffffffff8020cc83:	c3                   	retq   
ffffffff8020cc84:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020cc8b:	00 00 00 00 
ffffffff8020cc8f:	90                   	nop

ffffffff8020cc90 <caml_ml_open_descriptor_in>:
ffffffff8020cc90:	53                   	push   %rbx
ffffffff8020cc91:	48 d1 ff             	sar    %rdi
ffffffff8020cc94:	e8 b7 f7 ff ff       	callq  ffffffff8020c450 <caml_open_descriptor_in>
ffffffff8020cc99:	ba 58 00 01 00       	mov    $0x10058,%edx
ffffffff8020cc9e:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020cca3:	48 8d 3d 16 f0 01 00 	lea    0x1f016(%rip),%rdi        # ffffffff8022bcc0 <channel_operations>
ffffffff8020ccaa:	83 48 4c 04          	orl    $0x4,0x4c(%rax)
ffffffff8020ccae:	48 89 c3             	mov    %rax,%rbx
ffffffff8020ccb1:	83 40 48 01          	addl   $0x1,0x48(%rax)
ffffffff8020ccb5:	e8 f6 d3 00 00       	callq  ffffffff8021a0b0 <caml_alloc_custom_mem>
ffffffff8020ccba:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020ccbe:	5b                   	pop    %rbx
ffffffff8020ccbf:	c3                   	retq   

ffffffff8020ccc0 <caml_ml_open_descriptor_out>:
ffffffff8020ccc0:	53                   	push   %rbx
ffffffff8020ccc1:	48 d1 ff             	sar    %rdi
ffffffff8020ccc4:	e8 87 f7 ff ff       	callq  ffffffff8020c450 <caml_open_descriptor_in>
ffffffff8020ccc9:	ba 58 00 01 00       	mov    $0x10058,%edx
ffffffff8020ccce:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020ccd3:	48 8d 3d e6 ef 01 00 	lea    0x1efe6(%rip),%rdi        # ffffffff8022bcc0 <channel_operations>
ffffffff8020ccda:	83 48 4c 04          	orl    $0x4,0x4c(%rax)
ffffffff8020ccde:	48 89 c3             	mov    %rax,%rbx
ffffffff8020cce1:	83 40 48 01          	addl   $0x1,0x48(%rax)
ffffffff8020cce5:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8020ccec:	00 
ffffffff8020cced:	e8 be d3 00 00       	callq  ffffffff8021a0b0 <caml_alloc_custom_mem>
ffffffff8020ccf2:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020ccf6:	5b                   	pop    %rbx
ffffffff8020ccf7:	c3                   	retq   
ffffffff8020ccf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020ccff:	00 

ffffffff8020cd00 <caml_ml_set_channel_name>:
ffffffff8020cd00:	55                   	push   %rbp
ffffffff8020cd01:	48 89 f5             	mov    %rsi,%rbp
ffffffff8020cd04:	53                   	push   %rbx
ffffffff8020cd05:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020cd09:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
ffffffff8020cd0d:	48 8b bb 50 00 01 00 	mov    0x10050(%rbx),%rdi
ffffffff8020cd14:	e8 37 3c 00 00       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8020cd19:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020cd1c:	e8 8f 80 00 00       	callq  ffffffff80214db0 <caml_string_length>
ffffffff8020cd21:	48 85 c0             	test   %rax,%rax
ffffffff8020cd24:	75 1a                	jne    ffffffff8020cd40 <caml_ml_set_channel_name+0x40>
ffffffff8020cd26:	48 c7 83 50 00 01 00 	movq   $0x0,0x10050(%rbx)
ffffffff8020cd2d:	00 00 00 00 
ffffffff8020cd31:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020cd35:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020cd3a:	5b                   	pop    %rbx
ffffffff8020cd3b:	5d                   	pop    %rbp
ffffffff8020cd3c:	c3                   	retq   
ffffffff8020cd3d:	0f 1f 00             	nopl   (%rax)
ffffffff8020cd40:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020cd43:	e8 a8 45 00 00       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff8020cd48:	48 89 83 50 00 01 00 	mov    %rax,0x10050(%rbx)
ffffffff8020cd4f:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020cd53:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020cd58:	5b                   	pop    %rbx
ffffffff8020cd59:	5d                   	pop    %rbp
ffffffff8020cd5a:	c3                   	retq   
ffffffff8020cd5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020cd60 <caml_ml_out_channels_list>:
ffffffff8020cd60:	41 54                	push   %r12
ffffffff8020cd62:	55                   	push   %rbp
ffffffff8020cd63:	53                   	push   %rbx
ffffffff8020cd64:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff8020cd68:	48 8b 2d 09 73 03 00 	mov    0x37309(%rip),%rbp        # ffffffff80244078 <caml_local_roots>
ffffffff8020cd6f:	48 8b 1d 12 ee 02 00 	mov    0x2ee12(%rip),%rbx        # ffffffff8023bb88 <caml_all_opened_channels>
ffffffff8020cd76:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8020cd7d:	00 00 
ffffffff8020cd7f:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffff8020cd84:	31 c0                	xor    %eax,%eax
ffffffff8020cd86:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff8020cd8b:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
ffffffff8020cd92:	00 00 
ffffffff8020cd94:	48 89 05 dd 72 03 00 	mov    %rax,0x372dd(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020cd9b:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff8020cda0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff8020cda5:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff8020cdaa:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffff8020cdaf:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff8020cdb4:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
ffffffff8020cdbb:	00 00 
ffffffff8020cdbd:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020cdc4:	00 00 
ffffffff8020cdc6:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
ffffffff8020cdcb:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8020cdd2:	00 00 
ffffffff8020cdd4:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
ffffffff8020cddb:	00 00 
ffffffff8020cddd:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff8020cde2:	48 85 db             	test   %rbx,%rbx
ffffffff8020cde5:	0f 84 a5 00 00 00    	je     ffffffff8020ce90 <caml_ml_out_channels_list+0x130>
ffffffff8020cdeb:	4c 8d 25 ce ee 01 00 	lea    0x1eece(%rip),%r12        # ffffffff8022bcc0 <channel_operations>
ffffffff8020cdf2:	eb 0d                	jmp    ffffffff8020ce01 <caml_ml_out_channels_list+0xa1>
ffffffff8020cdf4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020cdf8:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
ffffffff8020cdfc:	48 85 db             	test   %rbx,%rbx
ffffffff8020cdff:	74 67                	je     ffffffff8020ce68 <caml_ml_out_channels_list+0x108>
ffffffff8020ce01:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
ffffffff8020ce06:	75 f0                	jne    ffffffff8020cdf8 <caml_ml_out_channels_list+0x98>
ffffffff8020ce08:	83 43 48 01          	addl   $0x1,0x48(%rbx)
ffffffff8020ce0c:	ba 58 00 01 00       	mov    $0x10058,%edx
ffffffff8020ce11:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020ce16:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020ce19:	e8 92 d2 00 00       	callq  ffffffff8021a0b0 <caml_alloc_custom_mem>
ffffffff8020ce1e:	31 f6                	xor    %esi,%esi
ffffffff8020ce20:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff8020ce25:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020ce29:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8020ce2e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8020ce33:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8020ce38:	e8 c3 bd 00 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff8020ce3d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff8020ce42:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020ce47:	48 89 10             	mov    %rdx,(%rax)
ffffffff8020ce4a:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
ffffffff8020ce4f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8020ce54:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8020ce58:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
ffffffff8020ce5c:	48 85 db             	test   %rbx,%rbx
ffffffff8020ce5f:	75 a0                	jne    ffffffff8020ce01 <caml_ml_out_channels_list+0xa1>
ffffffff8020ce61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020ce68:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8020ce6d:	48 89 2d 04 72 03 00 	mov    %rbp,0x37204(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020ce74:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
ffffffff8020ce79:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8020ce80:	00 00 
ffffffff8020ce82:	75 13                	jne    ffffffff8020ce97 <caml_ml_out_channels_list+0x137>
ffffffff8020ce84:	48 83 c4 70          	add    $0x70,%rsp
ffffffff8020ce88:	5b                   	pop    %rbx
ffffffff8020ce89:	5d                   	pop    %rbp
ffffffff8020ce8a:	41 5c                	pop    %r12
ffffffff8020ce8c:	c3                   	retq   
ffffffff8020ce8d:	0f 1f 00             	nopl   (%rax)
ffffffff8020ce90:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020ce95:	eb d6                	jmp    ffffffff8020ce6d <caml_ml_out_channels_list+0x10d>
ffffffff8020ce97:	e8 04 32 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020ce9c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020cea0 <caml_channel_descriptor>:
ffffffff8020cea0:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020cea4:	48 63 00             	movslq (%rax),%rax
ffffffff8020cea7:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff8020ceaa:	74 06                	je     ffffffff8020ceb2 <caml_channel_descriptor+0x12>
ffffffff8020ceac:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020ceb1:	c3                   	retq   
ffffffff8020ceb2:	50                   	push   %rax
ffffffff8020ceb3:	e8 38 b6 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff8020ceb8:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020cebd:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
ffffffff8020cec3:	e8 18 87 00 00       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff8020cec8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020cecf:	00 

ffffffff8020ced0 <caml_ml_close_channel>:
ffffffff8020ced0:	55                   	push   %rbp
ffffffff8020ced1:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020ced5:	8b 28                	mov    (%rax),%ebp
ffffffff8020ced7:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8020cedb:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff8020cede:	74 30                	je     ffffffff8020cf10 <caml_ml_close_channel+0x40>
ffffffff8020cee0:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
ffffffff8020cee6:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8020ceea:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8020ceee:	e8 0d 74 00 00       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8020cef3:	89 ef                	mov    %ebp,%edi
ffffffff8020cef5:	e8 b8 31 ff ff       	callq  ffffffff802000b2 <close>
ffffffff8020cefa:	89 c5                	mov    %eax,%ebp
ffffffff8020cefc:	e8 3f 74 00 00       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff8020cf01:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff8020cf04:	74 19                	je     ffffffff8020cf1f <caml_ml_close_channel+0x4f>
ffffffff8020cf06:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020cf0b:	5d                   	pop    %rbp
ffffffff8020cf0c:	c3                   	retq   
ffffffff8020cf0d:	0f 1f 00             	nopl   (%rax)
ffffffff8020cf10:	48 89 50 20          	mov    %rdx,0x20(%rax)
ffffffff8020cf14:	48 89 50 18          	mov    %rdx,0x18(%rax)
ffffffff8020cf18:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020cf1d:	5d                   	pop    %rbp
ffffffff8020cf1e:	c3                   	retq   
ffffffff8020cf1f:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020cf24:	e8 b7 86 00 00       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff8020cf29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020cf30 <caml_ml_channel_size>:
ffffffff8020cf30:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020cf34:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8020cf38:	e8 53 f6 ff ff       	callq  ffffffff8020c590 <caml_channel_size>
ffffffff8020cf3d:	48 ba ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rdx
ffffffff8020cf44:	ff ff 3f 
ffffffff8020cf47:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020cf4a:	7f 0a                	jg     ffffffff8020cf56 <caml_ml_channel_size+0x26>
ffffffff8020cf4c:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020cf51:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020cf55:	c3                   	retq   
ffffffff8020cf56:	e8 95 b5 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff8020cf5b:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020cf60:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
ffffffff8020cf66:	e8 75 86 00 00       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff8020cf6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020cf70 <caml_ml_channel_size_64>:
ffffffff8020cf70:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020cf74:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8020cf78:	e8 13 f6 ff ff       	callq  ffffffff8020c590 <caml_channel_size>
ffffffff8020cf7d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020cf81:	48 89 c7             	mov    %rax,%rdi
ffffffff8020cf84:	e9 d7 e6 ff ff       	jmpq   ffffffff8020b660 <caml_copy_int64>
ffffffff8020cf89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020cf90 <caml_ml_set_binary_mode>:
ffffffff8020cf90:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020cf95:	c3                   	retq   
ffffffff8020cf96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020cf9d:	00 00 00 

ffffffff8020cfa0 <caml_ml_flush_partial>:
ffffffff8020cfa0:	41 54                	push   %r12
ffffffff8020cfa2:	55                   	push   %rbp
ffffffff8020cfa3:	53                   	push   %rbx
ffffffff8020cfa4:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8020cfa8:	4c 8b 25 c9 70 03 00 	mov    0x370c9(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff8020cfaf:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020cfb4:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020cfb9:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020cfc0:	00 00 
ffffffff8020cfc2:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020cfc7:	31 c9                	xor    %ecx,%ecx
ffffffff8020cfc9:	48 89 15 a8 70 03 00 	mov    %rdx,0x370a8(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020cfd0:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020cfd5:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
ffffffff8020cfda:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020cfe1:	00 00 
ffffffff8020cfe3:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020cfea:	00 00 
ffffffff8020cfec:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020cff1:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020cff5:	83 7d 00 ff          	cmpl   $0xffffffff,0x0(%rbp)
ffffffff8020cff9:	74 5d                	je     ffffffff8020d058 <caml_ml_flush_partial+0xb8>
ffffffff8020cffb:	48 8b 05 9e eb 02 00 	mov    0x2eb9e(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d002:	48 85 c0             	test   %rax,%rax
ffffffff8020d005:	74 05                	je     ffffffff8020d00c <caml_ml_flush_partial+0x6c>
ffffffff8020d007:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d00a:	ff d0                	callq  *%rax
ffffffff8020d00c:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d00f:	e8 dc f5 ff ff       	callq  ffffffff8020c5f0 <caml_flush_partial>
ffffffff8020d014:	89 c3                	mov    %eax,%ebx
ffffffff8020d016:	48 8b 05 7b eb 02 00 	mov    0x2eb7b(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d01d:	48 85 c0             	test   %rax,%rax
ffffffff8020d020:	74 05                	je     ffffffff8020d027 <caml_ml_flush_partial+0x87>
ffffffff8020d022:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d025:	ff d0                	callq  *%rax
ffffffff8020d027:	83 fb 01             	cmp    $0x1,%ebx
ffffffff8020d02a:	4c 89 25 47 70 03 00 	mov    %r12,0x37047(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d031:	48 19 c0             	sbb    %rax,%rax
ffffffff8020d034:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff8020d038:	48 83 c0 03          	add    $0x3,%rax
ffffffff8020d03c:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
ffffffff8020d041:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff8020d048:	00 00 
ffffffff8020d04a:	75 1a                	jne    ffffffff8020d066 <caml_ml_flush_partial+0xc6>
ffffffff8020d04c:	48 83 c4 60          	add    $0x60,%rsp
ffffffff8020d050:	5b                   	pop    %rbx
ffffffff8020d051:	5d                   	pop    %rbp
ffffffff8020d052:	41 5c                	pop    %r12
ffffffff8020d054:	c3                   	retq   
ffffffff8020d055:	0f 1f 00             	nopl   (%rax)
ffffffff8020d058:	4c 89 25 19 70 03 00 	mov    %r12,0x37019(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d05f:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8020d064:	eb d6                	jmp    ffffffff8020d03c <caml_ml_flush_partial+0x9c>
ffffffff8020d066:	e8 35 30 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d06b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020d070 <caml_ml_flush>:
ffffffff8020d070:	55                   	push   %rbp
ffffffff8020d071:	53                   	push   %rbx
ffffffff8020d072:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8020d076:	48 8b 1d fb 6f 03 00 	mov    0x36ffb(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8020d07d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020d082:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d087:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020d08e:	00 00 
ffffffff8020d090:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020d095:	31 c9                	xor    %ecx,%ecx
ffffffff8020d097:	48 89 15 da 6f 03 00 	mov    %rdx,0x36fda(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d09e:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d0a3:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8020d0a8:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020d0af:	00 00 
ffffffff8020d0b1:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020d0b8:	00 00 
ffffffff8020d0ba:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020d0bf:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020d0c3:	83 7d 00 ff          	cmpl   $0xffffffff,0x0(%rbp)
ffffffff8020d0c7:	74 34                	je     ffffffff8020d0fd <caml_ml_flush+0x8d>
ffffffff8020d0c9:	48 8b 05 d0 ea 02 00 	mov    0x2ead0(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d0d0:	48 85 c0             	test   %rax,%rax
ffffffff8020d0d3:	74 0b                	je     ffffffff8020d0e0 <caml_ml_flush+0x70>
ffffffff8020d0d5:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d0d8:	ff d0                	callq  *%rax
ffffffff8020d0da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020d0e0:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d0e3:	e8 08 f5 ff ff       	callq  ffffffff8020c5f0 <caml_flush_partial>
ffffffff8020d0e8:	85 c0                	test   %eax,%eax
ffffffff8020d0ea:	74 f4                	je     ffffffff8020d0e0 <caml_ml_flush+0x70>
ffffffff8020d0ec:	48 8b 05 a5 ea 02 00 	mov    0x2eaa5(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d0f3:	48 85 c0             	test   %rax,%rax
ffffffff8020d0f6:	74 05                	je     ffffffff8020d0fd <caml_ml_flush+0x8d>
ffffffff8020d0f8:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d0fb:	ff d0                	callq  *%rax
ffffffff8020d0fd:	48 89 1d 74 6f 03 00 	mov    %rbx,0x36f74(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d104:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8020d109:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020d110:	00 00 
ffffffff8020d112:	75 0c                	jne    ffffffff8020d120 <caml_ml_flush+0xb0>
ffffffff8020d114:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8020d118:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020d11d:	5b                   	pop    %rbx
ffffffff8020d11e:	5d                   	pop    %rbp
ffffffff8020d11f:	c3                   	retq   
ffffffff8020d120:	e8 7b 2f ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d125:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020d12c:	00 00 00 00 

ffffffff8020d130 <caml_ml_output_char>:
ffffffff8020d130:	55                   	push   %rbp
ffffffff8020d131:	53                   	push   %rbx
ffffffff8020d132:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8020d136:	48 8b 1d 3b 6f 03 00 	mov    0x36f3b(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8020d13d:	48 8b 05 5c ea 02 00 	mov    0x2ea5c(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d144:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020d149:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d14e:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8020d152:	64 48 8b 34 25 28 00 	mov    %fs:0x28,%rsi
ffffffff8020d159:	00 00 
ffffffff8020d15b:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
ffffffff8020d160:	31 f6                	xor    %esi,%esi
ffffffff8020d162:	48 89 15 0f 6f 03 00 	mov    %rdx,0x36f0f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d169:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d16e:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020d173:	48 89 e2             	mov    %rsp,%rdx
ffffffff8020d176:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8020d17b:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020d182:	00 00 
ffffffff8020d184:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff8020d18b:	00 00 
ffffffff8020d18d:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff8020d192:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020d196:	48 85 c0             	test   %rax,%rax
ffffffff8020d199:	74 05                	je     ffffffff8020d1a0 <caml_ml_output_char+0x70>
ffffffff8020d19b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d19e:	ff d0                	callq  *%rax
ffffffff8020d1a0:	48 8b 45 18          	mov    0x18(%rbp),%rax
ffffffff8020d1a4:	48 3b 45 10          	cmp    0x10(%rbp),%rax
ffffffff8020d1a8:	73 46                	jae    ffffffff8020d1f0 <caml_ml_output_char+0xc0>
ffffffff8020d1aa:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff8020d1ae:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff8020d1b2:	48 89 4d 18          	mov    %rcx,0x18(%rbp)
ffffffff8020d1b6:	48 d1 fa             	sar    %rdx
ffffffff8020d1b9:	88 10                	mov    %dl,(%rax)
ffffffff8020d1bb:	48 8b 05 d6 e9 02 00 	mov    0x2e9d6(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d1c2:	48 85 c0             	test   %rax,%rax
ffffffff8020d1c5:	74 05                	je     ffffffff8020d1cc <caml_ml_output_char+0x9c>
ffffffff8020d1c7:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d1ca:	ff d0                	callq  *%rax
ffffffff8020d1cc:	48 89 1d a5 6e 03 00 	mov    %rbx,0x36ea5(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d1d3:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8020d1d8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020d1df:	00 00 
ffffffff8020d1e1:	75 1b                	jne    ffffffff8020d1fe <caml_ml_output_char+0xce>
ffffffff8020d1e3:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8020d1e7:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020d1ec:	5b                   	pop    %rbx
ffffffff8020d1ed:	5d                   	pop    %rbp
ffffffff8020d1ee:	c3                   	retq   
ffffffff8020d1ef:	90                   	nop
ffffffff8020d1f0:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d1f3:	e8 f8 f3 ff ff       	callq  ffffffff8020c5f0 <caml_flush_partial>
ffffffff8020d1f8:	48 8b 45 18          	mov    0x18(%rbp),%rax
ffffffff8020d1fc:	eb ac                	jmp    ffffffff8020d1aa <caml_ml_output_char+0x7a>
ffffffff8020d1fe:	e8 9d 2e ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d203:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020d20a:	00 00 00 00 
ffffffff8020d20e:	66 90                	xchg   %ax,%ax

ffffffff8020d210 <caml_ml_output_int>:
ffffffff8020d210:	55                   	push   %rbp
ffffffff8020d211:	53                   	push   %rbx
ffffffff8020d212:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8020d216:	48 8b 1d 5b 6e 03 00 	mov    0x36e5b(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8020d21d:	48 8b 05 7c e9 02 00 	mov    0x2e97c(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d224:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020d229:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d22e:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8020d232:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020d239:	00 00 
ffffffff8020d23b:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020d240:	31 c9                	xor    %ecx,%ecx
ffffffff8020d242:	48 89 15 2f 6e 03 00 	mov    %rdx,0x36e2f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d249:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d24e:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020d253:	48 89 e2             	mov    %rsp,%rdx
ffffffff8020d256:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8020d25b:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020d262:	00 00 
ffffffff8020d264:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff8020d26b:	00 00 
ffffffff8020d26d:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff8020d272:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020d276:	48 85 c0             	test   %rax,%rax
ffffffff8020d279:	74 05                	je     ffffffff8020d280 <caml_ml_output_int+0x70>
ffffffff8020d27b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d27e:	ff d0                	callq  *%rax
ffffffff8020d280:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff8020d284:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d287:	48 d1 fe             	sar    %rsi
ffffffff8020d28a:	e8 01 f4 ff ff       	callq  ffffffff8020c690 <caml_putword>
ffffffff8020d28f:	48 8b 05 02 e9 02 00 	mov    0x2e902(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d296:	48 85 c0             	test   %rax,%rax
ffffffff8020d299:	74 05                	je     ffffffff8020d2a0 <caml_ml_output_int+0x90>
ffffffff8020d29b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d29e:	ff d0                	callq  *%rax
ffffffff8020d2a0:	48 89 1d d1 6d 03 00 	mov    %rbx,0x36dd1(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d2a7:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8020d2ac:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020d2b3:	00 00 
ffffffff8020d2b5:	75 0c                	jne    ffffffff8020d2c3 <caml_ml_output_int+0xb3>
ffffffff8020d2b7:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8020d2bb:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020d2c0:	5b                   	pop    %rbx
ffffffff8020d2c1:	5d                   	pop    %rbp
ffffffff8020d2c2:	c3                   	retq   
ffffffff8020d2c3:	e8 d8 2d ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d2c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020d2cf:	00 

ffffffff8020d2d0 <caml_ml_output_partial>:
ffffffff8020d2d0:	41 54                	push   %r12
ffffffff8020d2d2:	55                   	push   %rbp
ffffffff8020d2d3:	53                   	push   %rbx
ffffffff8020d2d4:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff8020d2d8:	48 8b 2d 99 6d 03 00 	mov    0x36d99(%rip),%rbp        # ffffffff80244078 <caml_local_roots>
ffffffff8020d2df:	48 8b 05 ba e8 02 00 	mov    0x2e8ba(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d2e6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8020d2eb:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff8020d2f0:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff8020d2f5:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
ffffffff8020d2fa:	48 89 0c 24          	mov    %rcx,(%rsp)
ffffffff8020d2fe:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020d305:	00 00 
ffffffff8020d307:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
ffffffff8020d30c:	31 c9                	xor    %ecx,%ecx
ffffffff8020d30e:	48 89 15 63 6d 03 00 	mov    %rdx,0x36d63(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d315:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff8020d31a:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
ffffffff8020d31f:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d324:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
ffffffff8020d329:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d32e:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
ffffffff8020d333:	48 89 e2             	mov    %rsp,%rdx
ffffffff8020d336:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
ffffffff8020d33b:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8020d342:	00 00 
ffffffff8020d344:	48 c7 44 24 28 04 00 	movq   $0x4,0x28(%rsp)
ffffffff8020d34b:	00 00 
ffffffff8020d34d:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
ffffffff8020d352:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8020d356:	48 85 c0             	test   %rax,%rax
ffffffff8020d359:	74 05                	je     ffffffff8020d360 <caml_ml_output_partial+0x90>
ffffffff8020d35b:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020d35e:	ff d0                	callq  *%rax
ffffffff8020d360:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff8020d364:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
ffffffff8020d369:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020d36c:	48 d1 fa             	sar    %rdx
ffffffff8020d36f:	48 d1 fe             	sar    %rsi
ffffffff8020d372:	48 03 74 24 10       	add    0x10(%rsp),%rsi
ffffffff8020d377:	e8 c4 f3 ff ff       	callq  ffffffff8020c740 <caml_putblock>
ffffffff8020d37c:	48 63 d8             	movslq %eax,%rbx
ffffffff8020d37f:	48 8b 05 12 e8 02 00 	mov    0x2e812(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d386:	48 85 c0             	test   %rax,%rax
ffffffff8020d389:	74 05                	je     ffffffff8020d390 <caml_ml_output_partial+0xc0>
ffffffff8020d38b:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020d38e:	ff d0                	callq  *%rax
ffffffff8020d390:	48 89 2d e1 6c 03 00 	mov    %rbp,0x36ce1(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d397:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
ffffffff8020d39c:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
ffffffff8020d3a1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8020d3a8:	00 00 
ffffffff8020d3aa:	75 09                	jne    ffffffff8020d3b5 <caml_ml_output_partial+0xe5>
ffffffff8020d3ac:	48 83 c4 70          	add    $0x70,%rsp
ffffffff8020d3b0:	5b                   	pop    %rbx
ffffffff8020d3b1:	5d                   	pop    %rbp
ffffffff8020d3b2:	41 5c                	pop    %r12
ffffffff8020d3b4:	c3                   	retq   
ffffffff8020d3b5:	e8 e6 2c ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d3ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020d3c0 <caml_ml_output_bytes>:
ffffffff8020d3c0:	41 55                	push   %r13
ffffffff8020d3c2:	41 54                	push   %r12
ffffffff8020d3c4:	55                   	push   %rbp
ffffffff8020d3c5:	53                   	push   %rbx
ffffffff8020d3c6:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff8020d3ca:	4c 8b 25 a7 6c 03 00 	mov    0x36ca7(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff8020d3d1:	48 8b 05 c8 e7 02 00 	mov    0x2e7c8(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d3d8:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8020d3dd:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff8020d3e2:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
ffffffff8020d3e7:	48 89 0c 24          	mov    %rcx,(%rsp)
ffffffff8020d3eb:	48 8b 1c 24          	mov    (%rsp),%rbx
ffffffff8020d3ef:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff8020d3f4:	48 d1 fd             	sar    %rbp
ffffffff8020d3f7:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
ffffffff8020d3fc:	48 d1 fb             	sar    %rbx
ffffffff8020d3ff:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020d406:	00 00 
ffffffff8020d408:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
ffffffff8020d40d:	31 c9                	xor    %ecx,%ecx
ffffffff8020d40f:	48 89 15 62 6c 03 00 	mov    %rdx,0x36c62(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d416:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff8020d41b:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
ffffffff8020d420:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d425:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
ffffffff8020d42a:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d42f:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
ffffffff8020d434:	48 89 e2             	mov    %rsp,%rdx
ffffffff8020d437:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
ffffffff8020d43c:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8020d443:	00 00 
ffffffff8020d445:	48 c7 44 24 28 04 00 	movq   $0x4,0x28(%rsp)
ffffffff8020d44c:	00 00 
ffffffff8020d44e:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
ffffffff8020d453:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
ffffffff8020d457:	48 85 c0             	test   %rax,%rax
ffffffff8020d45a:	74 27                	je     ffffffff8020d483 <caml_ml_output_bytes+0xc3>
ffffffff8020d45c:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020d45f:	ff d0                	callq  *%rax
ffffffff8020d461:	eb 20                	jmp    ffffffff8020d483 <caml_ml_output_bytes+0xc3>
ffffffff8020d463:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020d468:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff8020d46d:	48 89 da             	mov    %rbx,%rdx
ffffffff8020d470:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020d473:	48 01 ee             	add    %rbp,%rsi
ffffffff8020d476:	e8 c5 f2 ff ff       	callq  ffffffff8020c740 <caml_putblock>
ffffffff8020d47b:	48 98                	cltq   
ffffffff8020d47d:	48 01 c5             	add    %rax,%rbp
ffffffff8020d480:	48 29 c3             	sub    %rax,%rbx
ffffffff8020d483:	48 85 db             	test   %rbx,%rbx
ffffffff8020d486:	7f e0                	jg     ffffffff8020d468 <caml_ml_output_bytes+0xa8>
ffffffff8020d488:	48 8b 05 09 e7 02 00 	mov    0x2e709(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d48f:	48 85 c0             	test   %rax,%rax
ffffffff8020d492:	74 05                	je     ffffffff8020d499 <caml_ml_output_bytes+0xd9>
ffffffff8020d494:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020d497:	ff d0                	callq  *%rax
ffffffff8020d499:	4c 89 25 d8 6b 03 00 	mov    %r12,0x36bd8(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d4a0:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffff8020d4a5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020d4ac:	00 00 
ffffffff8020d4ae:	75 10                	jne    ffffffff8020d4c0 <caml_ml_output_bytes+0x100>
ffffffff8020d4b0:	48 83 c4 78          	add    $0x78,%rsp
ffffffff8020d4b4:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020d4b9:	5b                   	pop    %rbx
ffffffff8020d4ba:	5d                   	pop    %rbp
ffffffff8020d4bb:	41 5c                	pop    %r12
ffffffff8020d4bd:	41 5d                	pop    %r13
ffffffff8020d4bf:	c3                   	retq   
ffffffff8020d4c0:	e8 db 2b ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d4c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020d4cc:	00 00 00 00 

ffffffff8020d4d0 <caml_ml_output>:
ffffffff8020d4d0:	e9 eb fe ff ff       	jmpq   ffffffff8020d3c0 <caml_ml_output_bytes>
ffffffff8020d4d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020d4dc:	00 00 00 00 

ffffffff8020d4e0 <caml_ml_seek_out>:
ffffffff8020d4e0:	55                   	push   %rbp
ffffffff8020d4e1:	53                   	push   %rbx
ffffffff8020d4e2:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8020d4e6:	48 8b 1d 8b 6b 03 00 	mov    0x36b8b(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8020d4ed:	48 8b 05 ac e6 02 00 	mov    0x2e6ac(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d4f4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020d4f9:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d4fe:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8020d502:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020d509:	00 00 
ffffffff8020d50b:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020d510:	31 c9                	xor    %ecx,%ecx
ffffffff8020d512:	48 89 15 5f 6b 03 00 	mov    %rdx,0x36b5f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d519:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d51e:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020d523:	48 89 e2             	mov    %rsp,%rdx
ffffffff8020d526:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8020d52b:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020d532:	00 00 
ffffffff8020d534:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff8020d53b:	00 00 
ffffffff8020d53d:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff8020d542:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020d546:	48 85 c0             	test   %rax,%rax
ffffffff8020d549:	74 05                	je     ffffffff8020d550 <caml_ml_seek_out+0x70>
ffffffff8020d54b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d54e:	ff d0                	callq  *%rax
ffffffff8020d550:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff8020d554:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d557:	48 d1 fe             	sar    %rsi
ffffffff8020d55a:	e8 e1 f2 ff ff       	callq  ffffffff8020c840 <caml_seek_out>
ffffffff8020d55f:	48 8b 05 32 e6 02 00 	mov    0x2e632(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d566:	48 85 c0             	test   %rax,%rax
ffffffff8020d569:	74 05                	je     ffffffff8020d570 <caml_ml_seek_out+0x90>
ffffffff8020d56b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d56e:	ff d0                	callq  *%rax
ffffffff8020d570:	48 89 1d 01 6b 03 00 	mov    %rbx,0x36b01(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d577:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8020d57c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020d583:	00 00 
ffffffff8020d585:	75 0c                	jne    ffffffff8020d593 <caml_ml_seek_out+0xb3>
ffffffff8020d587:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8020d58b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020d590:	5b                   	pop    %rbx
ffffffff8020d591:	5d                   	pop    %rbp
ffffffff8020d592:	c3                   	retq   
ffffffff8020d593:	e8 08 2b ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020d59f:	00 

ffffffff8020d5a0 <caml_ml_seek_out_64>:
ffffffff8020d5a0:	55                   	push   %rbp
ffffffff8020d5a1:	53                   	push   %rbx
ffffffff8020d5a2:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8020d5a6:	48 8b 1d cb 6a 03 00 	mov    0x36acb(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8020d5ad:	48 8b 05 ec e5 02 00 	mov    0x2e5ec(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d5b4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020d5b9:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d5be:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8020d5c2:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020d5c9:	00 00 
ffffffff8020d5cb:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020d5d0:	31 c9                	xor    %ecx,%ecx
ffffffff8020d5d2:	48 89 15 9f 6a 03 00 	mov    %rdx,0x36a9f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d5d9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d5de:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020d5e3:	48 89 e2             	mov    %rsp,%rdx
ffffffff8020d5e6:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8020d5eb:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020d5f2:	00 00 
ffffffff8020d5f4:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff8020d5fb:	00 00 
ffffffff8020d5fd:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff8020d602:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020d606:	48 85 c0             	test   %rax,%rax
ffffffff8020d609:	74 05                	je     ffffffff8020d610 <caml_ml_seek_out_64+0x70>
ffffffff8020d60b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d60e:	ff d0                	callq  *%rax
ffffffff8020d610:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8020d614:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d617:	48 8b 70 08          	mov    0x8(%rax),%rsi
ffffffff8020d61b:	e8 20 f2 ff ff       	callq  ffffffff8020c840 <caml_seek_out>
ffffffff8020d620:	48 8b 05 71 e5 02 00 	mov    0x2e571(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d627:	48 85 c0             	test   %rax,%rax
ffffffff8020d62a:	74 05                	je     ffffffff8020d631 <caml_ml_seek_out_64+0x91>
ffffffff8020d62c:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d62f:	ff d0                	callq  *%rax
ffffffff8020d631:	48 89 1d 40 6a 03 00 	mov    %rbx,0x36a40(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d638:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8020d63d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020d644:	00 00 
ffffffff8020d646:	75 0c                	jne    ffffffff8020d654 <caml_ml_seek_out_64+0xb4>
ffffffff8020d648:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8020d64c:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020d651:	5b                   	pop    %rbx
ffffffff8020d652:	5d                   	pop    %rbp
ffffffff8020d653:	c3                   	retq   
ffffffff8020d654:	e8 47 2a ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020d660 <caml_ml_pos_out>:
ffffffff8020d660:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8020d664:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
ffffffff8020d668:	48 8d 42 50          	lea    0x50(%rdx),%rax
ffffffff8020d66c:	48 29 c1             	sub    %rax,%rcx
ffffffff8020d66f:	48 8b 42 08          	mov    0x8(%rdx),%rax
ffffffff8020d673:	48 ba ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rdx
ffffffff8020d67a:	ff ff 3f 
ffffffff8020d67d:	48 01 c8             	add    %rcx,%rax
ffffffff8020d680:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020d683:	7f 06                	jg     ffffffff8020d68b <caml_ml_pos_out+0x2b>
ffffffff8020d685:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020d68a:	c3                   	retq   
ffffffff8020d68b:	50                   	push   %rax
ffffffff8020d68c:	e8 5f ae 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff8020d691:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020d696:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
ffffffff8020d69c:	e8 3f 7f 00 00       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff8020d6a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020d6a8:	00 00 00 00 
ffffffff8020d6ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020d6b0 <caml_ml_pos_out_64>:
ffffffff8020d6b0:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020d6b4:	48 8b 78 18          	mov    0x18(%rax),%rdi
ffffffff8020d6b8:	48 8d 50 50          	lea    0x50(%rax),%rdx
ffffffff8020d6bc:	48 29 d7             	sub    %rdx,%rdi
ffffffff8020d6bf:	48 03 78 08          	add    0x8(%rax),%rdi
ffffffff8020d6c3:	e9 98 df ff ff       	jmpq   ffffffff8020b660 <caml_copy_int64>
ffffffff8020d6c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020d6cf:	00 

ffffffff8020d6d0 <caml_ml_input_char>:
ffffffff8020d6d0:	41 54                	push   %r12
ffffffff8020d6d2:	55                   	push   %rbp
ffffffff8020d6d3:	53                   	push   %rbx
ffffffff8020d6d4:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8020d6d8:	4c 8b 25 99 69 03 00 	mov    0x36999(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff8020d6df:	48 8b 05 ba e4 02 00 	mov    0x2e4ba(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d6e6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020d6eb:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d6f0:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020d6f7:	00 00 
ffffffff8020d6f9:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020d6fe:	31 c9                	xor    %ecx,%ecx
ffffffff8020d700:	48 89 15 71 69 03 00 	mov    %rdx,0x36971(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d707:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d70c:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
ffffffff8020d711:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020d718:	00 00 
ffffffff8020d71a:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020d721:	00 00 
ffffffff8020d723:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020d728:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020d72c:	48 85 c0             	test   %rax,%rax
ffffffff8020d72f:	74 05                	je     ffffffff8020d736 <caml_ml_input_char+0x66>
ffffffff8020d731:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d734:	ff d0                	callq  *%rax
ffffffff8020d736:	48 8b 45 18          	mov    0x18(%rbp),%rax
ffffffff8020d73a:	48 3b 45 20          	cmp    0x20(%rbp),%rax
ffffffff8020d73e:	73 48                	jae    ffffffff8020d788 <caml_ml_input_char+0xb8>
ffffffff8020d740:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff8020d744:	48 89 55 18          	mov    %rdx,0x18(%rbp)
ffffffff8020d748:	0f b6 18             	movzbl (%rax),%ebx
ffffffff8020d74b:	48 8b 05 46 e4 02 00 	mov    0x2e446(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d752:	48 85 c0             	test   %rax,%rax
ffffffff8020d755:	74 05                	je     ffffffff8020d75c <caml_ml_input_char+0x8c>
ffffffff8020d757:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d75a:	ff d0                	callq  *%rax
ffffffff8020d75c:	4c 89 25 15 69 03 00 	mov    %r12,0x36915(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d763:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
ffffffff8020d768:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
ffffffff8020d76d:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff8020d774:	00 00 
ffffffff8020d776:	75 1d                	jne    ffffffff8020d795 <caml_ml_input_char+0xc5>
ffffffff8020d778:	48 83 c4 60          	add    $0x60,%rsp
ffffffff8020d77c:	5b                   	pop    %rbx
ffffffff8020d77d:	5d                   	pop    %rbp
ffffffff8020d77e:	41 5c                	pop    %r12
ffffffff8020d780:	c3                   	retq   
ffffffff8020d781:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020d788:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d78b:	e8 30 f1 ff ff       	callq  ffffffff8020c8c0 <caml_refill>
ffffffff8020d790:	0f b6 d8             	movzbl %al,%ebx
ffffffff8020d793:	eb b6                	jmp    ffffffff8020d74b <caml_ml_input_char+0x7b>
ffffffff8020d795:	e8 06 29 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d79a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020d7a0 <caml_ml_input_int>:
ffffffff8020d7a0:	41 54                	push   %r12
ffffffff8020d7a2:	55                   	push   %rbp
ffffffff8020d7a3:	53                   	push   %rbx
ffffffff8020d7a4:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8020d7a8:	4c 8b 25 c9 68 03 00 	mov    0x368c9(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff8020d7af:	48 8b 05 ea e3 02 00 	mov    0x2e3ea(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d7b6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020d7bb:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d7c0:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020d7c7:	00 00 
ffffffff8020d7c9:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020d7ce:	31 c9                	xor    %ecx,%ecx
ffffffff8020d7d0:	48 89 15 a1 68 03 00 	mov    %rdx,0x368a1(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d7d7:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d7dc:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
ffffffff8020d7e1:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020d7e8:	00 00 
ffffffff8020d7ea:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020d7f1:	00 00 
ffffffff8020d7f3:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020d7f8:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020d7fc:	48 85 c0             	test   %rax,%rax
ffffffff8020d7ff:	74 05                	je     ffffffff8020d806 <caml_ml_input_int+0x66>
ffffffff8020d801:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d804:	ff d0                	callq  *%rax
ffffffff8020d806:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d809:	e8 02 f1 ff ff       	callq  ffffffff8020c910 <caml_getword>
ffffffff8020d80e:	89 c3                	mov    %eax,%ebx
ffffffff8020d810:	48 8b 05 81 e3 02 00 	mov    0x2e381(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d817:	48 85 c0             	test   %rax,%rax
ffffffff8020d81a:	74 05                	je     ffffffff8020d821 <caml_ml_input_int+0x81>
ffffffff8020d81c:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020d81f:	ff d0                	callq  *%rax
ffffffff8020d821:	4c 89 25 50 68 03 00 	mov    %r12,0x36850(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d828:	48 63 db             	movslq %ebx,%rbx
ffffffff8020d82b:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
ffffffff8020d830:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
ffffffff8020d835:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff8020d83c:	00 00 
ffffffff8020d83e:	75 09                	jne    ffffffff8020d849 <caml_ml_input_int+0xa9>
ffffffff8020d840:	48 83 c4 60          	add    $0x60,%rsp
ffffffff8020d844:	5b                   	pop    %rbx
ffffffff8020d845:	5d                   	pop    %rbp
ffffffff8020d846:	41 5c                	pop    %r12
ffffffff8020d848:	c3                   	retq   
ffffffff8020d849:	e8 52 28 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d84e:	66 90                	xchg   %ax,%ax

ffffffff8020d850 <caml_ml_input>:
ffffffff8020d850:	41 57                	push   %r15
ffffffff8020d852:	41 56                	push   %r14
ffffffff8020d854:	41 55                	push   %r13
ffffffff8020d856:	41 54                	push   %r12
ffffffff8020d858:	55                   	push   %rbp
ffffffff8020d859:	53                   	push   %rbx
ffffffff8020d85a:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff8020d85e:	48 8b 2d 13 68 03 00 	mov    0x36813(%rip),%rbp        # ffffffff80244078 <caml_local_roots>
ffffffff8020d865:	48 8b 05 34 e3 02 00 	mov    0x2e334(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d86c:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8020d871:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff8020d876:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff8020d87b:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
ffffffff8020d880:	48 89 0c 24          	mov    %rcx,(%rsp)
ffffffff8020d884:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020d88b:	00 00 
ffffffff8020d88d:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
ffffffff8020d892:	31 c9                	xor    %ecx,%ecx
ffffffff8020d894:	48 89 15 dd 67 03 00 	mov    %rdx,0x367dd(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d89b:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff8020d8a0:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
ffffffff8020d8a5:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d8aa:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
ffffffff8020d8af:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020d8b4:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
ffffffff8020d8b9:	48 89 e2             	mov    %rsp,%rdx
ffffffff8020d8bc:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
ffffffff8020d8c1:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8020d8c8:	00 00 
ffffffff8020d8ca:	48 c7 44 24 28 04 00 	movq   $0x4,0x28(%rsp)
ffffffff8020d8d1:	00 00 
ffffffff8020d8d3:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
ffffffff8020d8d8:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8020d8dc:	48 85 c0             	test   %rax,%rax
ffffffff8020d8df:	74 05                	je     ffffffff8020d8e6 <caml_ml_input+0x96>
ffffffff8020d8e1:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020d8e4:	ff d0                	callq  *%rax
ffffffff8020d8e6:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8020d8ea:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
ffffffff8020d8ef:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
ffffffff8020d8f4:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
ffffffff8020d8f9:	49 8b 5c 24 20       	mov    0x20(%r12),%rbx
ffffffff8020d8fe:	48 d1 f8             	sar    %rax
ffffffff8020d901:	49 d1 fd             	sar    %r13
ffffffff8020d904:	48 3d ff ff ff 7f    	cmp    $0x7fffffff,%rax
ffffffff8020d90a:	48 0f 4d c2          	cmovge %rdx,%rax
ffffffff8020d90e:	48 29 f3             	sub    %rsi,%rbx
ffffffff8020d911:	41 89 c7             	mov    %eax,%r15d
ffffffff8020d914:	39 c3                	cmp    %eax,%ebx
ffffffff8020d916:	0f 8d b4 00 00 00    	jge    ffffffff8020d9d0 <caml_ml_input+0x180>
ffffffff8020d91c:	85 db                	test   %ebx,%ebx
ffffffff8020d91e:	7e 58                	jle    ffffffff8020d978 <caml_ml_input+0x128>
ffffffff8020d920:	48 63 db             	movslq %ebx,%rbx
ffffffff8020d923:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8020d928:	48 89 da             	mov    %rbx,%rdx
ffffffff8020d92b:	4c 01 ef             	add    %r13,%rdi
ffffffff8020d92e:	e8 72 27 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020d933:	49 01 5c 24 18       	add    %rbx,0x18(%r12)
ffffffff8020d938:	48 8b 05 59 e2 02 00 	mov    0x2e259(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020d93f:	48 85 c0             	test   %rax,%rax
ffffffff8020d942:	74 05                	je     ffffffff8020d949 <caml_ml_input+0xf9>
ffffffff8020d944:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020d947:	ff d0                	callq  *%rax
ffffffff8020d949:	48 89 2d 28 67 03 00 	mov    %rbp,0x36728(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020d950:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
ffffffff8020d955:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
ffffffff8020d95a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8020d961:	00 00 
ffffffff8020d963:	75 73                	jne    ffffffff8020d9d8 <caml_ml_input+0x188>
ffffffff8020d965:	48 83 c4 78          	add    $0x78,%rsp
ffffffff8020d969:	5b                   	pop    %rbx
ffffffff8020d96a:	5d                   	pop    %rbp
ffffffff8020d96b:	41 5c                	pop    %r12
ffffffff8020d96d:	41 5d                	pop    %r13
ffffffff8020d96f:	41 5e                	pop    %r14
ffffffff8020d971:	41 5f                	pop    %r15
ffffffff8020d973:	c3                   	retq   
ffffffff8020d974:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020d978:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
ffffffff8020d97d:	4d 8d 74 24 50       	lea    0x50(%r12),%r14
ffffffff8020d982:	41 8b 74 24 4c       	mov    0x4c(%r12),%esi
ffffffff8020d987:	41 8b 3c 24          	mov    (%r12),%edi
ffffffff8020d98b:	4c 89 f2             	mov    %r14,%rdx
ffffffff8020d98e:	4c 29 f1             	sub    %r14,%rcx
ffffffff8020d991:	e8 9a 8d 00 00       	callq  ffffffff80216730 <caml_read_fd>
ffffffff8020d996:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8020d99b:	4c 89 f6             	mov    %r14,%rsi
ffffffff8020d99e:	48 63 d0             	movslq %eax,%rdx
ffffffff8020d9a1:	49 01 54 24 08       	add    %rdx,0x8(%r12)
ffffffff8020d9a6:	4c 01 f2             	add    %r14,%rdx
ffffffff8020d9a9:	44 39 f8             	cmp    %r15d,%eax
ffffffff8020d9ac:	41 0f 4f c7          	cmovg  %r15d,%eax
ffffffff8020d9b0:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
ffffffff8020d9b5:	4c 01 ef             	add    %r13,%rdi
ffffffff8020d9b8:	48 63 d8             	movslq %eax,%rbx
ffffffff8020d9bb:	48 89 da             	mov    %rbx,%rdx
ffffffff8020d9be:	49 01 de             	add    %rbx,%r14
ffffffff8020d9c1:	e8 df 26 ff ff       	callq  ffffffff802000a5 <memmove>
ffffffff8020d9c6:	4d 89 74 24 18       	mov    %r14,0x18(%r12)
ffffffff8020d9cb:	e9 68 ff ff ff       	jmpq   ffffffff8020d938 <caml_ml_input+0xe8>
ffffffff8020d9d0:	48 63 d8             	movslq %eax,%rbx
ffffffff8020d9d3:	e9 4b ff ff ff       	jmpq   ffffffff8020d923 <caml_ml_input+0xd3>
ffffffff8020d9d8:	e8 c3 26 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020d9dd:	0f 1f 00             	nopl   (%rax)

ffffffff8020d9e0 <caml_ml_seek_in>:
ffffffff8020d9e0:	55                   	push   %rbp
ffffffff8020d9e1:	53                   	push   %rbx
ffffffff8020d9e2:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8020d9e6:	48 8b 1d 8b 66 03 00 	mov    0x3668b(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8020d9ed:	48 8b 05 ac e1 02 00 	mov    0x2e1ac(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020d9f4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020d9f9:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020d9fe:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8020da02:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020da09:	00 00 
ffffffff8020da0b:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020da10:	31 c9                	xor    %ecx,%ecx
ffffffff8020da12:	48 89 15 5f 66 03 00 	mov    %rdx,0x3665f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020da19:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020da1e:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020da23:	48 89 e2             	mov    %rsp,%rdx
ffffffff8020da26:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8020da2b:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020da32:	00 00 
ffffffff8020da34:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff8020da3b:	00 00 
ffffffff8020da3d:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff8020da42:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020da46:	48 85 c0             	test   %rax,%rax
ffffffff8020da49:	74 05                	je     ffffffff8020da50 <caml_ml_seek_in+0x70>
ffffffff8020da4b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020da4e:	ff d0                	callq  *%rax
ffffffff8020da50:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff8020da54:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020da57:	48 d1 fe             	sar    %rsi
ffffffff8020da5a:	e8 71 f0 ff ff       	callq  ffffffff8020cad0 <caml_seek_in>
ffffffff8020da5f:	48 8b 05 32 e1 02 00 	mov    0x2e132(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020da66:	48 85 c0             	test   %rax,%rax
ffffffff8020da69:	74 05                	je     ffffffff8020da70 <caml_ml_seek_in+0x90>
ffffffff8020da6b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020da6e:	ff d0                	callq  *%rax
ffffffff8020da70:	48 89 1d 01 66 03 00 	mov    %rbx,0x36601(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020da77:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8020da7c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020da83:	00 00 
ffffffff8020da85:	75 0c                	jne    ffffffff8020da93 <caml_ml_seek_in+0xb3>
ffffffff8020da87:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8020da8b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020da90:	5b                   	pop    %rbx
ffffffff8020da91:	5d                   	pop    %rbp
ffffffff8020da92:	c3                   	retq   
ffffffff8020da93:	e8 08 26 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020da98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020da9f:	00 

ffffffff8020daa0 <caml_ml_seek_in_64>:
ffffffff8020daa0:	55                   	push   %rbp
ffffffff8020daa1:	53                   	push   %rbx
ffffffff8020daa2:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8020daa6:	48 8b 1d cb 65 03 00 	mov    0x365cb(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8020daad:	48 8b 05 ec e0 02 00 	mov    0x2e0ec(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020dab4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020dab9:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020dabe:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8020dac2:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020dac9:	00 00 
ffffffff8020dacb:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020dad0:	31 c9                	xor    %ecx,%ecx
ffffffff8020dad2:	48 89 15 9f 65 03 00 	mov    %rdx,0x3659f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020dad9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020dade:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020dae3:	48 89 e2             	mov    %rsp,%rdx
ffffffff8020dae6:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8020daeb:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020daf2:	00 00 
ffffffff8020daf4:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff8020dafb:	00 00 
ffffffff8020dafd:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff8020db02:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020db06:	48 85 c0             	test   %rax,%rax
ffffffff8020db09:	74 05                	je     ffffffff8020db10 <caml_ml_seek_in_64+0x70>
ffffffff8020db0b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020db0e:	ff d0                	callq  *%rax
ffffffff8020db10:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8020db14:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020db17:	48 8b 70 08          	mov    0x8(%rax),%rsi
ffffffff8020db1b:	e8 b0 ef ff ff       	callq  ffffffff8020cad0 <caml_seek_in>
ffffffff8020db20:	48 8b 05 71 e0 02 00 	mov    0x2e071(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020db27:	48 85 c0             	test   %rax,%rax
ffffffff8020db2a:	74 05                	je     ffffffff8020db31 <caml_ml_seek_in_64+0x91>
ffffffff8020db2c:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020db2f:	ff d0                	callq  *%rax
ffffffff8020db31:	48 89 1d 40 65 03 00 	mov    %rbx,0x36540(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020db38:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8020db3d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8020db44:	00 00 
ffffffff8020db46:	75 0c                	jne    ffffffff8020db54 <caml_ml_seek_in_64+0xb4>
ffffffff8020db48:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8020db4c:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020db51:	5b                   	pop    %rbx
ffffffff8020db52:	5d                   	pop    %rbp
ffffffff8020db53:	c3                   	retq   
ffffffff8020db54:	e8 47 25 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020db59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020db60 <caml_ml_pos_in>:
ffffffff8020db60:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020db64:	48 8b 50 20          	mov    0x20(%rax),%rdx
ffffffff8020db68:	48 2b 50 18          	sub    0x18(%rax),%rdx
ffffffff8020db6c:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020db70:	48 29 d0             	sub    %rdx,%rax
ffffffff8020db73:	48 ba ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rdx
ffffffff8020db7a:	ff ff 3f 
ffffffff8020db7d:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020db80:	7f 06                	jg     ffffffff8020db88 <caml_ml_pos_in+0x28>
ffffffff8020db82:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020db87:	c3                   	retq   
ffffffff8020db88:	50                   	push   %rax
ffffffff8020db89:	e8 62 a9 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff8020db8e:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020db93:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
ffffffff8020db99:	e8 42 7a 00 00       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff8020db9e:	66 90                	xchg   %ax,%ax

ffffffff8020dba0 <caml_ml_pos_in_64>:
ffffffff8020dba0:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8020dba4:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
ffffffff8020dba8:	48 8b 42 20          	mov    0x20(%rdx),%rax
ffffffff8020dbac:	48 2b 42 18          	sub    0x18(%rdx),%rax
ffffffff8020dbb0:	48 29 c7             	sub    %rax,%rdi
ffffffff8020dbb3:	e9 a8 da ff ff       	jmpq   ffffffff8020b660 <caml_copy_int64>
ffffffff8020dbb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020dbbf:	00 

ffffffff8020dbc0 <caml_ml_input_scan_line>:
ffffffff8020dbc0:	41 54                	push   %r12
ffffffff8020dbc2:	55                   	push   %rbp
ffffffff8020dbc3:	53                   	push   %rbx
ffffffff8020dbc4:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8020dbc8:	4c 8b 25 a9 64 03 00 	mov    0x364a9(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff8020dbcf:	48 8b 05 ca df 02 00 	mov    0x2dfca(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff8020dbd6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020dbdb:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8020dbe0:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8020dbe7:	00 00 
ffffffff8020dbe9:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8020dbee:	31 c9                	xor    %ecx,%ecx
ffffffff8020dbf0:	48 89 15 81 64 03 00 	mov    %rdx,0x36481(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020dbf7:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8020dbfc:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
ffffffff8020dc01:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8020dc08:	00 00 
ffffffff8020dc0a:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8020dc11:	00 00 
ffffffff8020dc13:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8020dc18:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff8020dc1c:	48 85 c0             	test   %rax,%rax
ffffffff8020dc1f:	74 05                	je     ffffffff8020dc26 <caml_ml_input_scan_line+0x66>
ffffffff8020dc21:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020dc24:	ff d0                	callq  *%rax
ffffffff8020dc26:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020dc29:	e8 32 ef ff ff       	callq  ffffffff8020cb60 <caml_input_scan_line>
ffffffff8020dc2e:	48 89 c3             	mov    %rax,%rbx
ffffffff8020dc31:	48 8b 05 60 df 02 00 	mov    0x2df60(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8020dc38:	48 85 c0             	test   %rax,%rax
ffffffff8020dc3b:	74 05                	je     ffffffff8020dc42 <caml_ml_input_scan_line+0x82>
ffffffff8020dc3d:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020dc40:	ff d0                	callq  *%rax
ffffffff8020dc42:	4c 89 25 2f 64 03 00 	mov    %r12,0x3642f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8020dc49:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
ffffffff8020dc4e:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
ffffffff8020dc53:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff8020dc5a:	00 00 
ffffffff8020dc5c:	75 09                	jne    ffffffff8020dc67 <caml_ml_input_scan_line+0xa7>
ffffffff8020dc5e:	48 83 c4 60          	add    $0x60,%rsp
ffffffff8020dc62:	5b                   	pop    %rbx
ffffffff8020dc63:	5d                   	pop    %rbp
ffffffff8020dc64:	41 5c                	pop    %r12
ffffffff8020dc66:	c3                   	retq   
ffffffff8020dc67:	e8 34 24 ff ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8020dc6c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020dc70 <caml_terminfo_rows>:
ffffffff8020dc70:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020dc74:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8020dc78:	8b 38                	mov    (%rax),%edi
ffffffff8020dc7a:	e8 f1 8f 00 00       	callq  ffffffff80216c70 <caml_num_rows_fd>
ffffffff8020dc7f:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020dc83:	48 98                	cltq   
ffffffff8020dc85:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8020dc8a:	c3                   	retq   
ffffffff8020dc8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020dc90 <start_cycle>:
ffffffff8020dc90:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020dc94:	31 c0                	xor    %eax,%eax
ffffffff8020dc96:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020dc9b:	48 8d 35 4f 3f 01 00 	lea    0x13f4f(%rip),%rsi        # ffffffff80221bf1 <int32_length+0x111>
ffffffff8020dca2:	e8 49 45 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020dca7:	e8 24 60 00 00       	callq  ffffffff80213cd0 <caml_darken_all_roots_start>
ffffffff8020dcac:	48 8d 05 ad 87 03 00 	lea    0x387ad(%rip),%rax        # ffffffff80246460 <caml_ephe_list_head>
ffffffff8020dcb3:	c7 05 e3 e0 02 00 00 	movl   $0x0,0x2e0e3(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020dcba:	00 00 00 
ffffffff8020dcbd:	c7 05 a9 e0 02 00 0a 	movl   $0xa,0x2e0a9(%rip)        # ffffffff8023bd70 <caml_gc_subphase>
ffffffff8020dcc4:	00 00 00 
ffffffff8020dcc7:	48 c7 05 36 e1 02 00 	movq   $0x0,0x2e136(%rip)        # ffffffff8023be08 <markhp>
ffffffff8020dcce:	00 00 00 00 
ffffffff8020dcd2:	c7 05 0c e1 02 00 01 	movl   $0x1,0x2e10c(%rip)        # ffffffff8023bde8 <ephe_list_pure>
ffffffff8020dcd9:	00 00 00 
ffffffff8020dcdc:	48 89 05 fd e0 02 00 	mov    %rax,0x2e0fd(%rip)        # ffffffff8023bde0 <ephes_checked_if_pure>
ffffffff8020dce3:	48 89 05 ee e0 02 00 	mov    %rax,0x2e0ee(%rip)        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020dcea:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020dcee:	c3                   	retq   
ffffffff8020dcef:	90                   	nop

ffffffff8020dcf0 <init_sweep_phase>:
ffffffff8020dcf0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020dcf4:	48 8b 05 b5 e0 02 00 	mov    0x2e0b5(%rip),%rax        # ffffffff8023bdb0 <caml_heap_start>
ffffffff8020dcfb:	48 89 05 a6 e0 02 00 	mov    %rax,0x2e0a6(%rip)        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8020dd02:	e8 29 d7 00 00       	callq  ffffffff8021b430 <caml_fl_init_merge>
ffffffff8020dd07:	48 8b 05 a2 e0 02 00 	mov    0x2e0a2(%rip),%rax        # ffffffff8023bdb0 <caml_heap_start>
ffffffff8020dd0e:	c7 05 88 e0 02 00 02 	movl   $0x2,0x2e088(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020dd15:	00 00 00 
ffffffff8020dd18:	48 89 05 e1 e0 02 00 	mov    %rax,0x2e0e1(%rip)        # ffffffff8023be00 <chunk>
ffffffff8020dd1f:	48 89 05 82 e0 02 00 	mov    %rax,0x2e082(%rip)        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8020dd26:	48 03 40 f0          	add    -0x10(%rax),%rax
ffffffff8020dd2a:	48 89 05 c7 e0 02 00 	mov    %rax,0x2e0c7(%rip)        # ffffffff8023bdf8 <limit>
ffffffff8020dd31:	48 8b 05 d0 87 03 00 	mov    0x387d0(%rip),%rax        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8020dd38:	48 89 05 39 e0 02 00 	mov    %rax,0x2e039(%rip)        # ffffffff8023bd78 <caml_fl_wsz_at_phase_change>
ffffffff8020dd3f:	48 8b 05 7a de 02 00 	mov    0x2de7a(%rip),%rax        # ffffffff8023bbc0 <caml_major_gc_hook>
ffffffff8020dd46:	48 85 c0             	test   %rax,%rax
ffffffff8020dd49:	74 0d                	je     ffffffff8020dd58 <init_sweep_phase+0x68>
ffffffff8020dd4b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020dd4f:	ff e0                	jmpq   *%rax
ffffffff8020dd51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020dd58:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020dd5c:	c3                   	retq   
ffffffff8020dd5d:	0f 1f 00             	nopl   (%rax)

ffffffff8020dd60 <clean_slice>:
ffffffff8020dd60:	41 57                	push   %r15
ffffffff8020dd62:	48 89 fa             	mov    %rdi,%rdx
ffffffff8020dd65:	48 8d 35 a2 3e 01 00 	lea    0x13ea2(%rip),%rsi        # ffffffff80221c0e <int32_length+0x12e>
ffffffff8020dd6c:	31 c0                	xor    %eax,%eax
ffffffff8020dd6e:	41 56                	push   %r14
ffffffff8020dd70:	41 55                	push   %r13
ffffffff8020dd72:	41 54                	push   %r12
ffffffff8020dd74:	49 89 fc             	mov    %rdi,%r12
ffffffff8020dd77:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020dd7c:	55                   	push   %rbp
ffffffff8020dd7d:	53                   	push   %rbx
ffffffff8020dd7e:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8020dd82:	e8 69 44 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020dd87:	4d 85 e4             	test   %r12,%r12
ffffffff8020dd8a:	7e 2c                	jle    ffffffff8020ddb8 <clean_slice+0x58>
ffffffff8020dd8c:	48 8b 05 45 e0 02 00 	mov    0x2e045(%rip),%rax        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020dd93:	4c 8b 28             	mov    (%rax),%r13
ffffffff8020dd96:	4d 85 ed             	test   %r13,%r13
ffffffff8020dd99:	0f 84 e9 01 00 00    	je     ffffffff8020df88 <clean_slice+0x228>
ffffffff8020dd9f:	49 8b 55 f8          	mov    -0x8(%r13),%rdx
ffffffff8020dda3:	f6 c6 03             	test   $0x3,%dh
ffffffff8020dda6:	75 28                	jne    ffffffff8020ddd0 <clean_slice+0x70>
ffffffff8020dda8:	49 8b 55 00          	mov    0x0(%r13),%rdx
ffffffff8020ddac:	49 83 ec 01          	sub    $0x1,%r12
ffffffff8020ddb0:	48 89 10             	mov    %rdx,(%rax)
ffffffff8020ddb3:	4d 85 e4             	test   %r12,%r12
ffffffff8020ddb6:	7f d4                	jg     ffffffff8020dd8c <clean_slice+0x2c>
ffffffff8020ddb8:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8020ddbc:	5b                   	pop    %rbx
ffffffff8020ddbd:	5d                   	pop    %rbp
ffffffff8020ddbe:	41 5c                	pop    %r12
ffffffff8020ddc0:	41 5d                	pop    %r13
ffffffff8020ddc2:	41 5e                	pop    %r14
ffffffff8020ddc4:	41 5f                	pop    %r15
ffffffff8020ddc6:	c3                   	retq   
ffffffff8020ddc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020ddce:	00 00 
ffffffff8020ddd0:	48 89 d0             	mov    %rdx,%rax
ffffffff8020ddd3:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8020ddd7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8020dddc:	48 81 fa ff 0b 00 00 	cmp    $0xbff,%rdx
ffffffff8020dde3:	0f 86 52 01 00 00    	jbe    ffffffff8020df3b <clean_slice+0x1db>
ffffffff8020dde9:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
ffffffff8020ddf0:	00 
ffffffff8020ddf1:	48 8b 05 d0 df 01 00 	mov    0x1dfd0(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8020ddf8:	bb 02 00 00 00       	mov    $0x2,%ebx
ffffffff8020ddfd:	0f 1f 00             	nopl   (%rax)
ffffffff8020de00:	49 8d 6c dd 00       	lea    0x0(%r13,%rbx,8),%rbp
ffffffff8020de05:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
ffffffff8020de09:	49 39 c7             	cmp    %rax,%r15
ffffffff8020de0c:	0f 84 fb 00 00 00    	je     ffffffff8020df0d <clean_slice+0x1ad>
ffffffff8020de12:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff8020de16:	74 27                	je     ffffffff8020de3f <clean_slice+0xdf>
ffffffff8020de18:	e9 f0 00 00 00       	jmpq   ffffffff8020df0d <clean_slice+0x1ad>
ffffffff8020de1d:	0f 1f 00             	nopl   (%rax)
ffffffff8020de20:	48 8d 70 10          	lea    0x10(%rax),%rsi
ffffffff8020de24:	48 89 35 ed e0 02 00 	mov    %rsi,0x2e0ed(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8020de2b:	4c 89 28             	mov    %r13,(%rax)
ffffffff8020de2e:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff8020de32:	4c 39 3d 8f df 01 00 	cmp    %r15,0x1df8f(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8020de39:	0f 84 31 01 00 00    	je     ffffffff8020df70 <clean_slice+0x210>
ffffffff8020de3f:	4c 89 ff             	mov    %r15,%rdi
ffffffff8020de42:	4d 89 fe             	mov    %r15,%r14
ffffffff8020de45:	e8 d6 25 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020de4a:	a8 03                	test   $0x3,%al
ffffffff8020de4c:	0f 84 06 01 00 00    	je     ffffffff8020df58 <clean_slice+0x1f8>
ffffffff8020de52:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
ffffffff8020de57:	49 8d 77 f8          	lea    -0x8(%r15),%rsi
ffffffff8020de5b:	75 7b                	jne    ffffffff8020ded8 <clean_slice+0x178>
ffffffff8020de5d:	4d 8b 3f             	mov    (%r15),%r15
ffffffff8020de60:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff8020de64:	75 72                	jne    ffffffff8020ded8 <clean_slice+0x178>
ffffffff8020de66:	4c 89 ff             	mov    %r15,%rdi
ffffffff8020de69:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff8020de6e:	e8 ad 25 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020de73:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
ffffffff8020de78:	a8 07                	test   $0x7,%al
ffffffff8020de7a:	74 5c                	je     ffffffff8020ded8 <clean_slice+0x178>
ffffffff8020de7c:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff8020de81:	8d 78 0a             	lea    0xa(%rax),%edi
ffffffff8020de84:	81 e7 fb 00 00 00    	and    $0xfb,%edi
ffffffff8020de8a:	74 4c                	je     ffffffff8020ded8 <clean_slice+0x178>
ffffffff8020de8c:	3c fd                	cmp    $0xfd,%al
ffffffff8020de8e:	74 48                	je     ffffffff8020ded8 <clean_slice+0x178>
ffffffff8020de90:	4c 89 7d 00          	mov    %r15,0x0(%rbp)
ffffffff8020de94:	4c 3b 3d 0d e1 02 00 	cmp    0x2e10d(%rip),%r15        # ffffffff8023bfa8 <caml_young_end>
ffffffff8020de9b:	73 95                	jae    ffffffff8020de32 <clean_slice+0xd2>
ffffffff8020de9d:	4c 3b 3d 0c e1 02 00 	cmp    0x2e10c(%rip),%r15        # ffffffff8023bfb0 <caml_young_start>
ffffffff8020dea4:	76 8c                	jbe    ffffffff8020de32 <clean_slice+0xd2>
ffffffff8020dea6:	48 8b 05 6b e0 02 00 	mov    0x2e06b(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8020dead:	48 3b 05 6c e0 02 00 	cmp    0x2e06c(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff8020deb4:	0f 82 66 ff ff ff    	jb     ffffffff8020de20 <clean_slice+0xc0>
ffffffff8020deba:	48 8d 3d 3f e0 02 00 	lea    0x2e03f(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff8020dec1:	e8 ea 42 00 00       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff8020dec6:	48 8b 05 4b e0 02 00 	mov    0x2e04b(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8020decd:	e9 4e ff ff ff       	jmpq   ffffffff8020de20 <clean_slice+0xc0>
ffffffff8020ded2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020ded8:	48 8b 05 e9 de 01 00 	mov    0x1dee9(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8020dedf:	48 f7 06 00 03 00 00 	testq  $0x300,(%rsi)
ffffffff8020dee6:	75 25                	jne    ffffffff8020df0d <clean_slice+0x1ad>
ffffffff8020dee8:	4c 3b 35 b9 e0 02 00 	cmp    0x2e0b9(%rip),%r14        # ffffffff8023bfa8 <caml_young_end>
ffffffff8020deef:	73 09                	jae    ffffffff8020defa <clean_slice+0x19a>
ffffffff8020def1:	4c 3b 35 b8 e0 02 00 	cmp    0x2e0b8(%rip),%r14        # ffffffff8023bfb0 <caml_young_start>
ffffffff8020def8:	77 13                	ja     ffffffff8020df0d <clean_slice+0x1ad>
ffffffff8020defa:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%rsp)
ffffffff8020df01:	00 
ffffffff8020df02:	48 89 45 00          	mov    %rax,0x0(%rbp)
ffffffff8020df06:	48 8b 05 bb de 01 00 	mov    0x1debb(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8020df0d:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8020df11:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff8020df16:	0f 85 e4 fe ff ff    	jne    ffffffff8020de00 <clean_slice+0xa0>
ffffffff8020df1c:	49 39 45 08          	cmp    %rax,0x8(%r13)
ffffffff8020df20:	74 0c                	je     ffffffff8020df2e <clean_slice+0x1ce>
ffffffff8020df22:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
ffffffff8020df26:	85 d2                	test   %edx,%edx
ffffffff8020df28:	74 04                	je     ffffffff8020df2e <clean_slice+0x1ce>
ffffffff8020df2a:	49 89 45 08          	mov    %rax,0x8(%r13)
ffffffff8020df2e:	49 8b 45 f8          	mov    -0x8(%r13),%rax
ffffffff8020df32:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8020df36:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8020df3b:	4c 89 2d 96 de 02 00 	mov    %r13,0x2de96(%rip)        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020df42:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
ffffffff8020df47:	49 f7 d5             	not    %r13
ffffffff8020df4a:	4d 01 ec             	add    %r13,%r12
ffffffff8020df4d:	e9 35 fe ff ff       	jmpq   ffffffff8020dd87 <clean_slice+0x27>
ffffffff8020df52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020df58:	48 8b 05 69 de 01 00 	mov    0x1de69(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8020df5f:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8020df63:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff8020df68:	0f 85 92 fe ff ff    	jne    ffffffff8020de00 <clean_slice+0xa0>
ffffffff8020df6e:	eb ac                	jmp    ffffffff8020df1c <clean_slice+0x1bc>
ffffffff8020df70:	4c 89 f8             	mov    %r15,%rax
ffffffff8020df73:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8020df77:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff8020df7c:	0f 85 7e fe ff ff    	jne    ffffffff8020de00 <clean_slice+0xa0>
ffffffff8020df82:	eb 98                	jmp    ffffffff8020df1c <clean_slice+0x1bc>
ffffffff8020df84:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020df88:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8020df8c:	5b                   	pop    %rbx
ffffffff8020df8d:	5d                   	pop    %rbp
ffffffff8020df8e:	41 5c                	pop    %r12
ffffffff8020df90:	41 5d                	pop    %r13
ffffffff8020df92:	41 5e                	pop    %r14
ffffffff8020df94:	41 5f                	pop    %r15
ffffffff8020df96:	e9 55 fd ff ff       	jmpq   ffffffff8020dcf0 <init_sweep_phase>
ffffffff8020df9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020dfa0 <sweep_slice>:
ffffffff8020dfa0:	53                   	push   %rbx
ffffffff8020dfa1:	48 89 fa             	mov    %rdi,%rdx
ffffffff8020dfa4:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020dfa7:	48 8d 35 74 3c 01 00 	lea    0x13c74(%rip),%rsi        # ffffffff80221c22 <int32_length+0x142>
ffffffff8020dfae:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020dfb3:	31 c0                	xor    %eax,%eax
ffffffff8020dfb5:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020dfb9:	e8 32 42 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020dfbe:	66 90                	xchg   %ax,%ax
ffffffff8020dfc0:	48 85 db             	test   %rbx,%rbx
ffffffff8020dfc3:	7e 4e                	jle    ffffffff8020e013 <sweep_slice+0x73>
ffffffff8020dfc5:	48 8b 05 dc dd 02 00 	mov    0x2dddc(%rip),%rax        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8020dfcc:	48 3b 05 25 de 02 00 	cmp    0x2de25(%rip),%rax        # ffffffff8023bdf8 <limit>
ffffffff8020dfd3:	73 4b                	jae    ffffffff8020e020 <sweep_slice+0x80>
ffffffff8020dfd5:	48 8b 10             	mov    (%rax),%rdx
ffffffff8020dfd8:	48 89 d1             	mov    %rdx,%rcx
ffffffff8020dfdb:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff8020dfdf:	48 89 ce             	mov    %rcx,%rsi
ffffffff8020dfe2:	48 8d 4c c8 08       	lea    0x8(%rax,%rcx,8),%rcx
ffffffff8020dfe7:	48 89 0d ba dd 02 00 	mov    %rcx,0x2ddba(%rip)        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8020dfee:	48 f7 d6             	not    %rsi
ffffffff8020dff1:	48 89 d1             	mov    %rdx,%rcx
ffffffff8020dff4:	48 01 f3             	add    %rsi,%rbx
ffffffff8020dff7:	81 e1 00 03 00 00    	and    $0x300,%ecx
ffffffff8020dffd:	74 61                	je     ffffffff8020e060 <sweep_slice+0xc0>
ffffffff8020dfff:	48 81 f9 00 02 00 00 	cmp    $0x200,%rcx
ffffffff8020e006:	74 48                	je     ffffffff8020e050 <sweep_slice+0xb0>
ffffffff8020e008:	80 e6 fc             	and    $0xfc,%dh
ffffffff8020e00b:	48 89 10             	mov    %rdx,(%rax)
ffffffff8020e00e:	48 85 db             	test   %rbx,%rbx
ffffffff8020e011:	7f b2                	jg     ffffffff8020dfc5 <sweep_slice+0x25>
ffffffff8020e013:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020e017:	5b                   	pop    %rbx
ffffffff8020e018:	c3                   	retq   
ffffffff8020e019:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020e020:	48 8b 05 d9 dd 02 00 	mov    0x2ddd9(%rip),%rax        # ffffffff8023be00 <chunk>
ffffffff8020e027:	48 8b 40 f8          	mov    -0x8(%rax),%rax
ffffffff8020e02b:	48 89 05 ce dd 02 00 	mov    %rax,0x2ddce(%rip)        # ffffffff8023be00 <chunk>
ffffffff8020e032:	48 85 c0             	test   %rax,%rax
ffffffff8020e035:	74 69                	je     ffffffff8020e0a0 <sweep_slice+0x100>
ffffffff8020e037:	48 89 05 6a dd 02 00 	mov    %rax,0x2dd6a(%rip)        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8020e03e:	48 03 40 f0          	add    -0x10(%rax),%rax
ffffffff8020e042:	48 89 05 af dd 02 00 	mov    %rax,0x2ddaf(%rip)        # ffffffff8023bdf8 <limit>
ffffffff8020e049:	e9 72 ff ff ff       	jmpq   ffffffff8020dfc0 <sweep_slice+0x20>
ffffffff8020e04e:	66 90                	xchg   %ax,%ax
ffffffff8020e050:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020e054:	48 89 05 c5 dd 01 00 	mov    %rax,0x1ddc5(%rip)        # ffffffff8022be20 <caml_fl_merge>
ffffffff8020e05b:	e9 60 ff ff ff       	jmpq   ffffffff8020dfc0 <sweep_slice+0x20>
ffffffff8020e060:	0f b6 d2             	movzbl %dl,%edx
ffffffff8020e063:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8020e067:	81 fa ff 00 00 00    	cmp    $0xff,%edx
ffffffff8020e06d:	74 11                	je     ffffffff8020e080 <sweep_slice+0xe0>
ffffffff8020e06f:	e8 3c d4 00 00       	callq  ffffffff8021b4b0 <caml_fl_merge_block>
ffffffff8020e074:	48 89 05 2d dd 02 00 	mov    %rax,0x2dd2d(%rip)        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8020e07b:	e9 40 ff ff ff       	jmpq   ffffffff8020dfc0 <sweep_slice+0x20>
ffffffff8020e080:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020e084:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020e088:	48 85 c0             	test   %rax,%rax
ffffffff8020e08b:	74 e2                	je     ffffffff8020e06f <sweep_slice+0xcf>
ffffffff8020e08d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020e092:	ff d0                	callq  *%rax
ffffffff8020e094:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8020e099:	eb d4                	jmp    ffffffff8020e06f <sweep_slice+0xcf>
ffffffff8020e09b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020e0a0:	48 83 05 00 a4 03 00 	addq   $0x1,0x3a400(%rip)        # ffffffff802484a8 <caml_stat_major_collections>
ffffffff8020e0a7:	01 
ffffffff8020e0a8:	c7 05 ee dc 02 00 03 	movl   $0x3,0x2dcee(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020e0af:	00 00 00 
ffffffff8020e0b2:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020e0b6:	5b                   	pop    %rbx
ffffffff8020e0b7:	e9 d4 62 00 00       	jmpq   ffffffff80214390 <caml_request_minor_gc>
ffffffff8020e0bc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020e0c0 <realloc_gray_vals>:
ffffffff8020e0c0:	48 8b 0d d9 a3 03 00 	mov    0x3a3d9(%rip),%rcx        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8020e0c7:	48 8b 15 4a dd 02 00 	mov    0x2dd4a(%rip),%rdx        # ffffffff8023be18 <gray_vals_size>
ffffffff8020e0ce:	48 85 c9             	test   %rcx,%rcx
ffffffff8020e0d1:	48 8d 41 1f          	lea    0x1f(%rcx),%rax
ffffffff8020e0d5:	48 0f 49 c1          	cmovns %rcx,%rax
ffffffff8020e0d9:	48 c1 f8 05          	sar    $0x5,%rax
ffffffff8020e0dd:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020e0e0:	77 26                	ja     ffffffff8020e108 <realloc_gray_vals+0x48>
ffffffff8020e0e2:	48 8b 05 47 dd 02 00 	mov    0x2dd47(%rip),%rax        # ffffffff8023be30 <gray_vals>
ffffffff8020e0e9:	48 d1 ea             	shr    %rdx
ffffffff8020e0ec:	c7 05 1a dd 02 00 00 	movl   $0x0,0x2dd1a(%rip)        # ffffffff8023be10 <heap_is_pure>
ffffffff8020e0f3:	00 00 00 
ffffffff8020e0f6:	48 8d 04 d0          	lea    (%rax,%rdx,8),%rax
ffffffff8020e0fa:	48 89 05 27 dd 02 00 	mov    %rax,0x2dd27(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e101:	c3                   	retq   
ffffffff8020e102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020e108:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8020e10c:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020e110:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff8020e115:	31 c0                	xor    %eax,%eax
ffffffff8020e117:	48 c1 ea 09          	shr    $0x9,%rdx
ffffffff8020e11b:	48 8d 35 06 3c 01 00 	lea    0x13c06(%rip),%rsi        # ffffffff80221d28 <int32_length+0x248>
ffffffff8020e122:	e8 c9 40 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020e127:	48 8b 35 ea dc 02 00 	mov    0x2dcea(%rip),%rsi        # ffffffff8023be18 <gray_vals_size>
ffffffff8020e12e:	48 8b 3d fb dc 02 00 	mov    0x2dcfb(%rip),%rdi        # ffffffff8023be30 <gray_vals>
ffffffff8020e135:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff8020e139:	e8 82 28 00 00       	callq  ffffffff802109c0 <caml_stat_resize_noexc>
ffffffff8020e13e:	48 85 c0             	test   %rax,%rax
ffffffff8020e141:	74 3d                	je     ffffffff8020e180 <realloc_gray_vals+0xc0>
ffffffff8020e143:	48 8b 15 ce dc 02 00 	mov    0x2dcce(%rip),%rdx        # ffffffff8023be18 <gray_vals_size>
ffffffff8020e14a:	48 89 05 df dc 02 00 	mov    %rax,0x2dcdf(%rip)        # ffffffff8023be30 <gray_vals>
ffffffff8020e151:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
ffffffff8020e158:	00 
ffffffff8020e159:	48 01 d2             	add    %rdx,%rdx
ffffffff8020e15c:	48 01 c8             	add    %rcx,%rax
ffffffff8020e15f:	48 89 15 b2 dc 02 00 	mov    %rdx,0x2dcb2(%rip)        # ffffffff8023be18 <gray_vals_size>
ffffffff8020e166:	48 89 05 bb dc 02 00 	mov    %rax,0x2dcbb(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e16d:	48 01 c8             	add    %rcx,%rax
ffffffff8020e170:	48 89 05 a9 dc 02 00 	mov    %rax,0x2dca9(%rip)        # ffffffff8023be20 <gray_vals_end>
ffffffff8020e177:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020e17b:	c3                   	retq   
ffffffff8020e17c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020e180:	48 8d 35 c9 3b 01 00 	lea    0x13bc9(%rip),%rsi        # ffffffff80221d50 <int32_length+0x270>
ffffffff8020e187:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff8020e18c:	e8 5f 40 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020e191:	48 8b 05 98 dc 02 00 	mov    0x2dc98(%rip),%rax        # ffffffff8023be30 <gray_vals>
ffffffff8020e198:	c7 05 6e dc 02 00 00 	movl   $0x0,0x2dc6e(%rip)        # ffffffff8023be10 <heap_is_pure>
ffffffff8020e19f:	00 00 00 
ffffffff8020e1a2:	48 89 05 7f dc 02 00 	mov    %rax,0x2dc7f(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e1a9:	eb cc                	jmp    ffffffff8020e177 <realloc_gray_vals+0xb7>
ffffffff8020e1ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020e1b0 <mark_slice>:
ffffffff8020e1b0:	41 57                	push   %r15
ffffffff8020e1b2:	48 89 fa             	mov    %rdi,%rdx
ffffffff8020e1b5:	48 8d 35 7a 3a 01 00 	lea    0x13a7a(%rip),%rsi        # ffffffff80221c36 <int32_length+0x156>
ffffffff8020e1bc:	31 c0                	xor    %eax,%eax
ffffffff8020e1be:	41 56                	push   %r14
ffffffff8020e1c0:	41 55                	push   %r13
ffffffff8020e1c2:	41 54                	push   %r12
ffffffff8020e1c4:	55                   	push   %rbp
ffffffff8020e1c5:	53                   	push   %rbx
ffffffff8020e1c6:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8020e1ca:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8020e1cf:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020e1d4:	e8 17 40 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020e1d9:	8b 15 91 db 02 00    	mov    0x2db91(%rip),%edx        # ffffffff8023bd70 <caml_gc_subphase>
ffffffff8020e1df:	48 8d 35 63 3a 01 00 	lea    0x13a63(%rip),%rsi        # ffffffff80221c49 <int32_length+0x169>
ffffffff8020e1e6:	31 c0                	xor    %eax,%eax
ffffffff8020e1e8:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020e1ed:	e8 fe 3f 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020e1f2:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff8020e1f7:	4c 8b 2d 2a dc 02 00 	mov    0x2dc2a(%rip),%r13        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e1fe:	48 8b 2d cb db 02 00 	mov    0x2dbcb(%rip),%rbp        # ffffffff8023bdd0 <current_value>
ffffffff8020e205:	4c 8b 35 bc db 02 00 	mov    0x2dbbc(%rip),%r14        # ffffffff8023bdc8 <current_index>
ffffffff8020e20c:	4d 85 c0             	test   %r8,%r8
ffffffff8020e20f:	0f 8e b6 00 00 00    	jle    ffffffff8020e2cb <mark_slice+0x11b>
ffffffff8020e215:	4d 89 ef             	mov    %r13,%r15
ffffffff8020e218:	4d 89 c5             	mov    %r8,%r13
ffffffff8020e21b:	48 85 ed             	test   %rbp,%rbp
ffffffff8020e21e:	74 34                	je     ffffffff8020e254 <mark_slice+0xa4>
ffffffff8020e220:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8020e224:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
ffffffff8020e228:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020e22d:	49 89 d0             	mov    %rdx,%r8
ffffffff8020e230:	49 c1 e8 0a          	shr    $0xa,%r8
ffffffff8020e234:	80 fa fa             	cmp    $0xfa,%dl
ffffffff8020e237:	0f 86 03 01 00 00    	jbe    ffffffff8020e340 <mark_slice+0x190>
ffffffff8020e23d:	49 83 ed 01          	sub    $0x1,%r13
ffffffff8020e241:	80 ce 03             	or     $0x3,%dh
ffffffff8020e244:	4d 29 c5             	sub    %r8,%r13
ffffffff8020e247:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff8020e24b:	4d 85 ed             	test   %r13,%r13
ffffffff8020e24e:	0f 8e e4 00 00 00    	jle    ffffffff8020e338 <mark_slice+0x188>
ffffffff8020e254:	4c 39 3d d5 db 02 00 	cmp    %r15,0x2dbd5(%rip)        # ffffffff8023be30 <gray_vals>
ffffffff8020e25b:	73 14                	jae    ffffffff8020e271 <mark_slice+0xc1>
ffffffff8020e25d:	4d 8b 67 f8          	mov    -0x8(%r15),%r12
ffffffff8020e261:	49 8d 47 f8          	lea    -0x8(%r15),%rax
ffffffff8020e265:	4d 85 e4             	test   %r12,%r12
ffffffff8020e268:	0f 85 40 07 00 00    	jne    ffffffff8020e9ae <mark_slice+0x7fe>
ffffffff8020e26e:	49 89 c7             	mov    %rax,%r15
ffffffff8020e271:	48 8b 05 90 db 02 00 	mov    0x2db90(%rip),%rax        # ffffffff8023be08 <markhp>
ffffffff8020e278:	48 85 c0             	test   %rax,%rax
ffffffff8020e27b:	74 73                	je     ffffffff8020e2f0 <mark_slice+0x140>
ffffffff8020e27d:	48 3b 05 74 db 02 00 	cmp    0x2db74(%rip),%rax        # ffffffff8023bdf8 <limit>
ffffffff8020e284:	0f 84 fe 01 00 00    	je     ffffffff8020e488 <mark_slice+0x2d8>
ffffffff8020e28a:	48 8b 10             	mov    (%rax),%rdx
ffffffff8020e28d:	48 8d 68 08          	lea    0x8(%rax),%rbp
ffffffff8020e291:	b9 00 00 00 00       	mov    $0x0,%ecx
ffffffff8020e296:	48 89 d7             	mov    %rdx,%rdi
ffffffff8020e299:	81 e7 00 03 00 00    	and    $0x300,%edi
ffffffff8020e29f:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
ffffffff8020e2a6:	48 0f 45 e9          	cmovne %rcx,%rbp
ffffffff8020e2aa:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8020e2ae:	48 8d 44 d0 08       	lea    0x8(%rax,%rdx,8),%rax
ffffffff8020e2b3:	48 89 05 4e db 02 00 	mov    %rax,0x2db4e(%rip)        # ffffffff8023be08 <markhp>
ffffffff8020e2ba:	4d 85 ed             	test   %r13,%r13
ffffffff8020e2bd:	0f 8f 58 ff ff ff    	jg     ffffffff8020e21b <mark_slice+0x6b>
ffffffff8020e2c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020e2c8:	4d 89 fd             	mov    %r15,%r13
ffffffff8020e2cb:	4c 89 2d 56 db 02 00 	mov    %r13,0x2db56(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e2d2:	48 89 2d f7 da 02 00 	mov    %rbp,0x2daf7(%rip)        # ffffffff8023bdd0 <current_value>
ffffffff8020e2d9:	4c 89 35 e8 da 02 00 	mov    %r14,0x2dae8(%rip)        # ffffffff8023bdc8 <current_index>
ffffffff8020e2e0:	48 83 c4 48          	add    $0x48,%rsp
ffffffff8020e2e4:	5b                   	pop    %rbx
ffffffff8020e2e5:	5d                   	pop    %rbp
ffffffff8020e2e6:	41 5c                	pop    %r12
ffffffff8020e2e8:	41 5d                	pop    %r13
ffffffff8020e2ea:	41 5e                	pop    %r14
ffffffff8020e2ec:	41 5f                	pop    %r15
ffffffff8020e2ee:	c3                   	retq   
ffffffff8020e2ef:	90                   	nop
ffffffff8020e2f0:	8b 0d 1a db 02 00    	mov    0x2db1a(%rip),%ecx        # ffffffff8023be10 <heap_is_pure>
ffffffff8020e2f6:	85 c9                	test   %ecx,%ecx
ffffffff8020e2f8:	0f 85 c2 01 00 00    	jne    ffffffff8020e4c0 <mark_slice+0x310>
ffffffff8020e2fe:	48 8b 05 ab da 02 00 	mov    0x2daab(%rip),%rax        # ffffffff8023bdb0 <caml_heap_start>
ffffffff8020e305:	c7 05 01 db 02 00 01 	movl   $0x1,0x2db01(%rip)        # ffffffff8023be10 <heap_is_pure>
ffffffff8020e30c:	00 00 00 
ffffffff8020e30f:	48 89 05 ea da 02 00 	mov    %rax,0x2daea(%rip)        # ffffffff8023be00 <chunk>
ffffffff8020e316:	48 89 05 eb da 02 00 	mov    %rax,0x2daeb(%rip)        # ffffffff8023be08 <markhp>
ffffffff8020e31d:	48 03 40 f0          	add    -0x10(%rax),%rax
ffffffff8020e321:	48 89 05 d0 da 02 00 	mov    %rax,0x2dad0(%rip)        # ffffffff8023bdf8 <limit>
ffffffff8020e328:	4d 85 ed             	test   %r13,%r13
ffffffff8020e32b:	0f 8f 23 ff ff ff    	jg     ffffffff8020e254 <mark_slice+0xa4>
ffffffff8020e331:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020e338:	4d 89 fd             	mov    %r15,%r13
ffffffff8020e33b:	31 ed                	xor    %ebp,%ebp
ffffffff8020e33d:	eb 8c                	jmp    ffffffff8020e2cb <mark_slice+0x11b>
ffffffff8020e33f:	90                   	nop
ffffffff8020e340:	4d 39 f0             	cmp    %r14,%r8
ffffffff8020e343:	4b 8d 74 35 00       	lea    0x0(%r13,%r14,1),%rsi
ffffffff8020e348:	4c 89 f0             	mov    %r14,%rax
ffffffff8020e34b:	49 0f 46 c0          	cmovbe %r8,%rax
ffffffff8020e34f:	49 39 f0             	cmp    %rsi,%r8
ffffffff8020e352:	49 0f 46 f0          	cmovbe %r8,%rsi
ffffffff8020e356:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8020e35b:	49 89 f6             	mov    %rsi,%r14
ffffffff8020e35e:	48 39 f0             	cmp    %rsi,%rax
ffffffff8020e361:	0f 83 e8 00 00 00    	jae    ffffffff8020e44f <mark_slice+0x29f>
ffffffff8020e367:	48 8d 5c c5 00       	lea    0x0(%rbp,%rax,8),%rbx
ffffffff8020e36c:	4c 8d 54 f5 00       	lea    0x0(%rbp,%rsi,8),%r10
ffffffff8020e371:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
ffffffff8020e376:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
ffffffff8020e37b:	48 89 dd             	mov    %rbx,%rbp
ffffffff8020e37e:	4c 89 d3             	mov    %r10,%rbx
ffffffff8020e381:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
ffffffff8020e386:	eb 15                	jmp    ffffffff8020e39d <mark_slice+0x1ed>
ffffffff8020e388:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020e38f:	00 
ffffffff8020e390:	48 83 c5 08          	add    $0x8,%rbp
ffffffff8020e394:	48 39 eb             	cmp    %rbp,%rbx
ffffffff8020e397:	0f 84 a3 00 00 00    	je     ffffffff8020e440 <mark_slice+0x290>
ffffffff8020e39d:	4c 8b 65 00          	mov    0x0(%rbp),%r12
ffffffff8020e3a1:	41 f6 c4 01          	test   $0x1,%r12b
ffffffff8020e3a5:	75 e9                	jne    ffffffff8020e390 <mark_slice+0x1e0>
ffffffff8020e3a7:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020e3aa:	e8 71 20 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020e3af:	a8 01                	test   $0x1,%al
ffffffff8020e3b1:	74 dd                	je     ffffffff8020e390 <mark_slice+0x1e0>
ffffffff8020e3b3:	49 8b 74 24 f8       	mov    -0x8(%r12),%rsi
ffffffff8020e3b8:	40 0f b6 c6          	movzbl %sil,%eax
ffffffff8020e3bc:	40 80 fe fa          	cmp    $0xfa,%sil
ffffffff8020e3c0:	0f 84 72 01 00 00    	je     ffffffff8020e538 <mark_slice+0x388>
ffffffff8020e3c6:	3d f9 00 00 00       	cmp    $0xf9,%eax
ffffffff8020e3cb:	75 15                	jne    ffffffff8020e3e2 <mark_slice+0x232>
ffffffff8020e3cd:	48 c1 ee 0a          	shr    $0xa,%rsi
ffffffff8020e3d1:	4c 89 e1             	mov    %r12,%rcx
ffffffff8020e3d4:	48 c1 e6 03          	shl    $0x3,%rsi
ffffffff8020e3d8:	48 29 f1             	sub    %rsi,%rcx
ffffffff8020e3db:	48 8b 71 f8          	mov    -0x8(%rcx),%rsi
ffffffff8020e3df:	49 89 cc             	mov    %rcx,%r12
ffffffff8020e3e2:	f7 c6 00 03 00 00    	test   $0x300,%esi
ffffffff8020e3e8:	75 a6                	jne    ffffffff8020e390 <mark_slice+0x1e0>
ffffffff8020e3ea:	48 81 e6 ff fc ff ff 	and    $0xfffffffffffffcff,%rsi
ffffffff8020e3f1:	49 83 c7 08          	add    $0x8,%r15
ffffffff8020e3f5:	c7 05 e9 d9 02 00 00 	movl   $0x0,0x2d9e9(%rip)        # ffffffff8023bde8 <ephe_list_pure>
ffffffff8020e3fc:	00 00 00 
ffffffff8020e3ff:	48 81 ce 00 01 00 00 	or     $0x100,%rsi
ffffffff8020e406:	49 89 74 24 f8       	mov    %rsi,-0x8(%r12)
ffffffff8020e40b:	4d 89 67 f8          	mov    %r12,-0x8(%r15)
ffffffff8020e40f:	4c 3b 3d 0a da 02 00 	cmp    0x2da0a(%rip),%r15        # ffffffff8023be20 <gray_vals_end>
ffffffff8020e416:	0f 82 74 ff ff ff    	jb     ffffffff8020e390 <mark_slice+0x1e0>
ffffffff8020e41c:	48 83 c5 08          	add    $0x8,%rbp
ffffffff8020e420:	4c 89 3d 01 da 02 00 	mov    %r15,0x2da01(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e427:	e8 94 fc ff ff       	callq  ffffffff8020e0c0 <realloc_gray_vals>
ffffffff8020e42c:	4c 8b 3d f5 d9 02 00 	mov    0x2d9f5(%rip),%r15        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e433:	48 39 eb             	cmp    %rbp,%rbx
ffffffff8020e436:	0f 85 61 ff ff ff    	jne    ffffffff8020e39d <mark_slice+0x1ed>
ffffffff8020e43c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020e440:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
ffffffff8020e445:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff8020e44a:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
ffffffff8020e44f:	4d 39 f0             	cmp    %r14,%r8
ffffffff8020e452:	0f 87 70 fe ff ff    	ja     ffffffff8020e2c8 <mark_slice+0x118>
ffffffff8020e458:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8020e45d:	80 ce 03             	or     $0x3,%dh
ffffffff8020e460:	48 89 10             	mov    %rdx,(%rax)
ffffffff8020e463:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8020e468:	4e 8d 6c 28 ff       	lea    -0x1(%rax,%r13,1),%r13
ffffffff8020e46d:	4d 29 f5             	sub    %r14,%r13
ffffffff8020e470:	45 31 f6             	xor    %r14d,%r14d
ffffffff8020e473:	4d 85 ed             	test   %r13,%r13
ffffffff8020e476:	0f 8f d8 fd ff ff    	jg     ffffffff8020e254 <mark_slice+0xa4>
ffffffff8020e47c:	e9 b7 fe ff ff       	jmpq   ffffffff8020e338 <mark_slice+0x188>
ffffffff8020e481:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020e488:	48 8b 05 71 d9 02 00 	mov    0x2d971(%rip),%rax        # ffffffff8023be00 <chunk>
ffffffff8020e48f:	48 8b 40 f8          	mov    -0x8(%rax),%rax
ffffffff8020e493:	48 89 05 66 d9 02 00 	mov    %rax,0x2d966(%rip)        # ffffffff8023be00 <chunk>
ffffffff8020e49a:	48 85 c0             	test   %rax,%rax
ffffffff8020e49d:	0f 85 73 fe ff ff    	jne    ffffffff8020e316 <mark_slice+0x166>
ffffffff8020e4a3:	48 c7 05 5a d9 02 00 	movq   $0x0,0x2d95a(%rip)        # ffffffff8023be08 <markhp>
ffffffff8020e4aa:	00 00 00 00 
ffffffff8020e4ae:	4d 85 ed             	test   %r13,%r13
ffffffff8020e4b1:	0f 8f 9d fd ff ff    	jg     ffffffff8020e254 <mark_slice+0xa4>
ffffffff8020e4b7:	e9 7c fe ff ff       	jmpq   ffffffff8020e338 <mark_slice+0x188>
ffffffff8020e4bc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020e4c0:	8b 05 aa d8 02 00    	mov    0x2d8aa(%rip),%eax        # ffffffff8023bd70 <caml_gc_subphase>
ffffffff8020e4c6:	83 f8 0a             	cmp    $0xa,%eax
ffffffff8020e4c9:	0f 84 b1 00 00 00    	je     ffffffff8020e580 <mark_slice+0x3d0>
ffffffff8020e4cf:	48 8b 0d 02 d9 02 00 	mov    0x2d902(%rip),%rcx        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020e4d6:	4c 8b 21             	mov    (%rcx),%r12
ffffffff8020e4d9:	4d 85 e4             	test   %r12,%r12
ffffffff8020e4dc:	0f 85 6e 01 00 00    	jne    ffffffff8020e650 <mark_slice+0x4a0>
ffffffff8020e4e2:	8b 15 00 d9 02 00    	mov    0x2d900(%rip),%edx        # ffffffff8023bde8 <ephe_list_pure>
ffffffff8020e4e8:	85 d2                	test   %edx,%edx
ffffffff8020e4ea:	74 64                	je     ffffffff8020e550 <mark_slice+0x3a0>
ffffffff8020e4ec:	83 f8 0b             	cmp    $0xb,%eax
ffffffff8020e4ef:	0f 84 cb 01 00 00    	je     ffffffff8020e6c0 <mark_slice+0x510>
ffffffff8020e4f5:	83 f8 0c             	cmp    $0xc,%eax
ffffffff8020e4f8:	0f 85 b2 01 00 00    	jne    ffffffff8020e6b0 <mark_slice+0x500>
ffffffff8020e4fe:	c7 05 98 d8 02 00 01 	movl   $0x1,0x2d898(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020e505:	00 00 00 
ffffffff8020e508:	4d 89 fd             	mov    %r15,%r13
ffffffff8020e50b:	4c 89 e5             	mov    %r12,%rbp
ffffffff8020e50e:	e8 cd c1 00 00       	callq  ffffffff8021a6e0 <caml_final_update_clean_phase>
ffffffff8020e513:	48 83 3d 45 7f 03 00 	cmpq   $0x0,0x37f45(%rip)        # ffffffff80246460 <caml_ephe_list_head>
ffffffff8020e51a:	00 
ffffffff8020e51b:	0f 84 e3 01 00 00    	je     ffffffff8020e704 <mark_slice+0x554>
ffffffff8020e521:	48 8d 05 38 7f 03 00 	lea    0x37f38(%rip),%rax        # ffffffff80246460 <caml_ephe_list_head>
ffffffff8020e528:	48 89 05 a9 d8 02 00 	mov    %rax,0x2d8a9(%rip)        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020e52f:	e9 97 fd ff ff       	jmpq   ffffffff8020e2cb <mark_slice+0x11b>
ffffffff8020e534:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020e538:	49 8b 3c 24          	mov    (%r12),%rdi
ffffffff8020e53c:	40 f6 c7 01          	test   $0x1,%dil
ffffffff8020e540:	74 76                	je     ffffffff8020e5b8 <mark_slice+0x408>
ffffffff8020e542:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
ffffffff8020e546:	e9 97 fe ff ff       	jmpq   ffffffff8020e3e2 <mark_slice+0x232>
ffffffff8020e54b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020e550:	48 8b 05 89 d8 02 00 	mov    0x2d889(%rip),%rax        # ffffffff8023bde0 <ephes_checked_if_pure>
ffffffff8020e557:	c7 05 87 d8 02 00 01 	movl   $0x1,0x2d887(%rip)        # ffffffff8023bde8 <ephe_list_pure>
ffffffff8020e55e:	00 00 00 
ffffffff8020e561:	48 89 05 70 d8 02 00 	mov    %rax,0x2d870(%rip)        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020e568:	4d 85 ed             	test   %r13,%r13
ffffffff8020e56b:	0f 8f e3 fc ff ff    	jg     ffffffff8020e254 <mark_slice+0xa4>
ffffffff8020e571:	4d 89 fd             	mov    %r15,%r13
ffffffff8020e574:	4c 89 e5             	mov    %r12,%rbp
ffffffff8020e577:	e9 4f fd ff ff       	jmpq   ffffffff8020e2cb <mark_slice+0x11b>
ffffffff8020e57c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020e580:	4c 89 ef             	mov    %r13,%rdi
ffffffff8020e583:	4c 89 3d 9e d8 02 00 	mov    %r15,0x2d89e(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e58a:	e8 51 53 00 00       	callq  ffffffff802138e0 <caml_darken_all_roots_slice>
ffffffff8020e58f:	4c 8b 3d 92 d8 02 00 	mov    0x2d892(%rip),%r15        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e596:	49 89 c5             	mov    %rax,%r13
ffffffff8020e599:	48 85 c0             	test   %rax,%rax
ffffffff8020e59c:	0f 8e 96 fd ff ff    	jle    ffffffff8020e338 <mark_slice+0x188>
ffffffff8020e5a2:	c7 05 c4 d7 02 00 0b 	movl   $0xb,0x2d7c4(%rip)        # ffffffff8023bd70 <caml_gc_subphase>
ffffffff8020e5a9:	00 00 00 
ffffffff8020e5ac:	e9 a3 fc ff ff       	jmpq   ffffffff8020e254 <mark_slice+0xa4>
ffffffff8020e5b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020e5b8:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
ffffffff8020e5bd:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
ffffffff8020e5c2:	e8 59 1e 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020e5c7:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
ffffffff8020e5cc:	a8 07                	test   $0x7,%al
ffffffff8020e5ce:	0f 84 0e fe ff ff    	je     ffffffff8020e3e2 <mark_slice+0x232>
ffffffff8020e5d4:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
ffffffff8020e5d9:	0f b6 47 f8          	movzbl -0x8(%rdi),%eax
ffffffff8020e5dd:	44 8d 40 0a          	lea    0xa(%rax),%r8d
ffffffff8020e5e1:	41 81 e0 fb 00 00 00 	and    $0xfb,%r8d
ffffffff8020e5e8:	0f 84 f4 fd ff ff    	je     ffffffff8020e3e2 <mark_slice+0x232>
ffffffff8020e5ee:	3c fd                	cmp    $0xfd,%al
ffffffff8020e5f0:	0f 84 ec fd ff ff    	je     ffffffff8020e3e2 <mark_slice+0x232>
ffffffff8020e5f6:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
ffffffff8020e5fa:	48 8b 05 a7 d9 02 00 	mov    0x2d9a7(%rip),%rax        # ffffffff8023bfa8 <caml_young_end>
ffffffff8020e601:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020e604:	0f 83 d8 fd ff ff    	jae    ffffffff8020e3e2 <mark_slice+0x232>
ffffffff8020e60a:	4c 8b 05 9f d9 02 00 	mov    0x2d99f(%rip),%r8        # ffffffff8023bfb0 <caml_young_start>
ffffffff8020e611:	4c 39 c7             	cmp    %r8,%rdi
ffffffff8020e614:	0f 86 c8 fd ff ff    	jbe    ffffffff8020e3e2 <mark_slice+0x232>
ffffffff8020e61a:	4c 39 e0             	cmp    %r12,%rax
ffffffff8020e61d:	76 09                	jbe    ffffffff8020e628 <mark_slice+0x478>
ffffffff8020e61f:	4d 39 e0             	cmp    %r12,%r8
ffffffff8020e622:	0f 82 ba fd ff ff    	jb     ffffffff8020e3e2 <mark_slice+0x232>
ffffffff8020e628:	48 8b 05 29 d9 02 00 	mov    0x2d929(%rip),%rax        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff8020e62f:	48 3b 05 2a d9 02 00 	cmp    0x2d92a(%rip),%rax        # ffffffff8023bf60 <caml_ref_table+0x20>
ffffffff8020e636:	0f 83 08 02 00 00    	jae    ffffffff8020e844 <mark_slice+0x694>
ffffffff8020e63c:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8020e640:	48 89 3d 11 d9 02 00 	mov    %rdi,0x2d911(%rip)        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff8020e647:	48 89 28             	mov    %rbp,(%rax)
ffffffff8020e64a:	e9 93 fd ff ff       	jmpq   ffffffff8020e3e2 <mark_slice+0x232>
ffffffff8020e64f:	90                   	nop
ffffffff8020e650:	49 8b 6c 24 08       	mov    0x8(%r12),%rbp
ffffffff8020e655:	49 8d 44 24 08       	lea    0x8(%r12),%rax
ffffffff8020e65a:	48 3b 2d 67 d7 01 00 	cmp    0x1d767(%rip),%rbp        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8020e661:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8020e666:	74 0a                	je     ffffffff8020e672 <mark_slice+0x4c2>
ffffffff8020e668:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff8020e66c:	0f 84 be 00 00 00    	je     ffffffff8020e730 <mark_slice+0x580>
ffffffff8020e672:	49 83 ed 01          	sub    $0x1,%r13
ffffffff8020e676:	48 8b 05 63 d7 02 00 	mov    0x2d763(%rip),%rax        # ffffffff8023bde0 <ephes_checked_if_pure>
ffffffff8020e67d:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020e680:	0f 84 88 00 00 00    	je     ffffffff8020e70e <mark_slice+0x55e>
ffffffff8020e686:	49 8b 34 24          	mov    (%r12),%rsi
ffffffff8020e68a:	4c 89 25 4f d7 02 00 	mov    %r12,0x2d74f(%rip)        # ffffffff8023bde0 <ephes_checked_if_pure>
ffffffff8020e691:	48 89 31             	mov    %rsi,(%rcx)
ffffffff8020e694:	48 8b 08             	mov    (%rax),%rcx
ffffffff8020e697:	49 89 0c 24          	mov    %rcx,(%r12)
ffffffff8020e69b:	4c 89 20             	mov    %r12,(%rax)
ffffffff8020e69e:	4d 85 ed             	test   %r13,%r13
ffffffff8020e6a1:	0f 8f ad fb ff ff    	jg     ffffffff8020e254 <mark_slice+0xa4>
ffffffff8020e6a7:	e9 8c fc ff ff       	jmpq   ffffffff8020e338 <mark_slice+0x188>
ffffffff8020e6ac:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020e6b0:	4d 85 ed             	test   %r13,%r13
ffffffff8020e6b3:	0f 8f 9b fb ff ff    	jg     ffffffff8020e254 <mark_slice+0xa4>
ffffffff8020e6b9:	e9 b3 fe ff ff       	jmpq   ffffffff8020e571 <mark_slice+0x3c1>
ffffffff8020e6be:	66 90                	xchg   %ax,%ax
ffffffff8020e6c0:	4c 89 3d 61 d7 02 00 	mov    %r15,0x2d761(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e6c7:	4c 89 e5             	mov    %r12,%rbp
ffffffff8020e6ca:	e8 f1 bf 00 00       	callq  ffffffff8021a6c0 <caml_final_update_mark_phase>
ffffffff8020e6cf:	4c 8b 3d 52 d7 02 00 	mov    0x2d752(%rip),%r15        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e6d6:	4c 39 3d 53 d7 02 00 	cmp    %r15,0x2d753(%rip)        # ffffffff8023be30 <gray_vals>
ffffffff8020e6dd:	73 08                	jae    ffffffff8020e6e7 <mark_slice+0x537>
ffffffff8020e6df:	49 8b 6f f8          	mov    -0x8(%r15),%rbp
ffffffff8020e6e3:	49 83 ef 08          	sub    $0x8,%r15
ffffffff8020e6e7:	48 8b 05 f2 d6 02 00 	mov    0x2d6f2(%rip),%rax        # ffffffff8023bde0 <ephes_checked_if_pure>
ffffffff8020e6ee:	c7 05 78 d6 02 00 0c 	movl   $0xc,0x2d678(%rip)        # ffffffff8023bd70 <caml_gc_subphase>
ffffffff8020e6f5:	00 00 00 
ffffffff8020e6f8:	48 89 05 d9 d6 02 00 	mov    %rax,0x2d6d9(%rip)        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020e6ff:	e9 b6 fb ff ff       	jmpq   ffffffff8020e2ba <mark_slice+0x10a>
ffffffff8020e704:	e8 e7 f5 ff ff       	callq  ffffffff8020dcf0 <init_sweep_phase>
ffffffff8020e709:	e9 bd fb ff ff       	jmpq   ffffffff8020e2cb <mark_slice+0x11b>
ffffffff8020e70e:	4c 89 25 cb d6 02 00 	mov    %r12,0x2d6cb(%rip)        # ffffffff8023bde0 <ephes_checked_if_pure>
ffffffff8020e715:	4c 89 25 bc d6 02 00 	mov    %r12,0x2d6bc(%rip)        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020e71c:	4d 85 ed             	test   %r13,%r13
ffffffff8020e71f:	0f 8f 2f fb ff ff    	jg     ffffffff8020e254 <mark_slice+0xa4>
ffffffff8020e725:	e9 0e fc ff ff       	jmpq   ffffffff8020e338 <mark_slice+0x188>
ffffffff8020e72a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020e730:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020e733:	49 8b 5c 24 f8       	mov    -0x8(%r12),%rbx
ffffffff8020e738:	e8 e3 1c 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020e73d:	a8 01                	test   $0x1,%al
ffffffff8020e73f:	0f 84 f3 00 00 00    	je     ffffffff8020e838 <mark_slice+0x688>
ffffffff8020e745:	48 f7 45 f8 00 03 00 	testq  $0x300,-0x8(%rbp)
ffffffff8020e74c:	00 
ffffffff8020e74d:	0f 85 e5 00 00 00    	jne    ffffffff8020e838 <mark_slice+0x688>
ffffffff8020e753:	48 89 d8             	mov    %rbx,%rax
ffffffff8020e756:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8020e75a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff8020e75f:	81 e3 00 03 00 00    	and    $0x300,%ebx
ffffffff8020e765:	0f 84 fb 00 00 00    	je     ffffffff8020e866 <mark_slice+0x6b6>
ffffffff8020e76b:	48 83 f8 02          	cmp    $0x2,%rax
ffffffff8020e76f:	0f 86 f1 00 00 00    	jbe    ffffffff8020e866 <mark_slice+0x6b6>
ffffffff8020e775:	48 c7 44 24 10 02 00 	movq   $0x2,0x10(%rsp)
ffffffff8020e77c:	00 00 
ffffffff8020e77e:	49 8d 5c 24 10       	lea    0x10(%r12),%rbx
ffffffff8020e783:	48 8b 2b             	mov    (%rbx),%rbp
ffffffff8020e786:	48 3b 2d 3b d6 01 00 	cmp    0x1d63b(%rip),%rbp        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8020e78d:	74 7d                	je     ffffffff8020e80c <mark_slice+0x65c>
ffffffff8020e78f:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff8020e793:	74 1b                	je     ffffffff8020e7b0 <mark_slice+0x600>
ffffffff8020e795:	eb 75                	jmp    ffffffff8020e80c <mark_slice+0x65c>
ffffffff8020e797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020e79e:	00 00 
ffffffff8020e7a0:	3c fd                	cmp    $0xfd,%al
ffffffff8020e7a2:	74 4c                	je     ffffffff8020e7f0 <mark_slice+0x640>
ffffffff8020e7a4:	48 89 2b             	mov    %rbp,(%rbx)
ffffffff8020e7a7:	48 39 2d 1a d6 01 00 	cmp    %rbp,0x1d61a(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8020e7ae:	74 5c                	je     ffffffff8020e80c <mark_slice+0x65c>
ffffffff8020e7b0:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020e7b3:	e8 68 1c 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020e7b8:	a8 01                	test   $0x1,%al
ffffffff8020e7ba:	74 50                	je     ffffffff8020e80c <mark_slice+0x65c>
ffffffff8020e7bc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
ffffffff8020e7c0:	80 7d f8 fa          	cmpb   $0xfa,-0x8(%rbp)
ffffffff8020e7c4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8020e7c9:	75 25                	jne    ffffffff8020e7f0 <mark_slice+0x640>
ffffffff8020e7cb:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
ffffffff8020e7cf:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff8020e7d3:	75 1b                	jne    ffffffff8020e7f0 <mark_slice+0x640>
ffffffff8020e7d5:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020e7d8:	e8 43 1c 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020e7dd:	a8 07                	test   $0x7,%al
ffffffff8020e7df:	74 0f                	je     ffffffff8020e7f0 <mark_slice+0x640>
ffffffff8020e7e1:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
ffffffff8020e7e5:	8d 70 0a             	lea    0xa(%rax),%esi
ffffffff8020e7e8:	81 e6 fb 00 00 00    	and    $0xfb,%esi
ffffffff8020e7ee:	75 b0                	jne    ffffffff8020e7a0 <mark_slice+0x5f0>
ffffffff8020e7f0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8020e7f5:	48 f7 00 00 03 00 00 	testq  $0x300,(%rax)
ffffffff8020e7fc:	75 0e                	jne    ffffffff8020e80c <mark_slice+0x65c>
ffffffff8020e7fe:	4c 2b 6c 24 10       	sub    0x10(%rsp),%r13
ffffffff8020e803:	49 83 ed 02          	sub    $0x2,%r13
ffffffff8020e807:	e9 09 ff ff ff       	jmpq   ffffffff8020e715 <mark_slice+0x565>
ffffffff8020e80c:	48 83 44 24 10 01    	addq   $0x1,0x10(%rsp)
ffffffff8020e812:	48 83 c3 08          	add    $0x8,%rbx
ffffffff8020e816:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff8020e81b:	48 39 44 24 20       	cmp    %rax,0x20(%rsp)
ffffffff8020e820:	0f 87 5d ff ff ff    	ja     ffffffff8020e783 <mark_slice+0x5d3>
ffffffff8020e826:	49 83 ed 01          	sub    $0x1,%r13
ffffffff8020e82a:	4c 2b 6c 24 10       	sub    0x10(%rsp),%r13
ffffffff8020e82f:	eb 42                	jmp    ffffffff8020e873 <mark_slice+0x6c3>
ffffffff8020e831:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020e838:	48 8b 0d 99 d5 02 00 	mov    0x2d599(%rip),%rcx        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020e83f:	e9 2e fe ff ff       	jmpq   ffffffff8020e672 <mark_slice+0x4c2>
ffffffff8020e844:	48 8d 3d f5 d6 02 00 	lea    0x2d6f5(%rip),%rdi        # ffffffff8023bf40 <caml_ref_table>
ffffffff8020e84b:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
ffffffff8020e850:	e8 3b 39 00 00       	callq  ffffffff80212190 <caml_realloc_ref_table>
ffffffff8020e855:	48 8b 05 fc d6 02 00 	mov    0x2d6fc(%rip),%rax        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff8020e85c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
ffffffff8020e861:	e9 d6 fd ff ff       	jmpq   ffffffff8020e63c <mark_slice+0x48c>
ffffffff8020e866:	49 83 ed 03          	sub    $0x3,%r13
ffffffff8020e86a:	48 85 db             	test   %rbx,%rbx
ffffffff8020e86d:	0f 84 a2 fe ff ff    	je     ffffffff8020e715 <mark_slice+0x565>
ffffffff8020e873:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8020e878:	48 8b 10             	mov    (%rax),%rdx
ffffffff8020e87b:	f6 c2 01             	test   $0x1,%dl
ffffffff8020e87e:	74 0c                	je     ffffffff8020e88c <mark_slice+0x6dc>
ffffffff8020e880:	48 8b 0d 51 d5 02 00 	mov    0x2d551(%rip),%rcx        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020e887:	e9 ea fd ff ff       	jmpq   ffffffff8020e676 <mark_slice+0x4c6>
ffffffff8020e88c:	48 89 d7             	mov    %rdx,%rdi
ffffffff8020e88f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8020e894:	e8 87 1b 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020e899:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8020e89e:	a8 01                	test   $0x1,%al
ffffffff8020e8a0:	74 de                	je     ffffffff8020e880 <mark_slice+0x6d0>
ffffffff8020e8a2:	48 8b 5a f8          	mov    -0x8(%rdx),%rbx
ffffffff8020e8a6:	0f b6 c3             	movzbl %bl,%eax
ffffffff8020e8a9:	80 fb fa             	cmp    $0xfa,%bl
ffffffff8020e8ac:	74 58                	je     ffffffff8020e906 <mark_slice+0x756>
ffffffff8020e8ae:	3d f9 00 00 00       	cmp    $0xf9,%eax
ffffffff8020e8b3:	75 12                	jne    ffffffff8020e8c7 <mark_slice+0x717>
ffffffff8020e8b5:	48 89 d8             	mov    %rbx,%rax
ffffffff8020e8b8:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8020e8bc:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8020e8c0:	48 29 c2             	sub    %rax,%rdx
ffffffff8020e8c3:	48 8b 5a f8          	mov    -0x8(%rdx),%rbx
ffffffff8020e8c7:	f6 c7 03             	test   $0x3,%bh
ffffffff8020e8ca:	75 b4                	jne    ffffffff8020e880 <mark_slice+0x6d0>
ffffffff8020e8cc:	c7 05 12 d5 02 00 00 	movl   $0x0,0x2d512(%rip)        # ffffffff8023bde8 <ephe_list_pure>
ffffffff8020e8d3:	00 00 00 
ffffffff8020e8d6:	48 89 d8             	mov    %rbx,%rax
ffffffff8020e8d9:	80 e4 fc             	and    $0xfc,%ah
ffffffff8020e8dc:	80 cc 01             	or     $0x1,%ah
ffffffff8020e8df:	48 89 42 f8          	mov    %rax,-0x8(%rdx)
ffffffff8020e8e3:	49 8d 47 08          	lea    0x8(%r15),%rax
ffffffff8020e8e7:	48 3b 05 32 d5 02 00 	cmp    0x2d532(%rip),%rax        # ffffffff8023be20 <gray_vals_end>
ffffffff8020e8ee:	49 89 17             	mov    %rdx,(%r15)
ffffffff8020e8f1:	0f 83 9f 00 00 00    	jae    ffffffff8020e996 <mark_slice+0x7e6>
ffffffff8020e8f7:	48 8b 0d da d4 02 00 	mov    0x2d4da(%rip),%rcx        # ffffffff8023bdd8 <ephes_to_check>
ffffffff8020e8fe:	49 89 c7             	mov    %rax,%r15
ffffffff8020e901:	e9 70 fd ff ff       	jmpq   ffffffff8020e676 <mark_slice+0x4c6>
ffffffff8020e906:	48 8b 2a             	mov    (%rdx),%rbp
ffffffff8020e909:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff8020e90d:	75 b8                	jne    ffffffff8020e8c7 <mark_slice+0x717>
ffffffff8020e90f:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020e912:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8020e917:	e8 04 1b 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020e91c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8020e921:	a8 07                	test   $0x7,%al
ffffffff8020e923:	74 a2                	je     ffffffff8020e8c7 <mark_slice+0x717>
ffffffff8020e925:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
ffffffff8020e929:	8d 48 0a             	lea    0xa(%rax),%ecx
ffffffff8020e92c:	80 e1 fb             	and    $0xfb,%cl
ffffffff8020e92f:	74 96                	je     ffffffff8020e8c7 <mark_slice+0x717>
ffffffff8020e931:	3c fd                	cmp    $0xfd,%al
ffffffff8020e933:	74 92                	je     ffffffff8020e8c7 <mark_slice+0x717>
ffffffff8020e935:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8020e93a:	48 89 28             	mov    %rbp,(%rax)
ffffffff8020e93d:	48 8b 0d 64 d6 02 00 	mov    0x2d664(%rip),%rcx        # ffffffff8023bfa8 <caml_young_end>
ffffffff8020e944:	48 39 cd             	cmp    %rcx,%rbp
ffffffff8020e947:	0f 83 7a ff ff ff    	jae    ffffffff8020e8c7 <mark_slice+0x717>
ffffffff8020e94d:	48 8b 05 5c d6 02 00 	mov    0x2d65c(%rip),%rax        # ffffffff8023bfb0 <caml_young_start>
ffffffff8020e954:	48 39 c5             	cmp    %rax,%rbp
ffffffff8020e957:	0f 86 6a ff ff ff    	jbe    ffffffff8020e8c7 <mark_slice+0x717>
ffffffff8020e95d:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8020e960:	76 09                	jbe    ffffffff8020e96b <mark_slice+0x7bb>
ffffffff8020e962:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020e965:	0f 82 5c ff ff ff    	jb     ffffffff8020e8c7 <mark_slice+0x717>
ffffffff8020e96b:	48 8b 05 a6 d5 02 00 	mov    0x2d5a6(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8020e972:	48 3b 05 a7 d5 02 00 	cmp    0x2d5a7(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff8020e979:	73 3e                	jae    ffffffff8020e9b9 <mark_slice+0x809>
ffffffff8020e97b:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff8020e97f:	48 89 0d 92 d5 02 00 	mov    %rcx,0x2d592(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8020e986:	4c 89 20             	mov    %r12,(%rax)
ffffffff8020e989:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
ffffffff8020e990:	00 
ffffffff8020e991:	e9 31 ff ff ff       	jmpq   ffffffff8020e8c7 <mark_slice+0x717>
ffffffff8020e996:	48 89 05 8b d4 02 00 	mov    %rax,0x2d48b(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e99d:	e8 1e f7 ff ff       	callq  ffffffff8020e0c0 <realloc_gray_vals>
ffffffff8020e9a2:	4c 8b 3d 7f d4 02 00 	mov    0x2d47f(%rip),%r15        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020e9a9:	e9 d2 fe ff ff       	jmpq   ffffffff8020e880 <mark_slice+0x6d0>
ffffffff8020e9ae:	4c 89 e5             	mov    %r12,%rbp
ffffffff8020e9b1:	49 89 c7             	mov    %rax,%r15
ffffffff8020e9b4:	e9 67 f8 ff ff       	jmpq   ffffffff8020e220 <mark_slice+0x70>
ffffffff8020e9b9:	48 8d 3d 40 d5 02 00 	lea    0x2d540(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff8020e9c0:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8020e9c5:	e8 e6 37 00 00       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff8020e9ca:	48 8b 05 47 d5 02 00 	mov    0x2d547(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8020e9d1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8020e9d6:	eb a3                	jmp    ffffffff8020e97b <mark_slice+0x7cb>
ffffffff8020e9d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020e9df:	00 

ffffffff8020e9e0 <caml_darken>:
ffffffff8020e9e0:	40 f6 c7 01          	test   $0x1,%dil
ffffffff8020e9e4:	74 0a                	je     ffffffff8020e9f0 <caml_darken+0x10>
ffffffff8020e9e6:	c3                   	retq   
ffffffff8020e9e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020e9ee:	00 00 
ffffffff8020e9f0:	53                   	push   %rbx
ffffffff8020e9f1:	48 89 fb             	mov    %rdi,%rbx
ffffffff8020e9f4:	e8 27 1a 00 00       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8020e9f9:	a8 01                	test   $0x1,%al
ffffffff8020e9fb:	74 6a                	je     ffffffff8020ea67 <caml_darken+0x87>
ffffffff8020e9fd:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff8020ea01:	0f b6 d0             	movzbl %al,%edx
ffffffff8020ea04:	3c f9                	cmp    $0xf9,%al
ffffffff8020ea06:	75 12                	jne    ffffffff8020ea1a <caml_darken+0x3a>
ffffffff8020ea08:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8020ea0c:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8020ea10:	48 29 c3             	sub    %rax,%rbx
ffffffff8020ea13:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff8020ea17:	0f b6 d0             	movzbl %al,%edx
ffffffff8020ea1a:	f6 c4 03             	test   $0x3,%ah
ffffffff8020ea1d:	75 48                	jne    ffffffff8020ea67 <caml_darken+0x87>
ffffffff8020ea1f:	c7 05 bf d3 02 00 00 	movl   $0x0,0x2d3bf(%rip)        # ffffffff8023bde8 <ephe_list_pure>
ffffffff8020ea26:	00 00 00 
ffffffff8020ea29:	81 fa fa 00 00 00    	cmp    $0xfa,%edx
ffffffff8020ea2f:	77 2f                	ja     ffffffff8020ea60 <caml_darken+0x80>
ffffffff8020ea31:	48 8b 15 f0 d3 02 00 	mov    0x2d3f0(%rip),%rdx        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020ea38:	80 e4 fc             	and    $0xfc,%ah
ffffffff8020ea3b:	80 cc 01             	or     $0x1,%ah
ffffffff8020ea3e:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
ffffffff8020ea42:	48 8d 42 08          	lea    0x8(%rdx),%rax
ffffffff8020ea46:	48 3b 05 d3 d3 02 00 	cmp    0x2d3d3(%rip),%rax        # ffffffff8023be20 <gray_vals_end>
ffffffff8020ea4d:	48 89 05 d4 d3 02 00 	mov    %rax,0x2d3d4(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020ea54:	48 89 1a             	mov    %rbx,(%rdx)
ffffffff8020ea57:	72 0e                	jb     ffffffff8020ea67 <caml_darken+0x87>
ffffffff8020ea59:	5b                   	pop    %rbx
ffffffff8020ea5a:	e9 61 f6 ff ff       	jmpq   ffffffff8020e0c0 <realloc_gray_vals>
ffffffff8020ea5f:	90                   	nop
ffffffff8020ea60:	80 cc 03             	or     $0x3,%ah
ffffffff8020ea63:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
ffffffff8020ea67:	5b                   	pop    %rbx
ffffffff8020ea68:	c3                   	retq   
ffffffff8020ea69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020ea70 <caml_major_collection_slice>:
ffffffff8020ea70:	41 54                	push   %r12
ffffffff8020ea72:	49 89 fc             	mov    %rdi,%r12
ffffffff8020ea75:	55                   	push   %rbp
ffffffff8020ea76:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8020ea7a:	48 8b 05 87 d5 02 00 	mov    0x2d587(%rip),%rax        # ffffffff8023c008 <caml_major_slice_begin_hook>
ffffffff8020ea81:	48 85 c0             	test   %rax,%rax
ffffffff8020ea84:	74 02                	je     ffffffff8020ea88 <caml_major_collection_slice+0x18>
ffffffff8020ea86:	ff d0                	callq  *%rax
ffffffff8020ea88:	48 8b 05 31 d3 02 00 	mov    0x2d331(%rip),%rax        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8020ea8f:	48 89 c2             	mov    %rax,%rdx
ffffffff8020ea92:	48 83 c2 64          	add    $0x64,%rdx
ffffffff8020ea96:	0f 88 e4 05 00 00    	js     ffffffff8020f080 <caml_major_collection_slice+0x610>
ffffffff8020ea9c:	66 0f ef db          	pxor   %xmm3,%xmm3
ffffffff8020eaa0:	f2 48 0f 2a da       	cvtsi2sd %rdx,%xmm3
ffffffff8020eaa5:	48 85 c0             	test   %rax,%rax
ffffffff8020eaa8:	0f 88 82 05 00 00    	js     ffffffff8020f030 <caml_major_collection_slice+0x5c0>
ffffffff8020eaae:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020eab2:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8020eab7:	48 8b 05 da d2 02 00 	mov    0x2d2da(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8020eabe:	48 85 c0             	test   %rax,%rax
ffffffff8020eac1:	0f 88 92 05 00 00    	js     ffffffff8020f059 <caml_major_collection_slice+0x5e9>
ffffffff8020eac7:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020eacb:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8020ead0:	f2 0f 59 05 18 33 01 	mulsd  0x13318(%rip),%xmm0        # ffffffff80221df0 <int32_length+0x310>
ffffffff8020ead7:	00 
ffffffff8020ead8:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff8020eadc:	48 8b 15 ad d2 02 00 	mov    0x2d2ad(%rip),%rdx        # ffffffff8023bd90 <caml_dependent_size>
ffffffff8020eae3:	f2 48 0f 2a 15 b4 99 	cvtsi2sdq 0x399b4(%rip),%xmm2        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8020eaea:	03 00 
ffffffff8020eaec:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
ffffffff8020eaf0:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
ffffffff8020eaf4:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
ffffffff8020eaf8:	f2 0f 59 05 f8 32 01 	mulsd  0x132f8(%rip),%xmm0        # ffffffff80221df8 <int32_length+0x318>
ffffffff8020eaff:	00 
ffffffff8020eb00:	48 85 d2             	test   %rdx,%rdx
ffffffff8020eb03:	74 4b                	je     ffffffff8020eb50 <caml_major_collection_slice+0xe0>
ffffffff8020eb05:	48 8b 05 7c d2 02 00 	mov    0x2d27c(%rip),%rax        # ffffffff8023bd88 <caml_dependent_allocated>
ffffffff8020eb0c:	48 85 c0             	test   %rax,%rax
ffffffff8020eb0f:	0f 88 b3 04 00 00    	js     ffffffff8020efc8 <caml_major_collection_slice+0x558>
ffffffff8020eb15:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff8020eb19:	f2 48 0f 2a d0       	cvtsi2sd %rax,%xmm2
ffffffff8020eb1e:	f2 0f 59 d3          	mulsd  %xmm3,%xmm2
ffffffff8020eb22:	48 85 d2             	test   %rdx,%rdx
ffffffff8020eb25:	0f 88 c3 04 00 00    	js     ffffffff8020efee <caml_major_collection_slice+0x57e>
ffffffff8020eb2b:	66 0f ef db          	pxor   %xmm3,%xmm3
ffffffff8020eb2f:	f2 48 0f 2a da       	cvtsi2sd %rdx,%xmm3
ffffffff8020eb34:	f2 0f 5e d3          	divsd  %xmm3,%xmm2
ffffffff8020eb38:	66 0f ef ff          	pxor   %xmm7,%xmm7
ffffffff8020eb3c:	f2 0f 11 7c 24 10    	movsd  %xmm7,0x10(%rsp)
ffffffff8020eb42:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
ffffffff8020eb46:	66 0f 28 ca          	movapd %xmm2,%xmm1
ffffffff8020eb4a:	eb 12                	jmp    ffffffff8020eb5e <caml_major_collection_slice+0xee>
ffffffff8020eb4c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020eb50:	66 0f ef ff          	pxor   %xmm7,%xmm7
ffffffff8020eb54:	f2 0f 11 7c 24 10    	movsd  %xmm7,0x10(%rsp)
ffffffff8020eb5a:	66 0f 28 cf          	movapd %xmm7,%xmm1
ffffffff8020eb5e:	f2 0f 5f c8          	maxsd  %xmm0,%xmm1
ffffffff8020eb62:	66 0f 28 c1          	movapd %xmm1,%xmm0
ffffffff8020eb66:	f2 0f 10 0d 12 d2 02 	movsd  0x2d212(%rip),%xmm1        # ffffffff8023bd80 <caml_extra_heap_resources>
ffffffff8020eb6d:	00 
ffffffff8020eb6e:	f2 0f 5f c8          	maxsd  %xmm0,%xmm1
ffffffff8020eb72:	f2 0f 10 05 76 d2 02 	movsd  0x2d276(%rip),%xmm0        # ffffffff8023bdf0 <p_backlog>
ffffffff8020eb79:	00 
ffffffff8020eb7a:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
ffffffff8020eb7e:	66 0f 28 e0          	movapd %xmm0,%xmm4
ffffffff8020eb82:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8020eb88:	f2 0f 10 05 58 32 01 	movsd  0x13258(%rip),%xmm0        # ffffffff80221de8 <int32_length+0x308>
ffffffff8020eb8f:	00 
ffffffff8020eb90:	66 0f 2f e0          	comisd %xmm0,%xmm4
ffffffff8020eb94:	0f 87 9e 03 00 00    	ja     ffffffff8020ef38 <caml_major_collection_slice+0x4c8>
ffffffff8020eb9a:	48 c7 05 4b d2 02 00 	movq   $0x0,0x2d24b(%rip)        # ffffffff8023bdf0 <p_backlog>
ffffffff8020eba1:	00 00 00 00 
ffffffff8020eba5:	31 c0                	xor    %eax,%eax
ffffffff8020eba7:	4c 89 e2             	mov    %r12,%rdx
ffffffff8020ebaa:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020ebaf:	48 8d 35 a2 30 01 00 	lea    0x130a2(%rip),%rsi        # ffffffff80221c58 <int32_length+0x178>
ffffffff8020ebb6:	e8 35 36 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020ebbb:	48 8b 15 d6 d1 02 00 	mov    0x2d1d6(%rip),%rdx        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8020ebc2:	31 c0                	xor    %eax,%eax
ffffffff8020ebc4:	48 8d 35 a7 30 01 00 	lea    0x130a7(%rip),%rsi        # ffffffff80221c72 <int32_length+0x192>
ffffffff8020ebcb:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020ebd0:	e8 1b 36 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020ebd5:	f2 0f 10 05 23 32 01 	movsd  0x13223(%rip),%xmm0        # ffffffff80221e00 <int32_length+0x320>
ffffffff8020ebdc:	00 
ffffffff8020ebdd:	f2 0f 59 05 9b d1 02 	mulsd  0x2d19b(%rip),%xmm0        # ffffffff8023bd80 <caml_extra_heap_resources>
ffffffff8020ebe4:	00 
ffffffff8020ebe5:	f2 0f 10 0d 1b 32 01 	movsd  0x1321b(%rip),%xmm1        # ffffffff80221e08 <int32_length+0x328>
ffffffff8020ebec:	00 
ffffffff8020ebed:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff8020ebf1:	0f 83 29 03 00 00    	jae    ffffffff8020ef20 <caml_major_collection_slice+0x4b0>
ffffffff8020ebf7:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
ffffffff8020ebfc:	48 8d 35 86 30 01 00 	lea    0x13086(%rip),%rsi        # ffffffff80221c89 <int32_length+0x1a9>
ffffffff8020ec03:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020ec08:	31 c0                	xor    %eax,%eax
ffffffff8020ec0a:	e8 e1 35 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020ec0f:	f2 0f 10 05 e9 31 01 	movsd  0x131e9(%rip),%xmm0        # ffffffff80221e00 <int32_length+0x320>
ffffffff8020ec16:	00 
ffffffff8020ec17:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
ffffffff8020ec1d:	31 c0                	xor    %eax,%eax
ffffffff8020ec1f:	48 8d 35 80 30 01 00 	lea    0x13080(%rip),%rsi        # ffffffff80221ca6 <int32_length+0x1c6>
ffffffff8020ec26:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020ec2b:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
ffffffff8020ec30:	e8 bb 35 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020ec35:	f2 0f 10 05 c3 31 01 	movsd  0x131c3(%rip),%xmm0        # ffffffff80221e00 <int32_length+0x320>
ffffffff8020ec3c:	00 
ffffffff8020ec3d:	48 8d 35 79 30 01 00 	lea    0x13079(%rip),%rsi        # ffffffff80221cbd <int32_length+0x1dd>
ffffffff8020ec44:	31 c0                	xor    %eax,%eax
ffffffff8020ec46:	f2 0f 59 05 a2 d1 02 	mulsd  0x2d1a2(%rip),%xmm0        # ffffffff8023bdf0 <p_backlog>
ffffffff8020ec4d:	00 
ffffffff8020ec4e:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020ec53:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
ffffffff8020ec58:	e8 93 35 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020ec5d:	8b 0d 9d d0 01 00    	mov    0x1d09d(%rip),%ecx        # ffffffff8022bd00 <caml_major_window>
ffffffff8020ec63:	85 c9                	test   %ecx,%ecx
ffffffff8020ec65:	7e 3f                	jle    ffffffff8020eca6 <caml_major_collection_slice+0x236>
ffffffff8020ec67:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020ec6b:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
ffffffff8020ec71:	48 8d 05 68 cf 02 00 	lea    0x2cf68(%rip),%rax        # ffffffff8023bbe0 <caml_major_ring>
ffffffff8020ec78:	8d 51 ff             	lea    -0x1(%rcx),%edx
ffffffff8020ec7b:	f2 0f 2a c1          	cvtsi2sd %ecx,%xmm0
ffffffff8020ec7f:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8020ec83:	48 8d 14 d6          	lea    (%rsi,%rdx,8),%rdx
ffffffff8020ec87:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
ffffffff8020ec8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020ec90:	f2 0f 10 00          	movsd  (%rax),%xmm0
ffffffff8020ec94:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020ec98:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
ffffffff8020ec9c:	f2 0f 11 40 f8       	movsd  %xmm0,-0x8(%rax)
ffffffff8020eca1:	48 39 c2             	cmp    %rax,%rdx
ffffffff8020eca4:	75 ea                	jne    ffffffff8020ec90 <caml_major_collection_slice+0x220>
ffffffff8020eca6:	f2 0f 10 05 1a cf 02 	movsd  0x2cf1a(%rip),%xmm0        # ffffffff8023bbc8 <caml_gc_clock>
ffffffff8020ecad:	00 
ffffffff8020ecae:	f2 0f 10 0d 0a 2a 01 	movsd  0x12a0a(%rip),%xmm1        # ffffffff802216c0 <caml_absf_mask+0x510>
ffffffff8020ecb5:	00 
ffffffff8020ecb6:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff8020ecba:	72 25                	jb     ffffffff8020ece1 <caml_major_collection_slice+0x271>
ffffffff8020ecbc:	8b 05 16 cf 02 00    	mov    0x2cf16(%rip),%eax        # ffffffff8023bbd8 <caml_major_ring_index>
ffffffff8020ecc2:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8020ecc7:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
ffffffff8020eccb:	83 c0 01             	add    $0x1,%eax
ffffffff8020ecce:	39 c8                	cmp    %ecx,%eax
ffffffff8020ecd0:	f2 0f 11 05 f0 ce 02 	movsd  %xmm0,0x2cef0(%rip)        # ffffffff8023bbc8 <caml_gc_clock>
ffffffff8020ecd7:	00 
ffffffff8020ecd8:	0f 4d c2             	cmovge %edx,%eax
ffffffff8020ecdb:	89 05 f7 ce 02 00    	mov    %eax,0x2cef7(%rip)        # ffffffff8023bbd8 <caml_major_ring_index>
ffffffff8020ece1:	f2 0f 10 15 e7 ce 02 	movsd  0x2cee7(%rip),%xmm2        # ffffffff8023bbd0 <caml_major_work_credit>
ffffffff8020ece8:	00 
ffffffff8020ece9:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
ffffffff8020eced:	0f 84 b5 03 00 00    	je     ffffffff8020f0a8 <caml_major_collection_slice+0x638>
ffffffff8020ecf3:	4d 85 e4             	test   %r12,%r12
ffffffff8020ecf6:	0f 85 5c 02 00 00    	jne    ffffffff8020ef58 <caml_major_collection_slice+0x4e8>
ffffffff8020ecfc:	8b 05 d6 ce 02 00    	mov    0x2ced6(%rip),%eax        # ffffffff8023bbd8 <caml_major_ring_index>
ffffffff8020ed02:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff8020ed07:	83 c0 01             	add    $0x1,%eax
ffffffff8020ed0a:	39 c8                	cmp    %ecx,%eax
ffffffff8020ed0c:	0f 4d c2             	cmovge %edx,%eax
ffffffff8020ed0f:	48 8d 15 ca ce 02 00 	lea    0x2ceca(%rip),%rdx        # ffffffff8023bbe0 <caml_major_ring>
ffffffff8020ed16:	48 98                	cltq   
ffffffff8020ed18:	f2 0f 10 2c c2       	movsd  (%rdx,%rax,8),%xmm5
ffffffff8020ed1d:	f2 0f 11 6c 24 08    	movsd  %xmm5,0x8(%rsp)
ffffffff8020ed23:	f2 0f 58 54 24 08    	addsd  0x8(%rsp),%xmm2
ffffffff8020ed29:	f2 0f 11 15 9f ce 02 	movsd  %xmm2,0x2ce9f(%rip)        # ffffffff8023bbd0 <caml_major_work_credit>
ffffffff8020ed30:	00 
ffffffff8020ed31:	f2 0f 10 05 c7 30 01 	movsd  0x130c7(%rip),%xmm0        # ffffffff80221e00 <int32_length+0x320>
ffffffff8020ed38:	00 
ffffffff8020ed39:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
ffffffff8020ed3f:	31 c0                	xor    %eax,%eax
ffffffff8020ed41:	48 8d 35 8a 2f 01 00 	lea    0x12f8a(%rip),%rsi        # ffffffff80221cd2 <int32_length+0x1f2>
ffffffff8020ed48:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020ed4d:	f2 4c 0f 2c e0       	cvttsd2si %xmm0,%r12
ffffffff8020ed52:	4c 89 e2             	mov    %r12,%rdx
ffffffff8020ed55:	e8 96 34 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020ed5a:	8b 05 40 d0 02 00    	mov    0x2d040(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020ed60:	83 f8 03             	cmp    $0x3,%eax
ffffffff8020ed63:	0f 84 ff 03 00 00    	je     ffffffff8020f168 <caml_major_collection_slice+0x6f8>
ffffffff8020ed69:	f2 0f 10 6c 24 10    	movsd  0x10(%rsp),%xmm5
ffffffff8020ed6f:	66 0f 2f 6c 24 08    	comisd 0x8(%rsp),%xmm5
ffffffff8020ed75:	0f 87 15 04 00 00    	ja     ffffffff8020f190 <caml_major_collection_slice+0x720>
ffffffff8020ed7b:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020ed7f:	f2 48 0f 2a 05 18 97 	cvtsi2sdq 0x39718(%rip),%xmm0        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8020ed86:	03 00 
ffffffff8020ed88:	83 f8 01             	cmp    $0x1,%eax
ffffffff8020ed8b:	0f 86 7f 03 00 00    	jbe    ffffffff8020f110 <caml_major_collection_slice+0x6a0>
ffffffff8020ed91:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
ffffffff8020ed97:	f2 0f 59 05 79 30 01 	mulsd  0x13079(%rip),%xmm0        # ffffffff80221e18 <int32_length+0x338>
ffffffff8020ed9e:	00 
ffffffff8020ed9f:	f2 0f 5e 05 49 30 01 	divsd  0x13049(%rip),%xmm0        # ffffffff80221df0 <int32_length+0x310>
ffffffff8020eda6:	00 
ffffffff8020eda7:	f2 48 0f 2c e8       	cvttsd2si %xmm0,%rbp
ffffffff8020edac:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020edb1:	31 c0                	xor    %eax,%eax
ffffffff8020edb3:	48 89 ea             	mov    %rbp,%rdx
ffffffff8020edb6:	48 8d 35 31 2f 01 00 	lea    0x12f31(%rip),%rsi        # ffffffff80221cee <int32_length+0x20e>
ffffffff8020edbd:	e8 2e 34 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020edc2:	8b 05 d8 cf 02 00    	mov    0x2cfd8(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020edc8:	48 89 ef             	mov    %rbp,%rdi
ffffffff8020edcb:	85 c0                	test   %eax,%eax
ffffffff8020edcd:	0f 84 0d 04 00 00    	je     ffffffff8020f1e0 <caml_major_collection_slice+0x770>
ffffffff8020edd3:	83 f8 01             	cmp    $0x1,%eax
ffffffff8020edd6:	0f 84 44 04 00 00    	je     ffffffff8020f220 <caml_major_collection_slice+0x7b0>
ffffffff8020eddc:	e8 bf f1 ff ff       	callq  ffffffff8020dfa0 <sweep_slice>
ffffffff8020ede1:	48 8d 35 26 2f 01 00 	lea    0x12f26(%rip),%rsi        # ffffffff80221d0e <int32_length+0x22e>
ffffffff8020ede8:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff8020eded:	31 c0                	xor    %eax,%eax
ffffffff8020edef:	e8 fc 33 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020edf4:	f2 0f 10 74 24 08    	movsd  0x8(%rsp),%xmm6
ffffffff8020edfa:	83 3d 9f cf 02 00 03 	cmpl   $0x3,0x2cf9f(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020ee01:	f2 0f 11 74 24 10    	movsd  %xmm6,0x10(%rsp)
ffffffff8020ee07:	0f 84 33 04 00 00    	je     ffffffff8020f240 <caml_major_collection_slice+0x7d0>
ffffffff8020ee0d:	31 c0                	xor    %eax,%eax
ffffffff8020ee0f:	4c 89 e2             	mov    %r12,%rdx
ffffffff8020ee12:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8020ee17:	48 8d 35 f2 2e 01 00 	lea    0x12ef2(%rip),%rsi        # ffffffff80221d10 <int32_length+0x230>
ffffffff8020ee1e:	e8 cd 33 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020ee23:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
ffffffff8020ee29:	f2 0f 5c 54 24 10    	subsd  0x10(%rsp),%xmm2
ffffffff8020ee2f:	f2 0f 10 0d 99 cd 02 	movsd  0x2cd99(%rip),%xmm1        # ffffffff8023bbd0 <caml_major_work_credit>
ffffffff8020ee36:	00 
ffffffff8020ee37:	66 0f 28 c2          	movapd %xmm2,%xmm0
ffffffff8020ee3b:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
ffffffff8020ee41:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
ffffffff8020ee47:	e8 63 12 ff ff       	callq  ffffffff802000af <fmin>
ffffffff8020ee4c:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
ffffffff8020ee52:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
ffffffff8020ee58:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
ffffffff8020ee5c:	66 0f 2f d0          	comisd %xmm0,%xmm2
ffffffff8020ee60:	f2 0f 11 0d 68 cd 02 	movsd  %xmm1,0x2cd68(%rip)        # ffffffff8023bbd0 <caml_major_work_credit>
ffffffff8020ee67:	00 
ffffffff8020ee68:	76 4c                	jbe    ffffffff8020eeb6 <caml_major_collection_slice+0x446>
ffffffff8020ee6a:	8b 15 90 ce 01 00    	mov    0x1ce90(%rip),%edx        # ffffffff8022bd00 <caml_major_window>
ffffffff8020ee70:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020ee74:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
ffffffff8020ee78:	f2 0f 2a ca          	cvtsi2sd %edx,%xmm1
ffffffff8020ee7c:	66 0f 28 c2          	movapd %xmm2,%xmm0
ffffffff8020ee80:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
ffffffff8020ee84:	85 d2                	test   %edx,%edx
ffffffff8020ee86:	7e 2e                	jle    ffffffff8020eeb6 <caml_major_collection_slice+0x446>
ffffffff8020ee88:	48 8d 05 51 cd 02 00 	lea    0x2cd51(%rip),%rax        # ffffffff8023bbe0 <caml_major_ring>
ffffffff8020ee8f:	8d 4a ff             	lea    -0x1(%rdx),%ecx
ffffffff8020ee92:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8020ee96:	48 8d 14 ca          	lea    (%rdx,%rcx,8),%rdx
ffffffff8020ee9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020eea0:	f2 0f 10 08          	movsd  (%rax),%xmm1
ffffffff8020eea4:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020eea8:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
ffffffff8020eeac:	f2 0f 11 48 f8       	movsd  %xmm1,-0x8(%rax)
ffffffff8020eeb1:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020eeb4:	75 ea                	jne    ffffffff8020eea0 <caml_major_collection_slice+0x430>
ffffffff8020eeb6:	48 8b 05 db ce 02 00 	mov    0x2cedb(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8020eebd:	48 85 c0             	test   %rax,%rax
ffffffff8020eec0:	0f 88 4a 01 00 00    	js     ffffffff8020f010 <caml_major_collection_slice+0x5a0>
ffffffff8020eec6:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020eeca:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8020eecf:	f2 0f 58 05 e1 95 03 	addsd  0x395e1(%rip),%xmm0        # ffffffff802484b8 <caml_stat_major_words>
ffffffff8020eed6:	00 
ffffffff8020eed7:	48 8b 05 22 d1 02 00 	mov    0x2d122(%rip),%rax        # ffffffff8023c000 <caml_major_slice_end_hook>
ffffffff8020eede:	48 c7 05 af ce 02 00 	movq   $0x0,0x2ceaf(%rip)        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8020eee5:	00 00 00 00 
ffffffff8020eee9:	48 c7 05 94 ce 02 00 	movq   $0x0,0x2ce94(%rip)        # ffffffff8023bd88 <caml_dependent_allocated>
ffffffff8020eef0:	00 00 00 00 
ffffffff8020eef4:	48 c7 05 81 ce 02 00 	movq   $0x0,0x2ce81(%rip)        # ffffffff8023bd80 <caml_extra_heap_resources>
ffffffff8020eefb:	00 00 00 00 
ffffffff8020eeff:	f2 0f 11 05 b1 95 03 	movsd  %xmm0,0x395b1(%rip)        # ffffffff802484b8 <caml_stat_major_words>
ffffffff8020ef06:	00 
ffffffff8020ef07:	48 85 c0             	test   %rax,%rax
ffffffff8020ef0a:	0f 84 f8 01 00 00    	je     ffffffff8020f108 <caml_major_collection_slice+0x698>
ffffffff8020ef10:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8020ef14:	5d                   	pop    %rbp
ffffffff8020ef15:	41 5c                	pop    %r12
ffffffff8020ef17:	ff e0                	jmpq   *%rax
ffffffff8020ef19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020ef20:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
ffffffff8020ef24:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
ffffffff8020ef29:	48 0f ba fa 3f       	btc    $0x3f,%rdx
ffffffff8020ef2e:	e9 c9 fc ff ff       	jmpq   ffffffff8020ebfc <caml_major_collection_slice+0x18c>
ffffffff8020ef33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020ef38:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
ffffffff8020ef3e:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8020ef44:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
ffffffff8020ef48:	f2 0f 11 0d a0 ce 02 	movsd  %xmm1,0x2cea0(%rip)        # ffffffff8023bdf0 <p_backlog>
ffffffff8020ef4f:	00 
ffffffff8020ef50:	e9 50 fc ff ff       	jmpq   ffffffff8020eba5 <caml_major_collection_slice+0x135>
ffffffff8020ef55:	0f 1f 00             	nopl   (%rax)
ffffffff8020ef58:	48 8b 05 61 ce 02 00 	mov    0x2ce61(%rip),%rax        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8020ef5f:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020ef63:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
ffffffff8020ef68:	f2 0f 59 05 80 2e 01 	mulsd  0x12e80(%rip),%xmm0        # ffffffff80221df0 <int32_length+0x310>
ffffffff8020ef6f:	00 
ffffffff8020ef70:	48 89 c2             	mov    %rax,%rdx
ffffffff8020ef73:	48 83 c2 64          	add    $0x64,%rdx
ffffffff8020ef77:	0f 88 23 02 00 00    	js     ffffffff8020f1a0 <caml_major_collection_slice+0x730>
ffffffff8020ef7d:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020ef81:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8020ef86:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
ffffffff8020ef8a:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020ef8e:	f2 48 0f 2a 0d 09 95 	cvtsi2sdq 0x39509(%rip),%xmm1        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8020ef95:	03 00 
ffffffff8020ef97:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
ffffffff8020ef9b:	48 85 c0             	test   %rax,%rax
ffffffff8020ef9e:	0f 88 5c 02 00 00    	js     ffffffff8020f200 <caml_major_collection_slice+0x790>
ffffffff8020efa4:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020efa8:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8020efad:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
ffffffff8020efb1:	f2 0f 59 05 3f 2e 01 	mulsd  0x12e3f(%rip),%xmm0        # ffffffff80221df8 <int32_length+0x318>
ffffffff8020efb8:	00 
ffffffff8020efb9:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8020efbf:	e9 5f fd ff ff       	jmpq   ffffffff8020ed23 <caml_major_collection_slice+0x2b3>
ffffffff8020efc4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020efc8:	48 89 c1             	mov    %rax,%rcx
ffffffff8020efcb:	83 e0 01             	and    $0x1,%eax
ffffffff8020efce:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff8020efd2:	48 d1 e9             	shr    %rcx
ffffffff8020efd5:	48 09 c1             	or     %rax,%rcx
ffffffff8020efd8:	f2 48 0f 2a d1       	cvtsi2sd %rcx,%xmm2
ffffffff8020efdd:	f2 0f 58 d2          	addsd  %xmm2,%xmm2
ffffffff8020efe1:	f2 0f 59 d3          	mulsd  %xmm3,%xmm2
ffffffff8020efe5:	48 85 d2             	test   %rdx,%rdx
ffffffff8020efe8:	0f 89 3d fb ff ff    	jns    ffffffff8020eb2b <caml_major_collection_slice+0xbb>
ffffffff8020efee:	48 89 d0             	mov    %rdx,%rax
ffffffff8020eff1:	83 e2 01             	and    $0x1,%edx
ffffffff8020eff4:	66 0f ef db          	pxor   %xmm3,%xmm3
ffffffff8020eff8:	48 d1 e8             	shr    %rax
ffffffff8020effb:	48 09 d0             	or     %rdx,%rax
ffffffff8020effe:	f2 48 0f 2a d8       	cvtsi2sd %rax,%xmm3
ffffffff8020f003:	f2 0f 58 db          	addsd  %xmm3,%xmm3
ffffffff8020f007:	e9 28 fb ff ff       	jmpq   ffffffff8020eb34 <caml_major_collection_slice+0xc4>
ffffffff8020f00c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020f010:	48 89 c2             	mov    %rax,%rdx
ffffffff8020f013:	83 e0 01             	and    $0x1,%eax
ffffffff8020f016:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020f01a:	48 d1 ea             	shr    %rdx
ffffffff8020f01d:	48 09 c2             	or     %rax,%rdx
ffffffff8020f020:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
ffffffff8020f025:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff8020f029:	e9 a1 fe ff ff       	jmpq   ffffffff8020eecf <caml_major_collection_slice+0x45f>
ffffffff8020f02e:	66 90                	xchg   %ax,%ax
ffffffff8020f030:	48 89 c2             	mov    %rax,%rdx
ffffffff8020f033:	83 e0 01             	and    $0x1,%eax
ffffffff8020f036:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020f03a:	48 d1 ea             	shr    %rdx
ffffffff8020f03d:	48 09 c2             	or     %rax,%rdx
ffffffff8020f040:	48 8b 05 51 cd 02 00 	mov    0x2cd51(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8020f047:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8020f04c:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8020f050:	48 85 c0             	test   %rax,%rax
ffffffff8020f053:	0f 89 6e fa ff ff    	jns    ffffffff8020eac7 <caml_major_collection_slice+0x57>
ffffffff8020f059:	48 89 c2             	mov    %rax,%rdx
ffffffff8020f05c:	83 e0 01             	and    $0x1,%eax
ffffffff8020f05f:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020f063:	48 d1 ea             	shr    %rdx
ffffffff8020f066:	48 09 c2             	or     %rax,%rdx
ffffffff8020f069:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
ffffffff8020f06e:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff8020f072:	e9 59 fa ff ff       	jmpq   ffffffff8020ead0 <caml_major_collection_slice+0x60>
ffffffff8020f077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020f07e:	00 00 
ffffffff8020f080:	48 89 d1             	mov    %rdx,%rcx
ffffffff8020f083:	83 e2 01             	and    $0x1,%edx
ffffffff8020f086:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff8020f08a:	48 d1 e9             	shr    %rcx
ffffffff8020f08d:	48 09 d1             	or     %rdx,%rcx
ffffffff8020f090:	f2 48 0f 2a d1       	cvtsi2sd %rcx,%xmm2
ffffffff8020f095:	66 0f 28 da          	movapd %xmm2,%xmm3
ffffffff8020f099:	f2 0f 58 da          	addsd  %xmm2,%xmm3
ffffffff8020f09d:	e9 03 fa ff ff       	jmpq   ffffffff8020eaa5 <caml_major_collection_slice+0x35>
ffffffff8020f0a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020f0a8:	4c 63 25 29 cb 02 00 	movslq 0x2cb29(%rip),%r12        # ffffffff8023bbd8 <caml_major_ring_index>
ffffffff8020f0af:	66 0f 28 c2          	movapd %xmm2,%xmm0
ffffffff8020f0b3:	48 8d 2d 26 cb 02 00 	lea    0x2cb26(%rip),%rbp        # ffffffff8023bbe0 <caml_major_ring>
ffffffff8020f0ba:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
ffffffff8020f0c0:	f2 42 0f 10 4c e5 00 	movsd  0x0(%rbp,%r12,8),%xmm1
ffffffff8020f0c7:	f2 0f 11 4c 24 18    	movsd  %xmm1,0x18(%rsp)
ffffffff8020f0cd:	e8 dd 0f ff ff       	callq  ffffffff802000af <fmin>
ffffffff8020f0d2:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
ffffffff8020f0d8:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
ffffffff8020f0de:	4a c7 44 e5 00 00 00 	movq   $0x0,0x0(%rbp,%r12,8)
ffffffff8020f0e5:	00 00 
ffffffff8020f0e7:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
ffffffff8020f0eb:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
ffffffff8020f0ef:	f2 0f 11 15 d9 ca 02 	movsd  %xmm2,0x2cad9(%rip)        # ffffffff8023bbd0 <caml_major_work_credit>
ffffffff8020f0f6:	00 
ffffffff8020f0f7:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
ffffffff8020f0fd:	e9 2f fc ff ff       	jmpq   ffffffff8020ed31 <caml_major_collection_slice+0x2c1>
ffffffff8020f102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020f108:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8020f10c:	5d                   	pop    %rbp
ffffffff8020f10d:	41 5c                	pop    %r12
ffffffff8020f10f:	c3                   	retq   
ffffffff8020f110:	48 8b 05 a9 cc 02 00 	mov    0x2cca9(%rip),%rax        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8020f117:	f2 0f 59 05 f1 2c 01 	mulsd  0x12cf1(%rip),%xmm0        # ffffffff80221e10 <int32_length+0x330>
ffffffff8020f11e:	00 
ffffffff8020f11f:	48 83 c0 64          	add    $0x64,%rax
ffffffff8020f123:	0f 88 97 00 00 00    	js     ffffffff8020f1c0 <caml_major_collection_slice+0x750>
ffffffff8020f129:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020f12d:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8020f132:	48 8b 15 ff 4e 03 00 	mov    0x34eff(%rip),%rdx        # ffffffff80244038 <caml_incremental_roots_count>
ffffffff8020f139:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
ffffffff8020f13d:	48 85 d2             	test   %rdx,%rdx
ffffffff8020f140:	0f 88 1a 01 00 00    	js     ffffffff8020f260 <caml_major_collection_slice+0x7f0>
ffffffff8020f146:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020f14a:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8020f14f:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
ffffffff8020f153:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
ffffffff8020f159:	f2 48 0f 2c e8       	cvttsd2si %xmm0,%rbp
ffffffff8020f15e:	e9 49 fc ff ff       	jmpq   ffffffff8020edac <caml_major_collection_slice+0x33c>
ffffffff8020f163:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020f168:	48 8b 05 21 ce 02 00 	mov    0x2ce21(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff8020f16f:	45 31 e4             	xor    %r12d,%r12d
ffffffff8020f172:	48 39 05 0f ce 02 00 	cmp    %rax,0x2ce0f(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8020f179:	0f 85 8e fc ff ff    	jne    ffffffff8020ee0d <caml_major_collection_slice+0x39d>
ffffffff8020f17f:	e8 0c eb ff ff       	callq  ffffffff8020dc90 <start_cycle>
ffffffff8020f184:	e9 84 fc ff ff       	jmpq   ffffffff8020ee0d <caml_major_collection_slice+0x39d>
ffffffff8020f189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020f190:	45 31 e4             	xor    %r12d,%r12d
ffffffff8020f193:	e9 75 fc ff ff       	jmpq   ffffffff8020ee0d <caml_major_collection_slice+0x39d>
ffffffff8020f198:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020f19f:	00 
ffffffff8020f1a0:	48 89 d1             	mov    %rdx,%rcx
ffffffff8020f1a3:	83 e2 01             	and    $0x1,%edx
ffffffff8020f1a6:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020f1aa:	48 d1 e9             	shr    %rcx
ffffffff8020f1ad:	48 09 d1             	or     %rdx,%rcx
ffffffff8020f1b0:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
ffffffff8020f1b5:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8020f1b9:	e9 c8 fd ff ff       	jmpq   ffffffff8020ef86 <caml_major_collection_slice+0x516>
ffffffff8020f1be:	66 90                	xchg   %ax,%ax
ffffffff8020f1c0:	48 89 c2             	mov    %rax,%rdx
ffffffff8020f1c3:	83 e0 01             	and    $0x1,%eax
ffffffff8020f1c6:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020f1ca:	48 d1 ea             	shr    %rdx
ffffffff8020f1cd:	48 09 c2             	or     %rax,%rdx
ffffffff8020f1d0:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8020f1d5:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8020f1d9:	e9 54 ff ff ff       	jmpq   ffffffff8020f132 <caml_major_collection_slice+0x6c2>
ffffffff8020f1de:	66 90                	xchg   %ax,%ax
ffffffff8020f1e0:	e8 cb ef ff ff       	callq  ffffffff8020e1b0 <mark_slice>
ffffffff8020f1e5:	48 8d 35 1d 2b 01 00 	lea    0x12b1d(%rip),%rsi        # ffffffff80221d09 <int32_length+0x229>
ffffffff8020f1ec:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff8020f1f1:	31 c0                	xor    %eax,%eax
ffffffff8020f1f3:	e8 f8 2f 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020f1f8:	e9 f7 fb ff ff       	jmpq   ffffffff8020edf4 <caml_major_collection_slice+0x384>
ffffffff8020f1fd:	0f 1f 00             	nopl   (%rax)
ffffffff8020f200:	48 89 c2             	mov    %rax,%rdx
ffffffff8020f203:	83 e0 01             	and    $0x1,%eax
ffffffff8020f206:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020f20a:	48 d1 ea             	shr    %rdx
ffffffff8020f20d:	48 09 c2             	or     %rax,%rdx
ffffffff8020f210:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8020f215:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8020f219:	e9 8f fd ff ff       	jmpq   ffffffff8020efad <caml_major_collection_slice+0x53d>
ffffffff8020f21e:	66 90                	xchg   %ax,%ax
ffffffff8020f220:	e8 3b eb ff ff       	callq  ffffffff8020dd60 <clean_slice>
ffffffff8020f225:	48 8d 35 df 2a 01 00 	lea    0x12adf(%rip),%rsi        # ffffffff80221d0b <int32_length+0x22b>
ffffffff8020f22c:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff8020f231:	31 c0                	xor    %eax,%eax
ffffffff8020f233:	e8 b8 2f 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8020f238:	e9 b7 fb ff ff       	jmpq   ffffffff8020edf4 <caml_major_collection_slice+0x384>
ffffffff8020f23d:	0f 1f 00             	nopl   (%rax)
ffffffff8020f240:	e8 9b a8 00 00       	callq  ffffffff80219ae0 <caml_compact_heap_maybe>
ffffffff8020f245:	f2 0f 10 64 24 08    	movsd  0x8(%rsp),%xmm4
ffffffff8020f24b:	f2 0f 11 64 24 10    	movsd  %xmm4,0x10(%rsp)
ffffffff8020f251:	e9 b7 fb ff ff       	jmpq   ffffffff8020ee0d <caml_major_collection_slice+0x39d>
ffffffff8020f256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020f25d:	00 00 00 
ffffffff8020f260:	48 89 d0             	mov    %rdx,%rax
ffffffff8020f263:	83 e2 01             	and    $0x1,%edx
ffffffff8020f266:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8020f26a:	48 d1 e8             	shr    %rax
ffffffff8020f26d:	48 09 d0             	or     %rdx,%rax
ffffffff8020f270:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8020f275:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8020f279:	e9 d1 fe ff ff       	jmpq   ffffffff8020f14f <caml_major_collection_slice+0x6df>
ffffffff8020f27e:	66 90                	xchg   %ax,%ax

ffffffff8020f280 <caml_finish_major_cycle>:
ffffffff8020f280:	8b 05 1a cb 02 00    	mov    0x2cb1a(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020f286:	53                   	push   %rbx
ffffffff8020f287:	83 f8 03             	cmp    $0x3,%eax
ffffffff8020f28a:	0f 84 c8 00 00 00    	je     ffffffff8020f358 <caml_finish_major_cycle+0xd8>
ffffffff8020f290:	85 c0                	test   %eax,%eax
ffffffff8020f292:	75 1e                	jne    ffffffff8020f2b2 <caml_finish_major_cycle+0x32>
ffffffff8020f294:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
ffffffff8020f29b:	ff ff 7f 
ffffffff8020f29e:	66 90                	xchg   %ax,%ax
ffffffff8020f2a0:	48 89 df             	mov    %rbx,%rdi
ffffffff8020f2a3:	e8 08 ef ff ff       	callq  ffffffff8020e1b0 <mark_slice>
ffffffff8020f2a8:	8b 05 f2 ca 02 00    	mov    0x2caf2(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020f2ae:	85 c0                	test   %eax,%eax
ffffffff8020f2b0:	74 ee                	je     ffffffff8020f2a0 <caml_finish_major_cycle+0x20>
ffffffff8020f2b2:	83 f8 01             	cmp    $0x1,%eax
ffffffff8020f2b5:	75 24                	jne    ffffffff8020f2db <caml_finish_major_cycle+0x5b>
ffffffff8020f2b7:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
ffffffff8020f2be:	ff ff 7f 
ffffffff8020f2c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020f2c8:	48 89 df             	mov    %rbx,%rdi
ffffffff8020f2cb:	e8 90 ea ff ff       	callq  ffffffff8020dd60 <clean_slice>
ffffffff8020f2d0:	8b 05 ca ca 02 00    	mov    0x2caca(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020f2d6:	83 f8 01             	cmp    $0x1,%eax
ffffffff8020f2d9:	74 ed                	je     ffffffff8020f2c8 <caml_finish_major_cycle+0x48>
ffffffff8020f2db:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
ffffffff8020f2e2:	ff ff 7f 
ffffffff8020f2e5:	83 f8 02             	cmp    $0x2,%eax
ffffffff8020f2e8:	75 17                	jne    ffffffff8020f301 <caml_finish_major_cycle+0x81>
ffffffff8020f2ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8020f2f0:	48 89 df             	mov    %rbx,%rdi
ffffffff8020f2f3:	e8 a8 ec ff ff       	callq  ffffffff8020dfa0 <sweep_slice>
ffffffff8020f2f8:	83 3d a1 ca 02 00 02 	cmpl   $0x2,0x2caa1(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020f2ff:	74 ef                	je     ffffffff8020f2f0 <caml_finish_major_cycle+0x70>
ffffffff8020f301:	48 8b 05 90 ca 02 00 	mov    0x2ca90(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8020f308:	48 85 c0             	test   %rax,%rax
ffffffff8020f30b:	78 2b                	js     ffffffff8020f338 <caml_finish_major_cycle+0xb8>
ffffffff8020f30d:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020f311:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8020f316:	f2 0f 58 05 9a 91 03 	addsd  0x3919a(%rip),%xmm0        # ffffffff802484b8 <caml_stat_major_words>
ffffffff8020f31d:	00 
ffffffff8020f31e:	5b                   	pop    %rbx
ffffffff8020f31f:	48 c7 05 6e ca 02 00 	movq   $0x0,0x2ca6e(%rip)        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8020f326:	00 00 00 00 
ffffffff8020f32a:	f2 0f 11 05 86 91 03 	movsd  %xmm0,0x39186(%rip)        # ffffffff802484b8 <caml_stat_major_words>
ffffffff8020f331:	00 
ffffffff8020f332:	c3                   	retq   
ffffffff8020f333:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020f338:	48 89 c2             	mov    %rax,%rdx
ffffffff8020f33b:	83 e0 01             	and    $0x1,%eax
ffffffff8020f33e:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020f342:	48 d1 ea             	shr    %rdx
ffffffff8020f345:	48 09 c2             	or     %rax,%rdx
ffffffff8020f348:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
ffffffff8020f34d:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff8020f351:	eb c3                	jmp    ffffffff8020f316 <caml_finish_major_cycle+0x96>
ffffffff8020f353:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020f358:	48 c7 05 8d ca 02 00 	movq   $0x0,0x2ca8d(%rip)        # ffffffff8023bdf0 <p_backlog>
ffffffff8020f35f:	00 00 00 00 
ffffffff8020f363:	e8 28 e9 ff ff       	callq  ffffffff8020dc90 <start_cycle>
ffffffff8020f368:	8b 05 32 ca 02 00    	mov    0x2ca32(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020f36e:	e9 1d ff ff ff       	jmpq   ffffffff8020f290 <caml_finish_major_cycle+0x10>
ffffffff8020f373:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020f37a:	00 00 00 00 
ffffffff8020f37e:	66 90                	xchg   %ax,%ax

ffffffff8020f380 <caml_clip_heap_chunk_wsz>:
ffffffff8020f380:	48 8b 0d 31 ca 02 00 	mov    0x2ca31(%rip),%rcx        # ffffffff8023bdb8 <caml_major_heap_increment>
ffffffff8020f387:	48 81 f9 e8 03 00 00 	cmp    $0x3e8,%rcx
ffffffff8020f38e:	77 29                	ja     ffffffff8020f3b9 <caml_clip_heap_chunk_wsz+0x39>
ffffffff8020f390:	48 8b 35 09 91 03 00 	mov    0x39109(%rip),%rsi        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8020f397:	48 ba 0b d7 a3 70 3d 	movabs $0xa3d70a3d70a3d70b,%rdx
ffffffff8020f39e:	0a d7 a3 
ffffffff8020f3a1:	48 89 f0             	mov    %rsi,%rax
ffffffff8020f3a4:	48 f7 ea             	imul   %rdx
ffffffff8020f3a7:	48 01 f2             	add    %rsi,%rdx
ffffffff8020f3aa:	48 c1 fe 3f          	sar    $0x3f,%rsi
ffffffff8020f3ae:	48 c1 fa 06          	sar    $0x6,%rdx
ffffffff8020f3b2:	48 29 f2             	sub    %rsi,%rdx
ffffffff8020f3b5:	48 0f af ca          	imul   %rdx,%rcx
ffffffff8020f3b9:	48 81 ff 00 f0 00 00 	cmp    $0xf000,%rdi
ffffffff8020f3c0:	b8 00 f0 00 00       	mov    $0xf000,%eax
ffffffff8020f3c5:	48 0f 42 f8          	cmovb  %rax,%rdi
ffffffff8020f3c9:	48 89 c8             	mov    %rcx,%rax
ffffffff8020f3cc:	48 39 cf             	cmp    %rcx,%rdi
ffffffff8020f3cf:	48 0f 43 c7          	cmovae %rdi,%rax
ffffffff8020f3d3:	c3                   	retq   
ffffffff8020f3d4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020f3db:	00 00 00 00 
ffffffff8020f3df:	90                   	nop

ffffffff8020f3e0 <caml_init_major_heap>:
ffffffff8020f3e0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020f3e4:	48 8b 0d cd c9 02 00 	mov    0x2c9cd(%rip),%rcx        # ffffffff8023bdb8 <caml_major_heap_increment>
ffffffff8020f3eb:	48 c1 ef 03          	shr    $0x3,%rdi
ffffffff8020f3ef:	48 81 f9 e8 03 00 00 	cmp    $0x3e8,%rcx
ffffffff8020f3f6:	77 29                	ja     ffffffff8020f421 <caml_init_major_heap+0x41>
ffffffff8020f3f8:	48 8b 35 a1 90 03 00 	mov    0x390a1(%rip),%rsi        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8020f3ff:	48 ba 0b d7 a3 70 3d 	movabs $0xa3d70a3d70a3d70b,%rdx
ffffffff8020f406:	0a d7 a3 
ffffffff8020f409:	48 89 f0             	mov    %rsi,%rax
ffffffff8020f40c:	48 f7 ea             	imul   %rdx
ffffffff8020f40f:	48 01 f2             	add    %rsi,%rdx
ffffffff8020f412:	48 c1 fe 3f          	sar    $0x3f,%rsi
ffffffff8020f416:	48 c1 fa 06          	sar    $0x6,%rdx
ffffffff8020f41a:	48 29 f2             	sub    %rsi,%rdx
ffffffff8020f41d:	48 0f af ca          	imul   %rdx,%rcx
ffffffff8020f421:	48 81 ff 00 f0 00 00 	cmp    $0xf000,%rdi
ffffffff8020f428:	b8 00 f0 00 00       	mov    $0xf000,%eax
ffffffff8020f42d:	48 0f 42 f8          	cmovb  %rax,%rdi
ffffffff8020f431:	48 39 cf             	cmp    %rcx,%rdi
ffffffff8020f434:	48 0f 42 f9          	cmovb  %rcx,%rdi
ffffffff8020f438:	48 89 3d 61 90 03 00 	mov    %rdi,0x39061(%rip)        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8020f43f:	48 89 3d 52 90 03 00 	mov    %rdi,0x39052(%rip)        # ffffffff80248498 <caml_stat_top_heap_wsz>
ffffffff8020f446:	48 c1 e7 03          	shl    $0x3,%rdi
ffffffff8020f44a:	e8 e1 13 00 00       	callq  ffffffff80210830 <caml_alloc_for_heap>
ffffffff8020f44f:	48 89 05 5a c9 02 00 	mov    %rax,0x2c95a(%rip)        # ffffffff8023bdb0 <caml_heap_start>
ffffffff8020f456:	48 85 c0             	test   %rax,%rax
ffffffff8020f459:	0f 84 f6 00 00 00    	je     ffffffff8020f555 <caml_init_major_heap+0x175>
ffffffff8020f45f:	48 c7 40 f8 00 00 00 	movq   $0x0,-0x8(%rax)
ffffffff8020f466:	00 
ffffffff8020f467:	48 8b 35 42 c9 02 00 	mov    0x2c942(%rip),%rsi        # ffffffff8023bdb0 <caml_heap_start>
ffffffff8020f46e:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020f473:	48 8b 56 f0          	mov    -0x10(%rsi),%rdx
ffffffff8020f477:	48 c7 05 06 90 03 00 	movq   $0x1,0x39006(%rip)        # ffffffff80248488 <caml_stat_heap_chunks>
ffffffff8020f47e:	01 00 00 00 
ffffffff8020f482:	48 89 d0             	mov    %rdx,%rax
ffffffff8020f485:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
ffffffff8020f489:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8020f48d:	48 01 f2             	add    %rsi,%rdx
ffffffff8020f490:	48 89 05 09 90 03 00 	mov    %rax,0x39009(%rip)        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8020f497:	48 89 05 fa 8f 03 00 	mov    %rax,0x38ffa(%rip)        # ffffffff80248498 <caml_stat_top_heap_wsz>
ffffffff8020f49e:	e8 7d 18 00 00       	callq  ffffffff80210d20 <caml_page_table_add>
ffffffff8020f4a3:	85 c0                	test   %eax,%eax
ffffffff8020f4a5:	0f 85 c2 00 00 00    	jne    ffffffff8020f56d <caml_init_major_heap+0x18d>
ffffffff8020f4ab:	e8 80 bf 00 00       	callq  ffffffff8021b430 <caml_fl_init_merge>
ffffffff8020f4b0:	48 8b 35 e9 8f 03 00 	mov    0x38fe9(%rip),%rsi        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8020f4b7:	31 c9                	xor    %ecx,%ecx
ffffffff8020f4b9:	48 8b 3d f0 c8 02 00 	mov    0x2c8f0(%rip),%rdi        # ffffffff8023bdb0 <caml_heap_start>
ffffffff8020f4c0:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8020f4c5:	e8 c6 c2 00 00       	callq  ffffffff8021b790 <caml_make_free_blocks>
ffffffff8020f4ca:	bf 00 40 00 00       	mov    $0x4000,%edi
ffffffff8020f4cf:	c7 05 c7 c8 02 00 03 	movl   $0x3,0x2c8c7(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020f4d6:	00 00 00 
ffffffff8020f4d9:	48 c7 05 34 c9 02 00 	movq   $0x800,0x2c934(%rip)        # ffffffff8023be18 <gray_vals_size>
ffffffff8020f4e0:	00 08 00 00 
ffffffff8020f4e4:	e8 c7 12 00 00       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff8020f4e9:	48 89 05 40 c9 02 00 	mov    %rax,0x2c940(%rip)        # ffffffff8023be30 <gray_vals>
ffffffff8020f4f0:	48 85 c0             	test   %rax,%rax
ffffffff8020f4f3:	74 6c                	je     ffffffff8020f561 <caml_init_major_heap+0x181>
ffffffff8020f4f5:	48 8b 15 1c c9 02 00 	mov    0x2c91c(%rip),%rdx        # ffffffff8023be18 <gray_vals_size>
ffffffff8020f4fc:	48 89 05 25 c9 02 00 	mov    %rax,0x2c925(%rip)        # ffffffff8023be28 <gray_vals_cur>
ffffffff8020f503:	c7 05 03 c9 02 00 01 	movl   $0x1,0x2c903(%rip)        # ffffffff8023be10 <heap_is_pure>
ffffffff8020f50a:	00 00 00 
ffffffff8020f50d:	48 c7 05 80 c8 02 00 	movq   $0x0,0x2c880(%rip)        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8020f514:	00 00 00 00 
ffffffff8020f518:	48 8d 04 d0          	lea    (%rax,%rdx,8),%rax
ffffffff8020f51c:	48 c7 05 59 c8 02 00 	movq   $0x0,0x2c859(%rip)        # ffffffff8023bd80 <caml_extra_heap_resources>
ffffffff8020f523:	00 00 00 00 
ffffffff8020f527:	48 89 05 f2 c8 02 00 	mov    %rax,0x2c8f2(%rip)        # ffffffff8023be20 <gray_vals_end>
ffffffff8020f52e:	48 8d 05 ab c6 02 00 	lea    0x2c6ab(%rip),%rax        # ffffffff8023bbe0 <caml_major_ring>
ffffffff8020f535:	48 8d 90 90 01 00 00 	lea    0x190(%rax),%rdx
ffffffff8020f53c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020f540:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8020f547:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020f54b:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020f54e:	75 f0                	jne    ffffffff8020f540 <caml_init_major_heap+0x160>
ffffffff8020f550:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020f554:	c3                   	retq   
ffffffff8020f555:	48 8d 3d 14 28 01 00 	lea    0x12814(%rip),%rdi        # ffffffff80221d70 <int32_length+0x290>
ffffffff8020f55c:	e8 6f 2d 00 00       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff8020f561:	48 8d 3d 58 28 01 00 	lea    0x12858(%rip),%rdi        # ffffffff80221dc0 <int32_length+0x2e0>
ffffffff8020f568:	e8 63 2d 00 00       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff8020f56d:	48 8d 3d 24 28 01 00 	lea    0x12824(%rip),%rdi        # ffffffff80221d98 <int32_length+0x2b8>
ffffffff8020f574:	31 c0                	xor    %eax,%eax
ffffffff8020f576:	e8 55 2d 00 00       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff8020f57b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020f580 <caml_set_major_window>:
ffffffff8020f580:	8b 05 7a c7 01 00    	mov    0x1c77a(%rip),%eax        # ffffffff8022bd00 <caml_major_window>
ffffffff8020f586:	39 f8                	cmp    %edi,%eax
ffffffff8020f588:	0f 84 b5 00 00 00    	je     ffffffff8020f643 <caml_set_major_window+0xc3>
ffffffff8020f58e:	85 c0                	test   %eax,%eax
ffffffff8020f590:	0f 8e fa 00 00 00    	jle    ffffffff8020f690 <caml_set_major_window+0x110>
ffffffff8020f596:	48 8d 15 43 c6 02 00 	lea    0x2c643(%rip),%rdx        # ffffffff8023bbe0 <caml_major_ring>
ffffffff8020f59d:	8d 48 ff             	lea    -0x1(%rax),%ecx
ffffffff8020f5a0:	f2 0f 10 0d 60 28 01 	movsd  0x12860(%rip),%xmm1        # ffffffff80221e08 <int32_length+0x328>
ffffffff8020f5a7:	00 
ffffffff8020f5a8:	49 b8 00 00 00 00 00 	movabs $0x8000000000000000,%r8
ffffffff8020f5af:	00 00 80 
ffffffff8020f5b2:	48 8d 42 08          	lea    0x8(%rdx),%rax
ffffffff8020f5b6:	48 8d 34 c8          	lea    (%rax,%rcx,8),%rsi
ffffffff8020f5ba:	31 c0                	xor    %eax,%eax
ffffffff8020f5bc:	eb 10                	jmp    ffffffff8020f5ce <caml_set_major_window+0x4e>
ffffffff8020f5be:	66 90                	xchg   %ax,%ax
ffffffff8020f5c0:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8020f5c4:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
ffffffff8020f5c9:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8020f5cc:	74 2d                	je     ffffffff8020f5fb <caml_set_major_window+0x7b>
ffffffff8020f5ce:	48 85 c0             	test   %rax,%rax
ffffffff8020f5d1:	78 75                	js     ffffffff8020f648 <caml_set_major_window+0xc8>
ffffffff8020f5d3:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020f5d7:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8020f5dc:	f2 0f 58 02          	addsd  (%rdx),%xmm0
ffffffff8020f5e0:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff8020f5e4:	72 da                	jb     ffffffff8020f5c0 <caml_set_major_window+0x40>
ffffffff8020f5e6:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
ffffffff8020f5ea:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8020f5ee:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
ffffffff8020f5f3:	4c 31 c0             	xor    %r8,%rax
ffffffff8020f5f6:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8020f5f9:	75 d3                	jne    ffffffff8020f5ce <caml_set_major_window+0x4e>
ffffffff8020f5fb:	85 ff                	test   %edi,%edi
ffffffff8020f5fd:	7e 3e                	jle    ffffffff8020f63d <caml_set_major_window+0xbd>
ffffffff8020f5ff:	48 63 cf             	movslq %edi,%rcx
ffffffff8020f602:	31 d2                	xor    %edx,%edx
ffffffff8020f604:	48 f7 f1             	div    %rcx
ffffffff8020f607:	48 85 c0             	test   %rax,%rax
ffffffff8020f60a:	78 64                	js     ffffffff8020f670 <caml_set_major_window+0xf0>
ffffffff8020f60c:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020f610:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8020f615:	48 8d 05 c4 c5 02 00 	lea    0x2c5c4(%rip),%rax        # ffffffff8023bbe0 <caml_major_ring>
ffffffff8020f61c:	8d 57 ff             	lea    -0x1(%rdi),%edx
ffffffff8020f61f:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8020f623:	48 8d 14 d1          	lea    (%rcx,%rdx,8),%rdx
ffffffff8020f627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020f62e:	00 00 
ffffffff8020f630:	f2 0f 11 00          	movsd  %xmm0,(%rax)
ffffffff8020f634:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020f638:	48 39 d0             	cmp    %rdx,%rax
ffffffff8020f63b:	75 f3                	jne    ffffffff8020f630 <caml_set_major_window+0xb0>
ffffffff8020f63d:	89 3d bd c6 01 00    	mov    %edi,0x1c6bd(%rip)        # ffffffff8022bd00 <caml_major_window>
ffffffff8020f643:	c3                   	retq   
ffffffff8020f644:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020f648:	48 89 c1             	mov    %rax,%rcx
ffffffff8020f64b:	83 e0 01             	and    $0x1,%eax
ffffffff8020f64e:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020f652:	48 d1 e9             	shr    %rcx
ffffffff8020f655:	48 09 c1             	or     %rax,%rcx
ffffffff8020f658:	f2 48 0f 2a c1       	cvtsi2sd %rcx,%xmm0
ffffffff8020f65d:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff8020f661:	e9 76 ff ff ff       	jmpq   ffffffff8020f5dc <caml_set_major_window+0x5c>
ffffffff8020f666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020f66d:	00 00 00 
ffffffff8020f670:	48 89 c2             	mov    %rax,%rdx
ffffffff8020f673:	83 e0 01             	and    $0x1,%eax
ffffffff8020f676:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8020f67a:	48 d1 ea             	shr    %rdx
ffffffff8020f67d:	48 09 c2             	or     %rax,%rdx
ffffffff8020f680:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
ffffffff8020f685:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff8020f689:	eb 8a                	jmp    ffffffff8020f615 <caml_set_major_window+0x95>
ffffffff8020f68b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020f690:	31 c0                	xor    %eax,%eax
ffffffff8020f692:	e9 64 ff ff ff       	jmpq   ffffffff8020f5fb <caml_set_major_window+0x7b>
ffffffff8020f697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020f69e:	00 00 

ffffffff8020f6a0 <caml_finalise_heap>:
ffffffff8020f6a0:	53                   	push   %rbx
ffffffff8020f6a1:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
ffffffff8020f6a8:	ff ff 7f 
ffffffff8020f6ab:	e8 c0 23 00 00       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff8020f6b0:	e8 cb fb ff ff       	callq  ffffffff8020f280 <caml_finish_major_cycle>
ffffffff8020f6b5:	e8 76 bd 00 00       	callq  ffffffff8021b430 <caml_fl_init_merge>
ffffffff8020f6ba:	48 8b 05 ef c6 02 00 	mov    0x2c6ef(%rip),%rax        # ffffffff8023bdb0 <caml_heap_start>
ffffffff8020f6c1:	c7 05 d5 c6 02 00 02 	movl   $0x2,0x2c6d5(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020f6c8:	00 00 00 
ffffffff8020f6cb:	48 89 05 2e c7 02 00 	mov    %rax,0x2c72e(%rip)        # ffffffff8023be00 <chunk>
ffffffff8020f6d2:	48 89 05 cf c6 02 00 	mov    %rax,0x2c6cf(%rip)        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8020f6d9:	48 03 40 f0          	add    -0x10(%rax),%rax
ffffffff8020f6dd:	48 89 05 14 c7 02 00 	mov    %rax,0x2c714(%rip)        # ffffffff8023bdf8 <limit>
ffffffff8020f6e4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020f6e8:	48 89 df             	mov    %rbx,%rdi
ffffffff8020f6eb:	e8 b0 e8 ff ff       	callq  ffffffff8020dfa0 <sweep_slice>
ffffffff8020f6f0:	83 3d a9 c6 02 00 02 	cmpl   $0x2,0x2c6a9(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8020f6f7:	74 ef                	je     ffffffff8020f6e8 <caml_finalise_heap+0x48>
ffffffff8020f6f9:	5b                   	pop    %rbx
ffffffff8020f6fa:	c3                   	retq   
ffffffff8020f6fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020f700 <caml_MD5Init>:
ffffffff8020f700:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
ffffffff8020f707:	ab cd ef 
ffffffff8020f70a:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
ffffffff8020f711:	00 
ffffffff8020f712:	48 89 07             	mov    %rax,(%rdi)
ffffffff8020f715:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
ffffffff8020f71c:	54 32 10 
ffffffff8020f71f:	48 89 47 08          	mov    %rax,0x8(%rdi)
ffffffff8020f723:	c3                   	retq   
ffffffff8020f724:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8020f72b:	00 00 00 00 
ffffffff8020f72f:	90                   	nop

ffffffff8020f730 <caml_MD5Transform>:
ffffffff8020f730:	8b 07                	mov    (%rdi),%eax
ffffffff8020f732:	8b 4f 0c             	mov    0xc(%rdi),%ecx
ffffffff8020f735:	41 57                	push   %r15
ffffffff8020f737:	44 8b 7f 04          	mov    0x4(%rdi),%r15d
ffffffff8020f73b:	44 8b 5f 08          	mov    0x8(%rdi),%r11d
ffffffff8020f73f:	41 56                	push   %r14
ffffffff8020f741:	41 55                	push   %r13
ffffffff8020f743:	41 54                	push   %r12
ffffffff8020f745:	55                   	push   %rbp
ffffffff8020f746:	53                   	push   %rbx
ffffffff8020f747:	44 8b 36             	mov    (%rsi),%r14d
ffffffff8020f74a:	8b 5e 04             	mov    0x4(%rsi),%ebx
ffffffff8020f74d:	8b 6e 14             	mov    0x14(%rsi),%ebp
ffffffff8020f750:	41 8d 94 06 78 a4 6a 	lea    -0x28955b88(%r14,%rax,1),%edx
ffffffff8020f757:	d7 
ffffffff8020f758:	8b 47 08             	mov    0x8(%rdi),%eax
ffffffff8020f75b:	33 47 0c             	xor    0xc(%rdi),%eax
ffffffff8020f75e:	44 21 f8             	and    %r15d,%eax
ffffffff8020f761:	33 47 0c             	xor    0xc(%rdi),%eax
ffffffff8020f764:	8d 8c 0b 56 b7 c7 e8 	lea    -0x173848aa(%rbx,%rcx,1),%ecx
ffffffff8020f76b:	89 5c 24 dc          	mov    %ebx,-0x24(%rsp)
ffffffff8020f76f:	01 d0                	add    %edx,%eax
ffffffff8020f771:	8b 57 08             	mov    0x8(%rdi),%edx
ffffffff8020f774:	8b 5e 24             	mov    0x24(%rsi),%ebx
ffffffff8020f777:	c1 c0 07             	rol    $0x7,%eax
ffffffff8020f77a:	44 01 f8             	add    %r15d,%eax
ffffffff8020f77d:	44 31 fa             	xor    %r15d,%edx
ffffffff8020f780:	89 5c 24 f4          	mov    %ebx,-0xc(%rsp)
ffffffff8020f784:	21 c2                	and    %eax,%edx
ffffffff8020f786:	33 57 08             	xor    0x8(%rdi),%edx
ffffffff8020f789:	41 89 c2             	mov    %eax,%r10d
ffffffff8020f78c:	01 ca                	add    %ecx,%edx
ffffffff8020f78e:	8b 4e 08             	mov    0x8(%rsi),%ecx
ffffffff8020f791:	c1 c2 0c             	rol    $0xc,%edx
ffffffff8020f794:	46 8d 84 19 db 70 20 	lea    0x242070db(%rcx,%r11,1),%r8d
ffffffff8020f79b:	24 
ffffffff8020f79c:	45 89 fb             	mov    %r15d,%r11d
ffffffff8020f79f:	01 c2                	add    %eax,%edx
ffffffff8020f7a1:	89 4c 24 e0          	mov    %ecx,-0x20(%rsp)
ffffffff8020f7a5:	41 31 c3             	xor    %eax,%r11d
ffffffff8020f7a8:	41 31 d2             	xor    %edx,%r10d
ffffffff8020f7ab:	44 89 d9             	mov    %r11d,%ecx
ffffffff8020f7ae:	44 8b 5e 0c          	mov    0xc(%rsi),%r11d
ffffffff8020f7b2:	21 d1                	and    %edx,%ecx
ffffffff8020f7b4:	44 31 f9             	xor    %r15d,%ecx
ffffffff8020f7b7:	47 8d 8c 3b ee ce bd 	lea    -0x3e423112(%r11,%r15,1),%r9d
ffffffff8020f7be:	c1 
ffffffff8020f7bf:	44 89 5c 24 e4       	mov    %r11d,-0x1c(%rsp)
ffffffff8020f7c4:	44 01 c1             	add    %r8d,%ecx
ffffffff8020f7c7:	45 89 d0             	mov    %r10d,%r8d
ffffffff8020f7ca:	44 8b 56 10          	mov    0x10(%rsi),%r10d
ffffffff8020f7ce:	c1 c9 0f             	ror    $0xf,%ecx
ffffffff8020f7d1:	01 d1                	add    %edx,%ecx
ffffffff8020f7d3:	44 89 54 24 e8       	mov    %r10d,-0x18(%rsp)
ffffffff8020f7d8:	41 21 c8             	and    %ecx,%r8d
ffffffff8020f7db:	41 31 c0             	xor    %eax,%r8d
ffffffff8020f7de:	45 01 c8             	add    %r9d,%r8d
ffffffff8020f7e1:	45 8d 8c 02 af 0f 7c 	lea    -0xa83f051(%r10,%rax,1),%r9d
ffffffff8020f7e8:	f5 
ffffffff8020f7e9:	89 d0                	mov    %edx,%eax
ffffffff8020f7eb:	41 c1 c8 0a          	ror    $0xa,%r8d
ffffffff8020f7ef:	31 c8                	xor    %ecx,%eax
ffffffff8020f7f1:	41 01 c8             	add    %ecx,%r8d
ffffffff8020f7f4:	44 21 c0             	and    %r8d,%eax
ffffffff8020f7f7:	45 89 c5             	mov    %r8d,%r13d
ffffffff8020f7fa:	31 d0                	xor    %edx,%eax
ffffffff8020f7fc:	44 01 c8             	add    %r9d,%eax
ffffffff8020f7ff:	44 8d 8c 15 2a c6 87 	lea    0x4787c62a(%rbp,%rdx,1),%r9d
ffffffff8020f806:	47 
ffffffff8020f807:	89 ca                	mov    %ecx,%edx
ffffffff8020f809:	c1 c0 07             	rol    $0x7,%eax
ffffffff8020f80c:	44 31 c2             	xor    %r8d,%edx
ffffffff8020f80f:	44 01 c0             	add    %r8d,%eax
ffffffff8020f812:	21 c2                	and    %eax,%edx
ffffffff8020f814:	41 89 c4             	mov    %eax,%r12d
ffffffff8020f817:	31 ca                	xor    %ecx,%edx
ffffffff8020f819:	41 31 c5             	xor    %eax,%r13d
ffffffff8020f81c:	44 01 ca             	add    %r9d,%edx
ffffffff8020f81f:	44 8b 4e 18          	mov    0x18(%rsi),%r9d
ffffffff8020f823:	c1 c2 0c             	rol    $0xc,%edx
ffffffff8020f826:	01 c2                	add    %eax,%edx
ffffffff8020f828:	44 89 4c 24 ec       	mov    %r9d,-0x14(%rsp)
ffffffff8020f82d:	45 8d 8c 09 13 46 30 	lea    -0x57cfb9ed(%r9,%rcx,1),%r9d
ffffffff8020f834:	a8 
ffffffff8020f835:	44 89 e9             	mov    %r13d,%ecx
ffffffff8020f838:	21 d1                	and    %edx,%ecx
ffffffff8020f83a:	44 8b 6e 1c          	mov    0x1c(%rsi),%r13d
ffffffff8020f83e:	41 31 d4             	xor    %edx,%r12d
ffffffff8020f841:	44 31 c1             	xor    %r8d,%ecx
ffffffff8020f844:	44 01 c9             	add    %r9d,%ecx
ffffffff8020f847:	47 8d 8c 05 01 95 46 	lea    -0x2b96aff(%r13,%r8,1),%r9d
ffffffff8020f84e:	fd 
ffffffff8020f84f:	45 89 e0             	mov    %r12d,%r8d
ffffffff8020f852:	44 8b 66 20          	mov    0x20(%rsi),%r12d
ffffffff8020f856:	c1 c9 0f             	ror    $0xf,%ecx
ffffffff8020f859:	01 d1                	add    %edx,%ecx
ffffffff8020f85b:	44 89 64 24 f0       	mov    %r12d,-0x10(%rsp)
ffffffff8020f860:	44 8b 5e 28          	mov    0x28(%rsi),%r11d
ffffffff8020f864:	41 21 c8             	and    %ecx,%r8d
ffffffff8020f867:	41 31 c0             	xor    %eax,%r8d
ffffffff8020f86a:	45 01 c8             	add    %r9d,%r8d
ffffffff8020f86d:	45 8d 8c 04 d8 98 80 	lea    0x698098d8(%r12,%rax,1),%r9d
ffffffff8020f874:	69 
ffffffff8020f875:	89 d0                	mov    %edx,%eax
ffffffff8020f877:	41 c1 c8 0a          	ror    $0xa,%r8d
ffffffff8020f87b:	31 c8                	xor    %ecx,%eax
ffffffff8020f87d:	41 01 c8             	add    %ecx,%r8d
ffffffff8020f880:	44 21 c0             	and    %r8d,%eax
ffffffff8020f883:	31 d0                	xor    %edx,%eax
ffffffff8020f885:	44 01 c8             	add    %r9d,%eax
ffffffff8020f888:	44 8d 8c 13 af f7 44 	lea    -0x74bb0851(%rbx,%rdx,1),%r9d
ffffffff8020f88f:	8b 
ffffffff8020f890:	89 ca                	mov    %ecx,%edx
ffffffff8020f892:	8b 5e 30             	mov    0x30(%rsi),%ebx
ffffffff8020f895:	c1 c0 07             	rol    $0x7,%eax
ffffffff8020f898:	44 31 c2             	xor    %r8d,%edx
ffffffff8020f89b:	44 01 c0             	add    %r8d,%eax
ffffffff8020f89e:	21 c2                	and    %eax,%edx
ffffffff8020f8a0:	41 89 c4             	mov    %eax,%r12d
ffffffff8020f8a3:	31 ca                	xor    %ecx,%edx
ffffffff8020f8a5:	44 01 ca             	add    %r9d,%edx
ffffffff8020f8a8:	45 8d 8c 0b b1 5b ff 	lea    -0xa44f(%r11,%rcx,1),%r9d
ffffffff8020f8af:	ff 
ffffffff8020f8b0:	44 89 c1             	mov    %r8d,%ecx
ffffffff8020f8b3:	c1 c2 0c             	rol    $0xc,%edx
ffffffff8020f8b6:	31 c1                	xor    %eax,%ecx
ffffffff8020f8b8:	01 c2                	add    %eax,%edx
ffffffff8020f8ba:	21 d1                	and    %edx,%ecx
ffffffff8020f8bc:	44 31 c1             	xor    %r8d,%ecx
ffffffff8020f8bf:	44 01 c9             	add    %r9d,%ecx
ffffffff8020f8c2:	44 8b 4e 2c          	mov    0x2c(%rsi),%r9d
ffffffff8020f8c6:	c1 c9 0f             	ror    $0xf,%ecx
ffffffff8020f8c9:	41 31 d4             	xor    %edx,%r12d
ffffffff8020f8cc:	01 d1                	add    %edx,%ecx
ffffffff8020f8ce:	44 89 4c 24 f8       	mov    %r9d,-0x8(%rsp)
ffffffff8020f8d3:	47 8d 8c 01 be d7 5c 	lea    -0x76a32842(%r9,%r8,1),%r9d
ffffffff8020f8da:	89 
ffffffff8020f8db:	45 89 e0             	mov    %r12d,%r8d
ffffffff8020f8de:	41 21 c8             	and    %ecx,%r8d
ffffffff8020f8e1:	44 8b 66 38          	mov    0x38(%rsi),%r12d
ffffffff8020f8e5:	41 31 c0             	xor    %eax,%r8d
ffffffff8020f8e8:	45 01 c8             	add    %r9d,%r8d
ffffffff8020f8eb:	44 8d 8c 03 22 11 90 	lea    0x6b901122(%rbx,%rax,1),%r9d
ffffffff8020f8f2:	6b 
ffffffff8020f8f3:	89 d0                	mov    %edx,%eax
ffffffff8020f8f5:	41 c1 c8 0a          	ror    $0xa,%r8d
ffffffff8020f8f9:	31 c8                	xor    %ecx,%eax
ffffffff8020f8fb:	41 01 c8             	add    %ecx,%r8d
ffffffff8020f8fe:	44 21 c0             	and    %r8d,%eax
ffffffff8020f901:	31 d0                	xor    %edx,%eax
ffffffff8020f903:	44 01 c8             	add    %r9d,%eax
ffffffff8020f906:	44 8b 4e 34          	mov    0x34(%rsi),%r9d
ffffffff8020f90a:	c1 c0 07             	rol    $0x7,%eax
ffffffff8020f90d:	45 8d 94 11 93 71 98 	lea    -0x2678e6d(%r9,%rdx,1),%r10d
ffffffff8020f914:	fd 
ffffffff8020f915:	89 ca                	mov    %ecx,%edx
ffffffff8020f917:	44 01 c0             	add    %r8d,%eax
ffffffff8020f91a:	44 31 c2             	xor    %r8d,%edx
ffffffff8020f91d:	21 c2                	and    %eax,%edx
ffffffff8020f91f:	31 ca                	xor    %ecx,%edx
ffffffff8020f921:	44 01 d2             	add    %r10d,%edx
ffffffff8020f924:	45 8d 94 0c 8e 43 79 	lea    -0x5986bc72(%r12,%rcx,1),%r10d
ffffffff8020f92b:	a6 
ffffffff8020f92c:	44 89 c1             	mov    %r8d,%ecx
ffffffff8020f92f:	c1 c2 0c             	rol    $0xc,%edx
ffffffff8020f932:	31 c1                	xor    %eax,%ecx
ffffffff8020f934:	01 c2                	add    %eax,%edx
ffffffff8020f936:	21 d1                	and    %edx,%ecx
ffffffff8020f938:	44 31 c1             	xor    %r8d,%ecx
ffffffff8020f93b:	44 01 d1             	add    %r10d,%ecx
ffffffff8020f93e:	44 8b 56 3c          	mov    0x3c(%rsi),%r10d
ffffffff8020f942:	89 c6                	mov    %eax,%esi
ffffffff8020f944:	c1 c9 0f             	ror    $0xf,%ecx
ffffffff8020f947:	31 d6                	xor    %edx,%esi
ffffffff8020f949:	01 d1                	add    %edx,%ecx
ffffffff8020f94b:	47 8d 84 02 21 08 b4 	lea    0x49b40821(%r10,%r8,1),%r8d
ffffffff8020f952:	49 
ffffffff8020f953:	21 ce                	and    %ecx,%esi
ffffffff8020f955:	31 c6                	xor    %eax,%esi
ffffffff8020f957:	44 01 c6             	add    %r8d,%esi
ffffffff8020f95a:	44 8b 44 24 dc       	mov    -0x24(%rsp),%r8d
ffffffff8020f95f:	c1 ce 0a             	ror    $0xa,%esi
ffffffff8020f962:	01 ce                	add    %ecx,%esi
ffffffff8020f964:	45 8d 84 00 62 25 1e 	lea    -0x9e1da9e(%r8,%rax,1),%r8d
ffffffff8020f96b:	f6 
ffffffff8020f96c:	89 c8                	mov    %ecx,%eax
ffffffff8020f96e:	31 f0                	xor    %esi,%eax
ffffffff8020f970:	21 d0                	and    %edx,%eax
ffffffff8020f972:	31 c8                	xor    %ecx,%eax
ffffffff8020f974:	44 01 c0             	add    %r8d,%eax
ffffffff8020f977:	44 8b 44 24 ec       	mov    -0x14(%rsp),%r8d
ffffffff8020f97c:	c1 c0 05             	rol    $0x5,%eax
ffffffff8020f97f:	01 f0                	add    %esi,%eax
ffffffff8020f981:	45 8d 84 10 40 b3 40 	lea    -0x3fbf4cc0(%r8,%rdx,1),%r8d
ffffffff8020f988:	c0 
ffffffff8020f989:	89 f2                	mov    %esi,%edx
ffffffff8020f98b:	31 c2                	xor    %eax,%edx
ffffffff8020f98d:	21 ca                	and    %ecx,%edx
ffffffff8020f98f:	31 f2                	xor    %esi,%edx
ffffffff8020f991:	44 01 c2             	add    %r8d,%edx
ffffffff8020f994:	44 8b 44 24 f8       	mov    -0x8(%rsp),%r8d
ffffffff8020f999:	c1 c2 09             	rol    $0x9,%edx
ffffffff8020f99c:	01 c2                	add    %eax,%edx
ffffffff8020f99e:	45 8d 84 08 51 5a 5e 	lea    0x265e5a51(%r8,%rcx,1),%r8d
ffffffff8020f9a5:	26 
ffffffff8020f9a6:	89 c1                	mov    %eax,%ecx
ffffffff8020f9a8:	31 d1                	xor    %edx,%ecx
ffffffff8020f9aa:	21 f1                	and    %esi,%ecx
ffffffff8020f9ac:	31 c1                	xor    %eax,%ecx
ffffffff8020f9ae:	44 01 c1             	add    %r8d,%ecx
ffffffff8020f9b1:	45 8d 84 36 aa c7 b6 	lea    -0x16493856(%r14,%rsi,1),%r8d
ffffffff8020f9b8:	e9 
ffffffff8020f9b9:	89 d6                	mov    %edx,%esi
ffffffff8020f9bb:	c1 c1 0e             	rol    $0xe,%ecx
ffffffff8020f9be:	01 d1                	add    %edx,%ecx
ffffffff8020f9c0:	31 ce                	xor    %ecx,%esi
ffffffff8020f9c2:	21 c6                	and    %eax,%esi
ffffffff8020f9c4:	31 d6                	xor    %edx,%esi
ffffffff8020f9c6:	44 01 c6             	add    %r8d,%esi
ffffffff8020f9c9:	44 8d 84 05 5d 10 2f 	lea    -0x29d0efa3(%rbp,%rax,1),%r8d
ffffffff8020f9d0:	d6 
ffffffff8020f9d1:	89 c8                	mov    %ecx,%eax
ffffffff8020f9d3:	c1 ce 0c             	ror    $0xc,%esi
ffffffff8020f9d6:	01 ce                	add    %ecx,%esi
ffffffff8020f9d8:	31 f0                	xor    %esi,%eax
ffffffff8020f9da:	21 d0                	and    %edx,%eax
ffffffff8020f9dc:	31 c8                	xor    %ecx,%eax
ffffffff8020f9de:	44 01 c0             	add    %r8d,%eax
ffffffff8020f9e1:	45 8d 84 13 53 14 44 	lea    0x2441453(%r11,%rdx,1),%r8d
ffffffff8020f9e8:	02 
ffffffff8020f9e9:	89 f2                	mov    %esi,%edx
ffffffff8020f9eb:	c1 c0 05             	rol    $0x5,%eax
ffffffff8020f9ee:	01 f0                	add    %esi,%eax
ffffffff8020f9f0:	31 c2                	xor    %eax,%edx
ffffffff8020f9f2:	21 ca                	and    %ecx,%edx
ffffffff8020f9f4:	31 f2                	xor    %esi,%edx
ffffffff8020f9f6:	44 01 c2             	add    %r8d,%edx
ffffffff8020f9f9:	45 8d 84 0a 81 e6 a1 	lea    -0x275e197f(%r10,%rcx,1),%r8d
ffffffff8020fa00:	d8 
ffffffff8020fa01:	89 c1                	mov    %eax,%ecx
ffffffff8020fa03:	c1 c2 09             	rol    $0x9,%edx
ffffffff8020fa06:	01 c2                	add    %eax,%edx
ffffffff8020fa08:	31 d1                	xor    %edx,%ecx
ffffffff8020fa0a:	21 f1                	and    %esi,%ecx
ffffffff8020fa0c:	31 c1                	xor    %eax,%ecx
ffffffff8020fa0e:	44 01 c1             	add    %r8d,%ecx
ffffffff8020fa11:	44 8b 44 24 e8       	mov    -0x18(%rsp),%r8d
ffffffff8020fa16:	c1 c1 0e             	rol    $0xe,%ecx
ffffffff8020fa19:	01 d1                	add    %edx,%ecx
ffffffff8020fa1b:	45 8d 84 30 c8 fb d3 	lea    -0x182c0438(%r8,%rsi,1),%r8d
ffffffff8020fa22:	e7 
ffffffff8020fa23:	89 d6                	mov    %edx,%esi
ffffffff8020fa25:	31 ce                	xor    %ecx,%esi
ffffffff8020fa27:	21 c6                	and    %eax,%esi
ffffffff8020fa29:	31 d6                	xor    %edx,%esi
ffffffff8020fa2b:	44 01 c6             	add    %r8d,%esi
ffffffff8020fa2e:	44 8b 44 24 f4       	mov    -0xc(%rsp),%r8d
ffffffff8020fa33:	c1 ce 0c             	ror    $0xc,%esi
ffffffff8020fa36:	01 ce                	add    %ecx,%esi
ffffffff8020fa38:	45 8d 84 00 e6 cd e1 	lea    0x21e1cde6(%r8,%rax,1),%r8d
ffffffff8020fa3f:	21 
ffffffff8020fa40:	89 c8                	mov    %ecx,%eax
ffffffff8020fa42:	31 f0                	xor    %esi,%eax
ffffffff8020fa44:	21 d0                	and    %edx,%eax
ffffffff8020fa46:	31 c8                	xor    %ecx,%eax
ffffffff8020fa48:	44 01 c0             	add    %r8d,%eax
ffffffff8020fa4b:	45 8d 84 14 d6 07 37 	lea    -0x3cc8f82a(%r12,%rdx,1),%r8d
ffffffff8020fa52:	c3 
ffffffff8020fa53:	89 f2                	mov    %esi,%edx
ffffffff8020fa55:	c1 c0 05             	rol    $0x5,%eax
ffffffff8020fa58:	01 f0                	add    %esi,%eax
ffffffff8020fa5a:	31 c2                	xor    %eax,%edx
ffffffff8020fa5c:	21 ca                	and    %ecx,%edx
ffffffff8020fa5e:	31 f2                	xor    %esi,%edx
ffffffff8020fa60:	44 01 c2             	add    %r8d,%edx
ffffffff8020fa63:	44 8b 44 24 e4       	mov    -0x1c(%rsp),%r8d
ffffffff8020fa68:	c1 c2 09             	rol    $0x9,%edx
ffffffff8020fa6b:	01 c2                	add    %eax,%edx
ffffffff8020fa6d:	45 8d 84 08 87 0d d5 	lea    -0xb2af279(%r8,%rcx,1),%r8d
ffffffff8020fa74:	f4 
ffffffff8020fa75:	89 c1                	mov    %eax,%ecx
ffffffff8020fa77:	31 d1                	xor    %edx,%ecx
ffffffff8020fa79:	21 f1                	and    %esi,%ecx
ffffffff8020fa7b:	31 c1                	xor    %eax,%ecx
ffffffff8020fa7d:	44 01 c1             	add    %r8d,%ecx
ffffffff8020fa80:	44 8b 44 24 f0       	mov    -0x10(%rsp),%r8d
ffffffff8020fa85:	c1 c1 0e             	rol    $0xe,%ecx
ffffffff8020fa88:	01 d1                	add    %edx,%ecx
ffffffff8020fa8a:	41 8d b4 30 ed 14 5a 	lea    0x455a14ed(%r8,%rsi,1),%esi
ffffffff8020fa91:	45 
ffffffff8020fa92:	41 89 d0             	mov    %edx,%r8d
ffffffff8020fa95:	41 31 c8             	xor    %ecx,%r8d
ffffffff8020fa98:	41 21 c0             	and    %eax,%r8d
ffffffff8020fa9b:	41 31 d0             	xor    %edx,%r8d
ffffffff8020fa9e:	41 01 f0             	add    %esi,%r8d
ffffffff8020faa1:	41 8d b4 01 05 e9 e3 	lea    -0x561c16fb(%r9,%rax,1),%esi
ffffffff8020faa8:	a9 
ffffffff8020faa9:	89 c8                	mov    %ecx,%eax
ffffffff8020faab:	41 c1 c8 0c          	ror    $0xc,%r8d
ffffffff8020faaf:	41 01 c8             	add    %ecx,%r8d
ffffffff8020fab2:	44 31 c0             	xor    %r8d,%eax
ffffffff8020fab5:	21 d0                	and    %edx,%eax
ffffffff8020fab7:	31 c8                	xor    %ecx,%eax
ffffffff8020fab9:	01 f0                	add    %esi,%eax
ffffffff8020fabb:	8b 74 24 e0          	mov    -0x20(%rsp),%esi
ffffffff8020fabf:	c1 c0 05             	rol    $0x5,%eax
ffffffff8020fac2:	44 01 c0             	add    %r8d,%eax
ffffffff8020fac5:	8d b4 16 f8 a3 ef fc 	lea    -0x3105c08(%rsi,%rdx,1),%esi
ffffffff8020facc:	44 89 c2             	mov    %r8d,%edx
ffffffff8020facf:	31 c2                	xor    %eax,%edx
ffffffff8020fad1:	21 ca                	and    %ecx,%edx
ffffffff8020fad3:	41 8d 8c 0d d9 02 6f 	lea    0x676f02d9(%r13,%rcx,1),%ecx
ffffffff8020fada:	67 
ffffffff8020fadb:	44 31 c2             	xor    %r8d,%edx
ffffffff8020fade:	01 f2                	add    %esi,%edx
ffffffff8020fae0:	89 c6                	mov    %eax,%esi
ffffffff8020fae2:	c1 c2 09             	rol    $0x9,%edx
ffffffff8020fae5:	01 c2                	add    %eax,%edx
ffffffff8020fae7:	31 d6                	xor    %edx,%esi
ffffffff8020fae9:	44 21 c6             	and    %r8d,%esi
ffffffff8020faec:	46 8d 84 03 8a 4c 2a 	lea    -0x72d5b376(%rbx,%r8,1),%r8d
ffffffff8020faf3:	8d 
ffffffff8020faf4:	31 c6                	xor    %eax,%esi
ffffffff8020faf6:	44 89 44 24 fc       	mov    %r8d,-0x4(%rsp)
ffffffff8020fafb:	01 ce                	add    %ecx,%esi
ffffffff8020fafd:	89 d1                	mov    %edx,%ecx
ffffffff8020faff:	c1 c6 0e             	rol    $0xe,%esi
ffffffff8020fb02:	01 d6                	add    %edx,%esi
ffffffff8020fb04:	31 f1                	xor    %esi,%ecx
ffffffff8020fb06:	41 89 c8             	mov    %ecx,%r8d
ffffffff8020fb09:	41 21 c0             	and    %eax,%r8d
ffffffff8020fb0c:	8d 84 05 42 39 fa ff 	lea    -0x5c6be(%rbp,%rax,1),%eax
ffffffff8020fb13:	41 31 d0             	xor    %edx,%r8d
ffffffff8020fb16:	44 03 44 24 fc       	add    -0x4(%rsp),%r8d
ffffffff8020fb1b:	41 c1 c8 0c          	ror    $0xc,%r8d
ffffffff8020fb1f:	41 01 f0             	add    %esi,%r8d
ffffffff8020fb22:	44 31 c1             	xor    %r8d,%ecx
ffffffff8020fb25:	01 c1                	add    %eax,%ecx
ffffffff8020fb27:	8b 44 24 f0          	mov    -0x10(%rsp),%eax
ffffffff8020fb2b:	c1 c1 04             	rol    $0x4,%ecx
ffffffff8020fb2e:	8d 84 10 81 f6 71 87 	lea    -0x788e097f(%rax,%rdx,1),%eax
ffffffff8020fb35:	89 f2                	mov    %esi,%edx
ffffffff8020fb37:	44 01 c1             	add    %r8d,%ecx
ffffffff8020fb3a:	44 31 c2             	xor    %r8d,%edx
ffffffff8020fb3d:	31 ca                	xor    %ecx,%edx
ffffffff8020fb3f:	01 c2                	add    %eax,%edx
ffffffff8020fb41:	8b 44 24 f8          	mov    -0x8(%rsp),%eax
ffffffff8020fb45:	c1 c2 0b             	rol    $0xb,%edx
ffffffff8020fb48:	8d 84 30 22 61 9d 6d 	lea    0x6d9d6122(%rax,%rsi,1),%eax
ffffffff8020fb4f:	44 89 c6             	mov    %r8d,%esi
ffffffff8020fb52:	01 ca                	add    %ecx,%edx
ffffffff8020fb54:	31 ce                	xor    %ecx,%esi
ffffffff8020fb56:	47 8d 84 04 0c 38 e5 	lea    -0x21ac7f4(%r12,%r8,1),%r8d
ffffffff8020fb5d:	fd 
ffffffff8020fb5e:	31 d6                	xor    %edx,%esi
ffffffff8020fb60:	01 c6                	add    %eax,%esi
ffffffff8020fb62:	89 c8                	mov    %ecx,%eax
ffffffff8020fb64:	c1 c6 10             	rol    $0x10,%esi
ffffffff8020fb67:	31 d0                	xor    %edx,%eax
ffffffff8020fb69:	01 d6                	add    %edx,%esi
ffffffff8020fb6b:	31 f0                	xor    %esi,%eax
ffffffff8020fb6d:	44 01 c0             	add    %r8d,%eax
ffffffff8020fb70:	44 8b 44 24 dc       	mov    -0x24(%rsp),%r8d
ffffffff8020fb75:	c1 c8 09             	ror    $0x9,%eax
ffffffff8020fb78:	45 8d 84 08 44 ea be 	lea    -0x5b4115bc(%r8,%rcx,1),%r8d
ffffffff8020fb7f:	a4 
ffffffff8020fb80:	89 d1                	mov    %edx,%ecx
ffffffff8020fb82:	01 f0                	add    %esi,%eax
ffffffff8020fb84:	31 f1                	xor    %esi,%ecx
ffffffff8020fb86:	31 c1                	xor    %eax,%ecx
ffffffff8020fb88:	44 01 c1             	add    %r8d,%ecx
ffffffff8020fb8b:	44 8b 44 24 e8       	mov    -0x18(%rsp),%r8d
ffffffff8020fb90:	c1 c1 04             	rol    $0x4,%ecx
ffffffff8020fb93:	41 8d 94 10 a9 cf de 	lea    0x4bdecfa9(%r8,%rdx,1),%edx
ffffffff8020fb9a:	4b 
ffffffff8020fb9b:	41 89 f0             	mov    %esi,%r8d
ffffffff8020fb9e:	01 c1                	add    %eax,%ecx
ffffffff8020fba0:	41 31 c0             	xor    %eax,%r8d
ffffffff8020fba3:	41 8d b4 35 60 4b bb 	lea    -0x944b4a0(%r13,%rsi,1),%esi
ffffffff8020fbaa:	f6 
ffffffff8020fbab:	41 31 c8             	xor    %ecx,%r8d
ffffffff8020fbae:	41 01 d0             	add    %edx,%r8d
ffffffff8020fbb1:	89 c2                	mov    %eax,%edx
ffffffff8020fbb3:	41 8d 84 03 70 bc bf 	lea    -0x41404390(%r11,%rax,1),%eax
ffffffff8020fbba:	be 
ffffffff8020fbbb:	41 c1 c0 0b          	rol    $0xb,%r8d
ffffffff8020fbbf:	31 ca                	xor    %ecx,%edx
ffffffff8020fbc1:	41 01 c8             	add    %ecx,%r8d
ffffffff8020fbc4:	44 31 c2             	xor    %r8d,%edx
ffffffff8020fbc7:	01 f2                	add    %esi,%edx
ffffffff8020fbc9:	89 ce                	mov    %ecx,%esi
ffffffff8020fbcb:	c1 c2 10             	rol    $0x10,%edx
ffffffff8020fbce:	44 31 c6             	xor    %r8d,%esi
ffffffff8020fbd1:	44 01 c2             	add    %r8d,%edx
ffffffff8020fbd4:	31 d6                	xor    %edx,%esi
ffffffff8020fbd6:	01 c6                	add    %eax,%esi
ffffffff8020fbd8:	41 8d 84 09 c6 7e 9b 	lea    0x289b7ec6(%r9,%rcx,1),%eax
ffffffff8020fbdf:	28 
ffffffff8020fbe0:	44 89 c1             	mov    %r8d,%ecx
ffffffff8020fbe3:	c1 ce 09             	ror    $0x9,%esi
ffffffff8020fbe6:	31 d1                	xor    %edx,%ecx
ffffffff8020fbe8:	47 8d 84 06 fa 27 a1 	lea    -0x155ed806(%r14,%r8,1),%r8d
ffffffff8020fbef:	ea 
ffffffff8020fbf0:	01 d6                	add    %edx,%esi
ffffffff8020fbf2:	31 f1                	xor    %esi,%ecx
ffffffff8020fbf4:	01 c1                	add    %eax,%ecx
ffffffff8020fbf6:	89 d0                	mov    %edx,%eax
ffffffff8020fbf8:	c1 c1 04             	rol    $0x4,%ecx
ffffffff8020fbfb:	31 f0                	xor    %esi,%eax
ffffffff8020fbfd:	01 f1                	add    %esi,%ecx
ffffffff8020fbff:	31 c8                	xor    %ecx,%eax
ffffffff8020fc01:	44 01 c0             	add    %r8d,%eax
ffffffff8020fc04:	44 8b 44 24 e4       	mov    -0x1c(%rsp),%r8d
ffffffff8020fc09:	c1 c0 0b             	rol    $0xb,%eax
ffffffff8020fc0c:	41 8d 94 10 85 30 ef 	lea    -0x2b10cf7b(%r8,%rdx,1),%edx
ffffffff8020fc13:	d4 
ffffffff8020fc14:	41 89 f0             	mov    %esi,%r8d
ffffffff8020fc17:	01 c8                	add    %ecx,%eax
ffffffff8020fc19:	41 31 c8             	xor    %ecx,%r8d
ffffffff8020fc1c:	41 31 c0             	xor    %eax,%r8d
ffffffff8020fc1f:	41 01 d0             	add    %edx,%r8d
ffffffff8020fc22:	8b 54 24 ec          	mov    -0x14(%rsp),%edx
ffffffff8020fc26:	41 c1 c0 10          	rol    $0x10,%r8d
ffffffff8020fc2a:	8d 94 32 05 1d 88 04 	lea    0x4881d05(%rdx,%rsi,1),%edx
ffffffff8020fc31:	89 ce                	mov    %ecx,%esi
ffffffff8020fc33:	41 01 c0             	add    %eax,%r8d
ffffffff8020fc36:	31 c6                	xor    %eax,%esi
ffffffff8020fc38:	44 31 c6             	xor    %r8d,%esi
ffffffff8020fc3b:	01 d6                	add    %edx,%esi
ffffffff8020fc3d:	8b 54 24 f4          	mov    -0xc(%rsp),%edx
ffffffff8020fc41:	c1 ce 09             	ror    $0x9,%esi
ffffffff8020fc44:	8d 8c 0a 39 d0 d4 d9 	lea    -0x262b2fc7(%rdx,%rcx,1),%ecx
ffffffff8020fc4b:	89 c2                	mov    %eax,%edx
ffffffff8020fc4d:	44 01 c6             	add    %r8d,%esi
ffffffff8020fc50:	44 31 c2             	xor    %r8d,%edx
ffffffff8020fc53:	8d 84 03 e5 99 db e6 	lea    -0x1924661b(%rbx,%rax,1),%eax
ffffffff8020fc5a:	31 f2                	xor    %esi,%edx
ffffffff8020fc5c:	01 ca                	add    %ecx,%edx
ffffffff8020fc5e:	44 89 c1             	mov    %r8d,%ecx
ffffffff8020fc61:	c1 c2 04             	rol    $0x4,%edx
ffffffff8020fc64:	01 f2                	add    %esi,%edx
ffffffff8020fc66:	31 f1                	xor    %esi,%ecx
ffffffff8020fc68:	31 d1                	xor    %edx,%ecx
ffffffff8020fc6a:	01 c1                	add    %eax,%ecx
ffffffff8020fc6c:	43 8d 84 02 f8 7c a2 	lea    0x1fa27cf8(%r10,%r8,1),%eax
ffffffff8020fc73:	1f 
ffffffff8020fc74:	41 89 f0             	mov    %esi,%r8d
ffffffff8020fc77:	c1 c1 0b             	rol    $0xb,%ecx
ffffffff8020fc7a:	41 31 d0             	xor    %edx,%r8d
ffffffff8020fc7d:	01 d1                	add    %edx,%ecx
ffffffff8020fc7f:	41 31 c8             	xor    %ecx,%r8d
ffffffff8020fc82:	41 01 c0             	add    %eax,%r8d
ffffffff8020fc85:	8b 44 24 e0          	mov    -0x20(%rsp),%eax
ffffffff8020fc89:	41 c1 c0 10          	rol    $0x10,%r8d
ffffffff8020fc8d:	8d b4 30 65 56 ac c4 	lea    -0x3b53a99b(%rax,%rsi,1),%esi
ffffffff8020fc94:	89 d0                	mov    %edx,%eax
ffffffff8020fc96:	41 01 c8             	add    %ecx,%r8d
ffffffff8020fc99:	31 c8                	xor    %ecx,%eax
ffffffff8020fc9b:	44 31 c0             	xor    %r8d,%eax
ffffffff8020fc9e:	01 f0                	add    %esi,%eax
ffffffff8020fca0:	41 8d b4 16 44 22 29 	lea    -0xbd6ddbc(%r14,%rdx,1),%esi
ffffffff8020fca7:	f4 
ffffffff8020fca8:	89 ca                	mov    %ecx,%edx
ffffffff8020fcaa:	44 8b 74 24 e4       	mov    -0x1c(%rsp),%r14d
ffffffff8020fcaf:	c1 c8 09             	ror    $0x9,%eax
ffffffff8020fcb2:	f7 d2                	not    %edx
ffffffff8020fcb4:	44 01 c0             	add    %r8d,%eax
ffffffff8020fcb7:	09 c2                	or     %eax,%edx
ffffffff8020fcb9:	44 31 c2             	xor    %r8d,%edx
ffffffff8020fcbc:	01 f2                	add    %esi,%edx
ffffffff8020fcbe:	41 8d b4 0d 97 ff 2a 	lea    0x432aff97(%r13,%rcx,1),%esi
ffffffff8020fcc5:	43 
ffffffff8020fcc6:	44 89 c1             	mov    %r8d,%ecx
ffffffff8020fcc9:	c1 c2 06             	rol    $0x6,%edx
ffffffff8020fccc:	f7 d1                	not    %ecx
ffffffff8020fcce:	47 8d 84 04 a7 23 94 	lea    -0x546bdc59(%r12,%r8,1),%r8d
ffffffff8020fcd5:	ab 
ffffffff8020fcd6:	01 c2                	add    %eax,%edx
ffffffff8020fcd8:	09 d1                	or     %edx,%ecx
ffffffff8020fcda:	31 c1                	xor    %eax,%ecx
ffffffff8020fcdc:	01 f1                	add    %esi,%ecx
ffffffff8020fcde:	89 c6                	mov    %eax,%esi
ffffffff8020fce0:	c1 c1 0a             	rol    $0xa,%ecx
ffffffff8020fce3:	f7 d6                	not    %esi
ffffffff8020fce5:	01 d1                	add    %edx,%ecx
ffffffff8020fce7:	09 ce                	or     %ecx,%esi
ffffffff8020fce9:	31 d6                	xor    %edx,%esi
ffffffff8020fceb:	44 01 c6             	add    %r8d,%esi
ffffffff8020fcee:	44 8d 84 05 39 a0 93 	lea    -0x36c5fc7(%rbp,%rax,1),%r8d
ffffffff8020fcf5:	fc 
ffffffff8020fcf6:	89 d5                	mov    %edx,%ebp
ffffffff8020fcf8:	c1 c6 0f             	rol    $0xf,%esi
ffffffff8020fcfb:	f7 d5                	not    %ebp
ffffffff8020fcfd:	01 ce                	add    %ecx,%esi
ffffffff8020fcff:	89 e8                	mov    %ebp,%eax
ffffffff8020fd01:	89 cd                	mov    %ecx,%ebp
ffffffff8020fd03:	09 f0                	or     %esi,%eax
ffffffff8020fd05:	f7 d5                	not    %ebp
ffffffff8020fd07:	31 c8                	xor    %ecx,%eax
ffffffff8020fd09:	44 01 c0             	add    %r8d,%eax
ffffffff8020fd0c:	44 8d 84 13 c3 59 5b 	lea    0x655b59c3(%rbx,%rdx,1),%r8d
ffffffff8020fd13:	65 
ffffffff8020fd14:	89 ea                	mov    %ebp,%edx
ffffffff8020fd16:	8b 5c 24 e0          	mov    -0x20(%rsp),%ebx
ffffffff8020fd1a:	c1 c8 0b             	ror    $0xb,%eax
ffffffff8020fd1d:	01 f0                	add    %esi,%eax
ffffffff8020fd1f:	09 c2                	or     %eax,%edx
ffffffff8020fd21:	31 f2                	xor    %esi,%edx
ffffffff8020fd23:	44 01 c2             	add    %r8d,%edx
ffffffff8020fd26:	45 8d 84 0e 92 cc 0c 	lea    -0x70f3336e(%r14,%rcx,1),%r8d
ffffffff8020fd2d:	8f 
ffffffff8020fd2e:	89 f1                	mov    %esi,%ecx
ffffffff8020fd30:	44 8b 74 24 ec       	mov    -0x14(%rsp),%r14d
ffffffff8020fd35:	c1 c2 06             	rol    $0x6,%edx
ffffffff8020fd38:	f7 d1                	not    %ecx
ffffffff8020fd3a:	01 c2                	add    %eax,%edx
ffffffff8020fd3c:	09 d1                	or     %edx,%ecx
ffffffff8020fd3e:	89 d5                	mov    %edx,%ebp
ffffffff8020fd40:	31 c1                	xor    %eax,%ecx
ffffffff8020fd42:	f7 d5                	not    %ebp
ffffffff8020fd44:	44 01 c1             	add    %r8d,%ecx
ffffffff8020fd47:	45 8d 84 33 7d f4 ef 	lea    -0x100b83(%r11,%rsi,1),%r8d
ffffffff8020fd4e:	ff 
ffffffff8020fd4f:	89 c6                	mov    %eax,%esi
ffffffff8020fd51:	44 8b 5c 24 f0       	mov    -0x10(%rsp),%r11d
ffffffff8020fd56:	c1 c1 0a             	rol    $0xa,%ecx
ffffffff8020fd59:	f7 d6                	not    %esi
ffffffff8020fd5b:	01 d1                	add    %edx,%ecx
ffffffff8020fd5d:	09 ce                	or     %ecx,%esi
ffffffff8020fd5f:	31 d6                	xor    %edx,%esi
ffffffff8020fd61:	44 01 c6             	add    %r8d,%esi
ffffffff8020fd64:	44 8b 44 24 dc       	mov    -0x24(%rsp),%r8d
ffffffff8020fd69:	c1 c6 0f             	rol    $0xf,%esi
ffffffff8020fd6c:	01 ce                	add    %ecx,%esi
ffffffff8020fd6e:	45 8d 84 00 d1 5d 84 	lea    -0x7a7ba22f(%r8,%rax,1),%r8d
ffffffff8020fd75:	85 
ffffffff8020fd76:	89 e8                	mov    %ebp,%eax
ffffffff8020fd78:	09 f0                	or     %esi,%eax
ffffffff8020fd7a:	31 c8                	xor    %ecx,%eax
ffffffff8020fd7c:	44 01 c0             	add    %r8d,%eax
ffffffff8020fd7f:	45 8d 84 13 4f 7e a8 	lea    0x6fa87e4f(%r11,%rdx,1),%r8d
ffffffff8020fd86:	6f 
ffffffff8020fd87:	41 89 cb             	mov    %ecx,%r11d
ffffffff8020fd8a:	c1 c8 0b             	ror    $0xb,%eax
ffffffff8020fd8d:	41 f7 d3             	not    %r11d
ffffffff8020fd90:	01 f0                	add    %esi,%eax
ffffffff8020fd92:	44 89 da             	mov    %r11d,%edx
ffffffff8020fd95:	09 c2                	or     %eax,%edx
ffffffff8020fd97:	31 f2                	xor    %esi,%edx
ffffffff8020fd99:	44 01 c2             	add    %r8d,%edx
ffffffff8020fd9c:	45 8d 84 0a e0 e6 2c 	lea    -0x1d31920(%r10,%rcx,1),%r8d
ffffffff8020fda3:	fe 
ffffffff8020fda4:	89 f1                	mov    %esi,%ecx
ffffffff8020fda6:	44 8b 54 24 e8       	mov    -0x18(%rsp),%r10d
ffffffff8020fdab:	c1 c2 06             	rol    $0x6,%edx
ffffffff8020fdae:	f7 d1                	not    %ecx
ffffffff8020fdb0:	01 c2                	add    %eax,%edx
ffffffff8020fdb2:	09 d1                	or     %edx,%ecx
ffffffff8020fdb4:	41 89 d3             	mov    %edx,%r11d
ffffffff8020fdb7:	31 c1                	xor    %eax,%ecx
ffffffff8020fdb9:	41 f7 d3             	not    %r11d
ffffffff8020fdbc:	44 01 c1             	add    %r8d,%ecx
ffffffff8020fdbf:	45 8d 84 36 14 43 01 	lea    -0x5cfebcec(%r14,%rsi,1),%r8d
ffffffff8020fdc6:	a3 
ffffffff8020fdc7:	89 c6                	mov    %eax,%esi
ffffffff8020fdc9:	44 8b 74 24 f8       	mov    -0x8(%rsp),%r14d
ffffffff8020fdce:	c1 c1 0a             	rol    $0xa,%ecx
ffffffff8020fdd1:	f7 d6                	not    %esi
ffffffff8020fdd3:	41 8d 84 01 a1 11 08 	lea    0x4e0811a1(%r9,%rax,1),%eax
ffffffff8020fdda:	4e 
ffffffff8020fddb:	01 d1                	add    %edx,%ecx
ffffffff8020fddd:	09 ce                	or     %ecx,%esi
ffffffff8020fddf:	31 d6                	xor    %edx,%esi
ffffffff8020fde1:	41 8d 94 12 82 7e 53 	lea    -0x8ac817e(%r10,%rdx,1),%edx
ffffffff8020fde8:	f7 
ffffffff8020fde9:	41 89 ca             	mov    %ecx,%r10d
ffffffff8020fdec:	44 01 c6             	add    %r8d,%esi
ffffffff8020fdef:	45 89 d8             	mov    %r11d,%r8d
ffffffff8020fdf2:	41 f7 d2             	not    %r10d
ffffffff8020fdf5:	c1 c6 0f             	rol    $0xf,%esi
ffffffff8020fdf8:	01 ce                	add    %ecx,%esi
ffffffff8020fdfa:	41 09 f0             	or     %esi,%r8d
ffffffff8020fdfd:	41 31 c8             	xor    %ecx,%r8d
ffffffff8020fe00:	41 8d 8c 0e 35 f2 3a 	lea    -0x42c50dcb(%r14,%rcx,1),%ecx
ffffffff8020fe07:	bd 
ffffffff8020fe08:	41 01 c0             	add    %eax,%r8d
ffffffff8020fe0b:	44 89 d0             	mov    %r10d,%eax
ffffffff8020fe0e:	41 c1 c8 0b          	ror    $0xb,%r8d
ffffffff8020fe12:	41 01 f0             	add    %esi,%r8d
ffffffff8020fe15:	44 09 c0             	or     %r8d,%eax
ffffffff8020fe18:	31 f0                	xor    %esi,%eax
ffffffff8020fe1a:	01 d0                	add    %edx,%eax
ffffffff8020fe1c:	89 f2                	mov    %esi,%edx
ffffffff8020fe1e:	8d b4 33 bb d2 d7 2a 	lea    0x2ad7d2bb(%rbx,%rsi,1),%esi
ffffffff8020fe25:	8b 5c 24 f4          	mov    -0xc(%rsp),%ebx
ffffffff8020fe29:	c1 c0 06             	rol    $0x6,%eax
ffffffff8020fe2c:	f7 d2                	not    %edx
ffffffff8020fe2e:	44 01 c0             	add    %r8d,%eax
ffffffff8020fe31:	09 c2                	or     %eax,%edx
ffffffff8020fe33:	44 31 c2             	xor    %r8d,%edx
ffffffff8020fe36:	01 ca                	add    %ecx,%edx
ffffffff8020fe38:	44 89 c1             	mov    %r8d,%ecx
ffffffff8020fe3b:	46 8d 84 03 91 d3 86 	lea    -0x14792c6f(%rbx,%r8,1),%r8d
ffffffff8020fe42:	eb 
ffffffff8020fe43:	5b                   	pop    %rbx
ffffffff8020fe44:	c1 c2 0a             	rol    $0xa,%edx
ffffffff8020fe47:	f7 d1                	not    %ecx
ffffffff8020fe49:	5d                   	pop    %rbp
ffffffff8020fe4a:	41 5c                	pop    %r12
ffffffff8020fe4c:	01 c2                	add    %eax,%edx
ffffffff8020fe4e:	41 5d                	pop    %r13
ffffffff8020fe50:	41 5e                	pop    %r14
ffffffff8020fe52:	09 d1                	or     %edx,%ecx
ffffffff8020fe54:	31 c1                	xor    %eax,%ecx
ffffffff8020fe56:	01 f1                	add    %esi,%ecx
ffffffff8020fe58:	89 c6                	mov    %eax,%esi
ffffffff8020fe5a:	03 07                	add    (%rdi),%eax
ffffffff8020fe5c:	c1 c1 0f             	rol    $0xf,%ecx
ffffffff8020fe5f:	f7 d6                	not    %esi
ffffffff8020fe61:	89 07                	mov    %eax,(%rdi)
ffffffff8020fe63:	01 d1                	add    %edx,%ecx
ffffffff8020fe65:	09 ce                	or     %ecx,%esi
ffffffff8020fe67:	31 d6                	xor    %edx,%esi
ffffffff8020fe69:	44 01 c6             	add    %r8d,%esi
ffffffff8020fe6c:	89 f0                	mov    %esi,%eax
ffffffff8020fe6e:	41 8d 34 0f          	lea    (%r15,%rcx,1),%esi
ffffffff8020fe72:	41 5f                	pop    %r15
ffffffff8020fe74:	c1 c8 0b             	ror    $0xb,%eax
ffffffff8020fe77:	01 f0                	add    %esi,%eax
ffffffff8020fe79:	03 4f 08             	add    0x8(%rdi),%ecx
ffffffff8020fe7c:	03 57 0c             	add    0xc(%rdi),%edx
ffffffff8020fe7f:	89 47 04             	mov    %eax,0x4(%rdi)
ffffffff8020fe82:	89 4f 08             	mov    %ecx,0x8(%rdi)
ffffffff8020fe85:	89 57 0c             	mov    %edx,0xc(%rdi)
ffffffff8020fe88:	c3                   	retq   
ffffffff8020fe89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020fe90 <caml_MD5Update>:
ffffffff8020fe90:	41 56                	push   %r14
ffffffff8020fe92:	31 c9                	xor    %ecx,%ecx
ffffffff8020fe94:	41 55                	push   %r13
ffffffff8020fe96:	49 89 d5             	mov    %rdx,%r13
ffffffff8020fe99:	c1 e2 03             	shl    $0x3,%edx
ffffffff8020fe9c:	41 54                	push   %r12
ffffffff8020fe9e:	4c 8d 67 18          	lea    0x18(%rdi),%r12
ffffffff8020fea2:	55                   	push   %rbp
ffffffff8020fea3:	48 89 f5             	mov    %rsi,%rbp
ffffffff8020fea6:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8020feaa:	8b 47 10             	mov    0x10(%rdi),%eax
ffffffff8020fead:	01 c2                	add    %eax,%edx
ffffffff8020feaf:	0f 92 c1             	setb   %cl
ffffffff8020feb2:	89 57 10             	mov    %edx,0x10(%rdi)
ffffffff8020feb5:	8b 57 14             	mov    0x14(%rdi),%edx
ffffffff8020feb8:	83 f9 01             	cmp    $0x1,%ecx
ffffffff8020febb:	4c 89 e9             	mov    %r13,%rcx
ffffffff8020febe:	83 da ff             	sbb    $0xffffffff,%edx
ffffffff8020fec1:	48 c1 e9 1d          	shr    $0x1d,%rcx
ffffffff8020fec5:	01 ca                	add    %ecx,%edx
ffffffff8020fec7:	c1 e8 03             	shr    $0x3,%eax
ffffffff8020feca:	89 57 14             	mov    %edx,0x14(%rdi)
ffffffff8020fecd:	83 e0 3f             	and    $0x3f,%eax
ffffffff8020fed0:	74 4f                	je     ffffffff8020ff21 <caml_MD5Update+0x91>
ffffffff8020fed2:	ba 40 00 00 00       	mov    $0x40,%edx
ffffffff8020fed7:	41 89 c0             	mov    %eax,%r8d
ffffffff8020feda:	29 c2                	sub    %eax,%edx
ffffffff8020fedc:	4d 01 e0             	add    %r12,%r8
ffffffff8020fedf:	41 89 d6             	mov    %edx,%r14d
ffffffff8020fee2:	4c 89 f0             	mov    %r14,%rax
ffffffff8020fee5:	4d 39 ee             	cmp    %r13,%r14
ffffffff8020fee8:	0f 87 b2 00 00 00    	ja     ffffffff8020ffa0 <caml_MD5Update+0x110>
ffffffff8020feee:	41 83 fe 08          	cmp    $0x8,%r14d
ffffffff8020fef2:	0f 83 c8 00 00 00    	jae    ffffffff8020ffc0 <caml_MD5Update+0x130>
ffffffff8020fef8:	a8 04                	test   $0x4,%al
ffffffff8020fefa:	0f 85 18 01 00 00    	jne    ffffffff80210018 <caml_MD5Update+0x188>
ffffffff8020ff00:	45 85 f6             	test   %r14d,%r14d
ffffffff8020ff03:	74 0e                	je     ffffffff8020ff13 <caml_MD5Update+0x83>
ffffffff8020ff05:	0f b6 16             	movzbl (%rsi),%edx
ffffffff8020ff08:	41 88 10             	mov    %dl,(%r8)
ffffffff8020ff0b:	a8 02                	test   $0x2,%al
ffffffff8020ff0d:	0f 85 19 01 00 00    	jne    ffffffff8021002c <caml_MD5Update+0x19c>
ffffffff8020ff13:	4c 89 e6             	mov    %r12,%rsi
ffffffff8020ff16:	4c 01 f5             	add    %r14,%rbp
ffffffff8020ff19:	4d 29 f5             	sub    %r14,%r13
ffffffff8020ff1c:	e8 0f f8 ff ff       	callq  ffffffff8020f730 <caml_MD5Transform>
ffffffff8020ff21:	49 83 fd 3f          	cmp    $0x3f,%r13
ffffffff8020ff25:	0f 86 e5 00 00 00    	jbe    ffffffff80210010 <caml_MD5Update+0x180>
ffffffff8020ff2b:	49 8d 45 c0          	lea    -0x40(%r13),%rax
ffffffff8020ff2f:	48 83 e0 c0          	and    $0xffffffffffffffc0,%rax
ffffffff8020ff33:	4c 8d 74 05 40       	lea    0x40(%rbp,%rax,1),%r14
ffffffff8020ff38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020ff3f:	00 
ffffffff8020ff40:	f3 0f 6f 45 00       	movdqu 0x0(%rbp),%xmm0
ffffffff8020ff45:	4c 89 e6             	mov    %r12,%rsi
ffffffff8020ff48:	48 83 c5 40          	add    $0x40,%rbp
ffffffff8020ff4c:	41 0f 11 04 24       	movups %xmm0,(%r12)
ffffffff8020ff51:	f3 0f 6f 4d d0       	movdqu -0x30(%rbp),%xmm1
ffffffff8020ff56:	41 0f 11 4c 24 10    	movups %xmm1,0x10(%r12)
ffffffff8020ff5c:	f3 0f 6f 55 e0       	movdqu -0x20(%rbp),%xmm2
ffffffff8020ff61:	41 0f 11 54 24 20    	movups %xmm2,0x20(%r12)
ffffffff8020ff67:	f3 0f 6f 5d f0       	movdqu -0x10(%rbp),%xmm3
ffffffff8020ff6c:	41 0f 11 5c 24 30    	movups %xmm3,0x30(%r12)
ffffffff8020ff72:	e8 b9 f7 ff ff       	callq  ffffffff8020f730 <caml_MD5Transform>
ffffffff8020ff77:	4c 39 f5             	cmp    %r14,%rbp
ffffffff8020ff7a:	75 c4                	jne    ffffffff8020ff40 <caml_MD5Update+0xb0>
ffffffff8020ff7c:	41 83 e5 3f          	and    $0x3f,%r13d
ffffffff8020ff80:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020ff84:	4c 89 ea             	mov    %r13,%rdx
ffffffff8020ff87:	4c 89 f6             	mov    %r14,%rsi
ffffffff8020ff8a:	4c 89 e7             	mov    %r12,%rdi
ffffffff8020ff8d:	5d                   	pop    %rbp
ffffffff8020ff8e:	41 5c                	pop    %r12
ffffffff8020ff90:	41 5d                	pop    %r13
ffffffff8020ff92:	41 5e                	pop    %r14
ffffffff8020ff94:	e9 0a 01 ff ff       	jmpq   ffffffff802000a3 <memcpy>
ffffffff8020ff99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8020ffa0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020ffa4:	4c 89 ea             	mov    %r13,%rdx
ffffffff8020ffa7:	4c 89 c7             	mov    %r8,%rdi
ffffffff8020ffaa:	5d                   	pop    %rbp
ffffffff8020ffab:	41 5c                	pop    %r12
ffffffff8020ffad:	41 5d                	pop    %r13
ffffffff8020ffaf:	41 5e                	pop    %r14
ffffffff8020ffb1:	e9 ed 00 ff ff       	jmpq   ffffffff802000a3 <memcpy>
ffffffff8020ffb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ffbd:	00 00 00 
ffffffff8020ffc0:	48 8b 16             	mov    (%rsi),%rdx
ffffffff8020ffc3:	49 89 e9             	mov    %rbp,%r9
ffffffff8020ffc6:	49 89 10             	mov    %rdx,(%r8)
ffffffff8020ffc9:	4a 8b 54 36 f8       	mov    -0x8(%rsi,%r14,1),%rdx
ffffffff8020ffce:	49 8d 70 08          	lea    0x8(%r8),%rsi
ffffffff8020ffd2:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
ffffffff8020ffd6:	4b 89 54 30 f8       	mov    %rdx,-0x8(%r8,%r14,1)
ffffffff8020ffdb:	49 29 f0             	sub    %rsi,%r8
ffffffff8020ffde:	44 01 c0             	add    %r8d,%eax
ffffffff8020ffe1:	4d 29 c1             	sub    %r8,%r9
ffffffff8020ffe4:	83 e0 f8             	and    $0xfffffff8,%eax
ffffffff8020ffe7:	83 f8 08             	cmp    $0x8,%eax
ffffffff8020ffea:	0f 82 23 ff ff ff    	jb     ffffffff8020ff13 <caml_MD5Update+0x83>
ffffffff8020fff0:	83 e0 f8             	and    $0xfffffff8,%eax
ffffffff8020fff3:	31 d2                	xor    %edx,%edx
ffffffff8020fff5:	89 d1                	mov    %edx,%ecx
ffffffff8020fff7:	83 c2 08             	add    $0x8,%edx
ffffffff8020fffa:	4d 8b 04 09          	mov    (%r9,%rcx,1),%r8
ffffffff8020fffe:	4c 89 04 0e          	mov    %r8,(%rsi,%rcx,1)
ffffffff80210002:	39 c2                	cmp    %eax,%edx
ffffffff80210004:	72 ef                	jb     ffffffff8020fff5 <caml_MD5Update+0x165>
ffffffff80210006:	e9 08 ff ff ff       	jmpq   ffffffff8020ff13 <caml_MD5Update+0x83>
ffffffff8021000b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80210010:	49 89 ee             	mov    %rbp,%r14
ffffffff80210013:	e9 68 ff ff ff       	jmpq   ffffffff8020ff80 <caml_MD5Update+0xf0>
ffffffff80210018:	8b 06                	mov    (%rsi),%eax
ffffffff8021001a:	41 89 00             	mov    %eax,(%r8)
ffffffff8021001d:	42 8b 44 36 fc       	mov    -0x4(%rsi,%r14,1),%eax
ffffffff80210022:	43 89 44 30 fc       	mov    %eax,-0x4(%r8,%r14,1)
ffffffff80210027:	e9 e7 fe ff ff       	jmpq   ffffffff8020ff13 <caml_MD5Update+0x83>
ffffffff8021002c:	42 0f b7 44 36 fe    	movzwl -0x2(%rsi,%r14,1),%eax
ffffffff80210032:	66 43 89 44 30 fe    	mov    %ax,-0x2(%r8,%r14,1)
ffffffff80210038:	e9 d6 fe ff ff       	jmpq   ffffffff8020ff13 <caml_MD5Update+0x83>
ffffffff8021003d:	0f 1f 00             	nopl   (%rax)

ffffffff80210040 <caml_MD5Final>:
ffffffff80210040:	41 54                	push   %r12
ffffffff80210042:	4c 8d 66 18          	lea    0x18(%rsi),%r12
ffffffff80210046:	55                   	push   %rbp
ffffffff80210047:	48 89 fd             	mov    %rdi,%rbp
ffffffff8021004a:	53                   	push   %rbx
ffffffff8021004b:	8b 46 10             	mov    0x10(%rsi),%eax
ffffffff8021004e:	48 89 f3             	mov    %rsi,%rbx
ffffffff80210051:	c1 e8 03             	shr    $0x3,%eax
ffffffff80210054:	83 e0 3f             	and    $0x3f,%eax
ffffffff80210057:	89 c2                	mov    %eax,%edx
ffffffff80210059:	4c 01 e2             	add    %r12,%rdx
ffffffff8021005c:	c6 02 80             	movb   $0x80,(%rdx)
ffffffff8021005f:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
ffffffff80210063:	ba 3f 00 00 00       	mov    $0x3f,%edx
ffffffff80210068:	29 c2                	sub    %eax,%edx
ffffffff8021006a:	83 fa 07             	cmp    $0x7,%edx
ffffffff8021006d:	77 41                	ja     ffffffff802100b0 <caml_MD5Final+0x70>
ffffffff8021006f:	85 d2                	test   %edx,%edx
ffffffff80210071:	74 0f                	je     ffffffff80210082 <caml_MD5Final+0x42>
ffffffff80210073:	31 c0                	xor    %eax,%eax
ffffffff80210075:	89 c1                	mov    %eax,%ecx
ffffffff80210077:	83 c0 01             	add    $0x1,%eax
ffffffff8021007a:	c6 04 0f 00          	movb   $0x0,(%rdi,%rcx,1)
ffffffff8021007e:	39 d0                	cmp    %edx,%eax
ffffffff80210080:	72 f3                	jb     ffffffff80210075 <caml_MD5Final+0x35>
ffffffff80210082:	4c 89 e6             	mov    %r12,%rsi
ffffffff80210085:	48 89 df             	mov    %rbx,%rdi
ffffffff80210088:	e8 a3 f6 ff ff       	callq  ffffffff8020f730 <caml_MD5Transform>
ffffffff8021008d:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80210091:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
ffffffff80210095:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
ffffffff8021009c:	00 00 
ffffffff8021009e:	41 0f 11 44 24 10    	movups %xmm0,0x10(%r12)
ffffffff802100a4:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
ffffffff802100aa:	eb 12                	jmp    ffffffff802100be <caml_MD5Final+0x7e>
ffffffff802100ac:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802100b0:	ba 37 00 00 00       	mov    $0x37,%edx
ffffffff802100b5:	31 f6                	xor    %esi,%esi
ffffffff802100b7:	29 c2                	sub    %eax,%edx
ffffffff802100b9:	e8 e6 ff fe ff       	callq  ffffffff802000a4 <memset>
ffffffff802100be:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff802100c2:	48 89 df             	mov    %rbx,%rdi
ffffffff802100c5:	4c 89 e6             	mov    %r12,%rsi
ffffffff802100c8:	48 89 43 50          	mov    %rax,0x50(%rbx)
ffffffff802100cc:	e8 5f f6 ff ff       	callq  ffffffff8020f730 <caml_MD5Transform>
ffffffff802100d1:	f3 0f 6f 0b          	movdqu (%rbx),%xmm1
ffffffff802100d5:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
ffffffff802100d9:	31 c0                	xor    %eax,%eax
ffffffff802100db:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
ffffffff802100df:	0f 11 4d 00          	movups %xmm1,0x0(%rbp)
ffffffff802100e3:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
ffffffff802100ea:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
ffffffff802100f1:	00 
ffffffff802100f2:	48 29 fb             	sub    %rdi,%rbx
ffffffff802100f5:	8d 4b 58             	lea    0x58(%rbx),%ecx
ffffffff802100f8:	c1 e9 03             	shr    $0x3,%ecx
ffffffff802100fb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
ffffffff802100fe:	5b                   	pop    %rbx
ffffffff802100ff:	5d                   	pop    %rbp
ffffffff80210100:	41 5c                	pop    %r12
ffffffff80210102:	c3                   	retq   
ffffffff80210103:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021010a:	00 00 00 00 
ffffffff8021010e:	66 90                	xchg   %ax,%ax

ffffffff80210110 <caml_md5_string>:
ffffffff80210110:	41 54                	push   %r12
ffffffff80210112:	48 d1 fe             	sar    %rsi
ffffffff80210115:	48 d1 fa             	sar    %rdx
ffffffff80210118:	55                   	push   %rbp
ffffffff80210119:	48 01 fe             	add    %rdi,%rsi
ffffffff8021011c:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80210120:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80210127:	00 00 
ffffffff80210129:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff8021012e:	31 c0                	xor    %eax,%eax
ffffffff80210130:	48 89 e5             	mov    %rsp,%rbp
ffffffff80210133:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
ffffffff8021013a:	ab cd ef 
ffffffff8021013d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
ffffffff80210144:	00 00 
ffffffff80210146:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8021014a:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021014d:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
ffffffff80210154:	54 32 10 
ffffffff80210157:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8021015c:	e8 2f fd ff ff       	callq  ffffffff8020fe90 <caml_MD5Update>
ffffffff80210161:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff80210166:	e8 d5 8b 00 00       	callq  ffffffff80218d40 <caml_alloc_string>
ffffffff8021016b:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021016e:	48 89 c7             	mov    %rax,%rdi
ffffffff80210171:	49 89 c4             	mov    %rax,%r12
ffffffff80210174:	e8 c7 fe ff ff       	callq  ffffffff80210040 <caml_MD5Final>
ffffffff80210179:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021017e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80210185:	00 00 
ffffffff80210187:	75 0b                	jne    ffffffff80210194 <caml_md5_string+0x84>
ffffffff80210189:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8021018d:	4c 89 e0             	mov    %r12,%rax
ffffffff80210190:	5d                   	pop    %rbp
ffffffff80210191:	41 5c                	pop    %r12
ffffffff80210193:	c3                   	retq   
ffffffff80210194:	e8 07 ff fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80210199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802101a0 <caml_md5_channel>:
ffffffff802101a0:	41 57                	push   %r15
ffffffff802101a2:	49 89 f7             	mov    %rsi,%r15
ffffffff802101a5:	41 56                	push   %r14
ffffffff802101a7:	41 55                	push   %r13
ffffffff802101a9:	41 54                	push   %r12
ffffffff802101ab:	49 89 fc             	mov    %rdi,%r12
ffffffff802101ae:	55                   	push   %rbp
ffffffff802101af:	53                   	push   %rbx
ffffffff802101b0:	48 81 ec 88 10 00 00 	sub    $0x1088,%rsp
ffffffff802101b7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802101be:	00 00 
ffffffff802101c0:	48 89 84 24 78 10 00 	mov    %rax,0x1078(%rsp)
ffffffff802101c7:	00 
ffffffff802101c8:	31 c0                	xor    %eax,%eax
ffffffff802101ca:	48 8b 05 a7 3e 03 00 	mov    0x33ea7(%rip),%rax        # ffffffff80244078 <caml_local_roots>
ffffffff802101d1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff802101d6:	48 8b 05 c3 b9 02 00 	mov    0x2b9c3(%rip),%rax        # ffffffff8023bba0 <caml_channel_mutex_lock>
ffffffff802101dd:	48 85 c0             	test   %rax,%rax
ffffffff802101e0:	74 02                	je     ffffffff802101e4 <caml_md5_channel+0x44>
ffffffff802101e2:	ff d0                	callq  *%rax
ffffffff802101e4:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
ffffffff802101eb:	ab cd ef 
ffffffff802101ee:	48 8d 6c 24 70       	lea    0x70(%rsp),%rbp
ffffffff802101f3:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
ffffffff802101f8:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
ffffffff802101ff:	00 00 
ffffffff80210201:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80210206:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
ffffffff8021020d:	54 32 10 
ffffffff80210210:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80210215:	4d 85 ff             	test   %r15,%r15
ffffffff80210218:	0f 88 c0 00 00 00    	js     ffffffff802102de <caml_md5_channel+0x13e>
ffffffff8021021e:	41 bd 00 10 00 00    	mov    $0x1000,%r13d
ffffffff80210224:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
ffffffff80210229:	7e 45                	jle    ffffffff80210270 <caml_md5_channel+0xd0>
ffffffff8021022b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80210230:	49 81 ff 00 10 00 00 	cmp    $0x1000,%r15
ffffffff80210237:	4c 89 ea             	mov    %r13,%rdx
ffffffff8021023a:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021023d:	4c 89 e7             	mov    %r12,%rdi
ffffffff80210240:	49 0f 46 d7          	cmovbe %r15,%rdx
ffffffff80210244:	e8 17 c7 ff ff       	callq  ffffffff8020c960 <caml_getblock>
ffffffff80210249:	48 63 d8             	movslq %eax,%rbx
ffffffff8021024c:	48 85 db             	test   %rbx,%rbx
ffffffff8021024f:	0f 84 a2 00 00 00    	je     ffffffff802102f7 <caml_md5_channel+0x157>
ffffffff80210255:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
ffffffff8021025a:	48 89 da             	mov    %rbx,%rdx
ffffffff8021025d:	48 89 ee             	mov    %rbp,%rsi
ffffffff80210260:	49 29 df             	sub    %rbx,%r15
ffffffff80210263:	4c 89 f7             	mov    %r14,%rdi
ffffffff80210266:	e8 25 fc ff ff       	callq  ffffffff8020fe90 <caml_MD5Update>
ffffffff8021026b:	4d 85 ff             	test   %r15,%r15
ffffffff8021026e:	7f c0                	jg     ffffffff80210230 <caml_md5_channel+0x90>
ffffffff80210270:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff80210275:	e8 c6 8a 00 00       	callq  ffffffff80218d40 <caml_alloc_string>
ffffffff8021027a:	4c 89 f6             	mov    %r14,%rsi
ffffffff8021027d:	48 89 c7             	mov    %rax,%rdi
ffffffff80210280:	49 89 c5             	mov    %rax,%r13
ffffffff80210283:	e8 b8 fd ff ff       	callq  ffffffff80210040 <caml_MD5Final>
ffffffff80210288:	48 8b 05 09 b9 02 00 	mov    0x2b909(%rip),%rax        # ffffffff8023bb98 <caml_channel_mutex_unlock>
ffffffff8021028f:	48 85 c0             	test   %rax,%rax
ffffffff80210292:	74 05                	je     ffffffff80210299 <caml_md5_channel+0xf9>
ffffffff80210294:	4c 89 e7             	mov    %r12,%rdi
ffffffff80210297:	ff d0                	callq  *%rax
ffffffff80210299:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021029e:	48 89 05 d3 3d 03 00 	mov    %rax,0x33dd3(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802102a5:	48 8b 84 24 78 10 00 	mov    0x1078(%rsp),%rax
ffffffff802102ac:	00 
ffffffff802102ad:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff802102b4:	00 00 
ffffffff802102b6:	75 44                	jne    ffffffff802102fc <caml_md5_channel+0x15c>
ffffffff802102b8:	48 81 c4 88 10 00 00 	add    $0x1088,%rsp
ffffffff802102bf:	4c 89 e8             	mov    %r13,%rax
ffffffff802102c2:	5b                   	pop    %rbx
ffffffff802102c3:	5d                   	pop    %rbp
ffffffff802102c4:	41 5c                	pop    %r12
ffffffff802102c6:	41 5d                	pop    %r13
ffffffff802102c8:	41 5e                	pop    %r14
ffffffff802102ca:	41 5f                	pop    %r15
ffffffff802102cc:	c3                   	retq   
ffffffff802102cd:	0f 1f 00             	nopl   (%rax)
ffffffff802102d0:	48 63 d0             	movslq %eax,%rdx
ffffffff802102d3:	48 89 ee             	mov    %rbp,%rsi
ffffffff802102d6:	4c 89 f7             	mov    %r14,%rdi
ffffffff802102d9:	e8 b2 fb ff ff       	callq  ffffffff8020fe90 <caml_MD5Update>
ffffffff802102de:	ba 00 10 00 00       	mov    $0x1000,%edx
ffffffff802102e3:	48 89 ee             	mov    %rbp,%rsi
ffffffff802102e6:	4c 89 e7             	mov    %r12,%rdi
ffffffff802102e9:	e8 72 c6 ff ff       	callq  ffffffff8020c960 <caml_getblock>
ffffffff802102ee:	85 c0                	test   %eax,%eax
ffffffff802102f0:	75 de                	jne    ffffffff802102d0 <caml_md5_channel+0x130>
ffffffff802102f2:	e9 79 ff ff ff       	jmpq   ffffffff80210270 <caml_md5_channel+0xd0>
ffffffff802102f7:	e8 04 72 ff ff       	callq  ffffffff80207500 <caml_raise_end_of_file>
ffffffff802102fc:	e8 9f fd fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80210301:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80210308:	00 00 00 00 
ffffffff8021030c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80210310 <caml_md5_chan>:
ffffffff80210310:	53                   	push   %rbx
ffffffff80210311:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80210315:	48 8b 1d 5c 3d 03 00 	mov    0x33d5c(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8021031c:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff80210320:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff80210325:	48 d1 fe             	sar    %rsi
ffffffff80210328:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8021032d:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff80210334:	00 00 
ffffffff80210336:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
ffffffff8021033b:	31 c9                	xor    %ecx,%ecx
ffffffff8021033d:	48 89 15 34 3d 03 00 	mov    %rdx,0x33d34(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80210344:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff80210349:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
ffffffff8021034e:	48 89 e2             	mov    %rsp,%rdx
ffffffff80210351:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80210356:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8021035d:	00 00 
ffffffff8021035f:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff80210366:	00 00 
ffffffff80210368:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff8021036d:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff80210371:	e8 2a fe ff ff       	callq  ffffffff802101a0 <caml_md5_channel>
ffffffff80210376:	48 89 1d fb 3c 03 00 	mov    %rbx,0x33cfb(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021037d:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
ffffffff80210382:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80210389:	00 00 
ffffffff8021038b:	75 06                	jne    ffffffff80210393 <caml_md5_chan+0x83>
ffffffff8021038d:	48 83 c4 60          	add    $0x60,%rsp
ffffffff80210391:	5b                   	pop    %rbx
ffffffff80210392:	c3                   	retq   
ffffffff80210393:	e8 08 fd fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80210398:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021039f:	00 

ffffffff802103a0 <caml_md5_block>:
ffffffff802103a0:	41 54                	push   %r12
ffffffff802103a2:	55                   	push   %rbp
ffffffff802103a3:	48 89 fd             	mov    %rdi,%rbp
ffffffff802103a6:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff802103aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802103b1:	00 00 
ffffffff802103b3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff802103b8:	31 c0                	xor    %eax,%eax
ffffffff802103ba:	49 89 e4             	mov    %rsp,%r12
ffffffff802103bd:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
ffffffff802103c4:	ab cd ef 
ffffffff802103c7:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
ffffffff802103ce:	00 00 
ffffffff802103d0:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff802103d4:	4c 89 e7             	mov    %r12,%rdi
ffffffff802103d7:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
ffffffff802103de:	54 32 10 
ffffffff802103e1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff802103e6:	e8 a5 fa ff ff       	callq  ffffffff8020fe90 <caml_MD5Update>
ffffffff802103eb:	4c 89 e6             	mov    %r12,%rsi
ffffffff802103ee:	48 89 ef             	mov    %rbp,%rdi
ffffffff802103f1:	e8 4a fc ff ff       	callq  ffffffff80210040 <caml_MD5Final>
ffffffff802103f6:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff802103fb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80210402:	00 00 
ffffffff80210404:	75 08                	jne    ffffffff8021040e <caml_md5_block+0x6e>
ffffffff80210406:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8021040a:	5d                   	pop    %rbp
ffffffff8021040b:	41 5c                	pop    %r12
ffffffff8021040d:	c3                   	retq   
ffffffff8021040e:	e8 8d fc fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80210413:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021041a:	00 00 00 
ffffffff8021041d:	0f 1f 00             	nopl   (%rax)

ffffffff80210420 <caml_page_table_lookup>:
ffffffff80210420:	48 89 fa             	mov    %rdi,%rdx
ffffffff80210423:	8b 0d 3f ba 02 00    	mov    0x2ba3f(%rip),%ecx        # ffffffff8023be68 <caml_page_table+0x8>
ffffffff80210429:	48 b8 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rax
ffffffff80210430:	79 37 9e 
ffffffff80210433:	48 8b 35 46 ba 02 00 	mov    0x2ba46(%rip),%rsi        # ffffffff8023be80 <caml_page_table+0x20>
ffffffff8021043a:	48 c1 ea 0c          	shr    $0xc,%rdx
ffffffff8021043e:	4c 8b 05 2b ba 02 00 	mov    0x2ba2b(%rip),%r8        # ffffffff8023be70 <caml_page_table+0x10>
ffffffff80210445:	48 0f af d0          	imul   %rax,%rdx
ffffffff80210449:	48 d3 ea             	shr    %cl,%rdx
ffffffff8021044c:	48 89 f9             	mov    %rdi,%rcx
ffffffff8021044f:	48 8b 04 d6          	mov    (%rsi,%rdx,8),%rax
ffffffff80210453:	48 31 c1             	xor    %rax,%rcx
ffffffff80210456:	48 f7 c1 00 f0 ff ff 	test   $0xfffffffffffff000,%rcx
ffffffff8021045d:	75 23                	jne    ffffffff80210482 <caml_page_table_lookup+0x62>
ffffffff8021045f:	eb 2f                	jmp    ffffffff80210490 <caml_page_table_lookup+0x70>
ffffffff80210461:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80210468:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021046c:	48 89 f9             	mov    %rdi,%rcx
ffffffff8021046f:	4c 21 c2             	and    %r8,%rdx
ffffffff80210472:	48 8b 04 d6          	mov    (%rsi,%rdx,8),%rax
ffffffff80210476:	48 31 c1             	xor    %rax,%rcx
ffffffff80210479:	48 f7 c1 00 f0 ff ff 	test   $0xfffffffffffff000,%rcx
ffffffff80210480:	74 0e                	je     ffffffff80210490 <caml_page_table_lookup+0x70>
ffffffff80210482:	48 85 c0             	test   %rax,%rax
ffffffff80210485:	75 e1                	jne    ffffffff80210468 <caml_page_table_lookup+0x48>
ffffffff80210487:	31 c0                	xor    %eax,%eax
ffffffff80210489:	c3                   	retq   
ffffffff8021048a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80210490:	0f b6 c0             	movzbl %al,%eax
ffffffff80210493:	c3                   	retq   
ffffffff80210494:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021049b:	00 00 00 00 
ffffffff8021049f:	90                   	nop

ffffffff802104a0 <caml_init_alloc_for_heap>:
ffffffff802104a0:	31 c0                	xor    %eax,%eax
ffffffff802104a2:	c3                   	retq   
ffffffff802104a3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802104aa:	00 00 00 00 
ffffffff802104ae:	66 90                	xchg   %ax,%ax

ffffffff802104b0 <caml_disown_for_heap>:
ffffffff802104b0:	c3                   	retq   
ffffffff802104b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802104b8:	00 00 00 00 
ffffffff802104bc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802104c0 <caml_allocation_color>:
ffffffff802104c0:	8b 15 da b8 02 00    	mov    0x2b8da(%rip),%edx        # ffffffff8023bda0 <caml_gc_phase>
ffffffff802104c6:	83 fa 01             	cmp    $0x1,%edx
ffffffff802104c9:	76 1d                	jbe    ffffffff802104e8 <caml_allocation_color+0x28>
ffffffff802104cb:	31 c0                	xor    %eax,%eax
ffffffff802104cd:	83 fa 02             	cmp    $0x2,%edx
ffffffff802104d0:	75 1b                	jne    ffffffff802104ed <caml_allocation_color+0x2d>
ffffffff802104d2:	48 3b 3d cf b8 02 00 	cmp    0x2b8cf(%rip),%rdi        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff802104d9:	48 19 c0             	sbb    %rax,%rax
ffffffff802104dc:	48 f7 d0             	not    %rax
ffffffff802104df:	25 00 03 00 00       	and    $0x300,%eax
ffffffff802104e4:	c3                   	retq   
ffffffff802104e5:	0f 1f 00             	nopl   (%rax)
ffffffff802104e8:	b8 00 03 00 00       	mov    $0x300,%eax
ffffffff802104ed:	c3                   	retq   
ffffffff802104ee:	66 90                	xchg   %ax,%ax

ffffffff802104f0 <caml_alloc_dependent_memory>:
ffffffff802104f0:	48 c1 ef 03          	shr    $0x3,%rdi
ffffffff802104f4:	48 01 3d 95 b8 02 00 	add    %rdi,0x2b895(%rip)        # ffffffff8023bd90 <caml_dependent_size>
ffffffff802104fb:	48 01 3d 86 b8 02 00 	add    %rdi,0x2b886(%rip)        # ffffffff8023bd88 <caml_dependent_allocated>
ffffffff80210502:	c3                   	retq   
ffffffff80210503:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021050a:	00 00 00 00 
ffffffff8021050e:	66 90                	xchg   %ax,%ax

ffffffff80210510 <caml_free_dependent_memory>:
ffffffff80210510:	48 8b 15 79 b8 02 00 	mov    0x2b879(%rip),%rdx        # ffffffff8023bd90 <caml_dependent_size>
ffffffff80210517:	48 c1 ef 03          	shr    $0x3,%rdi
ffffffff8021051b:	48 89 d0             	mov    %rdx,%rax
ffffffff8021051e:	48 29 f8             	sub    %rdi,%rax
ffffffff80210521:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80210524:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80210529:	48 0f 47 c2          	cmova  %rdx,%rax
ffffffff8021052d:	48 89 05 5c b8 02 00 	mov    %rax,0x2b85c(%rip)        # ffffffff8023bd90 <caml_dependent_size>
ffffffff80210534:	c3                   	retq   
ffffffff80210535:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021053c:	00 00 00 00 

ffffffff80210540 <caml_adjust_gc_speed>:
ffffffff80210540:	48 85 f6             	test   %rsi,%rsi
ffffffff80210543:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80210548:	48 0f 44 f0          	cmove  %rax,%rsi
ffffffff8021054c:	48 39 fe             	cmp    %rdi,%rsi
ffffffff8021054f:	48 0f 46 fe          	cmovbe %rsi,%rdi
ffffffff80210553:	48 85 ff             	test   %rdi,%rdi
ffffffff80210556:	78 70                	js     ffffffff802105c8 <caml_adjust_gc_speed+0x88>
ffffffff80210558:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021055c:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
ffffffff80210561:	48 85 f6             	test   %rsi,%rsi
ffffffff80210564:	78 42                	js     ffffffff802105a8 <caml_adjust_gc_speed+0x68>
ffffffff80210566:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021056a:	f2 48 0f 2a ce       	cvtsi2sd %rsi,%xmm1
ffffffff8021056f:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
ffffffff80210573:	f2 0f 10 0d 45 11 01 	movsd  0x11145(%rip),%xmm1        # ffffffff802216c0 <caml_absf_mask+0x510>
ffffffff8021057a:	00 
ffffffff8021057b:	f2 0f 58 05 fd b7 02 	addsd  0x2b7fd(%rip),%xmm0        # ffffffff8023bd80 <caml_extra_heap_resources>
ffffffff80210582:	00 
ffffffff80210583:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff80210587:	77 0f                	ja     ffffffff80210598 <caml_adjust_gc_speed+0x58>
ffffffff80210589:	f2 0f 11 05 ef b7 02 	movsd  %xmm0,0x2b7ef(%rip)        # ffffffff8023bd80 <caml_extra_heap_resources>
ffffffff80210590:	00 
ffffffff80210591:	c3                   	retq   
ffffffff80210592:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80210598:	f2 0f 11 0d e0 b7 02 	movsd  %xmm1,0x2b7e0(%rip)        # ffffffff8023bd80 <caml_extra_heap_resources>
ffffffff8021059f:	00 
ffffffff802105a0:	e9 cb 3d 00 00       	jmpq   ffffffff80214370 <caml_request_major_slice>
ffffffff802105a5:	0f 1f 00             	nopl   (%rax)
ffffffff802105a8:	48 89 f0             	mov    %rsi,%rax
ffffffff802105ab:	83 e6 01             	and    $0x1,%esi
ffffffff802105ae:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff802105b2:	48 d1 e8             	shr    %rax
ffffffff802105b5:	48 09 f0             	or     %rsi,%rax
ffffffff802105b8:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff802105bd:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff802105c1:	eb ac                	jmp    ffffffff8021056f <caml_adjust_gc_speed+0x2f>
ffffffff802105c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802105c8:	48 89 f8             	mov    %rdi,%rax
ffffffff802105cb:	83 e7 01             	and    $0x1,%edi
ffffffff802105ce:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff802105d2:	48 d1 e8             	shr    %rax
ffffffff802105d5:	48 09 f8             	or     %rdi,%rax
ffffffff802105d8:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff802105dd:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff802105e1:	e9 7b ff ff ff       	jmpq   ffffffff80210561 <caml_adjust_gc_speed+0x21>
ffffffff802105e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802105ed:	00 00 00 

ffffffff802105f0 <caml_initialize>:
ffffffff802105f0:	53                   	push   %rbx
ffffffff802105f1:	48 89 fb             	mov    %rdi,%rbx
ffffffff802105f4:	48 89 37             	mov    %rsi,(%rdi)
ffffffff802105f7:	48 8b 05 aa b9 02 00 	mov    0x2b9aa(%rip),%rax        # ffffffff8023bfa8 <caml_young_end>
ffffffff802105fe:	48 39 f8             	cmp    %rdi,%rax
ffffffff80210601:	76 0d                	jbe    ffffffff80210610 <caml_initialize+0x20>
ffffffff80210603:	48 39 3d a6 b9 02 00 	cmp    %rdi,0x2b9a6(%rip)        # ffffffff8023bfb0 <caml_young_start>
ffffffff8021060a:	73 04                	jae    ffffffff80210610 <caml_initialize+0x20>
ffffffff8021060c:	5b                   	pop    %rbx
ffffffff8021060d:	c3                   	retq   
ffffffff8021060e:	66 90                	xchg   %ax,%ax
ffffffff80210610:	40 f6 c6 01          	test   $0x1,%sil
ffffffff80210614:	75 f6                	jne    ffffffff8021060c <caml_initialize+0x1c>
ffffffff80210616:	48 39 f0             	cmp    %rsi,%rax
ffffffff80210619:	76 f1                	jbe    ffffffff8021060c <caml_initialize+0x1c>
ffffffff8021061b:	48 3b 35 8e b9 02 00 	cmp    0x2b98e(%rip),%rsi        # ffffffff8023bfb0 <caml_young_start>
ffffffff80210622:	76 e8                	jbe    ffffffff8021060c <caml_initialize+0x1c>
ffffffff80210624:	48 8b 05 2d b9 02 00 	mov    0x2b92d(%rip),%rax        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff8021062b:	48 3b 05 2e b9 02 00 	cmp    0x2b92e(%rip),%rax        # ffffffff8023bf60 <caml_ref_table+0x20>
ffffffff80210632:	73 14                	jae    ffffffff80210648 <caml_initialize+0x58>
ffffffff80210634:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff80210638:	48 89 15 19 b9 02 00 	mov    %rdx,0x2b919(%rip)        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff8021063f:	48 89 18             	mov    %rbx,(%rax)
ffffffff80210642:	5b                   	pop    %rbx
ffffffff80210643:	c3                   	retq   
ffffffff80210644:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80210648:	48 8d 3d f1 b8 02 00 	lea    0x2b8f1(%rip),%rdi        # ffffffff8023bf40 <caml_ref_table>
ffffffff8021064f:	e8 3c 1b 00 00       	callq  ffffffff80212190 <caml_realloc_ref_table>
ffffffff80210654:	48 8b 05 fd b8 02 00 	mov    0x2b8fd(%rip),%rax        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff8021065b:	eb d7                	jmp    ffffffff80210634 <caml_initialize+0x44>
ffffffff8021065d:	0f 1f 00             	nopl   (%rax)

ffffffff80210660 <caml_modify>:
ffffffff80210660:	55                   	push   %rbp
ffffffff80210661:	48 89 f5             	mov    %rsi,%rbp
ffffffff80210664:	53                   	push   %rbx
ffffffff80210665:	48 89 fb             	mov    %rdi,%rbx
ffffffff80210668:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021066c:	48 39 3d 35 b9 02 00 	cmp    %rdi,0x2b935(%rip)        # ffffffff8023bfa8 <caml_young_end>
ffffffff80210673:	76 1b                	jbe    ffffffff80210690 <caml_modify+0x30>
ffffffff80210675:	48 39 3d 34 b9 02 00 	cmp    %rdi,0x2b934(%rip)        # ffffffff8023bfb0 <caml_young_start>
ffffffff8021067c:	73 12                	jae    ffffffff80210690 <caml_modify+0x30>
ffffffff8021067e:	48 89 33             	mov    %rsi,(%rbx)
ffffffff80210681:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80210685:	5b                   	pop    %rbx
ffffffff80210686:	5d                   	pop    %rbp
ffffffff80210687:	c3                   	retq   
ffffffff80210688:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021068f:	00 
ffffffff80210690:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff80210693:	48 89 2b             	mov    %rbp,(%rbx)
ffffffff80210696:	40 f6 c7 01          	test   $0x1,%dil
ffffffff8021069a:	75 1c                	jne    ffffffff802106b8 <caml_modify+0x58>
ffffffff8021069c:	48 3b 3d 05 b9 02 00 	cmp    0x2b905(%rip),%rdi        # ffffffff8023bfa8 <caml_young_end>
ffffffff802106a3:	73 09                	jae    ffffffff802106ae <caml_modify+0x4e>
ffffffff802106a5:	48 3b 3d 04 b9 02 00 	cmp    0x2b904(%rip),%rdi        # ffffffff8023bfb0 <caml_young_start>
ffffffff802106ac:	77 d3                	ja     ffffffff80210681 <caml_modify+0x21>
ffffffff802106ae:	8b 05 ec b6 02 00    	mov    0x2b6ec(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff802106b4:	85 c0                	test   %eax,%eax
ffffffff802106b6:	74 38                	je     ffffffff802106f0 <caml_modify+0x90>
ffffffff802106b8:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff802106bc:	75 c3                	jne    ffffffff80210681 <caml_modify+0x21>
ffffffff802106be:	48 3b 2d e3 b8 02 00 	cmp    0x2b8e3(%rip),%rbp        # ffffffff8023bfa8 <caml_young_end>
ffffffff802106c5:	73 ba                	jae    ffffffff80210681 <caml_modify+0x21>
ffffffff802106c7:	48 3b 2d e2 b8 02 00 	cmp    0x2b8e2(%rip),%rbp        # ffffffff8023bfb0 <caml_young_start>
ffffffff802106ce:	76 b1                	jbe    ffffffff80210681 <caml_modify+0x21>
ffffffff802106d0:	48 8b 05 81 b8 02 00 	mov    0x2b881(%rip),%rax        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff802106d7:	48 3b 05 82 b8 02 00 	cmp    0x2b882(%rip),%rax        # ffffffff8023bf60 <caml_ref_table+0x20>
ffffffff802106de:	73 20                	jae    ffffffff80210700 <caml_modify+0xa0>
ffffffff802106e0:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff802106e4:	48 89 15 6d b8 02 00 	mov    %rdx,0x2b86d(%rip)        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff802106eb:	48 89 18             	mov    %rbx,(%rax)
ffffffff802106ee:	eb 91                	jmp    ffffffff80210681 <caml_modify+0x21>
ffffffff802106f0:	31 f6                	xor    %esi,%esi
ffffffff802106f2:	e8 e9 e2 ff ff       	callq  ffffffff8020e9e0 <caml_darken>
ffffffff802106f7:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff802106fb:	75 84                	jne    ffffffff80210681 <caml_modify+0x21>
ffffffff802106fd:	eb bf                	jmp    ffffffff802106be <caml_modify+0x5e>
ffffffff802106ff:	90                   	nop
ffffffff80210700:	48 8d 3d 39 b8 02 00 	lea    0x2b839(%rip),%rdi        # ffffffff8023bf40 <caml_ref_table>
ffffffff80210707:	e8 84 1a 00 00       	callq  ffffffff80212190 <caml_realloc_ref_table>
ffffffff8021070c:	48 8b 05 45 b8 02 00 	mov    0x2b845(%rip),%rax        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff80210713:	eb cb                	jmp    ffffffff802106e0 <caml_modify+0x80>
ffffffff80210715:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021071c:	00 00 00 00 

ffffffff80210720 <caml_stat_create_pool>:
ffffffff80210720:	48 83 3d 28 b7 02 00 	cmpq   $0x0,0x2b728(%rip)        # ffffffff8023be50 <pool>
ffffffff80210727:	00 
ffffffff80210728:	74 06                	je     ffffffff80210730 <caml_stat_create_pool+0x10>
ffffffff8021072a:	c3                   	retq   
ffffffff8021072b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80210730:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80210734:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff80210739:	e8 47 f9 fe ff       	callq  ffffffff80200085 <malloc>
ffffffff8021073e:	48 89 05 0b b7 02 00 	mov    %rax,0x2b70b(%rip)        # ffffffff8023be50 <pool>
ffffffff80210745:	48 85 c0             	test   %rax,%rax
ffffffff80210748:	74 0c                	je     ffffffff80210756 <caml_stat_create_pool+0x36>
ffffffff8021074a:	48 89 00             	mov    %rax,(%rax)
ffffffff8021074d:	48 89 40 08          	mov    %rax,0x8(%rax)
ffffffff80210751:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80210755:	c3                   	retq   
ffffffff80210756:	48 8d 3d c3 16 01 00 	lea    0x116c3(%rip),%rdi        # ffffffff80221e20 <int32_length+0x340>
ffffffff8021075d:	e8 6e 1b 00 00       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff80210762:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80210769:	00 00 00 00 
ffffffff8021076d:	0f 1f 00             	nopl   (%rax)

ffffffff80210770 <caml_stat_destroy_pool>:
ffffffff80210770:	53                   	push   %rbx
ffffffff80210771:	48 8b 1d d8 b6 02 00 	mov    0x2b6d8(%rip),%rbx        # ffffffff8023be50 <pool>
ffffffff80210778:	48 85 db             	test   %rbx,%rbx
ffffffff8021077b:	74 2a                	je     ffffffff802107a7 <caml_stat_destroy_pool+0x37>
ffffffff8021077d:	48 8b 43 08          	mov    0x8(%rbx),%rax
ffffffff80210781:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff80210788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021078f:	00 
ffffffff80210790:	48 89 df             	mov    %rbx,%rdi
ffffffff80210793:	48 8b 1b             	mov    (%rbx),%rbx
ffffffff80210796:	e8 04 f9 fe ff       	callq  ffffffff8020009f <free>
ffffffff8021079b:	48 89 1d ae b6 02 00 	mov    %rbx,0x2b6ae(%rip)        # ffffffff8023be50 <pool>
ffffffff802107a2:	48 85 db             	test   %rbx,%rbx
ffffffff802107a5:	75 e9                	jne    ffffffff80210790 <caml_stat_destroy_pool+0x20>
ffffffff802107a7:	5b                   	pop    %rbx
ffffffff802107a8:	c3                   	retq   
ffffffff802107a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802107b0 <caml_stat_alloc_noexc>:
ffffffff802107b0:	53                   	push   %rbx
ffffffff802107b1:	48 8b 1d 98 b6 02 00 	mov    0x2b698(%rip),%rbx        # ffffffff8023be50 <pool>
ffffffff802107b8:	48 85 db             	test   %rbx,%rbx
ffffffff802107bb:	74 2b                	je     ffffffff802107e8 <caml_stat_alloc_noexc+0x38>
ffffffff802107bd:	48 83 c7 10          	add    $0x10,%rdi
ffffffff802107c1:	e8 bf f8 fe ff       	callq  ffffffff80200085 <malloc>
ffffffff802107c6:	48 85 c0             	test   %rax,%rax
ffffffff802107c9:	74 18                	je     ffffffff802107e3 <caml_stat_alloc_noexc+0x33>
ffffffff802107cb:	48 8b 13             	mov    (%rbx),%rdx
ffffffff802107ce:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff802107d2:	48 89 10             	mov    %rdx,(%rax)
ffffffff802107d5:	48 8b 13             	mov    (%rbx),%rdx
ffffffff802107d8:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff802107dc:	48 89 03             	mov    %rax,(%rbx)
ffffffff802107df:	48 83 c0 10          	add    $0x10,%rax
ffffffff802107e3:	5b                   	pop    %rbx
ffffffff802107e4:	c3                   	retq   
ffffffff802107e5:	0f 1f 00             	nopl   (%rax)
ffffffff802107e8:	5b                   	pop    %rbx
ffffffff802107e9:	e9 97 f8 fe ff       	jmpq   ffffffff80200085 <malloc>
ffffffff802107ee:	66 90                	xchg   %ax,%ax

ffffffff802107f0 <caml_stat_alloc_aligned_noexc>:
ffffffff802107f0:	55                   	push   %rbp
ffffffff802107f1:	48 81 c7 00 10 00 00 	add    $0x1000,%rdi
ffffffff802107f8:	48 89 d5             	mov    %rdx,%rbp
ffffffff802107fb:	53                   	push   %rbx
ffffffff802107fc:	89 f3                	mov    %esi,%ebx
ffffffff802107fe:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80210802:	e8 a9 ff ff ff       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80210807:	48 85 c0             	test   %rax,%rax
ffffffff8021080a:	74 19                	je     ffffffff80210825 <caml_stat_alloc_aligned_noexc+0x35>
ffffffff8021080c:	48 63 f3             	movslq %ebx,%rsi
ffffffff8021080f:	48 89 45 00          	mov    %rax,0x0(%rbp)
ffffffff80210813:	48 01 f0             	add    %rsi,%rax
ffffffff80210816:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
ffffffff8021081c:	48 05 00 10 00 00    	add    $0x1000,%rax
ffffffff80210822:	48 29 f0             	sub    %rsi,%rax
ffffffff80210825:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80210829:	5b                   	pop    %rbx
ffffffff8021082a:	5d                   	pop    %rbp
ffffffff8021082b:	c3                   	retq   
ffffffff8021082c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80210830 <caml_alloc_for_heap>:
ffffffff80210830:	48 83 3d 08 b6 02 00 	cmpq   $0x0,0x2b608(%rip)        # ffffffff8023be40 <caml_use_huge_pages>
ffffffff80210837:	00 
ffffffff80210838:	53                   	push   %rbx
ffffffff80210839:	74 45                	je     ffffffff80210880 <caml_alloc_for_heap+0x50>
ffffffff8021083b:	48 8d 9f 1f 00 40 00 	lea    0x40001f(%rdi),%rbx
ffffffff80210842:	45 31 c9             	xor    %r9d,%r9d
ffffffff80210845:	31 ff                	xor    %edi,%edi
ffffffff80210847:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff8021084d:	48 81 e3 00 00 c0 ff 	and    $0xffffffffffc00000,%rbx
ffffffff80210854:	b9 22 00 04 00       	mov    $0x40022,%ecx
ffffffff80210859:	ba 03 00 00 00       	mov    $0x3,%edx
ffffffff8021085e:	48 89 de             	mov    %rbx,%rsi
ffffffff80210861:	e8 5d f8 fe ff       	callq  ffffffff802000c3 <mmap64>
ffffffff80210866:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff8021086a:	74 5c                	je     ffffffff802108c8 <caml_alloc_for_heap+0x98>
ffffffff8021086c:	48 83 eb 20          	sub    $0x20,%rbx
ffffffff80210870:	4c 8d 40 20          	lea    0x20(%rax),%r8
ffffffff80210874:	48 89 00             	mov    %rax,(%rax)
ffffffff80210877:	48 89 58 10          	mov    %rbx,0x10(%rax)
ffffffff8021087b:	4c 89 c0             	mov    %r8,%rax
ffffffff8021087e:	5b                   	pop    %rbx
ffffffff8021087f:	c3                   	retq   
ffffffff80210880:	48 8d 9f ff 0f 00 00 	lea    0xfff(%rdi),%rbx
ffffffff80210887:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
ffffffff8021088e:	48 8d bb 20 10 00 00 	lea    0x1020(%rbx),%rdi
ffffffff80210895:	e8 16 ff ff ff       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff8021089a:	48 85 c0             	test   %rax,%rax
ffffffff8021089d:	74 29                	je     ffffffff802108c8 <caml_alloc_for_heap+0x98>
ffffffff8021089f:	48 8d 50 20          	lea    0x20(%rax),%rdx
ffffffff802108a3:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
ffffffff802108aa:	4c 8d 82 00 10 00 00 	lea    0x1000(%rdx),%r8
ffffffff802108b1:	48 89 82 e0 0f 00 00 	mov    %rax,0xfe0(%rdx)
ffffffff802108b8:	48 89 9a f0 0f 00 00 	mov    %rbx,0xff0(%rdx)
ffffffff802108bf:	4c 89 c0             	mov    %r8,%rax
ffffffff802108c2:	5b                   	pop    %rbx
ffffffff802108c3:	c3                   	retq   
ffffffff802108c4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802108c8:	45 31 c0             	xor    %r8d,%r8d
ffffffff802108cb:	5b                   	pop    %rbx
ffffffff802108cc:	4c 89 c0             	mov    %r8,%rax
ffffffff802108cf:	c3                   	retq   

ffffffff802108d0 <caml_stat_alloc_aligned>:
ffffffff802108d0:	41 54                	push   %r12
ffffffff802108d2:	49 89 d4             	mov    %rdx,%r12
ffffffff802108d5:	55                   	push   %rbp
ffffffff802108d6:	48 89 fd             	mov    %rdi,%rbp
ffffffff802108d9:	48 81 c7 00 10 00 00 	add    $0x1000,%rdi
ffffffff802108e0:	53                   	push   %rbx
ffffffff802108e1:	89 f3                	mov    %esi,%ebx
ffffffff802108e3:	e8 c8 fe ff ff       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff802108e8:	48 85 c0             	test   %rax,%rax
ffffffff802108eb:	74 33                	je     ffffffff80210920 <caml_stat_alloc_aligned+0x50>
ffffffff802108ed:	48 63 f3             	movslq %ebx,%rsi
ffffffff802108f0:	49 89 04 24          	mov    %rax,(%r12)
ffffffff802108f4:	48 01 f0             	add    %rsi,%rax
ffffffff802108f7:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
ffffffff802108fd:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx
ffffffff80210904:	48 89 d0             	mov    %rdx,%rax
ffffffff80210907:	48 29 f0             	sub    %rsi,%rax
ffffffff8021090a:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8021090d:	0f 94 c2             	sete   %dl
ffffffff80210910:	48 85 ed             	test   %rbp,%rbp
ffffffff80210913:	74 04                	je     ffffffff80210919 <caml_stat_alloc_aligned+0x49>
ffffffff80210915:	84 d2                	test   %dl,%dl
ffffffff80210917:	75 0e                	jne    ffffffff80210927 <caml_stat_alloc_aligned+0x57>
ffffffff80210919:	5b                   	pop    %rbx
ffffffff8021091a:	5d                   	pop    %rbp
ffffffff8021091b:	41 5c                	pop    %r12
ffffffff8021091d:	c3                   	retq   
ffffffff8021091e:	66 90                	xchg   %ax,%ax
ffffffff80210920:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80210925:	eb e9                	jmp    ffffffff80210910 <caml_stat_alloc_aligned+0x40>
ffffffff80210927:	e8 94 6b ff ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff8021092c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80210930 <caml_stat_alloc>:
ffffffff80210930:	53                   	push   %rbx
ffffffff80210931:	48 89 fb             	mov    %rdi,%rbx
ffffffff80210934:	e8 77 fe ff ff       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80210939:	48 85 c0             	test   %rax,%rax
ffffffff8021093c:	75 05                	jne    ffffffff80210943 <caml_stat_alloc+0x13>
ffffffff8021093e:	48 85 db             	test   %rbx,%rbx
ffffffff80210941:	75 02                	jne    ffffffff80210945 <caml_stat_alloc+0x15>
ffffffff80210943:	5b                   	pop    %rbx
ffffffff80210944:	c3                   	retq   
ffffffff80210945:	e8 76 6b ff ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff8021094a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80210950 <caml_stat_free>:
ffffffff80210950:	48 83 3d f8 b4 02 00 	cmpq   $0x0,0x2b4f8(%rip)        # ffffffff8023be50 <pool>
ffffffff80210957:	00 
ffffffff80210958:	74 1c                	je     ffffffff80210976 <caml_stat_free+0x26>
ffffffff8021095a:	48 85 ff             	test   %rdi,%rdi
ffffffff8021095d:	74 21                	je     ffffffff80210980 <caml_stat_free+0x30>
ffffffff8021095f:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
ffffffff80210963:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
ffffffff80210967:	48 83 ef 10          	sub    $0x10,%rdi
ffffffff8021096b:	48 89 02             	mov    %rax,(%rdx)
ffffffff8021096e:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80210972:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80210976:	e9 24 f7 fe ff       	jmpq   ffffffff8020009f <free>
ffffffff8021097b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80210980:	c3                   	retq   
ffffffff80210981:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80210988:	00 00 00 00 
ffffffff8021098c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80210990 <caml_free_for_heap>:
ffffffff80210990:	48 83 3d a8 b4 02 00 	cmpq   $0x0,0x2b4a8(%rip)        # ffffffff8023be40 <caml_use_huge_pages>
ffffffff80210997:	00 
ffffffff80210998:	4c 8b 47 e0          	mov    -0x20(%rdi),%r8
ffffffff8021099c:	74 12                	je     ffffffff802109b0 <caml_free_for_heap+0x20>
ffffffff8021099e:	48 8b 77 f0          	mov    -0x10(%rdi),%rsi
ffffffff802109a2:	4c 89 c7             	mov    %r8,%rdi
ffffffff802109a5:	48 83 c6 20          	add    $0x20,%rsi
ffffffff802109a9:	e9 16 f7 fe ff       	jmpq   ffffffff802000c4 <munmap>
ffffffff802109ae:	66 90                	xchg   %ax,%ax
ffffffff802109b0:	4c 89 c7             	mov    %r8,%rdi
ffffffff802109b3:	eb 9b                	jmp    ffffffff80210950 <caml_stat_free>
ffffffff802109b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802109bc:	00 00 00 00 

ffffffff802109c0 <caml_stat_resize_noexc>:
ffffffff802109c0:	48 83 3d 88 b4 02 00 	cmpq   $0x0,0x2b488(%rip)        # ffffffff8023be50 <pool>
ffffffff802109c7:	00 
ffffffff802109c8:	74 36                	je     ffffffff80210a00 <caml_stat_resize_noexc+0x40>
ffffffff802109ca:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802109ce:	48 8d 47 f0          	lea    -0x10(%rdi),%rax
ffffffff802109d2:	48 85 ff             	test   %rdi,%rdi
ffffffff802109d5:	48 0f 45 f8          	cmovne %rax,%rdi
ffffffff802109d9:	48 83 c6 10          	add    $0x10,%rsi
ffffffff802109dd:	e8 e0 f6 fe ff       	callq  ffffffff802000c2 <realloc>
ffffffff802109e2:	48 85 c0             	test   %rax,%rax
ffffffff802109e5:	74 12                	je     ffffffff802109f9 <caml_stat_resize_noexc+0x39>
ffffffff802109e7:	48 8b 50 08          	mov    0x8(%rax),%rdx
ffffffff802109eb:	48 89 02             	mov    %rax,(%rdx)
ffffffff802109ee:	48 8b 10             	mov    (%rax),%rdx
ffffffff802109f1:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff802109f5:	48 83 c0 10          	add    $0x10,%rax
ffffffff802109f9:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802109fd:	c3                   	retq   
ffffffff802109fe:	66 90                	xchg   %ax,%ax
ffffffff80210a00:	e9 bd f6 fe ff       	jmpq   ffffffff802000c2 <realloc>
ffffffff80210a05:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80210a0c:	00 00 00 00 

ffffffff80210a10 <caml_stat_resize>:
ffffffff80210a10:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80210a14:	e8 a7 ff ff ff       	callq  ffffffff802109c0 <caml_stat_resize_noexc>
ffffffff80210a19:	48 85 c0             	test   %rax,%rax
ffffffff80210a1c:	74 05                	je     ffffffff80210a23 <caml_stat_resize+0x13>
ffffffff80210a1e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80210a22:	c3                   	retq   
ffffffff80210a23:	e8 98 6a ff ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff80210a28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80210a2f:	00 

ffffffff80210a30 <caml_stat_calloc_noexc>:
ffffffff80210a30:	48 89 f0             	mov    %rsi,%rax
ffffffff80210a33:	45 31 c0             	xor    %r8d,%r8d
ffffffff80210a36:	48 f7 e7             	mul    %rdi
ffffffff80210a39:	70 35                	jo     ffffffff80210a70 <caml_stat_calloc_noexc+0x40>
ffffffff80210a3b:	41 54                	push   %r12
ffffffff80210a3d:	48 89 c7             	mov    %rax,%rdi
ffffffff80210a40:	49 89 c4             	mov    %rax,%r12
ffffffff80210a43:	e8 68 fd ff ff       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80210a48:	49 89 c0             	mov    %rax,%r8
ffffffff80210a4b:	48 85 c0             	test   %rax,%rax
ffffffff80210a4e:	74 10                	je     ffffffff80210a60 <caml_stat_calloc_noexc+0x30>
ffffffff80210a50:	4c 89 e2             	mov    %r12,%rdx
ffffffff80210a53:	31 f6                	xor    %esi,%esi
ffffffff80210a55:	48 89 c7             	mov    %rax,%rdi
ffffffff80210a58:	e8 47 f6 fe ff       	callq  ffffffff802000a4 <memset>
ffffffff80210a5d:	49 89 c0             	mov    %rax,%r8
ffffffff80210a60:	4c 89 c0             	mov    %r8,%rax
ffffffff80210a63:	41 5c                	pop    %r12
ffffffff80210a65:	c3                   	retq   
ffffffff80210a66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80210a6d:	00 00 00 
ffffffff80210a70:	4c 89 c0             	mov    %r8,%rax
ffffffff80210a73:	c3                   	retq   
ffffffff80210a74:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80210a7b:	00 00 00 00 
ffffffff80210a7f:	90                   	nop

ffffffff80210a80 <caml_page_table_initialize>:
ffffffff80210a80:	48 c1 ef 0c          	shr    $0xc,%rdi
ffffffff80210a84:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80210a88:	48 c7 05 cd b3 02 00 	movq   $0x1,0x2b3cd(%rip)        # ffffffff8023be60 <caml_page_table>
ffffffff80210a8f:	01 00 00 00 
ffffffff80210a93:	c7 05 cb b3 02 00 40 	movl   $0x40,0x2b3cb(%rip)        # ffffffff8023be68 <caml_page_table+0x8>
ffffffff80210a9a:	00 00 00 
ffffffff80210a9d:	48 8d 14 3f          	lea    (%rdi,%rdi,1),%rdx
ffffffff80210aa1:	48 83 fa 01          	cmp    $0x1,%rdx
ffffffff80210aa5:	76 69                	jbe    ffffffff80210b10 <caml_page_table_initialize+0x90>
ffffffff80210aa7:	b8 3f 00 00 00       	mov    $0x3f,%eax
ffffffff80210aac:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80210ab1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80210ab8:	48 01 ff             	add    %rdi,%rdi
ffffffff80210abb:	89 c1                	mov    %eax,%ecx
ffffffff80210abd:	83 e8 01             	sub    $0x1,%eax
ffffffff80210ac0:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80210ac3:	72 f3                	jb     ffffffff80210ab8 <caml_page_table_initialize+0x38>
ffffffff80210ac5:	48 89 3d 94 b3 02 00 	mov    %rdi,0x2b394(%rip)        # ffffffff8023be60 <caml_page_table>
ffffffff80210acc:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
ffffffff80210ad0:	89 0d 92 b3 02 00    	mov    %ecx,0x2b392(%rip)        # ffffffff8023be68 <caml_page_table+0x8>
ffffffff80210ad6:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80210adb:	48 89 05 8e b3 02 00 	mov    %rax,0x2b38e(%rip)        # ffffffff8023be70 <caml_page_table+0x10>
ffffffff80210ae2:	48 c7 05 8b b3 02 00 	movq   $0x0,0x2b38b(%rip)        # ffffffff8023be78 <caml_page_table+0x18>
ffffffff80210ae9:	00 00 00 00 
ffffffff80210aed:	e8 3e ff ff ff       	callq  ffffffff80210a30 <caml_stat_calloc_noexc>
ffffffff80210af2:	48 85 c0             	test   %rax,%rax
ffffffff80210af5:	48 89 05 84 b3 02 00 	mov    %rax,0x2b384(%rip)        # ffffffff8023be80 <caml_page_table+0x20>
ffffffff80210afc:	0f 94 c0             	sete   %al
ffffffff80210aff:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80210b03:	0f b6 c0             	movzbl %al,%eax
ffffffff80210b06:	f7 d8                	neg    %eax
ffffffff80210b08:	c3                   	retq   
ffffffff80210b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80210b10:	31 c0                	xor    %eax,%eax
ffffffff80210b12:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80210b17:	eb bd                	jmp    ffffffff80210ad6 <caml_page_table_initialize+0x56>
ffffffff80210b19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80210b20 <caml_page_table_modify>:
ffffffff80210b20:	41 57                	push   %r15
ffffffff80210b22:	41 56                	push   %r14
ffffffff80210b24:	4c 63 f2             	movslq %edx,%r14
ffffffff80210b27:	41 55                	push   %r13
ffffffff80210b29:	41 89 f5             	mov    %esi,%r13d
ffffffff80210b2c:	41 54                	push   %r12
ffffffff80210b2e:	55                   	push   %rbp
ffffffff80210b2f:	53                   	push   %rbx
ffffffff80210b30:	48 89 fb             	mov    %rdi,%rbx
ffffffff80210b33:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80210b37:	48 8b 0d 3a b3 02 00 	mov    0x2b33a(%rip),%rcx        # ffffffff8023be78 <caml_page_table+0x18>
ffffffff80210b3e:	48 8b 15 1b b3 02 00 	mov    0x2b31b(%rip),%rdx        # ffffffff8023be60 <caml_page_table>
ffffffff80210b45:	44 8b 3d 1c b3 02 00 	mov    0x2b31c(%rip),%r15d        # ffffffff8023be68 <caml_page_table+0x8>
ffffffff80210b4c:	4c 8b 25 2d b3 02 00 	mov    0x2b32d(%rip),%r12        # ffffffff8023be80 <caml_page_table+0x20>
ffffffff80210b53:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
ffffffff80210b57:	48 39 d0             	cmp    %rdx,%rax
ffffffff80210b5a:	0f 83 a0 00 00 00    	jae    ffffffff80210c00 <caml_page_table_modify+0xe0>
ffffffff80210b60:	48 89 d8             	mov    %rbx,%rax
ffffffff80210b63:	44 89 f9             	mov    %r15d,%ecx
ffffffff80210b66:	48 ba 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rdx
ffffffff80210b6d:	79 37 9e 
ffffffff80210b70:	48 8b 3d f9 b2 02 00 	mov    0x2b2f9(%rip),%rdi        # ffffffff8023be70 <caml_page_table+0x10>
ffffffff80210b77:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80210b7b:	48 0f af c2          	imul   %rdx,%rax
ffffffff80210b7f:	48 d3 e8             	shr    %cl,%rax
ffffffff80210b82:	49 8d 0c c4          	lea    (%r12,%rax,8),%rcx
ffffffff80210b86:	48 8b 11             	mov    (%rcx),%rdx
ffffffff80210b89:	48 85 d2             	test   %rdx,%rdx
ffffffff80210b8c:	75 15                	jne    ffffffff80210ba3 <caml_page_table_modify+0x83>
ffffffff80210b8e:	eb 48                	jmp    ffffffff80210bd8 <caml_page_table_modify+0xb8>
ffffffff80210b90:	48 83 c0 01          	add    $0x1,%rax
ffffffff80210b94:	48 21 f8             	and    %rdi,%rax
ffffffff80210b97:	49 8d 0c c4          	lea    (%r12,%rax,8),%rcx
ffffffff80210b9b:	48 8b 11             	mov    (%rcx),%rdx
ffffffff80210b9e:	48 85 d2             	test   %rdx,%rdx
ffffffff80210ba1:	74 35                	je     ffffffff80210bd8 <caml_page_table_modify+0xb8>
ffffffff80210ba3:	48 89 de             	mov    %rbx,%rsi
ffffffff80210ba6:	48 31 d6             	xor    %rdx,%rsi
ffffffff80210ba9:	48 f7 c6 00 f0 ff ff 	test   $0xfffffffffffff000,%rsi
ffffffff80210bb0:	75 de                	jne    ffffffff80210b90 <caml_page_table_modify+0x70>
ffffffff80210bb2:	41 f7 d5             	not    %r13d
ffffffff80210bb5:	31 c0                	xor    %eax,%eax
ffffffff80210bb7:	4d 63 ed             	movslq %r13d,%r13
ffffffff80210bba:	4c 21 ea             	and    %r13,%rdx
ffffffff80210bbd:	4c 09 f2             	or     %r14,%rdx
ffffffff80210bc0:	48 89 11             	mov    %rdx,(%rcx)
ffffffff80210bc3:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80210bc7:	5b                   	pop    %rbx
ffffffff80210bc8:	5d                   	pop    %rbp
ffffffff80210bc9:	41 5c                	pop    %r12
ffffffff80210bcb:	41 5d                	pop    %r13
ffffffff80210bcd:	41 5e                	pop    %r14
ffffffff80210bcf:	41 5f                	pop    %r15
ffffffff80210bd1:	c3                   	retq   
ffffffff80210bd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80210bd8:	4c 09 f3             	or     %r14,%rbx
ffffffff80210bdb:	48 83 05 95 b2 02 00 	addq   $0x1,0x2b295(%rip)        # ffffffff8023be78 <caml_page_table+0x18>
ffffffff80210be2:	01 
ffffffff80210be3:	31 c0                	xor    %eax,%eax
ffffffff80210be5:	48 89 19             	mov    %rbx,(%rcx)
ffffffff80210be8:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80210bec:	5b                   	pop    %rbx
ffffffff80210bed:	5d                   	pop    %rbp
ffffffff80210bee:	41 5c                	pop    %r12
ffffffff80210bf0:	41 5d                	pop    %r13
ffffffff80210bf2:	41 5e                	pop    %r14
ffffffff80210bf4:	41 5f                	pop    %r15
ffffffff80210bf6:	c3                   	retq   
ffffffff80210bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80210bfe:	00 00 
ffffffff80210c00:	31 c0                	xor    %eax,%eax
ffffffff80210c02:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff80210c07:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff80210c0c:	48 8d 35 75 12 01 00 	lea    0x11275(%rip),%rsi        # ffffffff80221e88 <int32_length+0x3a8>
ffffffff80210c13:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff80210c18:	e8 d3 15 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80210c1d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80210c22:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80210c27:	48 8d 3c 12          	lea    (%rdx,%rdx,1),%rdi
ffffffff80210c2b:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
ffffffff80210c30:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80210c35:	e8 f6 fd ff ff       	callq  ffffffff80210a30 <caml_stat_calloc_noexc>
ffffffff80210c3a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80210c3f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
ffffffff80210c44:	48 85 c0             	test   %rax,%rax
ffffffff80210c47:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
ffffffff80210c4c:	48 89 c5             	mov    %rax,%rbp
ffffffff80210c4f:	0f 84 a9 00 00 00    	je     ffffffff80210cfe <caml_page_table_modify+0x1de>
ffffffff80210c55:	41 83 ef 01          	sub    $0x1,%r15d
ffffffff80210c59:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
ffffffff80210c5d:	48 89 3d fc b1 02 00 	mov    %rdi,0x2b1fc(%rip)        # ffffffff8023be60 <caml_page_table>
ffffffff80210c64:	4c 89 e6             	mov    %r12,%rsi
ffffffff80210c67:	44 89 3d fa b1 02 00 	mov    %r15d,0x2b1fa(%rip)        # ffffffff8023be68 <caml_page_table+0x8>
ffffffff80210c6e:	4d 8d 04 d4          	lea    (%r12,%rdx,8),%r8
ffffffff80210c72:	49 b9 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%r9
ffffffff80210c79:	79 37 9e 
ffffffff80210c7c:	48 89 05 ed b1 02 00 	mov    %rax,0x2b1ed(%rip)        # ffffffff8023be70 <caml_page_table+0x10>
ffffffff80210c83:	48 89 0d ee b1 02 00 	mov    %rcx,0x2b1ee(%rip)        # ffffffff8023be78 <caml_page_table+0x18>
ffffffff80210c8a:	48 89 2d ef b1 02 00 	mov    %rbp,0x2b1ef(%rip)        # ffffffff8023be80 <caml_page_table+0x20>
ffffffff80210c91:	48 85 d2             	test   %rdx,%rdx
ffffffff80210c94:	75 13                	jne    ffffffff80210ca9 <caml_page_table_modify+0x189>
ffffffff80210c96:	eb 56                	jmp    ffffffff80210cee <caml_page_table_modify+0x1ce>
ffffffff80210c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80210c9f:	00 
ffffffff80210ca0:	48 83 c6 08          	add    $0x8,%rsi
ffffffff80210ca4:	49 39 f0             	cmp    %rsi,%r8
ffffffff80210ca7:	74 45                	je     ffffffff80210cee <caml_page_table_modify+0x1ce>
ffffffff80210ca9:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff80210cac:	48 85 ff             	test   %rdi,%rdi
ffffffff80210caf:	74 ef                	je     ffffffff80210ca0 <caml_page_table_modify+0x180>
ffffffff80210cb1:	48 89 fa             	mov    %rdi,%rdx
ffffffff80210cb4:	44 89 f9             	mov    %r15d,%ecx
ffffffff80210cb7:	48 c1 ea 0c          	shr    $0xc,%rdx
ffffffff80210cbb:	49 0f af d1          	imul   %r9,%rdx
ffffffff80210cbf:	48 d3 ea             	shr    %cl,%rdx
ffffffff80210cc2:	48 8d 4c d5 00       	lea    0x0(%rbp,%rdx,8),%rcx
ffffffff80210cc7:	48 83 39 00          	cmpq   $0x0,(%rcx)
ffffffff80210ccb:	74 15                	je     ffffffff80210ce2 <caml_page_table_modify+0x1c2>
ffffffff80210ccd:	0f 1f 00             	nopl   (%rax)
ffffffff80210cd0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80210cd4:	48 21 c2             	and    %rax,%rdx
ffffffff80210cd7:	48 8d 4c d5 00       	lea    0x0(%rbp,%rdx,8),%rcx
ffffffff80210cdc:	48 83 39 00          	cmpq   $0x0,(%rcx)
ffffffff80210ce0:	75 ee                	jne    ffffffff80210cd0 <caml_page_table_modify+0x1b0>
ffffffff80210ce2:	48 83 c6 08          	add    $0x8,%rsi
ffffffff80210ce6:	48 89 39             	mov    %rdi,(%rcx)
ffffffff80210ce9:	49 39 f0             	cmp    %rsi,%r8
ffffffff80210cec:	75 bb                	jne    ffffffff80210ca9 <caml_page_table_modify+0x189>
ffffffff80210cee:	4c 89 e7             	mov    %r12,%rdi
ffffffff80210cf1:	49 89 ec             	mov    %rbp,%r12
ffffffff80210cf4:	e8 57 fc ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80210cf9:	e9 62 fe ff ff       	jmpq   ffffffff80210b60 <caml_page_table_modify+0x40>
ffffffff80210cfe:	31 c0                	xor    %eax,%eax
ffffffff80210d00:	48 8d 35 a9 11 01 00 	lea    0x111a9(%rip),%rsi        # ffffffff80221eb0 <int32_length+0x3d0>
ffffffff80210d07:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff80210d0c:	e8 df 14 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80210d11:	83 c8 ff             	or     $0xffffffff,%eax
ffffffff80210d14:	e9 cf fe ff ff       	jmpq   ffffffff80210be8 <caml_page_table_modify+0xc8>
ffffffff80210d19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80210d20 <caml_page_table_add>:
ffffffff80210d20:	41 54                	push   %r12
ffffffff80210d22:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
ffffffff80210d29:	55                   	push   %rbp
ffffffff80210d2a:	48 8d 6a ff          	lea    -0x1(%rdx),%rbp
ffffffff80210d2e:	48 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%rbp
ffffffff80210d35:	53                   	push   %rbx
ffffffff80210d36:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80210d39:	77 35                	ja     ffffffff80210d70 <caml_page_table_add+0x50>
ffffffff80210d3b:	41 89 fc             	mov    %edi,%r12d
ffffffff80210d3e:	48 89 f3             	mov    %rsi,%rbx
ffffffff80210d41:	eb 11                	jmp    ffffffff80210d54 <caml_page_table_add+0x34>
ffffffff80210d43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80210d48:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
ffffffff80210d4f:	48 39 dd             	cmp    %rbx,%rbp
ffffffff80210d52:	72 1c                	jb     ffffffff80210d70 <caml_page_table_add+0x50>
ffffffff80210d54:	31 f6                	xor    %esi,%esi
ffffffff80210d56:	44 89 e2             	mov    %r12d,%edx
ffffffff80210d59:	48 89 df             	mov    %rbx,%rdi
ffffffff80210d5c:	e8 bf fd ff ff       	callq  ffffffff80210b20 <caml_page_table_modify>
ffffffff80210d61:	85 c0                	test   %eax,%eax
ffffffff80210d63:	74 e3                	je     ffffffff80210d48 <caml_page_table_add+0x28>
ffffffff80210d65:	5b                   	pop    %rbx
ffffffff80210d66:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff80210d6b:	5d                   	pop    %rbp
ffffffff80210d6c:	41 5c                	pop    %r12
ffffffff80210d6e:	c3                   	retq   
ffffffff80210d6f:	90                   	nop
ffffffff80210d70:	5b                   	pop    %rbx
ffffffff80210d71:	31 c0                	xor    %eax,%eax
ffffffff80210d73:	5d                   	pop    %rbp
ffffffff80210d74:	41 5c                	pop    %r12
ffffffff80210d76:	c3                   	retq   
ffffffff80210d77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80210d7e:	00 00 

ffffffff80210d80 <caml_add_to_heap>:
ffffffff80210d80:	53                   	push   %rbx
ffffffff80210d81:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
ffffffff80210d85:	48 89 fb             	mov    %rdi,%rbx
ffffffff80210d88:	48 8d 35 9f 10 01 00 	lea    0x1109f(%rip),%rsi        # ffffffff80221e2e <int32_length+0x34e>
ffffffff80210d8f:	48 8b 15 0a 77 03 00 	mov    0x3770a(%rip),%rdx        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff80210d96:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80210d9b:	48 8d 14 d0          	lea    (%rax,%rdx,8),%rdx
ffffffff80210d9f:	31 c0                	xor    %eax,%eax
ffffffff80210da1:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80210da5:	e8 46 14 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80210daa:	48 8b 53 f0          	mov    -0x10(%rbx),%rdx
ffffffff80210dae:	48 89 de             	mov    %rbx,%rsi
ffffffff80210db1:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80210db6:	48 01 da             	add    %rbx,%rdx
ffffffff80210db9:	e8 62 ff ff ff       	callq  ffffffff80210d20 <caml_page_table_add>
ffffffff80210dbe:	85 c0                	test   %eax,%eax
ffffffff80210dc0:	75 6f                	jne    ffffffff80210e31 <caml_add_to_heap+0xb1>
ffffffff80210dc2:	48 8b 15 e7 af 02 00 	mov    0x2afe7(%rip),%rdx        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80210dc9:	48 85 d2             	test   %rdx,%rdx
ffffffff80210dcc:	74 5a                	je     ffffffff80210e28 <caml_add_to_heap+0xa8>
ffffffff80210dce:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80210dd1:	76 55                	jbe    ffffffff80210e28 <caml_add_to_heap+0xa8>
ffffffff80210dd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80210dd8:	48 89 d1             	mov    %rdx,%rcx
ffffffff80210ddb:	48 8b 52 f8          	mov    -0x8(%rdx),%rdx
ffffffff80210ddf:	48 85 d2             	test   %rdx,%rdx
ffffffff80210de2:	74 05                	je     ffffffff80210de9 <caml_add_to_heap+0x69>
ffffffff80210de4:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80210de7:	77 ef                	ja     ffffffff80210dd8 <caml_add_to_heap+0x58>
ffffffff80210de9:	48 83 e9 08          	sub    $0x8,%rcx
ffffffff80210ded:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
ffffffff80210df1:	48 89 19             	mov    %rbx,(%rcx)
ffffffff80210df4:	48 83 05 8c 76 03 00 	addq   $0x1,0x3768c(%rip)        # ffffffff80248488 <caml_stat_heap_chunks>
ffffffff80210dfb:	01 
ffffffff80210dfc:	48 8b 53 f0          	mov    -0x10(%rbx),%rdx
ffffffff80210e00:	48 c1 ea 03          	shr    $0x3,%rdx
ffffffff80210e04:	48 03 15 95 76 03 00 	add    0x37695(%rip),%rdx        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff80210e0b:	48 3b 15 86 76 03 00 	cmp    0x37686(%rip),%rdx        # ffffffff80248498 <caml_stat_top_heap_wsz>
ffffffff80210e12:	48 89 15 87 76 03 00 	mov    %rdx,0x37687(%rip)        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff80210e19:	7e 07                	jle    ffffffff80210e22 <caml_add_to_heap+0xa2>
ffffffff80210e1b:	48 89 15 76 76 03 00 	mov    %rdx,0x37676(%rip)        # ffffffff80248498 <caml_stat_top_heap_wsz>
ffffffff80210e22:	5b                   	pop    %rbx
ffffffff80210e23:	c3                   	retq   
ffffffff80210e24:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80210e28:	48 8d 0d 81 af 02 00 	lea    0x2af81(%rip),%rcx        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80210e2f:	eb bc                	jmp    ffffffff80210ded <caml_add_to_heap+0x6d>
ffffffff80210e31:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff80210e36:	5b                   	pop    %rbx
ffffffff80210e37:	c3                   	retq   
ffffffff80210e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80210e3f:	00 

ffffffff80210e40 <expand_heap>:
ffffffff80210e40:	48 b9 c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rcx
ffffffff80210e47:	c2 f5 28 
ffffffff80210e4a:	48 89 fa             	mov    %rdi,%rdx
ffffffff80210e4d:	41 54                	push   %r12
ffffffff80210e4f:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff80210e53:	48 89 d0             	mov    %rdx,%rax
ffffffff80210e56:	48 f7 e1             	mul    %rcx
ffffffff80210e59:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff80210e5d:	48 0f af 15 5b af 02 	imul   0x2af5b(%rip),%rdx        # ffffffff8023bdc0 <caml_percent_free>
ffffffff80210e64:	00 
ffffffff80210e65:	48 01 d7             	add    %rdx,%rdi
ffffffff80210e68:	e8 13 e5 ff ff       	callq  ffffffff8020f380 <caml_clip_heap_chunk_wsz>
ffffffff80210e6d:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
ffffffff80210e74:	00 
ffffffff80210e75:	e8 b6 f9 ff ff       	callq  ffffffff80210830 <caml_alloc_for_heap>
ffffffff80210e7a:	49 89 c4             	mov    %rax,%r12
ffffffff80210e7d:	48 85 c0             	test   %rax,%rax
ffffffff80210e80:	0f 84 07 01 00 00    	je     ffffffff80210f8d <expand_heap+0x14d>
ffffffff80210e86:	48 ba ff ff ff ff ff 	movabs $0x3fffffffffffff,%rdx
ffffffff80210e8d:	ff 3f 00 
ffffffff80210e90:	4c 8b 50 f0          	mov    -0x10(%rax),%r10
ffffffff80210e94:	49 c1 ea 03          	shr    $0x3,%r10
ffffffff80210e98:	49 8d 42 ff          	lea    -0x1(%r10),%rax
ffffffff80210e9c:	48 39 d0             	cmp    %rdx,%rax
ffffffff80210e9f:	0f 86 d3 00 00 00    	jbe    ffffffff80210f78 <expand_heap+0x138>
ffffffff80210ea5:	48 be ff ff ff ff ff 	movabs $0xffbfffffffffffff,%rsi
ffffffff80210eac:	ff bf ff 
ffffffff80210eaf:	4c 89 e0             	mov    %r12,%rax
ffffffff80210eb2:	31 d2                	xor    %edx,%edx
ffffffff80210eb4:	49 b8 08 00 00 00 00 	movabs $0x200000000000008,%r8
ffffffff80210ebb:	00 00 02 
ffffffff80210ebe:	48 bf 00 00 00 00 00 	movabs $0x200000000000000,%rdi
ffffffff80210ec5:	00 00 02 
ffffffff80210ec8:	4c 01 d6             	add    %r10,%rsi
ffffffff80210ecb:	49 89 f3             	mov    %rsi,%r11
ffffffff80210ece:	49 c1 eb 36          	shr    $0x36,%r11
ffffffff80210ed2:	45 89 d9             	mov    %r11d,%r9d
ffffffff80210ed5:	0f 1f 00             	nopl   (%rax)
ffffffff80210ed8:	4a 8d 0c 00          	lea    (%rax,%r8,1),%rcx
ffffffff80210edc:	48 c7 00 00 fe ff ff 	movq   $0xfffffffffffffe00,(%rax)
ffffffff80210ee3:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff80210ee7:	48 01 f8             	add    %rdi,%rax
ffffffff80210eea:	49 89 4c 24 10       	mov    %rcx,0x10(%r12)
ffffffff80210eef:	89 d1                	mov    %edx,%ecx
ffffffff80210ef1:	83 c2 01             	add    $0x1,%edx
ffffffff80210ef4:	44 39 c9             	cmp    %r9d,%ecx
ffffffff80210ef7:	75 df                	jne    ffffffff80210ed8 <expand_heap+0x98>
ffffffff80210ef9:	48 b9 00 00 00 00 00 	movabs $0xffc0000000000000,%rcx
ffffffff80210f00:	00 c0 ff 
ffffffff80210f03:	49 8d 53 01          	lea    0x1(%r11),%rdx
ffffffff80210f07:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffff,%rax
ffffffff80210f0e:	ff 3f 00 
ffffffff80210f11:	49 c1 e3 36          	shl    $0x36,%r11
ffffffff80210f15:	48 c1 e2 39          	shl    $0x39,%rdx
ffffffff80210f19:	49 01 ca             	add    %rcx,%r10
ffffffff80210f1c:	48 21 f0             	and    %rsi,%rax
ffffffff80210f1f:	4c 01 e2             	add    %r12,%rdx
ffffffff80210f22:	4d 29 da             	sub    %r11,%r10
ffffffff80210f25:	49 83 fa 01          	cmp    $0x1,%r10
ffffffff80210f29:	76 35                	jbe    ffffffff80210f60 <expand_heap+0x120>
ffffffff80210f2b:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff80210f2f:	48 05 00 02 00 00    	add    $0x200,%rax
ffffffff80210f35:	48 89 02             	mov    %rax,(%rdx)
ffffffff80210f38:	48 8d 42 08          	lea    0x8(%rdx),%rax
ffffffff80210f3c:	49 89 44 24 10       	mov    %rax,0x10(%r12)
ffffffff80210f41:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
ffffffff80210f48:	00 
ffffffff80210f49:	4c 89 e7             	mov    %r12,%rdi
ffffffff80210f4c:	e8 2f fe ff ff       	callq  ffffffff80210d80 <caml_add_to_heap>
ffffffff80210f51:	85 c0                	test   %eax,%eax
ffffffff80210f53:	75 2b                	jne    ffffffff80210f80 <expand_heap+0x140>
ffffffff80210f55:	49 83 c4 08          	add    $0x8,%r12
ffffffff80210f59:	4c 89 e0             	mov    %r12,%rax
ffffffff80210f5c:	41 5c                	pop    %r12
ffffffff80210f5e:	c3                   	retq   
ffffffff80210f5f:	90                   	nop
ffffffff80210f60:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
ffffffff80210f67:	00 
ffffffff80210f68:	75 df                	jne    ffffffff80210f49 <expand_heap+0x109>
ffffffff80210f6a:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
ffffffff80210f71:	eb d6                	jmp    ffffffff80210f49 <expand_heap+0x109>
ffffffff80210f73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80210f78:	4c 89 e2             	mov    %r12,%rdx
ffffffff80210f7b:	eb a8                	jmp    ffffffff80210f25 <expand_heap+0xe5>
ffffffff80210f7d:	0f 1f 00             	nopl   (%rax)
ffffffff80210f80:	4c 89 e7             	mov    %r12,%rdi
ffffffff80210f83:	45 31 e4             	xor    %r12d,%r12d
ffffffff80210f86:	e8 05 fa ff ff       	callq  ffffffff80210990 <caml_free_for_heap>
ffffffff80210f8b:	eb cc                	jmp    ffffffff80210f59 <expand_heap+0x119>
ffffffff80210f8d:	48 8d 35 b6 0e 01 00 	lea    0x10eb6(%rip),%rsi        # ffffffff80221e4a <int32_length+0x36a>
ffffffff80210f94:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80210f99:	31 c0                	xor    %eax,%eax
ffffffff80210f9b:	e8 50 12 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80210fa0:	eb b7                	jmp    ffffffff80210f59 <expand_heap+0x119>
ffffffff80210fa2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80210fa9:	00 00 00 00 
ffffffff80210fad:	0f 1f 00             	nopl   (%rax)

ffffffff80210fb0 <caml_alloc_shr>:
ffffffff80210fb0:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffff,%rax
ffffffff80210fb7:	ff 3f 00 
ffffffff80210fba:	41 54                	push   %r12
ffffffff80210fbc:	55                   	push   %rbp
ffffffff80210fbd:	53                   	push   %rbx
ffffffff80210fbe:	48 39 c7             	cmp    %rax,%rdi
ffffffff80210fc1:	76 0d                	jbe    ffffffff80210fd0 <caml_alloc_shr+0x20>
ffffffff80210fc3:	e8 f8 64 ff ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff80210fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80210fcf:	00 
ffffffff80210fd0:	48 89 fb             	mov    %rdi,%rbx
ffffffff80210fd3:	89 f5                	mov    %esi,%ebp
ffffffff80210fd5:	e8 26 9e 00 00       	callq  ffffffff8021ae00 <caml_fl_allocate>
ffffffff80210fda:	49 89 c4             	mov    %rax,%r12
ffffffff80210fdd:	48 85 c0             	test   %rax,%rax
ffffffff80210fe0:	0f 84 8a 00 00 00    	je     ffffffff80211070 <caml_alloc_shr+0xc0>
ffffffff80210fe6:	8b 05 b4 ad 02 00    	mov    0x2adb4(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80210fec:	83 f8 01             	cmp    $0x1,%eax
ffffffff80210fef:	76 4f                	jbe    ffffffff80211040 <caml_alloc_shr+0x90>
ffffffff80210ff1:	83 f8 02             	cmp    $0x2,%eax
ffffffff80210ff4:	74 3a                	je     ffffffff80211030 <caml_alloc_shr+0x80>
ffffffff80210ff6:	48 89 d8             	mov    %rbx,%rax
ffffffff80210ff9:	89 ee                	mov    %ebp,%esi
ffffffff80210ffb:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff80210fff:	48 01 c6             	add    %rax,%rsi
ffffffff80211002:	49 89 34 24          	mov    %rsi,(%r12)
ffffffff80211006:	48 8b 05 8b ad 02 00 	mov    0x2ad8b(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8021100d:	48 8d 44 03 01       	lea    0x1(%rbx,%rax,1),%rax
ffffffff80211012:	48 3b 05 9f af 02 00 	cmp    0x2af9f(%rip),%rax        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff80211019:	48 89 05 78 ad 02 00 	mov    %rax,0x2ad78(%rip)        # ffffffff8023bd98 <caml_allocated_words>
ffffffff80211020:	77 36                	ja     ffffffff80211058 <caml_alloc_shr+0xa8>
ffffffff80211022:	49 8d 44 24 08       	lea    0x8(%r12),%rax
ffffffff80211027:	5b                   	pop    %rbx
ffffffff80211028:	5d                   	pop    %rbp
ffffffff80211029:	41 5c                	pop    %r12
ffffffff8021102b:	c3                   	retq   
ffffffff8021102c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80211030:	4c 39 25 71 ad 02 00 	cmp    %r12,0x2ad71(%rip)        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff80211037:	77 bd                	ja     ffffffff80210ff6 <caml_alloc_shr+0x46>
ffffffff80211039:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80211040:	48 89 d8             	mov    %rbx,%rax
ffffffff80211043:	89 ee                	mov    %ebp,%esi
ffffffff80211045:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff80211049:	48 8d b4 30 00 03 00 	lea    0x300(%rax,%rsi,1),%rsi
ffffffff80211050:	00 
ffffffff80211051:	eb af                	jmp    ffffffff80211002 <caml_alloc_shr+0x52>
ffffffff80211053:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80211058:	e8 13 33 00 00       	callq  ffffffff80214370 <caml_request_major_slice>
ffffffff8021105d:	49 8d 44 24 08       	lea    0x8(%r12),%rax
ffffffff80211062:	5b                   	pop    %rbx
ffffffff80211063:	5d                   	pop    %rbp
ffffffff80211064:	41 5c                	pop    %r12
ffffffff80211066:	c3                   	retq   
ffffffff80211067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021106e:	00 00 
ffffffff80211070:	48 89 df             	mov    %rbx,%rdi
ffffffff80211073:	e8 c8 fd ff ff       	callq  ffffffff80210e40 <expand_heap>
ffffffff80211078:	48 89 c7             	mov    %rax,%rdi
ffffffff8021107b:	48 85 c0             	test   %rax,%rax
ffffffff8021107e:	74 18                	je     ffffffff80211098 <caml_alloc_shr+0xe8>
ffffffff80211080:	e8 eb a5 00 00       	callq  ffffffff8021b670 <caml_fl_add_blocks>
ffffffff80211085:	48 89 df             	mov    %rbx,%rdi
ffffffff80211088:	e8 73 9d 00 00       	callq  ffffffff8021ae00 <caml_fl_allocate>
ffffffff8021108d:	49 89 c4             	mov    %rax,%r12
ffffffff80211090:	e9 51 ff ff ff       	jmpq   ffffffff80210fe6 <caml_alloc_shr+0x36>
ffffffff80211095:	0f 1f 00             	nopl   (%rax)
ffffffff80211098:	8b 05 0a ae 02 00    	mov    0x2ae0a(%rip),%eax        # ffffffff8023bea8 <caml_in_minor_collection>
ffffffff8021109e:	85 c0                	test   %eax,%eax
ffffffff802110a0:	0f 84 1d ff ff ff    	je     ffffffff80210fc3 <caml_alloc_shr+0x13>
ffffffff802110a6:	48 8d 3d 73 0d 01 00 	lea    0x10d73(%rip),%rdi        # ffffffff80221e20 <int32_length+0x340>
ffffffff802110ad:	31 c0                	xor    %eax,%eax
ffffffff802110af:	e8 1c 12 00 00       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff802110b4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802110bb:	00 00 00 00 
ffffffff802110bf:	90                   	nop

ffffffff802110c0 <caml_alloc_shr_no_raise>:
ffffffff802110c0:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffff,%rax
ffffffff802110c7:	ff 3f 00 
ffffffff802110ca:	48 39 c7             	cmp    %rax,%rdi
ffffffff802110cd:	76 09                	jbe    ffffffff802110d8 <caml_alloc_shr_no_raise+0x18>
ffffffff802110cf:	31 c0                	xor    %eax,%eax
ffffffff802110d1:	c3                   	retq   
ffffffff802110d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802110d8:	41 54                	push   %r12
ffffffff802110da:	41 89 f4             	mov    %esi,%r12d
ffffffff802110dd:	55                   	push   %rbp
ffffffff802110de:	53                   	push   %rbx
ffffffff802110df:	48 89 fb             	mov    %rdi,%rbx
ffffffff802110e2:	e8 19 9d 00 00       	callq  ffffffff8021ae00 <caml_fl_allocate>
ffffffff802110e7:	48 89 c5             	mov    %rax,%rbp
ffffffff802110ea:	48 85 c0             	test   %rax,%rax
ffffffff802110ed:	0f 84 7d 00 00 00    	je     ffffffff80211170 <caml_alloc_shr_no_raise+0xb0>
ffffffff802110f3:	8b 05 a7 ac 02 00    	mov    0x2aca7(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff802110f9:	83 f8 01             	cmp    $0x1,%eax
ffffffff802110fc:	76 52                	jbe    ffffffff80211150 <caml_alloc_shr_no_raise+0x90>
ffffffff802110fe:	83 f8 02             	cmp    $0x2,%eax
ffffffff80211101:	74 3d                	je     ffffffff80211140 <caml_alloc_shr_no_raise+0x80>
ffffffff80211103:	48 89 d8             	mov    %rbx,%rax
ffffffff80211106:	44 89 e6             	mov    %r12d,%esi
ffffffff80211109:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff8021110d:	48 01 c6             	add    %rax,%rsi
ffffffff80211110:	48 89 75 00          	mov    %rsi,0x0(%rbp)
ffffffff80211114:	48 8b 05 7d ac 02 00 	mov    0x2ac7d(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8021111b:	48 8d 44 03 01       	lea    0x1(%rbx,%rax,1),%rax
ffffffff80211120:	48 3b 05 91 ae 02 00 	cmp    0x2ae91(%rip),%rax        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff80211127:	48 89 05 6a ac 02 00 	mov    %rax,0x2ac6a(%rip)        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8021112e:	77 38                	ja     ffffffff80211168 <caml_alloc_shr_no_raise+0xa8>
ffffffff80211130:	48 8d 45 08          	lea    0x8(%rbp),%rax
ffffffff80211134:	5b                   	pop    %rbx
ffffffff80211135:	5d                   	pop    %rbp
ffffffff80211136:	41 5c                	pop    %r12
ffffffff80211138:	c3                   	retq   
ffffffff80211139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80211140:	48 39 2d 61 ac 02 00 	cmp    %rbp,0x2ac61(%rip)        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff80211147:	77 ba                	ja     ffffffff80211103 <caml_alloc_shr_no_raise+0x43>
ffffffff80211149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80211150:	48 89 d8             	mov    %rbx,%rax
ffffffff80211153:	44 89 e6             	mov    %r12d,%esi
ffffffff80211156:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff8021115a:	48 8d b4 30 00 03 00 	lea    0x300(%rax,%rsi,1),%rsi
ffffffff80211161:	00 
ffffffff80211162:	eb ac                	jmp    ffffffff80211110 <caml_alloc_shr_no_raise+0x50>
ffffffff80211164:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80211168:	e8 03 32 00 00       	callq  ffffffff80214370 <caml_request_major_slice>
ffffffff8021116d:	eb c1                	jmp    ffffffff80211130 <caml_alloc_shr_no_raise+0x70>
ffffffff8021116f:	90                   	nop
ffffffff80211170:	48 89 df             	mov    %rbx,%rdi
ffffffff80211173:	e8 c8 fc ff ff       	callq  ffffffff80210e40 <expand_heap>
ffffffff80211178:	48 89 c7             	mov    %rax,%rdi
ffffffff8021117b:	31 c0                	xor    %eax,%eax
ffffffff8021117d:	48 85 ff             	test   %rdi,%rdi
ffffffff80211180:	74 b2                	je     ffffffff80211134 <caml_alloc_shr_no_raise+0x74>
ffffffff80211182:	e8 e9 a4 00 00       	callq  ffffffff8021b670 <caml_fl_add_blocks>
ffffffff80211187:	48 89 df             	mov    %rbx,%rdi
ffffffff8021118a:	e8 71 9c 00 00       	callq  ffffffff8021ae00 <caml_fl_allocate>
ffffffff8021118f:	48 89 c5             	mov    %rax,%rbp
ffffffff80211192:	e9 5c ff ff ff       	jmpq   ffffffff802110f3 <caml_alloc_shr_no_raise+0x33>
ffffffff80211197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021119e:	00 00 

ffffffff802111a0 <caml_page_table_remove>:
ffffffff802111a0:	41 54                	push   %r12
ffffffff802111a2:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
ffffffff802111a9:	55                   	push   %rbp
ffffffff802111aa:	48 8d 6a ff          	lea    -0x1(%rdx),%rbp
ffffffff802111ae:	48 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%rbp
ffffffff802111b5:	53                   	push   %rbx
ffffffff802111b6:	48 39 ee             	cmp    %rbp,%rsi
ffffffff802111b9:	77 35                	ja     ffffffff802111f0 <caml_page_table_remove+0x50>
ffffffff802111bb:	41 89 fc             	mov    %edi,%r12d
ffffffff802111be:	48 89 f3             	mov    %rsi,%rbx
ffffffff802111c1:	eb 11                	jmp    ffffffff802111d4 <caml_page_table_remove+0x34>
ffffffff802111c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802111c8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
ffffffff802111cf:	48 39 dd             	cmp    %rbx,%rbp
ffffffff802111d2:	72 1c                	jb     ffffffff802111f0 <caml_page_table_remove+0x50>
ffffffff802111d4:	31 d2                	xor    %edx,%edx
ffffffff802111d6:	44 89 e6             	mov    %r12d,%esi
ffffffff802111d9:	48 89 df             	mov    %rbx,%rdi
ffffffff802111dc:	e8 3f f9 ff ff       	callq  ffffffff80210b20 <caml_page_table_modify>
ffffffff802111e1:	85 c0                	test   %eax,%eax
ffffffff802111e3:	74 e3                	je     ffffffff802111c8 <caml_page_table_remove+0x28>
ffffffff802111e5:	5b                   	pop    %rbx
ffffffff802111e6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff802111eb:	5d                   	pop    %rbp
ffffffff802111ec:	41 5c                	pop    %r12
ffffffff802111ee:	c3                   	retq   
ffffffff802111ef:	90                   	nop
ffffffff802111f0:	5b                   	pop    %rbx
ffffffff802111f1:	31 c0                	xor    %eax,%eax
ffffffff802111f3:	5d                   	pop    %rbp
ffffffff802111f4:	41 5c                	pop    %r12
ffffffff802111f6:	c3                   	retq   
ffffffff802111f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802111fe:	00 00 

ffffffff80211200 <caml_shrink_heap>:
ffffffff80211200:	48 39 3d a9 ab 02 00 	cmp    %rdi,0x2aba9(%rip)        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80211207:	0f 84 9b 00 00 00    	je     ffffffff802112a8 <caml_shrink_heap+0xa8>
ffffffff8021120d:	55                   	push   %rbp
ffffffff8021120e:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
ffffffff80211212:	48 89 fd             	mov    %rdi,%rbp
ffffffff80211215:	48 8d 35 48 0c 01 00 	lea    0x10c48(%rip),%rsi        # ffffffff80221e64 <int32_length+0x384>
ffffffff8021121c:	48 8b 15 7d 72 03 00 	mov    0x3727d(%rip),%rdx        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff80211223:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80211228:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8021122c:	48 29 c2             	sub    %rax,%rdx
ffffffff8021122f:	48 8d 82 ff 03 00 00 	lea    0x3ff(%rdx),%rax
ffffffff80211236:	48 89 15 63 72 03 00 	mov    %rdx,0x37263(%rip)        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8021123d:	48 0f 48 d0          	cmovs  %rax,%rdx
ffffffff80211241:	31 c0                	xor    %eax,%eax
ffffffff80211243:	48 c1 fa 0a          	sar    $0xa,%rdx
ffffffff80211247:	e8 a4 0f 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021124c:	48 8b 05 5d ab 02 00 	mov    0x2ab5d(%rip),%rax        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80211253:	48 83 2d 2d 72 03 00 	subq   $0x1,0x3722d(%rip)        # ffffffff80248488 <caml_stat_heap_chunks>
ffffffff8021125a:	01 
ffffffff8021125b:	48 8d 15 4e ab 02 00 	lea    0x2ab4e(%rip),%rdx        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80211262:	48 39 c5             	cmp    %rax,%rbp
ffffffff80211265:	74 19                	je     ffffffff80211280 <caml_shrink_heap+0x80>
ffffffff80211267:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021126e:	00 00 
ffffffff80211270:	48 89 c2             	mov    %rax,%rdx
ffffffff80211273:	48 8b 40 f8          	mov    -0x8(%rax),%rax
ffffffff80211277:	48 39 c5             	cmp    %rax,%rbp
ffffffff8021127a:	75 f4                	jne    ffffffff80211270 <caml_shrink_heap+0x70>
ffffffff8021127c:	48 83 ea 08          	sub    $0x8,%rdx
ffffffff80211280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80211284:	48 89 ee             	mov    %rbp,%rsi
ffffffff80211287:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8021128c:	48 89 02             	mov    %rax,(%rdx)
ffffffff8021128f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80211293:	48 01 ea             	add    %rbp,%rdx
ffffffff80211296:	e8 05 ff ff ff       	callq  ffffffff802111a0 <caml_page_table_remove>
ffffffff8021129b:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021129e:	5d                   	pop    %rbp
ffffffff8021129f:	e9 ec f6 ff ff       	jmpq   ffffffff80210990 <caml_free_for_heap>
ffffffff802112a4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802112a8:	c3                   	retq   
ffffffff802112a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802112b0 <caml_stat_strdup_noexc>:
ffffffff802112b0:	41 54                	push   %r12
ffffffff802112b2:	55                   	push   %rbp
ffffffff802112b3:	48 89 fd             	mov    %rdi,%rbp
ffffffff802112b6:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802112ba:	e8 e9 ed fe ff       	callq  ffffffff802000a8 <strlen>
ffffffff802112bf:	4c 8d 60 01          	lea    0x1(%rax),%r12
ffffffff802112c3:	4c 89 e7             	mov    %r12,%rdi
ffffffff802112c6:	e8 e5 f4 ff ff       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff802112cb:	49 89 c0             	mov    %rax,%r8
ffffffff802112ce:	48 85 c0             	test   %rax,%rax
ffffffff802112d1:	74 11                	je     ffffffff802112e4 <caml_stat_strdup_noexc+0x34>
ffffffff802112d3:	4c 89 e2             	mov    %r12,%rdx
ffffffff802112d6:	48 89 ee             	mov    %rbp,%rsi
ffffffff802112d9:	48 89 c7             	mov    %rax,%rdi
ffffffff802112dc:	e8 c2 ed fe ff       	callq  ffffffff802000a3 <memcpy>
ffffffff802112e1:	49 89 c0             	mov    %rax,%r8
ffffffff802112e4:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802112e8:	4c 89 c0             	mov    %r8,%rax
ffffffff802112eb:	5d                   	pop    %rbp
ffffffff802112ec:	41 5c                	pop    %r12
ffffffff802112ee:	c3                   	retq   
ffffffff802112ef:	90                   	nop

ffffffff802112f0 <caml_stat_strdup>:
ffffffff802112f0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802112f4:	e8 b7 ff ff ff       	callq  ffffffff802112b0 <caml_stat_strdup_noexc>
ffffffff802112f9:	48 85 c0             	test   %rax,%rax
ffffffff802112fc:	74 05                	je     ffffffff80211303 <caml_stat_strdup+0x13>
ffffffff802112fe:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80211302:	c3                   	retq   
ffffffff80211303:	e8 b8 61 ff ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff80211308:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021130f:	00 

ffffffff80211310 <caml_stat_strconcat>:
ffffffff80211310:	41 57                	push   %r15
ffffffff80211312:	41 56                	push   %r14
ffffffff80211314:	41 55                	push   %r13
ffffffff80211316:	41 54                	push   %r12
ffffffff80211318:	55                   	push   %rbp
ffffffff80211319:	53                   	push   %rbx
ffffffff8021131a:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff8021131e:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
ffffffff80211323:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff80211328:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
ffffffff8021132d:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
ffffffff80211332:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
ffffffff80211337:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021133e:	00 00 
ffffffff80211340:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80211345:	31 c0                	xor    %eax,%eax
ffffffff80211347:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
ffffffff8021134e:	00 
ffffffff8021134f:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
ffffffff80211356:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8021135b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80211360:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80211365:	85 ff                	test   %edi,%edi
ffffffff80211367:	0f 8e e3 00 00 00    	jle    ffffffff80211450 <caml_stat_strconcat+0x140>
ffffffff8021136d:	89 fd                	mov    %edi,%ebp
ffffffff8021136f:	49 89 c5             	mov    %rax,%r13
ffffffff80211372:	45 31 e4             	xor    %r12d,%r12d
ffffffff80211375:	31 db                	xor    %ebx,%ebx
ffffffff80211377:	eb 29                	jmp    ffffffff802113a2 <caml_stat_strconcat+0x92>
ffffffff80211379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80211380:	89 c2                	mov    %eax,%edx
ffffffff80211382:	83 c0 08             	add    $0x8,%eax
ffffffff80211385:	89 04 24             	mov    %eax,(%rsp)
ffffffff80211388:	4c 01 ea             	add    %r13,%rdx
ffffffff8021138b:	48 8b 3a             	mov    (%rdx),%rdi
ffffffff8021138e:	e8 15 ed fe ff       	callq  ffffffff802000a8 <strlen>
ffffffff80211393:	48 01 c3             	add    %rax,%rbx
ffffffff80211396:	41 8d 44 24 01       	lea    0x1(%r12),%eax
ffffffff8021139b:	39 c5                	cmp    %eax,%ebp
ffffffff8021139d:	74 21                	je     ffffffff802113c0 <caml_stat_strconcat+0xb0>
ffffffff8021139f:	41 89 c4             	mov    %eax,%r12d
ffffffff802113a2:	8b 04 24             	mov    (%rsp),%eax
ffffffff802113a5:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff802113a8:	76 d6                	jbe    ffffffff80211380 <caml_stat_strconcat+0x70>
ffffffff802113aa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff802113af:	48 8d 42 08          	lea    0x8(%rdx),%rax
ffffffff802113b3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff802113b8:	eb d1                	jmp    ffffffff8021138b <caml_stat_strconcat+0x7b>
ffffffff802113ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802113c0:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff802113c4:	45 31 ff             	xor    %r15d,%r15d
ffffffff802113c7:	e8 64 f5 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff802113cc:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
ffffffff802113d3:	49 89 c5             	mov    %rax,%r13
ffffffff802113d6:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
ffffffff802113dd:	00 
ffffffff802113de:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff802113e3:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff802113e8:	4c 89 ed             	mov    %r13,%rbp
ffffffff802113eb:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff802113f0:	eb 3e                	jmp    ffffffff80211430 <caml_stat_strconcat+0x120>
ffffffff802113f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802113f8:	89 c2                	mov    %eax,%edx
ffffffff802113fa:	83 c0 08             	add    $0x8,%eax
ffffffff802113fd:	48 03 54 24 10       	add    0x10(%rsp),%rdx
ffffffff80211402:	89 04 24             	mov    %eax,(%rsp)
ffffffff80211405:	4c 8b 32             	mov    (%rdx),%r14
ffffffff80211408:	4c 89 f7             	mov    %r14,%rdi
ffffffff8021140b:	e8 98 ec fe ff       	callq  ffffffff802000a8 <strlen>
ffffffff80211410:	48 89 ef             	mov    %rbp,%rdi
ffffffff80211413:	4c 89 f6             	mov    %r14,%rsi
ffffffff80211416:	48 89 c3             	mov    %rax,%rbx
ffffffff80211419:	48 89 c2             	mov    %rax,%rdx
ffffffff8021141c:	e8 82 ec fe ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80211421:	48 01 dd             	add    %rbx,%rbp
ffffffff80211424:	41 8d 47 01          	lea    0x1(%r15),%eax
ffffffff80211428:	45 39 fc             	cmp    %r15d,%r12d
ffffffff8021142b:	74 53                	je     ffffffff80211480 <caml_stat_strconcat+0x170>
ffffffff8021142d:	41 89 c7             	mov    %eax,%r15d
ffffffff80211430:	8b 04 24             	mov    (%rsp),%eax
ffffffff80211433:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80211436:	76 c0                	jbe    ffffffff802113f8 <caml_stat_strconcat+0xe8>
ffffffff80211438:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8021143d:	48 8d 42 08          	lea    0x8(%rdx),%rax
ffffffff80211441:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80211446:	eb bd                	jmp    ffffffff80211405 <caml_stat_strconcat+0xf5>
ffffffff80211448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021144f:	00 
ffffffff80211450:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80211455:	e8 d6 f4 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021145a:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
ffffffff80211461:	48 89 c5             	mov    %rax,%rbp
ffffffff80211464:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
ffffffff8021146b:	00 
ffffffff8021146c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80211471:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80211476:	49 89 ed             	mov    %rbp,%r13
ffffffff80211479:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8021147e:	66 90                	xchg   %ax,%ax
ffffffff80211480:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
ffffffff80211484:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80211489:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80211490:	00 00 
ffffffff80211492:	75 12                	jne    ffffffff802114a6 <caml_stat_strconcat+0x196>
ffffffff80211494:	48 83 c4 58          	add    $0x58,%rsp
ffffffff80211498:	4c 89 e8             	mov    %r13,%rax
ffffffff8021149b:	5b                   	pop    %rbx
ffffffff8021149c:	5d                   	pop    %rbp
ffffffff8021149d:	41 5c                	pop    %r12
ffffffff8021149f:	41 5d                	pop    %r13
ffffffff802114a1:	41 5e                	pop    %r14
ffffffff802114a3:	41 5f                	pop    %r15
ffffffff802114a5:	c3                   	retq   
ffffffff802114a6:	e8 f5 eb fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802114ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802114b0 <alloc_generic_table>:
ffffffff802114b0:	41 54                	push   %r12
ffffffff802114b2:	49 89 cc             	mov    %rcx,%r12
ffffffff802114b5:	55                   	push   %rbp
ffffffff802114b6:	53                   	push   %rbx
ffffffff802114b7:	48 89 fb             	mov    %rdi,%rbx
ffffffff802114ba:	48 89 d7             	mov    %rdx,%rdi
ffffffff802114bd:	48 01 f7             	add    %rsi,%rdi
ffffffff802114c0:	48 89 73 28          	mov    %rsi,0x28(%rbx)
ffffffff802114c4:	48 0f af f9          	imul   %rcx,%rdi
ffffffff802114c8:	48 89 53 30          	mov    %rdx,0x30(%rbx)
ffffffff802114cc:	e8 df f2 ff ff       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff802114d1:	48 85 c0             	test   %rax,%rax
ffffffff802114d4:	74 41                	je     ffffffff80211517 <alloc_generic_table+0x67>
ffffffff802114d6:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff802114d9:	48 89 c5             	mov    %rax,%rbp
ffffffff802114dc:	48 85 ff             	test   %rdi,%rdi
ffffffff802114df:	74 05                	je     ffffffff802114e6 <alloc_generic_table+0x36>
ffffffff802114e1:	e8 6a f4 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802114e6:	48 8b 53 28          	mov    0x28(%rbx),%rdx
ffffffff802114ea:	48 89 2b             	mov    %rbp,(%rbx)
ffffffff802114ed:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
ffffffff802114f1:	48 89 d0             	mov    %rdx,%rax
ffffffff802114f4:	48 03 53 30          	add    0x30(%rbx),%rdx
ffffffff802114f8:	49 0f af c4          	imul   %r12,%rax
ffffffff802114fc:	49 0f af d4          	imul   %r12,%rdx
ffffffff80211500:	48 01 e8             	add    %rbp,%rax
ffffffff80211503:	48 01 d5             	add    %rdx,%rbp
ffffffff80211506:	48 89 43 10          	mov    %rax,0x10(%rbx)
ffffffff8021150a:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
ffffffff8021150e:	48 89 43 20          	mov    %rax,0x20(%rbx)
ffffffff80211512:	5b                   	pop    %rbx
ffffffff80211513:	5d                   	pop    %rbp
ffffffff80211514:	41 5c                	pop    %r12
ffffffff80211516:	c3                   	retq   
ffffffff80211517:	48 8d 3d b2 09 01 00 	lea    0x109b2(%rip),%rdi        # ffffffff80221ed0 <int32_length+0x3f0>
ffffffff8021151e:	31 c0                	xor    %eax,%eax
ffffffff80211520:	e8 ab 0d 00 00       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff80211525:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021152c:	00 00 00 00 

ffffffff80211530 <realloc_generic_table.isra.0>:
ffffffff80211530:	41 56                	push   %r14
ffffffff80211532:	41 55                	push   %r13
ffffffff80211534:	41 54                	push   %r12
ffffffff80211536:	49 89 f4             	mov    %rsi,%r12
ffffffff80211539:	55                   	push   %rbp
ffffffff8021153a:	48 89 fd             	mov    %rdi,%rbp
ffffffff8021153d:	53                   	push   %rbx
ffffffff8021153e:	48 8b 07             	mov    (%rdi),%rax
ffffffff80211541:	48 85 c0             	test   %rax,%rax
ffffffff80211544:	0f 84 ce 00 00 00    	je     ffffffff80211618 <realloc_generic_table.isra.0+0xe8>
ffffffff8021154a:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
ffffffff8021154e:	48 39 5f 20          	cmp    %rbx,0x20(%rdi)
ffffffff80211552:	0f 84 90 00 00 00    	je     ffffffff802115e8 <realloc_generic_table.isra.0+0xb8>
ffffffff80211558:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
ffffffff8021155c:	48 89 ce             	mov    %rcx,%rsi
ffffffff8021155f:	4d 89 c6             	mov    %r8,%r14
ffffffff80211562:	48 29 c3             	sub    %rax,%rbx
ffffffff80211565:	48 8b 47 28          	mov    0x28(%rdi),%rax
ffffffff80211569:	4c 8d 2c 00          	lea    (%rax,%rax,1),%r13
ffffffff8021156d:	4c 89 6f 28          	mov    %r13,0x28(%rdi)
ffffffff80211571:	4c 03 6f 30          	add    0x30(%rdi),%r13
ffffffff80211575:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff8021157a:	4d 0f af ec          	imul   %r12,%r13
ffffffff8021157e:	4d 85 ed             	test   %r13,%r13
ffffffff80211581:	49 8d 95 ff 03 00 00 	lea    0x3ff(%r13),%rdx
ffffffff80211588:	49 0f 49 d5          	cmovns %r13,%rdx
ffffffff8021158c:	31 c0                	xor    %eax,%eax
ffffffff8021158e:	48 c1 fa 0a          	sar    $0xa,%rdx
ffffffff80211592:	e8 59 0c 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80211597:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
ffffffff8021159b:	4c 89 ee             	mov    %r13,%rsi
ffffffff8021159e:	e8 1d f4 ff ff       	callq  ffffffff802109c0 <caml_stat_resize_noexc>
ffffffff802115a3:	48 89 45 00          	mov    %rax,0x0(%rbp)
ffffffff802115a7:	48 85 c0             	test   %rax,%rax
ffffffff802115aa:	0f 84 88 00 00 00    	je     ffffffff80211638 <realloc_generic_table.isra.0+0x108>
ffffffff802115b0:	48 8b 75 28          	mov    0x28(%rbp),%rsi
ffffffff802115b4:	48 8b 55 30          	mov    0x30(%rbp),%rdx
ffffffff802115b8:	48 01 f2             	add    %rsi,%rdx
ffffffff802115bb:	49 0f af d4          	imul   %r12,%rdx
ffffffff802115bf:	4c 0f af e6          	imul   %rsi,%r12
ffffffff802115c3:	48 01 c2             	add    %rax,%rdx
ffffffff802115c6:	49 01 c4             	add    %rax,%r12
ffffffff802115c9:	48 01 d8             	add    %rbx,%rax
ffffffff802115cc:	48 89 55 08          	mov    %rdx,0x8(%rbp)
ffffffff802115d0:	5b                   	pop    %rbx
ffffffff802115d1:	4c 89 65 10          	mov    %r12,0x10(%rbp)
ffffffff802115d5:	48 89 45 18          	mov    %rax,0x18(%rbp)
ffffffff802115d9:	48 89 55 20          	mov    %rdx,0x20(%rbp)
ffffffff802115dd:	5d                   	pop    %rbp
ffffffff802115de:	41 5c                	pop    %r12
ffffffff802115e0:	41 5d                	pop    %r13
ffffffff802115e2:	41 5e                	pop    %r14
ffffffff802115e4:	c3                   	retq   
ffffffff802115e5:	0f 1f 00             	nopl   (%rax)
ffffffff802115e8:	49 89 d1             	mov    %rdx,%r9
ffffffff802115eb:	31 c0                	xor    %eax,%eax
ffffffff802115ed:	31 d2                	xor    %edx,%edx
ffffffff802115ef:	bf 08 00 00 00       	mov    $0x8,%edi
ffffffff802115f4:	4c 89 ce             	mov    %r9,%rsi
ffffffff802115f7:	e8 f4 0b 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff802115fc:	48 8b 45 08          	mov    0x8(%rbp),%rax
ffffffff80211600:	5b                   	pop    %rbx
ffffffff80211601:	48 89 45 20          	mov    %rax,0x20(%rbp)
ffffffff80211605:	5d                   	pop    %rbp
ffffffff80211606:	41 5c                	pop    %r12
ffffffff80211608:	41 5d                	pop    %r13
ffffffff8021160a:	41 5e                	pop    %r14
ffffffff8021160c:	e9 7f 2d 00 00       	jmpq   ffffffff80214390 <caml_request_minor_gc>
ffffffff80211611:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80211618:	48 8b 35 99 a9 02 00 	mov    0x2a999(%rip),%rsi        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff8021161f:	5b                   	pop    %rbx
ffffffff80211620:	4c 89 e1             	mov    %r12,%rcx
ffffffff80211623:	ba 00 01 00 00       	mov    $0x100,%edx
ffffffff80211628:	5d                   	pop    %rbp
ffffffff80211629:	41 5c                	pop    %r12
ffffffff8021162b:	48 c1 ee 03          	shr    $0x3,%rsi
ffffffff8021162f:	41 5d                	pop    %r13
ffffffff80211631:	41 5e                	pop    %r14
ffffffff80211633:	e9 78 fe ff ff       	jmpq   ffffffff802114b0 <alloc_generic_table>
ffffffff80211638:	4c 89 f6             	mov    %r14,%rsi
ffffffff8021163b:	48 8d 3d a0 08 01 00 	lea    0x108a0(%rip),%rdi        # ffffffff80221ee2 <int32_length+0x402>
ffffffff80211642:	e8 89 0c 00 00       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff80211647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021164e:	00 00 

ffffffff80211650 <caml_alloc_table>:
ffffffff80211650:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff80211655:	e9 56 fe ff ff       	jmpq   ffffffff802114b0 <alloc_generic_table>
ffffffff8021165a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80211660 <caml_alloc_ephe_table>:
ffffffff80211660:	b9 10 00 00 00       	mov    $0x10,%ecx
ffffffff80211665:	e9 46 fe ff ff       	jmpq   ffffffff802114b0 <alloc_generic_table>
ffffffff8021166a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80211670 <caml_alloc_custom_table>:
ffffffff80211670:	b9 18 00 00 00       	mov    $0x18,%ecx
ffffffff80211675:	e9 36 fe ff ff       	jmpq   ffffffff802114b0 <alloc_generic_table>
ffffffff8021167a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80211680 <caml_oldify_one>:
ffffffff80211680:	41 56                	push   %r14
ffffffff80211682:	41 55                	push   %r13
ffffffff80211684:	41 54                	push   %r12
ffffffff80211686:	49 89 f4             	mov    %rsi,%r12
ffffffff80211689:	55                   	push   %rbp
ffffffff8021168a:	53                   	push   %rbx
ffffffff8021168b:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021168e:	83 e7 01             	and    $0x1,%edi
ffffffff80211691:	0f 85 c0 00 00 00    	jne    ffffffff80211757 <caml_oldify_one+0xd7>
ffffffff80211697:	48 8b 0d 0a a9 02 00 	mov    0x2a90a(%rip),%rcx        # ffffffff8023bfa8 <caml_young_end>
ffffffff8021169e:	48 39 cb             	cmp    %rcx,%rbx
ffffffff802116a1:	0f 83 b0 00 00 00    	jae    ffffffff80211757 <caml_oldify_one+0xd7>
ffffffff802116a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802116ae:	00 00 
ffffffff802116b0:	48 8b 15 f9 a8 02 00 	mov    0x2a8f9(%rip),%rdx        # ffffffff8023bfb0 <caml_young_start>
ffffffff802116b7:	48 39 d3             	cmp    %rdx,%rbx
ffffffff802116ba:	0f 86 97 00 00 00    	jbe    ffffffff80211757 <caml_oldify_one+0xd7>
ffffffff802116c0:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff802116c4:	4c 8d 6b f8          	lea    -0x8(%rbx),%r13
ffffffff802116c8:	48 85 c0             	test   %rax,%rax
ffffffff802116cb:	0f 84 07 01 00 00    	je     ffffffff802117d8 <caml_oldify_one+0x158>
ffffffff802116d1:	0f b6 f0             	movzbl %al,%esi
ffffffff802116d4:	3c f8                	cmp    $0xf8,%al
ffffffff802116d6:	76 38                	jbe    ffffffff80211710 <caml_oldify_one+0x90>
ffffffff802116d8:	81 fe fa 00 00 00    	cmp    $0xfa,%esi
ffffffff802116de:	0f 87 0c 01 00 00    	ja     ffffffff802117f0 <caml_oldify_one+0x170>
ffffffff802116e4:	81 fe f9 00 00 00    	cmp    $0xf9,%esi
ffffffff802116ea:	0f 84 50 01 00 00    	je     ffffffff80211840 <caml_oldify_one+0x1c0>
ffffffff802116f0:	4c 8b 33             	mov    (%rbx),%r14
ffffffff802116f3:	41 f6 c6 01          	test   $0x1,%r14b
ffffffff802116f7:	74 67                	je     ffffffff80211760 <caml_oldify_one+0xe0>
ffffffff802116f9:	4d 89 34 24          	mov    %r14,(%r12)
ffffffff802116fd:	5b                   	pop    %rbx
ffffffff802116fe:	5d                   	pop    %rbp
ffffffff802116ff:	41 5c                	pop    %r12
ffffffff80211701:	41 5d                	pop    %r13
ffffffff80211703:	41 5e                	pop    %r14
ffffffff80211705:	c3                   	retq   
ffffffff80211706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021170d:	00 00 00 
ffffffff80211710:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80211714:	48 89 c7             	mov    %rax,%rdi
ffffffff80211717:	48 89 c5             	mov    %rax,%rbp
ffffffff8021171a:	e8 91 f8 ff ff       	callq  ffffffff80210fb0 <caml_alloc_shr>
ffffffff8021171f:	49 89 04 24          	mov    %rax,(%r12)
ffffffff80211723:	4c 8b 33             	mov    (%rbx),%r14
ffffffff80211726:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
ffffffff8021172d:	00 
ffffffff8021172e:	48 89 03             	mov    %rax,(%rbx)
ffffffff80211731:	48 83 fd 01          	cmp    $0x1,%rbp
ffffffff80211735:	0f 87 2c 01 00 00    	ja     ffffffff80211867 <caml_oldify_one+0x1e7>
ffffffff8021173b:	49 89 c4             	mov    %rax,%r12
ffffffff8021173e:	41 f6 c6 01          	test   $0x1,%r14b
ffffffff80211742:	75 b5                	jne    ffffffff802116f9 <caml_oldify_one+0x79>
ffffffff80211744:	48 8b 0d 5d a8 02 00 	mov    0x2a85d(%rip),%rcx        # ffffffff8023bfa8 <caml_young_end>
ffffffff8021174b:	4c 89 f3             	mov    %r14,%rbx
ffffffff8021174e:	48 39 cb             	cmp    %rcx,%rbx
ffffffff80211751:	0f 82 59 ff ff ff    	jb     ffffffff802116b0 <caml_oldify_one+0x30>
ffffffff80211757:	49 89 de             	mov    %rbx,%r14
ffffffff8021175a:	eb 9d                	jmp    ffffffff802116f9 <caml_oldify_one+0x79>
ffffffff8021175c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80211760:	4c 39 f2             	cmp    %r14,%rdx
ffffffff80211763:	73 4b                	jae    ffffffff802117b0 <caml_oldify_one+0x130>
ffffffff80211765:	4c 39 f1             	cmp    %r14,%rcx
ffffffff80211768:	76 46                	jbe    ffffffff802117b0 <caml_oldify_one+0x130>
ffffffff8021176a:	49 83 7e f8 00       	cmpq   $0x0,-0x8(%r14)
ffffffff8021176f:	49 8d 46 f8          	lea    -0x8(%r14),%rax
ffffffff80211773:	74 53                	je     ffffffff802117c8 <caml_oldify_one+0x148>
ffffffff80211775:	0f b6 00             	movzbl (%rax),%eax
ffffffff80211778:	3d fa 00 00 00       	cmp    $0xfa,%eax
ffffffff8021177d:	74 0e                	je     ffffffff8021178d <caml_oldify_one+0x10d>
ffffffff8021177f:	3d f6 00 00 00       	cmp    $0xf6,%eax
ffffffff80211784:	74 07                	je     ffffffff8021178d <caml_oldify_one+0x10d>
ffffffff80211786:	3d fd 00 00 00       	cmp    $0xfd,%eax
ffffffff8021178b:	75 b7                	jne    ffffffff80211744 <caml_oldify_one+0xc4>
ffffffff8021178d:	be fa 00 00 00       	mov    $0xfa,%esi
ffffffff80211792:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80211797:	e8 14 f8 ff ff       	callq  ffffffff80210fb0 <caml_alloc_shr>
ffffffff8021179c:	49 89 04 24          	mov    %rax,(%r12)
ffffffff802117a0:	49 89 c4             	mov    %rax,%r12
ffffffff802117a3:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
ffffffff802117aa:	00 
ffffffff802117ab:	48 89 03             	mov    %rax,(%rbx)
ffffffff802117ae:	eb 94                	jmp    ffffffff80211744 <caml_oldify_one+0xc4>
ffffffff802117b0:	4c 89 f7             	mov    %r14,%rdi
ffffffff802117b3:	e8 68 ec ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802117b8:	a8 07                	test   $0x7,%al
ffffffff802117ba:	74 d1                	je     ffffffff8021178d <caml_oldify_one+0x10d>
ffffffff802117bc:	41 0f b6 46 f8       	movzbl -0x8(%r14),%eax
ffffffff802117c1:	eb b5                	jmp    ffffffff80211778 <caml_oldify_one+0xf8>
ffffffff802117c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802117c8:	49 8b 06             	mov    (%r14),%rax
ffffffff802117cb:	48 83 e8 08          	sub    $0x8,%rax
ffffffff802117cf:	eb a4                	jmp    ffffffff80211775 <caml_oldify_one+0xf5>
ffffffff802117d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802117d8:	48 8b 03             	mov    (%rbx),%rax
ffffffff802117db:	49 89 04 24          	mov    %rax,(%r12)
ffffffff802117df:	5b                   	pop    %rbx
ffffffff802117e0:	5d                   	pop    %rbp
ffffffff802117e1:	41 5c                	pop    %r12
ffffffff802117e3:	41 5d                	pop    %r13
ffffffff802117e5:	41 5e                	pop    %r14
ffffffff802117e7:	c3                   	retq   
ffffffff802117e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802117ef:	00 
ffffffff802117f0:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802117f4:	48 89 c7             	mov    %rax,%rdi
ffffffff802117f7:	48 89 c5             	mov    %rax,%rbp
ffffffff802117fa:	e8 b1 f7 ff ff       	callq  ffffffff80210fb0 <caml_alloc_shr>
ffffffff802117ff:	48 8d 3c eb          	lea    (%rbx,%rbp,8),%rdi
ffffffff80211803:	48 89 da             	mov    %rbx,%rdx
ffffffff80211806:	48 89 c6             	mov    %rax,%rsi
ffffffff80211809:	48 29 de             	sub    %rbx,%rsi
ffffffff8021180c:	48 85 ed             	test   %rbp,%rbp
ffffffff8021180f:	74 17                	je     ffffffff80211828 <caml_oldify_one+0x1a8>
ffffffff80211811:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80211818:	48 8b 0a             	mov    (%rdx),%rcx
ffffffff8021181b:	48 89 0c 16          	mov    %rcx,(%rsi,%rdx,1)
ffffffff8021181f:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80211823:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80211826:	75 f0                	jne    ffffffff80211818 <caml_oldify_one+0x198>
ffffffff80211828:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
ffffffff8021182f:	00 
ffffffff80211830:	48 89 03             	mov    %rax,(%rbx)
ffffffff80211833:	49 89 04 24          	mov    %rax,(%r12)
ffffffff80211837:	5b                   	pop    %rbx
ffffffff80211838:	5d                   	pop    %rbp
ffffffff80211839:	41 5c                	pop    %r12
ffffffff8021183b:	41 5d                	pop    %r13
ffffffff8021183d:	41 5e                	pop    %r14
ffffffff8021183f:	c3                   	retq   
ffffffff80211840:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80211844:	48 89 df             	mov    %rbx,%rdi
ffffffff80211847:	4c 89 e6             	mov    %r12,%rsi
ffffffff8021184a:	48 8d 2c c5 00 00 00 	lea    0x0(,%rax,8),%rbp
ffffffff80211851:	00 
ffffffff80211852:	48 29 ef             	sub    %rbp,%rdi
ffffffff80211855:	e8 26 fe ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff8021185a:	49 01 2c 24          	add    %rbp,(%r12)
ffffffff8021185e:	5b                   	pop    %rbx
ffffffff8021185f:	5d                   	pop    %rbp
ffffffff80211860:	41 5c                	pop    %r12
ffffffff80211862:	41 5d                	pop    %r13
ffffffff80211864:	41 5e                	pop    %r14
ffffffff80211866:	c3                   	retq   
ffffffff80211867:	48 8b 15 52 a7 02 00 	mov    0x2a752(%rip),%rdx        # ffffffff8023bfc0 <oldify_todo_list>
ffffffff8021186e:	4c 89 30             	mov    %r14,(%rax)
ffffffff80211871:	48 89 1d 48 a7 02 00 	mov    %rbx,0x2a748(%rip)        # ffffffff8023bfc0 <oldify_todo_list>
ffffffff80211878:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8021187c:	e9 7c fe ff ff       	jmpq   ffffffff802116fd <caml_oldify_one+0x7d>
ffffffff80211881:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80211888:	00 00 00 00 
ffffffff8021188c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80211890 <caml_oldify_mopup>:
ffffffff80211890:	41 57                	push   %r15
ffffffff80211892:	41 56                	push   %r14
ffffffff80211894:	41 55                	push   %r13
ffffffff80211896:	41 54                	push   %r12
ffffffff80211898:	4c 8d 25 61 a6 02 00 	lea    0x2a661(%rip),%r12        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff8021189f:	55                   	push   %rbp
ffffffff802118a0:	53                   	push   %rbx
ffffffff802118a1:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802118a5:	0f 1f 00             	nopl   (%rax)
ffffffff802118a8:	4c 8b 2d 11 a7 02 00 	mov    0x2a711(%rip),%r13        # ffffffff8023bfc0 <oldify_todo_list>
ffffffff802118af:	4d 85 ed             	test   %r13,%r13
ffffffff802118b2:	0f 84 a8 00 00 00    	je     ffffffff80211960 <caml_oldify_mopup+0xd0>
ffffffff802118b8:	4d 8b 7d 00          	mov    0x0(%r13),%r15
ffffffff802118bc:	49 8b 47 08          	mov    0x8(%r15),%rax
ffffffff802118c0:	49 8b 3f             	mov    (%r15),%rdi
ffffffff802118c3:	48 89 05 f6 a6 02 00 	mov    %rax,0x2a6f6(%rip)        # ffffffff8023bfc0 <oldify_todo_list>
ffffffff802118ca:	40 f6 c7 01          	test   $0x1,%dil
ffffffff802118ce:	75 20                	jne    ffffffff802118f0 <caml_oldify_mopup+0x60>
ffffffff802118d0:	48 3b 3d d1 a6 02 00 	cmp    0x2a6d1(%rip),%rdi        # ffffffff8023bfa8 <caml_young_end>
ffffffff802118d7:	73 17                	jae    ffffffff802118f0 <caml_oldify_mopup+0x60>
ffffffff802118d9:	48 3b 3d d0 a6 02 00 	cmp    0x2a6d0(%rip),%rdi        # ffffffff8023bfb0 <caml_young_start>
ffffffff802118e0:	0f 87 12 01 00 00    	ja     ffffffff802119f8 <caml_oldify_mopup+0x168>
ffffffff802118e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802118ed:	00 00 00 
ffffffff802118f0:	4c 89 f8             	mov    %r15,%rax
ffffffff802118f3:	49 8d 5d 08          	lea    0x8(%r13),%rbx
ffffffff802118f7:	4d 8d 77 f8          	lea    -0x8(%r15),%r14
ffffffff802118fb:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff80211900:	4c 29 e8             	sub    %r13,%rax
ffffffff80211903:	49 81 7f f8 ff 07 00 	cmpq   $0x7ff,-0x8(%r15)
ffffffff8021190a:	00 
ffffffff8021190b:	49 89 c5             	mov    %rax,%r13
ffffffff8021190e:	77 23                	ja     ffffffff80211933 <caml_oldify_mopup+0xa3>
ffffffff80211910:	eb 96                	jmp    ffffffff802118a8 <caml_oldify_mopup+0x18>
ffffffff80211912:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80211918:	48 89 3e             	mov    %rdi,(%rsi)
ffffffff8021191b:	49 8b 06             	mov    (%r14),%rax
ffffffff8021191e:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80211922:	48 83 c3 08          	add    $0x8,%rbx
ffffffff80211926:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021192a:	48 39 e8             	cmp    %rbp,%rax
ffffffff8021192d:	0f 86 75 ff ff ff    	jbe    ffffffff802118a8 <caml_oldify_mopup+0x18>
ffffffff80211933:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff80211936:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
ffffffff8021193b:	40 f6 c7 01          	test   $0x1,%dil
ffffffff8021193f:	75 d7                	jne    ffffffff80211918 <caml_oldify_mopup+0x88>
ffffffff80211941:	48 3b 3d 60 a6 02 00 	cmp    0x2a660(%rip),%rdi        # ffffffff8023bfa8 <caml_young_end>
ffffffff80211948:	73 ce                	jae    ffffffff80211918 <caml_oldify_mopup+0x88>
ffffffff8021194a:	48 3b 3d 5f a6 02 00 	cmp    0x2a65f(%rip),%rdi        # ffffffff8023bfb0 <caml_young_start>
ffffffff80211951:	76 c5                	jbe    ffffffff80211918 <caml_oldify_mopup+0x88>
ffffffff80211953:	e8 28 fd ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff80211958:	eb c1                	jmp    ffffffff8021191b <caml_oldify_mopup+0x8b>
ffffffff8021195a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80211960:	49 8b 1c 24          	mov    (%r12),%rbx
ffffffff80211964:	48 3b 1d ad a5 02 00 	cmp    0x2a5ad(%rip),%rbx        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8021196b:	73 7c                	jae    ffffffff802119e9 <caml_oldify_mopup+0x159>
ffffffff8021196d:	45 31 c9             	xor    %r9d,%r9d
ffffffff80211970:	eb 13                	jmp    ffffffff80211985 <caml_oldify_mopup+0xf5>
ffffffff80211972:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80211978:	48 83 c3 10          	add    $0x10,%rbx
ffffffff8021197c:	48 39 1d 95 a5 02 00 	cmp    %rbx,0x2a595(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80211983:	76 5b                	jbe    ffffffff802119e0 <caml_oldify_mopup+0x150>
ffffffff80211985:	48 83 7b 08 01       	cmpq   $0x1,0x8(%rbx)
ffffffff8021198a:	75 ec                	jne    ffffffff80211978 <caml_oldify_mopup+0xe8>
ffffffff8021198c:	48 8b 03             	mov    (%rbx),%rax
ffffffff8021198f:	48 8b 15 32 a4 01 00 	mov    0x1a432(%rip),%rdx        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80211996:	48 8b 78 08          	mov    0x8(%rax),%rdi
ffffffff8021199a:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021199e:	48 39 d7             	cmp    %rdx,%rdi
ffffffff802119a1:	74 d5                	je     ffffffff80211978 <caml_oldify_mopup+0xe8>
ffffffff802119a3:	40 f6 c7 01          	test   $0x1,%dil
ffffffff802119a7:	75 cf                	jne    ffffffff80211978 <caml_oldify_mopup+0xe8>
ffffffff802119a9:	4c 8b 05 f8 a5 02 00 	mov    0x2a5f8(%rip),%r8        # ffffffff8023bfa8 <caml_young_end>
ffffffff802119b0:	4c 39 c7             	cmp    %r8,%rdi
ffffffff802119b3:	73 c3                	jae    ffffffff80211978 <caml_oldify_mopup+0xe8>
ffffffff802119b5:	4c 8b 1d f4 a5 02 00 	mov    0x2a5f4(%rip),%r11        # ffffffff8023bfb0 <caml_young_start>
ffffffff802119bc:	4c 39 df             	cmp    %r11,%rdi
ffffffff802119bf:	76 b7                	jbe    ffffffff80211978 <caml_oldify_mopup+0xe8>
ffffffff802119c1:	48 83 7f f8 00       	cmpq   $0x0,-0x8(%rdi)
ffffffff802119c6:	75 3d                	jne    ffffffff80211a05 <caml_oldify_mopup+0x175>
ffffffff802119c8:	48 8b 17             	mov    (%rdi),%rdx
ffffffff802119cb:	48 83 c3 10          	add    $0x10,%rbx
ffffffff802119cf:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff802119d3:	48 39 1d 3e a5 02 00 	cmp    %rbx,0x2a53e(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff802119da:	77 a9                	ja     ffffffff80211985 <caml_oldify_mopup+0xf5>
ffffffff802119dc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802119e0:	45 85 c9             	test   %r9d,%r9d
ffffffff802119e3:	0f 85 bf fe ff ff    	jne    ffffffff802118a8 <caml_oldify_mopup+0x18>
ffffffff802119e9:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802119ed:	5b                   	pop    %rbx
ffffffff802119ee:	5d                   	pop    %rbp
ffffffff802119ef:	41 5c                	pop    %r12
ffffffff802119f1:	41 5d                	pop    %r13
ffffffff802119f3:	41 5e                	pop    %r14
ffffffff802119f5:	41 5f                	pop    %r15
ffffffff802119f7:	c3                   	retq   
ffffffff802119f8:	4c 89 fe             	mov    %r15,%rsi
ffffffff802119fb:	e8 80 fc ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff80211a00:	e9 eb fe ff ff       	jmpq   ffffffff802118f0 <caml_oldify_mopup+0x60>
ffffffff80211a05:	48 8b 68 f8          	mov    -0x8(%rax),%rbp
ffffffff80211a09:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff80211a0d:	48 c1 ed 0a          	shr    $0xa,%rbp
ffffffff80211a11:	4c 8d 14 e8          	lea    (%rax,%rbp,8),%r10
ffffffff80211a15:	48 83 fd 02          	cmp    $0x2,%rbp
ffffffff80211a19:	77 0e                	ja     ffffffff80211a29 <caml_oldify_mopup+0x199>
ffffffff80211a1b:	eb 36                	jmp    ffffffff80211a53 <caml_oldify_mopup+0x1c3>
ffffffff80211a1d:	0f 1f 00             	nopl   (%rax)
ffffffff80211a20:	48 83 c1 08          	add    $0x8,%rcx
ffffffff80211a24:	4c 39 d1             	cmp    %r10,%rcx
ffffffff80211a27:	74 2a                	je     ffffffff80211a53 <caml_oldify_mopup+0x1c3>
ffffffff80211a29:	48 8b 01             	mov    (%rcx),%rax
ffffffff80211a2c:	48 39 c2             	cmp    %rax,%rdx
ffffffff80211a2f:	74 ef                	je     ffffffff80211a20 <caml_oldify_mopup+0x190>
ffffffff80211a31:	a8 01                	test   $0x1,%al
ffffffff80211a33:	75 eb                	jne    ffffffff80211a20 <caml_oldify_mopup+0x190>
ffffffff80211a35:	49 39 c3             	cmp    %rax,%r11
ffffffff80211a38:	73 e6                	jae    ffffffff80211a20 <caml_oldify_mopup+0x190>
ffffffff80211a3a:	49 39 c0             	cmp    %rax,%r8
ffffffff80211a3d:	76 e1                	jbe    ffffffff80211a20 <caml_oldify_mopup+0x190>
ffffffff80211a3f:	48 83 78 f8 00       	cmpq   $0x0,-0x8(%rax)
ffffffff80211a44:	0f 85 2e ff ff ff    	jne    ffffffff80211978 <caml_oldify_mopup+0xe8>
ffffffff80211a4a:	48 83 c1 08          	add    $0x8,%rcx
ffffffff80211a4e:	4c 39 d1             	cmp    %r10,%rcx
ffffffff80211a51:	75 d6                	jne    ffffffff80211a29 <caml_oldify_mopup+0x199>
ffffffff80211a53:	e8 28 fc ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff80211a58:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff80211a5e:	e9 15 ff ff ff       	jmpq   ffffffff80211978 <caml_oldify_mopup+0xe8>
ffffffff80211a63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80211a6a:	00 00 00 00 
ffffffff80211a6e:	66 90                	xchg   %ax,%ax

ffffffff80211a70 <caml_empty_minor_heap>:
ffffffff80211a70:	48 8b 05 19 a5 02 00 	mov    0x2a519(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff80211a77:	48 39 05 0a a5 02 00 	cmp    %rax,0x2a50a(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80211a7e:	0f 84 dc 02 00 00    	je     ffffffff80211d60 <caml_empty_minor_heap+0x2f0>
ffffffff80211a84:	55                   	push   %rbp
ffffffff80211a85:	53                   	push   %rbx
ffffffff80211a86:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80211a8a:	48 8b 05 67 a5 02 00 	mov    0x2a567(%rip),%rax        # ffffffff8023bff8 <caml_minor_gc_begin_hook>
ffffffff80211a91:	48 85 c0             	test   %rax,%rax
ffffffff80211a94:	74 02                	je     ffffffff80211a98 <caml_empty_minor_heap+0x28>
ffffffff80211a96:	ff d0                	callq  *%rax
ffffffff80211a98:	31 c0                	xor    %eax,%eax
ffffffff80211a9a:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80211a9f:	48 8d 35 3f 04 01 00 	lea    0x1043f(%rip),%rsi        # ffffffff80221ee5 <int32_length+0x405>
ffffffff80211aa6:	c7 05 f8 a3 02 00 01 	movl   $0x1,0x2a3f8(%rip)        # ffffffff8023bea8 <caml_in_minor_collection>
ffffffff80211aad:	00 00 00 
ffffffff80211ab0:	48 8b 2d e1 a2 02 00 	mov    0x2a2e1(%rip),%rbp        # ffffffff8023bd98 <caml_allocated_words>
ffffffff80211ab7:	e8 34 07 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80211abc:	e8 ff 1a 00 00       	callq  ffffffff802135c0 <caml_oldify_local_roots>
ffffffff80211ac1:	48 8b 1d 78 a4 02 00 	mov    0x2a478(%rip),%rbx        # ffffffff8023bf40 <caml_ref_table>
ffffffff80211ac8:	48 3b 1d 89 a4 02 00 	cmp    0x2a489(%rip),%rbx        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff80211acf:	73 22                	jae    ffffffff80211af3 <caml_empty_minor_heap+0x83>
ffffffff80211ad1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80211ad8:	48 8b 03             	mov    (%rbx),%rax
ffffffff80211adb:	48 83 c3 08          	add    $0x8,%rbx
ffffffff80211adf:	48 8b 38             	mov    (%rax),%rdi
ffffffff80211ae2:	48 89 c6             	mov    %rax,%rsi
ffffffff80211ae5:	e8 96 fb ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff80211aea:	48 39 1d 67 a4 02 00 	cmp    %rbx,0x2a467(%rip)        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff80211af1:	77 e5                	ja     ffffffff80211ad8 <caml_empty_minor_heap+0x68>
ffffffff80211af3:	e8 98 fd ff ff       	callq  ffffffff80211890 <caml_oldify_mopup>
ffffffff80211af8:	48 8b 05 01 a4 02 00 	mov    0x2a401(%rip),%rax        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80211aff:	48 3b 05 12 a4 02 00 	cmp    0x2a412(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80211b06:	73 65                	jae    ffffffff80211b6d <caml_empty_minor_heap+0xfd>
ffffffff80211b08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80211b0f:	00 
ffffffff80211b10:	48 8b 08             	mov    (%rax),%rcx
ffffffff80211b13:	48 8b 70 08          	mov    0x8(%rax),%rsi
ffffffff80211b17:	48 8b 51 f8          	mov    -0x8(%rcx),%rdx
ffffffff80211b1b:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80211b1f:	48 39 d6             	cmp    %rdx,%rsi
ffffffff80211b22:	73 3c                	jae    ffffffff80211b60 <caml_empty_minor_heap+0xf0>
ffffffff80211b24:	48 8d 34 f1          	lea    (%rcx,%rsi,8),%rsi
ffffffff80211b28:	48 8b 0d 99 a2 01 00 	mov    0x1a299(%rip),%rcx        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80211b2f:	48 8b 16             	mov    (%rsi),%rdx
ffffffff80211b32:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80211b35:	74 29                	je     ffffffff80211b60 <caml_empty_minor_heap+0xf0>
ffffffff80211b37:	f6 c2 01             	test   $0x1,%dl
ffffffff80211b3a:	75 24                	jne    ffffffff80211b60 <caml_empty_minor_heap+0xf0>
ffffffff80211b3c:	48 3b 15 65 a4 02 00 	cmp    0x2a465(%rip),%rdx        # ffffffff8023bfa8 <caml_young_end>
ffffffff80211b43:	73 1b                	jae    ffffffff80211b60 <caml_empty_minor_heap+0xf0>
ffffffff80211b45:	48 3b 15 64 a4 02 00 	cmp    0x2a464(%rip),%rdx        # ffffffff8023bfb0 <caml_young_start>
ffffffff80211b4c:	76 12                	jbe    ffffffff80211b60 <caml_empty_minor_heap+0xf0>
ffffffff80211b4e:	48 83 7a f8 00       	cmpq   $0x0,-0x8(%rdx)
ffffffff80211b53:	0f 85 e7 01 00 00    	jne    ffffffff80211d40 <caml_empty_minor_heap+0x2d0>
ffffffff80211b59:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80211b5c:	48 89 16             	mov    %rdx,(%rsi)
ffffffff80211b5f:	90                   	nop
ffffffff80211b60:	48 83 c0 10          	add    $0x10,%rax
ffffffff80211b64:	48 39 05 ad a3 02 00 	cmp    %rax,0x2a3ad(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80211b6b:	77 a3                	ja     ffffffff80211b10 <caml_empty_minor_heap+0xa0>
ffffffff80211b6d:	e8 ae 8e 00 00       	callq  ffffffff8021aa20 <caml_final_update_minor_roots>
ffffffff80211b72:	48 8b 1d 47 a3 02 00 	mov    0x2a347(%rip),%rbx        # ffffffff8023bec0 <caml_custom_table>
ffffffff80211b79:	48 3b 1d 58 a3 02 00 	cmp    0x2a358(%rip),%rbx        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80211b80:	72 21                	jb     ffffffff80211ba3 <caml_empty_minor_heap+0x133>
ffffffff80211b82:	eb 4a                	jmp    ffffffff80211bce <caml_empty_minor_heap+0x15e>
ffffffff80211b84:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80211b88:	48 8b 07             	mov    (%rdi),%rax
ffffffff80211b8b:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80211b8f:	48 85 c0             	test   %rax,%rax
ffffffff80211b92:	74 02                	je     ffffffff80211b96 <caml_empty_minor_heap+0x126>
ffffffff80211b94:	ff d0                	callq  *%rax
ffffffff80211b96:	48 83 c3 18          	add    $0x18,%rbx
ffffffff80211b9a:	48 39 1d 37 a3 02 00 	cmp    %rbx,0x2a337(%rip)        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80211ba1:	76 24                	jbe    ffffffff80211bc7 <caml_empty_minor_heap+0x157>
ffffffff80211ba3:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff80211ba6:	48 83 7f f8 00       	cmpq   $0x0,-0x8(%rdi)
ffffffff80211bab:	75 db                	jne    ffffffff80211b88 <caml_empty_minor_heap+0x118>
ffffffff80211bad:	48 8b 73 10          	mov    0x10(%rbx),%rsi
ffffffff80211bb1:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
ffffffff80211bb5:	48 83 c3 18          	add    $0x18,%rbx
ffffffff80211bb9:	e8 82 e9 ff ff       	callq  ffffffff80210540 <caml_adjust_gc_speed>
ffffffff80211bbe:	48 39 1d 13 a3 02 00 	cmp    %rbx,0x2a313(%rip)        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80211bc5:	77 dc                	ja     ffffffff80211ba3 <caml_empty_minor_heap+0x133>
ffffffff80211bc7:	48 8b 1d f2 a2 02 00 	mov    0x2a2f2(%rip),%rbx        # ffffffff8023bec0 <caml_custom_table>
ffffffff80211bce:	48 8b 15 bb a3 02 00 	mov    0x2a3bb(%rip),%rdx        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff80211bd5:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80211bd9:	f2 0f 10 0d e7 68 03 	movsd  0x368e7(%rip),%xmm1        # ffffffff802484c8 <caml_stat_minor_words>
ffffffff80211be0:	00 
ffffffff80211be1:	48 89 d0             	mov    %rdx,%rax
ffffffff80211be4:	48 2b 05 9d a3 02 00 	sub    0x2a39d(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80211beb:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff80211bef:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff80211bf4:	48 8b 05 bd a3 02 00 	mov    0x2a3bd(%rip),%rax        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff80211bfb:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
ffffffff80211bff:	f2 0f 11 0d c1 68 03 	movsd  %xmm1,0x368c1(%rip)        # ffffffff802484c8 <caml_stat_minor_words>
ffffffff80211c06:	00 
ffffffff80211c07:	48 85 c0             	test   %rax,%rax
ffffffff80211c0a:	0f 88 e0 00 00 00    	js     ffffffff80211cf0 <caml_empty_minor_heap+0x280>
ffffffff80211c10:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff80211c14:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff80211c19:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
ffffffff80211c1d:	48 8b 05 1c a3 02 00 	mov    0x2a31c(%rip),%rax        # ffffffff8023bf40 <caml_ref_table>
ffffffff80211c24:	48 8d 35 03 0d 01 00 	lea    0x10d03(%rip),%rsi        # ffffffff8022292e <posix_signals+0x84e>
ffffffff80211c2b:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80211c30:	48 89 15 51 a3 02 00 	mov    %rdx,0x2a351(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80211c37:	48 89 05 1a a3 02 00 	mov    %rax,0x2a31a(%rip)        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff80211c3e:	48 8b 05 0b a3 02 00 	mov    0x2a30b(%rip),%rax        # ffffffff8023bf50 <caml_ref_table+0x10>
ffffffff80211c45:	48 89 1d 8c a2 02 00 	mov    %rbx,0x2a28c(%rip)        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80211c4c:	48 89 05 0d a3 02 00 	mov    %rax,0x2a30d(%rip)        # ffffffff8023bf60 <caml_ref_table+0x20>
ffffffff80211c53:	48 8b 05 a6 a2 02 00 	mov    0x2a2a6(%rip),%rax        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80211c5a:	48 c7 05 3b a2 02 00 	movq   $0x0,0x2a23b(%rip)        # ffffffff8023bea0 <caml_extra_heap_resources_minor>
ffffffff80211c61:	00 00 00 00 
ffffffff80211c65:	48 89 05 ac a2 02 00 	mov    %rax,0x2a2ac(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80211c6c:	48 8b 05 9d a2 02 00 	mov    0x2a29d(%rip),%rax        # ffffffff8023bf10 <caml_ephe_ref_table+0x10>
ffffffff80211c73:	48 89 05 a6 a2 02 00 	mov    %rax,0x2a2a6(%rip)        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff80211c7a:	48 8b 05 4f a2 02 00 	mov    0x2a24f(%rip),%rax        # ffffffff8023bed0 <caml_custom_table+0x10>
ffffffff80211c81:	48 89 05 58 a2 02 00 	mov    %rax,0x2a258(%rip)        # ffffffff8023bee0 <caml_custom_table+0x20>
ffffffff80211c88:	31 c0                	xor    %eax,%eax
ffffffff80211c8a:	f2 0f 58 05 36 9f 02 	addsd  0x29f36(%rip),%xmm0        # ffffffff8023bbc8 <caml_gc_clock>
ffffffff80211c91:	00 
ffffffff80211c92:	f2 0f 11 05 2e 9f 02 	movsd  %xmm0,0x29f2e(%rip)        # ffffffff8023bbc8 <caml_gc_clock>
ffffffff80211c99:	00 
ffffffff80211c9a:	e8 51 05 00 00       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80211c9f:	c7 05 ff a1 02 00 00 	movl   $0x0,0x2a1ff(%rip)        # ffffffff8023bea8 <caml_in_minor_collection>
ffffffff80211ca6:	00 00 00 
ffffffff80211ca9:	e8 22 8f 00 00       	callq  ffffffff8021abd0 <caml_final_empty_young>
ffffffff80211cae:	48 8b 05 e3 a0 02 00 	mov    0x2a0e3(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff80211cb5:	48 29 e8             	sub    %rbp,%rax
ffffffff80211cb8:	78 56                	js     ffffffff80211d10 <caml_empty_minor_heap+0x2a0>
ffffffff80211cba:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80211cbe:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff80211cc3:	f2 0f 58 05 f5 67 03 	addsd  0x367f5(%rip),%xmm0        # ffffffff802484c0 <caml_stat_promoted_words>
ffffffff80211cca:	00 
ffffffff80211ccb:	48 8b 05 1e a3 02 00 	mov    0x2a31e(%rip),%rax        # ffffffff8023bff0 <caml_minor_gc_end_hook>
ffffffff80211cd2:	48 83 05 d6 67 03 00 	addq   $0x1,0x367d6(%rip)        # ffffffff802484b0 <caml_stat_minor_collections>
ffffffff80211cd9:	01 
ffffffff80211cda:	f2 0f 11 05 de 67 03 	movsd  %xmm0,0x367de(%rip)        # ffffffff802484c0 <caml_stat_promoted_words>
ffffffff80211ce1:	00 
ffffffff80211ce2:	48 85 c0             	test   %rax,%rax
ffffffff80211ce5:	74 49                	je     ffffffff80211d30 <caml_empty_minor_heap+0x2c0>
ffffffff80211ce7:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80211ceb:	5b                   	pop    %rbx
ffffffff80211cec:	5d                   	pop    %rbp
ffffffff80211ced:	ff e0                	jmpq   *%rax
ffffffff80211cef:	90                   	nop
ffffffff80211cf0:	48 89 c1             	mov    %rax,%rcx
ffffffff80211cf3:	83 e0 01             	and    $0x1,%eax
ffffffff80211cf6:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff80211cfa:	48 d1 e9             	shr    %rcx
ffffffff80211cfd:	48 09 c1             	or     %rax,%rcx
ffffffff80211d00:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
ffffffff80211d05:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff80211d09:	e9 0b ff ff ff       	jmpq   ffffffff80211c19 <caml_empty_minor_heap+0x1a9>
ffffffff80211d0e:	66 90                	xchg   %ax,%ax
ffffffff80211d10:	48 89 c2             	mov    %rax,%rdx
ffffffff80211d13:	83 e0 01             	and    $0x1,%eax
ffffffff80211d16:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80211d1a:	48 d1 ea             	shr    %rdx
ffffffff80211d1d:	48 09 c2             	or     %rax,%rdx
ffffffff80211d20:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
ffffffff80211d25:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff80211d29:	eb 98                	jmp    ffffffff80211cc3 <caml_empty_minor_heap+0x253>
ffffffff80211d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80211d30:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80211d34:	5b                   	pop    %rbx
ffffffff80211d35:	5d                   	pop    %rbp
ffffffff80211d36:	c3                   	retq   
ffffffff80211d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80211d3e:	00 00 
ffffffff80211d40:	48 89 0e             	mov    %rcx,(%rsi)
ffffffff80211d43:	48 8b 10             	mov    (%rax),%rdx
ffffffff80211d46:	48 83 c0 10          	add    $0x10,%rax
ffffffff80211d4a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
ffffffff80211d4e:	48 39 05 c3 a1 02 00 	cmp    %rax,0x2a1c3(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80211d55:	0f 87 b5 fd ff ff    	ja     ffffffff80211b10 <caml_empty_minor_heap+0xa0>
ffffffff80211d5b:	e9 0d fe ff ff       	jmpq   ffffffff80211b6d <caml_empty_minor_heap+0xfd>
ffffffff80211d60:	e9 6b 8e 00 00       	jmpq   ffffffff8021abd0 <caml_final_empty_young>
ffffffff80211d65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80211d6c:	00 00 00 00 

ffffffff80211d70 <caml_set_minor_heap_size>:
ffffffff80211d70:	41 54                	push   %r12
ffffffff80211d72:	55                   	push   %rbp
ffffffff80211d73:	48 89 fd             	mov    %rdi,%rbp
ffffffff80211d76:	53                   	push   %rbx
ffffffff80211d77:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80211d7b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80211d82:	00 00 
ffffffff80211d84:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80211d89:	31 c0                	xor    %eax,%eax
ffffffff80211d8b:	48 8b 05 fe a1 02 00 	mov    0x2a1fe(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff80211d92:	48 39 05 ef a1 02 00 	cmp    %rax,0x2a1ef(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80211d99:	74 24                	je     ffffffff80211dbf <caml_set_minor_heap_size+0x4f>
ffffffff80211d9b:	48 8b 05 f6 a1 02 00 	mov    0x2a1f6(%rip),%rax        # ffffffff8023bf98 <caml_young_alloc_mid>
ffffffff80211da2:	c7 05 34 43 03 00 00 	movl   $0x0,0x34334(%rip)        # ffffffff802460e0 <caml_requested_minor_gc>
ffffffff80211da9:	00 00 00 
ffffffff80211dac:	48 89 05 c5 a1 02 00 	mov    %rax,0x2a1c5(%rip)        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80211db3:	48 89 05 c6 a1 02 00 	mov    %rax,0x2a1c6(%rip)        # ffffffff8023bf80 <caml_young_limit>
ffffffff80211dba:	e8 b1 fc ff ff       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff80211dbf:	48 89 e2             	mov    %rsp,%rdx
ffffffff80211dc2:	31 f6                	xor    %esi,%esi
ffffffff80211dc4:	48 89 ef             	mov    %rbp,%rdi
ffffffff80211dc7:	e8 24 ea ff ff       	callq  ffffffff802107f0 <caml_stat_alloc_aligned_noexc>
ffffffff80211dcc:	48 89 c3             	mov    %rax,%rbx
ffffffff80211dcf:	48 85 c0             	test   %rax,%rax
ffffffff80211dd2:	0f 84 d1 01 00 00    	je     ffffffff80211fa9 <caml_set_minor_heap_size+0x239>
ffffffff80211dd8:	4c 8d 24 28          	lea    (%rax,%rbp,1),%r12
ffffffff80211ddc:	48 89 c6             	mov    %rax,%rsi
ffffffff80211ddf:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80211de4:	4c 89 e2             	mov    %r12,%rdx
ffffffff80211de7:	e8 34 ef ff ff       	callq  ffffffff80210d20 <caml_page_table_add>
ffffffff80211dec:	85 c0                	test   %eax,%eax
ffffffff80211dee:	0f 85 b5 01 00 00    	jne    ffffffff80211fa9 <caml_set_minor_heap_size+0x239>
ffffffff80211df4:	48 8b 35 b5 a1 02 00 	mov    0x2a1b5(%rip),%rsi        # ffffffff8023bfb0 <caml_young_start>
ffffffff80211dfb:	48 85 f6             	test   %rsi,%rsi
ffffffff80211dfe:	74 1d                	je     ffffffff80211e1d <caml_set_minor_heap_size+0xad>
ffffffff80211e00:	48 8b 15 a1 a1 02 00 	mov    0x2a1a1(%rip),%rdx        # ffffffff8023bfa8 <caml_young_end>
ffffffff80211e07:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80211e0c:	e8 8f f3 ff ff       	callq  ffffffff802111a0 <caml_page_table_remove>
ffffffff80211e11:	48 8b 3d b0 a1 02 00 	mov    0x2a1b0(%rip),%rdi        # ffffffff8023bfc8 <caml_young_base>
ffffffff80211e18:	e8 33 eb ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80211e1d:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80211e21:	48 8b 3d 18 a1 02 00 	mov    0x2a118(%rip),%rdi        # ffffffff8023bf40 <caml_ref_table>
ffffffff80211e28:	48 89 1d 81 a1 02 00 	mov    %rbx,0x2a181(%rip)        # ffffffff8023bfb0 <caml_young_start>
ffffffff80211e2f:	4c 89 25 72 a1 02 00 	mov    %r12,0x2a172(%rip)        # ffffffff8023bfa8 <caml_young_end>
ffffffff80211e36:	48 89 05 8b a1 02 00 	mov    %rax,0x2a18b(%rip)        # ffffffff8023bfc8 <caml_young_base>
ffffffff80211e3d:	48 89 e8             	mov    %rbp,%rax
ffffffff80211e40:	48 c1 ed 03          	shr    $0x3,%rbp
ffffffff80211e44:	48 c1 e8 04          	shr    $0x4,%rax
ffffffff80211e48:	48 89 1d 51 a1 02 00 	mov    %rbx,0x2a151(%rip)        # ffffffff8023bfa0 <caml_young_alloc_start>
ffffffff80211e4f:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
ffffffff80211e53:	4c 89 25 36 a1 02 00 	mov    %r12,0x2a136(%rip)        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff80211e5a:	48 89 05 37 a1 02 00 	mov    %rax,0x2a137(%rip)        # ffffffff8023bf98 <caml_young_alloc_mid>
ffffffff80211e61:	48 89 1d 10 a1 02 00 	mov    %rbx,0x2a110(%rip)        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80211e68:	48 89 1d 11 a1 02 00 	mov    %rbx,0x2a111(%rip)        # ffffffff8023bf80 <caml_young_limit>
ffffffff80211e6f:	4c 89 25 12 a1 02 00 	mov    %r12,0x2a112(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80211e76:	48 89 2d 3b a1 02 00 	mov    %rbp,0x2a13b(%rip)        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff80211e7d:	48 c7 05 e0 a0 02 00 	movq   $0x0,0x2a0e0(%rip)        # ffffffff8023bf68 <caml_ref_table+0x28>
ffffffff80211e84:	00 00 00 00 
ffffffff80211e88:	48 c7 05 dd a0 02 00 	movq   $0x0,0x2a0dd(%rip)        # ffffffff8023bf70 <caml_ref_table+0x30>
ffffffff80211e8f:	00 00 00 00 
ffffffff80211e93:	48 85 ff             	test   %rdi,%rdi
ffffffff80211e96:	74 05                	je     ffffffff80211e9d <caml_set_minor_heap_size+0x12d>
ffffffff80211e98:	e8 b3 ea ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80211e9d:	48 8b 3d 5c a0 02 00 	mov    0x2a05c(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80211ea4:	48 c7 05 99 a0 02 00 	movq   $0x0,0x2a099(%rip)        # ffffffff8023bf48 <caml_ref_table+0x8>
ffffffff80211eab:	00 00 00 00 
ffffffff80211eaf:	48 c7 05 a6 a0 02 00 	movq   $0x0,0x2a0a6(%rip)        # ffffffff8023bf60 <caml_ref_table+0x20>
ffffffff80211eb6:	00 00 00 00 
ffffffff80211eba:	48 c7 05 8b a0 02 00 	movq   $0x0,0x2a08b(%rip)        # ffffffff8023bf50 <caml_ref_table+0x10>
ffffffff80211ec1:	00 00 00 00 
ffffffff80211ec5:	48 c7 05 88 a0 02 00 	movq   $0x0,0x2a088(%rip)        # ffffffff8023bf58 <caml_ref_table+0x18>
ffffffff80211ecc:	00 00 00 00 
ffffffff80211ed0:	48 c7 05 65 a0 02 00 	movq   $0x0,0x2a065(%rip)        # ffffffff8023bf40 <caml_ref_table>
ffffffff80211ed7:	00 00 00 00 
ffffffff80211edb:	48 c7 05 42 a0 02 00 	movq   $0x0,0x2a042(%rip)        # ffffffff8023bf28 <caml_ephe_ref_table+0x28>
ffffffff80211ee2:	00 00 00 00 
ffffffff80211ee6:	48 c7 05 3f a0 02 00 	movq   $0x0,0x2a03f(%rip)        # ffffffff8023bf30 <caml_ephe_ref_table+0x30>
ffffffff80211eed:	00 00 00 00 
ffffffff80211ef1:	48 85 ff             	test   %rdi,%rdi
ffffffff80211ef4:	74 05                	je     ffffffff80211efb <caml_set_minor_heap_size+0x18b>
ffffffff80211ef6:	e8 55 ea ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80211efb:	48 8b 3d be 9f 02 00 	mov    0x29fbe(%rip),%rdi        # ffffffff8023bec0 <caml_custom_table>
ffffffff80211f02:	48 c7 05 fb 9f 02 00 	movq   $0x0,0x29ffb(%rip)        # ffffffff8023bf08 <caml_ephe_ref_table+0x8>
ffffffff80211f09:	00 00 00 00 
ffffffff80211f0d:	48 c7 05 08 a0 02 00 	movq   $0x0,0x2a008(%rip)        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff80211f14:	00 00 00 00 
ffffffff80211f18:	48 c7 05 ed 9f 02 00 	movq   $0x0,0x29fed(%rip)        # ffffffff8023bf10 <caml_ephe_ref_table+0x10>
ffffffff80211f1f:	00 00 00 00 
ffffffff80211f23:	48 c7 05 ea 9f 02 00 	movq   $0x0,0x29fea(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80211f2a:	00 00 00 00 
ffffffff80211f2e:	48 c7 05 c7 9f 02 00 	movq   $0x0,0x29fc7(%rip)        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80211f35:	00 00 00 00 
ffffffff80211f39:	48 c7 05 a4 9f 02 00 	movq   $0x0,0x29fa4(%rip)        # ffffffff8023bee8 <caml_custom_table+0x28>
ffffffff80211f40:	00 00 00 00 
ffffffff80211f44:	48 c7 05 a1 9f 02 00 	movq   $0x0,0x29fa1(%rip)        # ffffffff8023bef0 <caml_custom_table+0x30>
ffffffff80211f4b:	00 00 00 00 
ffffffff80211f4f:	48 85 ff             	test   %rdi,%rdi
ffffffff80211f52:	74 05                	je     ffffffff80211f59 <caml_set_minor_heap_size+0x1e9>
ffffffff80211f54:	e8 f7 e9 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80211f59:	48 c7 05 64 9f 02 00 	movq   $0x0,0x29f64(%rip)        # ffffffff8023bec8 <caml_custom_table+0x8>
ffffffff80211f60:	00 00 00 00 
ffffffff80211f64:	48 c7 05 71 9f 02 00 	movq   $0x0,0x29f71(%rip)        # ffffffff8023bee0 <caml_custom_table+0x20>
ffffffff80211f6b:	00 00 00 00 
ffffffff80211f6f:	48 c7 05 56 9f 02 00 	movq   $0x0,0x29f56(%rip)        # ffffffff8023bed0 <caml_custom_table+0x10>
ffffffff80211f76:	00 00 00 00 
ffffffff80211f7a:	48 c7 05 53 9f 02 00 	movq   $0x0,0x29f53(%rip)        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80211f81:	00 00 00 00 
ffffffff80211f85:	48 c7 05 30 9f 02 00 	movq   $0x0,0x29f30(%rip)        # ffffffff8023bec0 <caml_custom_table>
ffffffff80211f8c:	00 00 00 00 
ffffffff80211f90:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80211f95:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80211f9c:	00 00 
ffffffff80211f9e:	75 0e                	jne    ffffffff80211fae <caml_set_minor_heap_size+0x23e>
ffffffff80211fa0:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80211fa4:	5b                   	pop    %rbx
ffffffff80211fa5:	5d                   	pop    %rbp
ffffffff80211fa6:	41 5c                	pop    %r12
ffffffff80211fa8:	c3                   	retq   
ffffffff80211fa9:	e8 12 55 ff ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff80211fae:	e8 ed e0 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80211fb3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80211fba:	00 00 00 00 
ffffffff80211fbe:	66 90                	xchg   %ax,%ax

ffffffff80211fc0 <caml_gc_dispatch>:
ffffffff80211fc0:	53                   	push   %rbx
ffffffff80211fc1:	48 8b 15 d8 9f 02 00 	mov    0x29fd8(%rip),%rdx        # ffffffff8023bfa0 <caml_young_alloc_start>
ffffffff80211fc8:	48 8b 1d a9 9f 02 00 	mov    0x29fa9(%rip),%rbx        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80211fcf:	48 39 da             	cmp    %rbx,%rdx
ffffffff80211fd2:	74 0e                	je     ffffffff80211fe2 <caml_gc_dispatch+0x22>
ffffffff80211fd4:	8b 05 06 41 03 00    	mov    0x34106(%rip),%eax        # ffffffff802460e0 <caml_requested_minor_gc>
ffffffff80211fda:	85 c0                	test   %eax,%eax
ffffffff80211fdc:	0f 84 9e 00 00 00    	je     ffffffff80212080 <caml_gc_dispatch+0xc0>
ffffffff80211fe2:	48 8b 05 af 9f 02 00 	mov    0x29faf(%rip),%rax        # ffffffff8023bf98 <caml_young_alloc_mid>
ffffffff80211fe9:	c7 05 ed 40 03 00 00 	movl   $0x0,0x340ed(%rip)        # ffffffff802460e0 <caml_requested_minor_gc>
ffffffff80211ff0:	00 00 00 
ffffffff80211ff3:	48 89 05 7e 9f 02 00 	mov    %rax,0x29f7e(%rip)        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80211ffa:	48 89 05 7f 9f 02 00 	mov    %rax,0x29f7f(%rip)        # ffffffff8023bf80 <caml_young_limit>
ffffffff80212001:	e8 6a fa ff ff       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff80212006:	83 3d 93 9d 02 00 03 	cmpl   $0x3,0x29d93(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8021200d:	0f 84 ad 00 00 00    	je     ffffffff802120c0 <caml_gc_dispatch+0x100>
ffffffff80212013:	e8 d8 86 00 00       	callq  ffffffff8021a6f0 <caml_final_do_calls>
ffffffff80212018:	eb 33                	jmp    ffffffff8021204d <caml_gc_dispatch+0x8d>
ffffffff8021201a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80212020:	48 8b 05 71 9f 02 00 	mov    0x29f71(%rip),%rax        # ffffffff8023bf98 <caml_young_alloc_mid>
ffffffff80212027:	c7 05 af 40 03 00 00 	movl   $0x0,0x340af(%rip)        # ffffffff802460e0 <caml_requested_minor_gc>
ffffffff8021202e:	00 00 00 
ffffffff80212031:	48 89 05 40 9f 02 00 	mov    %rax,0x29f40(%rip)        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80212038:	48 89 05 41 9f 02 00 	mov    %rax,0x29f41(%rip)        # ffffffff8023bf80 <caml_young_limit>
ffffffff8021203f:	e8 2c fa ff ff       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff80212044:	83 3d 55 9d 02 00 03 	cmpl   $0x3,0x29d55(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8021204b:	74 5b                	je     ffffffff802120a8 <caml_gc_dispatch+0xe8>
ffffffff8021204d:	48 8b 15 4c 9f 02 00 	mov    0x29f4c(%rip),%rdx        # ffffffff8023bfa0 <caml_young_alloc_start>
ffffffff80212054:	48 8b 05 2d 9f 02 00 	mov    0x29f2d(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8021205b:	48 29 d0             	sub    %rdx,%rax
ffffffff8021205e:	48 3d 00 08 00 00    	cmp    $0x800,%rax
ffffffff80212064:	7e ba                	jle    ffffffff80212020 <caml_gc_dispatch+0x60>
ffffffff80212066:	48 39 da             	cmp    %rbx,%rdx
ffffffff80212069:	75 15                	jne    ffffffff80212080 <caml_gc_dispatch+0xc0>
ffffffff8021206b:	8b 05 73 40 03 00    	mov    0x34073(%rip),%eax        # ffffffff802460e4 <caml_requested_major_slice>
ffffffff80212071:	85 c0                	test   %eax,%eax
ffffffff80212073:	75 0b                	jne    ffffffff80212080 <caml_gc_dispatch+0xc0>
ffffffff80212075:	5b                   	pop    %rbx
ffffffff80212076:	c3                   	retq   
ffffffff80212077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021207e:	00 00 
ffffffff80212080:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
ffffffff80212087:	5b                   	pop    %rbx
ffffffff80212088:	c7 05 52 40 03 00 00 	movl   $0x0,0x34052(%rip)        # ffffffff802460e4 <caml_requested_major_slice>
ffffffff8021208f:	00 00 00 
ffffffff80212092:	48 89 15 df 9e 02 00 	mov    %rdx,0x29edf(%rip)        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80212099:	48 89 15 e0 9e 02 00 	mov    %rdx,0x29ee0(%rip)        # ffffffff8023bf80 <caml_young_limit>
ffffffff802120a0:	e9 cb c9 ff ff       	jmpq   ffffffff8020ea70 <caml_major_collection_slice>
ffffffff802120a5:	0f 1f 00             	nopl   (%rax)
ffffffff802120a8:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
ffffffff802120af:	e8 bc c9 ff ff       	callq  ffffffff8020ea70 <caml_major_collection_slice>
ffffffff802120b4:	eb 97                	jmp    ffffffff8021204d <caml_gc_dispatch+0x8d>
ffffffff802120b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802120bd:	00 00 00 
ffffffff802120c0:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
ffffffff802120c7:	e8 a4 c9 ff ff       	callq  ffffffff8020ea70 <caml_major_collection_slice>
ffffffff802120cc:	e9 42 ff ff ff       	jmpq   ffffffff80212013 <caml_gc_dispatch+0x53>
ffffffff802120d1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802120d8:	00 00 00 00 
ffffffff802120dc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802120e0 <caml_minor_collection>:
ffffffff802120e0:	c7 05 f6 3f 03 00 01 	movl   $0x1,0x33ff6(%rip)        # ffffffff802460e0 <caml_requested_minor_gc>
ffffffff802120e7:	00 00 00 
ffffffff802120ea:	e9 d1 fe ff ff       	jmpq   ffffffff80211fc0 <caml_gc_dispatch>
ffffffff802120ef:	90                   	nop

ffffffff802120f0 <caml_check_urgent_gc>:
ffffffff802120f0:	53                   	push   %rbx
ffffffff802120f1:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff802120f5:	48 8b 1d 7c 1f 03 00 	mov    0x31f7c(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff802120fc:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80212101:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80212108:	00 00 
ffffffff8021210a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff8021210f:	31 c0                	xor    %eax,%eax
ffffffff80212111:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80212116:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8021211b:	48 89 05 56 1f 03 00 	mov    %rax,0x31f56(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80212122:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80212127:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8021212c:	8b 05 b2 3f 03 00    	mov    0x33fb2(%rip),%eax        # ffffffff802460e4 <caml_requested_major_slice>
ffffffff80212132:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80212139:	00 00 
ffffffff8021213b:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80212142:	00 00 
ffffffff80212144:	85 c0                	test   %eax,%eax
ffffffff80212146:	75 30                	jne    ffffffff80212178 <caml_check_urgent_gc+0x88>
ffffffff80212148:	8b 05 92 3f 03 00    	mov    0x33f92(%rip),%eax        # ffffffff802460e0 <caml_requested_minor_gc>
ffffffff8021214e:	85 c0                	test   %eax,%eax
ffffffff80212150:	75 26                	jne    ffffffff80212178 <caml_check_urgent_gc+0x88>
ffffffff80212152:	48 89 1d 1f 1f 03 00 	mov    %rbx,0x31f1f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80212159:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021215e:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
ffffffff80212163:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff8021216a:	00 00 
ffffffff8021216c:	75 11                	jne    ffffffff8021217f <caml_check_urgent_gc+0x8f>
ffffffff8021216e:	48 83 c4 60          	add    $0x60,%rsp
ffffffff80212172:	5b                   	pop    %rbx
ffffffff80212173:	c3                   	retq   
ffffffff80212174:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80212178:	e8 43 fe ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff8021217d:	eb d3                	jmp    ffffffff80212152 <caml_check_urgent_gc+0x62>
ffffffff8021217f:	e8 1c df fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80212184:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021218b:	00 00 00 00 
ffffffff8021218f:	90                   	nop

ffffffff80212190 <caml_realloc_ref_table>:
ffffffff80212190:	4c 8d 05 72 fd 00 00 	lea    0xfd72(%rip),%r8        # ffffffff80221f09 <int32_length+0x429>
ffffffff80212197:	48 8d 0d 9a fd 00 00 	lea    0xfd9a(%rip),%rcx        # ffffffff80221f38 <int32_length+0x458>
ffffffff8021219e:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff802121a3:	48 8d 15 3d fd 00 00 	lea    0xfd3d(%rip),%rdx        # ffffffff80221ee7 <int32_length+0x407>
ffffffff802121aa:	e9 81 f3 ff ff       	jmpq   ffffffff80211530 <realloc_generic_table.isra.0>
ffffffff802121af:	90                   	nop

ffffffff802121b0 <caml_realloc_ephe_ref_table>:
ffffffff802121b0:	4c 8d 05 4d fd 00 00 	lea    0xfd4d(%rip),%r8        # ffffffff80221f04 <int32_length+0x424>
ffffffff802121b7:	48 8d 0d a2 fd 00 00 	lea    0xfda2(%rip),%rcx        # ffffffff80221f60 <int32_length+0x480>
ffffffff802121be:	be 10 00 00 00       	mov    $0x10,%esi
ffffffff802121c3:	48 8d 15 be fd 00 00 	lea    0xfdbe(%rip),%rdx        # ffffffff80221f88 <int32_length+0x4a8>
ffffffff802121ca:	e9 61 f3 ff ff       	jmpq   ffffffff80211530 <realloc_generic_table.isra.0>
ffffffff802121cf:	90                   	nop

ffffffff802121d0 <caml_realloc_custom_table>:
ffffffff802121d0:	4c 8d 05 45 fd 00 00 	lea    0xfd45(%rip),%r8        # ffffffff80221f1c <int32_length+0x43c>
ffffffff802121d7:	48 8d 0d d2 fd 00 00 	lea    0xfdd2(%rip),%rcx        # ffffffff80221fb0 <int32_length+0x4d0>
ffffffff802121de:	be 18 00 00 00       	mov    $0x18,%esi
ffffffff802121e3:	48 8d 15 ee fd 00 00 	lea    0xfdee(%rip),%rdx        # ffffffff80221fd8 <int32_length+0x4f8>
ffffffff802121ea:	e9 41 f3 ff ff       	jmpq   ffffffff80211530 <realloc_generic_table.isra.0>
ffffffff802121ef:	90                   	nop

ffffffff802121f0 <caml_gc_message>:
ffffffff802121f0:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
ffffffff802121f7:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff802121fc:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
ffffffff80212201:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
ffffffff80212206:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
ffffffff8021220b:	84 c0                	test   %al,%al
ffffffff8021220d:	74 37                	je     ffffffff80212246 <caml_gc_message+0x56>
ffffffff8021220f:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
ffffffff80212214:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
ffffffff80212219:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
ffffffff8021221e:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
ffffffff80212225:	00 
ffffffff80212226:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
ffffffff8021222d:	00 
ffffffff8021222e:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
ffffffff80212235:	00 
ffffffff80212236:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
ffffffff8021223d:	00 
ffffffff8021223e:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
ffffffff80212245:	00 
ffffffff80212246:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021224d:	00 00 
ffffffff8021224f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80212254:	31 c0                	xor    %eax,%eax
ffffffff80212256:	48 63 ff             	movslq %edi,%rdi
ffffffff80212259:	48 85 3d 78 9d 02 00 	test   %rdi,0x29d78(%rip)        # ffffffff8023bfd8 <caml_verb_gc>
ffffffff80212260:	75 1e                	jne    ffffffff80212280 <caml_gc_message+0x90>
ffffffff80212262:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80212267:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8021226e:	00 00 
ffffffff80212270:	75 51                	jne    ffffffff802122c3 <caml_gc_message+0xd3>
ffffffff80212272:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
ffffffff80212279:	c3                   	retq   
ffffffff8021227a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80212280:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
ffffffff80212287:	00 
ffffffff80212288:	48 8b 3d 59 62 03 00 	mov    0x36259(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8021228f:	48 89 e2             	mov    %rsp,%rdx
ffffffff80212292:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
ffffffff80212299:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8021229e:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff802122a3:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
ffffffff802122aa:	00 
ffffffff802122ab:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff802122b0:	e8 10 de fe ff       	callq  ffffffff802000c5 <vfprintf>
ffffffff802122b5:	48 8b 3d 2c 62 03 00 	mov    0x3622c(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff802122bc:	e8 05 de fe ff       	callq  ffffffff802000c6 <fflush>
ffffffff802122c1:	eb 9f                	jmp    ffffffff80212262 <caml_gc_message+0x72>
ffffffff802122c3:	e8 d8 dd fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802122c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802122cf:	00 

ffffffff802122d0 <caml_fatal_error>:
ffffffff802122d0:	55                   	push   %rbp
ffffffff802122d1:	48 89 fd             	mov    %rdi,%rbp
ffffffff802122d4:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
ffffffff802122db:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
ffffffff802122e0:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
ffffffff802122e5:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
ffffffff802122ea:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
ffffffff802122ef:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
ffffffff802122f4:	84 c0                	test   %al,%al
ffffffff802122f6:	74 37                	je     ffffffff8021232f <caml_fatal_error+0x5f>
ffffffff802122f8:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
ffffffff802122fd:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
ffffffff80212302:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
ffffffff80212307:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
ffffffff8021230e:	00 
ffffffff8021230f:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
ffffffff80212316:	00 
ffffffff80212317:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
ffffffff8021231e:	00 
ffffffff8021231f:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
ffffffff80212326:	00 
ffffffff80212327:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
ffffffff8021232e:	00 
ffffffff8021232f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80212336:	00 00 
ffffffff80212338:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021233d:	31 c0                	xor    %eax,%eax
ffffffff8021233f:	ba 0d 00 00 00       	mov    $0xd,%edx
ffffffff80212344:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80212349:	48 8b 0d 98 61 03 00 	mov    0x36198(%rip),%rcx        # ffffffff802484e8 <stderr>
ffffffff80212350:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
ffffffff80212357:	00 
ffffffff80212358:	48 8d 3d 99 fc 00 00 	lea    0xfc99(%rip),%rdi        # ffffffff80221ff8 <int32_length+0x518>
ffffffff8021235f:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
ffffffff80212366:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8021236b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80212370:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
ffffffff80212377:	00 
ffffffff80212378:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8021237d:	e8 2a dd fe ff       	callq  ffffffff802000ac <fwrite>
ffffffff80212382:	48 8b 3d 5f 61 03 00 	mov    0x3615f(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff80212389:	48 89 e2             	mov    %rsp,%rdx
ffffffff8021238c:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021238f:	e8 31 dd fe ff       	callq  ffffffff802000c5 <vfprintf>
ffffffff80212394:	48 8b 35 4d 61 03 00 	mov    0x3614d(%rip),%rsi        # ffffffff802484e8 <stderr>
ffffffff8021239b:	bf 0a 00 00 00       	mov    $0xa,%edi
ffffffff802123a0:	e8 09 dd fe ff       	callq  ffffffff802000ae <fputc>
ffffffff802123a5:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff802123aa:	e8 12 dd fe ff       	callq  ffffffff802000c1 <exit>
ffffffff802123af:	90                   	nop

ffffffff802123b0 <caml_ext_table_init>:
ffffffff802123b0:	53                   	push   %rbx
ffffffff802123b1:	48 89 fb             	mov    %rdi,%rbx
ffffffff802123b4:	89 77 04             	mov    %esi,0x4(%rdi)
ffffffff802123b7:	48 63 f6             	movslq %esi,%rsi
ffffffff802123ba:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
ffffffff802123c0:	48 8d 3c f5 00 00 00 	lea    0x0(,%rsi,8),%rdi
ffffffff802123c7:	00 
ffffffff802123c8:	e8 63 e5 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff802123cd:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff802123d1:	5b                   	pop    %rbx
ffffffff802123d2:	c3                   	retq   
ffffffff802123d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802123da:	00 00 00 00 
ffffffff802123de:	66 90                	xchg   %ax,%ax

ffffffff802123e0 <caml_ext_table_add>:
ffffffff802123e0:	55                   	push   %rbp
ffffffff802123e1:	48 89 f5             	mov    %rsi,%rbp
ffffffff802123e4:	53                   	push   %rbx
ffffffff802123e5:	48 89 fb             	mov    %rdi,%rbx
ffffffff802123e8:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802123ec:	8b 07                	mov    (%rdi),%eax
ffffffff802123ee:	8b 77 04             	mov    0x4(%rdi),%esi
ffffffff802123f1:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff802123f5:	39 f0                	cmp    %esi,%eax
ffffffff802123f7:	7d 17                	jge    ffffffff80212410 <caml_ext_table_add+0x30>
ffffffff802123f9:	48 63 d0             	movslq %eax,%rdx
ffffffff802123fc:	48 89 2c d7          	mov    %rbp,(%rdi,%rdx,8)
ffffffff80212400:	83 03 01             	addl   $0x1,(%rbx)
ffffffff80212403:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80212407:	5b                   	pop    %rbx
ffffffff80212408:	5d                   	pop    %rbp
ffffffff80212409:	c3                   	retq   
ffffffff8021240a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80212410:	01 f6                	add    %esi,%esi
ffffffff80212412:	89 73 04             	mov    %esi,0x4(%rbx)
ffffffff80212415:	48 63 f6             	movslq %esi,%rsi
ffffffff80212418:	48 c1 e6 03          	shl    $0x3,%rsi
ffffffff8021241c:	e8 ef e5 ff ff       	callq  ffffffff80210a10 <caml_stat_resize>
ffffffff80212421:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff80212425:	48 89 c7             	mov    %rax,%rdi
ffffffff80212428:	8b 03                	mov    (%rbx),%eax
ffffffff8021242a:	eb cd                	jmp    ffffffff802123f9 <caml_ext_table_add+0x19>
ffffffff8021242c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80212430 <caml_ext_table_remove>:
ffffffff80212430:	8b 07                	mov    (%rdi),%eax
ffffffff80212432:	85 c0                	test   %eax,%eax
ffffffff80212434:	0f 8e 7e 00 00 00    	jle    ffffffff802124b8 <caml_ext_table_remove+0x88>
ffffffff8021243a:	41 55                	push   %r13
ffffffff8021243c:	41 54                	push   %r12
ffffffff8021243e:	49 89 f4             	mov    %rsi,%r12
ffffffff80212441:	55                   	push   %rbp
ffffffff80212442:	48 89 fd             	mov    %rdi,%rbp
ffffffff80212445:	53                   	push   %rbx
ffffffff80212446:	31 db                	xor    %ebx,%ebx
ffffffff80212448:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021244c:	eb 0c                	jmp    ffffffff8021245a <caml_ext_table_remove+0x2a>
ffffffff8021244e:	66 90                	xchg   %ax,%ax
ffffffff80212450:	8b 45 00             	mov    0x0(%rbp),%eax
ffffffff80212453:	83 c3 01             	add    $0x1,%ebx
ffffffff80212456:	39 c3                	cmp    %eax,%ebx
ffffffff80212458:	7d 4c                	jge    ffffffff802124a6 <caml_ext_table_remove+0x76>
ffffffff8021245a:	48 8b 55 08          	mov    0x8(%rbp),%rdx
ffffffff8021245e:	48 63 c3             	movslq %ebx,%rax
ffffffff80212461:	4c 8d 2c c5 00 00 00 	lea    0x0(,%rax,8),%r13
ffffffff80212468:	00 
ffffffff80212469:	4c 39 24 c2          	cmp    %r12,(%rdx,%rax,8)
ffffffff8021246d:	75 e1                	jne    ffffffff80212450 <caml_ext_table_remove+0x20>
ffffffff8021246f:	4c 89 e7             	mov    %r12,%rdi
ffffffff80212472:	e8 d9 e4 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80212477:	89 da                	mov    %ebx,%edx
ffffffff80212479:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
ffffffff8021247d:	83 c3 01             	add    $0x1,%ebx
ffffffff80212480:	f7 d2                	not    %edx
ffffffff80212482:	03 55 00             	add    0x0(%rbp),%edx
ffffffff80212485:	48 63 d2             	movslq %edx,%rdx
ffffffff80212488:	4a 8d 74 2f 08       	lea    0x8(%rdi,%r13,1),%rsi
ffffffff8021248d:	4c 01 ef             	add    %r13,%rdi
ffffffff80212490:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff80212494:	e8 0c dc fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff80212499:	8b 45 00             	mov    0x0(%rbp),%eax
ffffffff8021249c:	83 e8 01             	sub    $0x1,%eax
ffffffff8021249f:	89 45 00             	mov    %eax,0x0(%rbp)
ffffffff802124a2:	39 c3                	cmp    %eax,%ebx
ffffffff802124a4:	7c b4                	jl     ffffffff8021245a <caml_ext_table_remove+0x2a>
ffffffff802124a6:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802124aa:	5b                   	pop    %rbx
ffffffff802124ab:	5d                   	pop    %rbp
ffffffff802124ac:	41 5c                	pop    %r12
ffffffff802124ae:	41 5d                	pop    %r13
ffffffff802124b0:	c3                   	retq   
ffffffff802124b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802124b8:	c3                   	retq   
ffffffff802124b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802124c0 <caml_ext_table_clear>:
ffffffff802124c0:	55                   	push   %rbp
ffffffff802124c1:	48 89 fd             	mov    %rdi,%rbp
ffffffff802124c4:	53                   	push   %rbx
ffffffff802124c5:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802124c9:	85 f6                	test   %esi,%esi
ffffffff802124cb:	74 23                	je     ffffffff802124f0 <caml_ext_table_clear+0x30>
ffffffff802124cd:	8b 07                	mov    (%rdi),%eax
ffffffff802124cf:	85 c0                	test   %eax,%eax
ffffffff802124d1:	7e 1d                	jle    ffffffff802124f0 <caml_ext_table_clear+0x30>
ffffffff802124d3:	31 db                	xor    %ebx,%ebx
ffffffff802124d5:	0f 1f 00             	nopl   (%rax)
ffffffff802124d8:	48 8b 45 08          	mov    0x8(%rbp),%rax
ffffffff802124dc:	48 63 d3             	movslq %ebx,%rdx
ffffffff802124df:	83 c3 01             	add    $0x1,%ebx
ffffffff802124e2:	48 8b 3c d0          	mov    (%rax,%rdx,8),%rdi
ffffffff802124e6:	e8 65 e4 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802124eb:	39 5d 00             	cmp    %ebx,0x0(%rbp)
ffffffff802124ee:	7f e8                	jg     ffffffff802124d8 <caml_ext_table_clear+0x18>
ffffffff802124f0:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
ffffffff802124f7:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802124fb:	5b                   	pop    %rbx
ffffffff802124fc:	5d                   	pop    %rbp
ffffffff802124fd:	c3                   	retq   
ffffffff802124fe:	66 90                	xchg   %ax,%ax

ffffffff80212500 <caml_ext_table_free>:
ffffffff80212500:	53                   	push   %rbx
ffffffff80212501:	48 89 fb             	mov    %rdi,%rbx
ffffffff80212504:	e8 b7 ff ff ff       	callq  ffffffff802124c0 <caml_ext_table_clear>
ffffffff80212509:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
ffffffff8021250d:	5b                   	pop    %rbx
ffffffff8021250e:	e9 3d e4 ff ff       	jmpq   ffffffff80210950 <caml_stat_free>
ffffffff80212513:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021251a:	00 00 00 00 
ffffffff8021251e:	66 90                	xchg   %ax,%ax

ffffffff80212520 <caml_runtime_warnings_active>:
ffffffff80212520:	41 54                	push   %r12
ffffffff80212522:	45 31 e4             	xor    %r12d,%r12d
ffffffff80212525:	48 83 3d a3 9a 02 00 	cmpq   $0x0,0x29aa3(%rip)        # ffffffff8023bfd0 <caml_runtime_warnings>
ffffffff8021252c:	00 
ffffffff8021252d:	74 10                	je     ffffffff8021253f <caml_runtime_warnings_active+0x1f>
ffffffff8021252f:	8b 05 cf 97 01 00    	mov    0x197cf(%rip),%eax        # ffffffff8022bd04 <caml_runtime_warnings_first>
ffffffff80212535:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff8021253b:	85 c0                	test   %eax,%eax
ffffffff8021253d:	75 09                	jne    ffffffff80212548 <caml_runtime_warnings_active+0x28>
ffffffff8021253f:	44 89 e0             	mov    %r12d,%eax
ffffffff80212542:	41 5c                	pop    %r12
ffffffff80212544:	c3                   	retq   
ffffffff80212545:	0f 1f 00             	nopl   (%rax)
ffffffff80212548:	48 8b 0d 99 5f 03 00 	mov    0x35f99(%rip),%rcx        # ffffffff802484e8 <stderr>
ffffffff8021254f:	ba 44 00 00 00       	mov    $0x44,%edx
ffffffff80212554:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80212559:	48 8d 3d a8 fa 00 00 	lea    0xfaa8(%rip),%rdi        # ffffffff80222008 <int32_length+0x528>
ffffffff80212560:	e8 47 db fe ff       	callq  ffffffff802000ac <fwrite>
ffffffff80212565:	44 89 e0             	mov    %r12d,%eax
ffffffff80212568:	41 5c                	pop    %r12
ffffffff8021256a:	c7 05 90 97 01 00 00 	movl   $0x0,0x19790(%rip)        # ffffffff8022bd04 <caml_runtime_warnings_first>
ffffffff80212571:	00 00 00 
ffffffff80212574:	c3                   	retq   
ffffffff80212575:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021257c:	00 00 00 
ffffffff8021257f:	90                   	nop

ffffffff80212580 <caml_static_alloc>:
ffffffff80212580:	48 d1 ff             	sar    %rdi
ffffffff80212583:	e9 a8 e3 ff ff       	jmpq   ffffffff80210930 <caml_stat_alloc>
ffffffff80212588:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021258f:	00 

ffffffff80212590 <caml_static_free>:
ffffffff80212590:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80212594:	e8 b7 e3 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80212599:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021259e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802125a2:	c3                   	retq   
ffffffff802125a3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802125aa:	00 00 00 00 
ffffffff802125ae:	66 90                	xchg   %ax,%ax

ffffffff802125b0 <caml_static_resize>:
ffffffff802125b0:	48 d1 fe             	sar    %rsi
ffffffff802125b3:	e9 58 e4 ff ff       	jmpq   ffffffff80210a10 <caml_stat_resize>
ffffffff802125b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802125bf:	00 

ffffffff802125c0 <caml_obj_is_block>:
ffffffff802125c0:	48 89 f8             	mov    %rdi,%rax
ffffffff802125c3:	ba 03 00 00 00       	mov    $0x3,%edx
ffffffff802125c8:	83 e0 01             	and    $0x1,%eax
ffffffff802125cb:	48 0f 44 c2          	cmove  %rdx,%rax
ffffffff802125cf:	c3                   	retq   

ffffffff802125d0 <caml_obj_tag>:
ffffffff802125d0:	b8 d1 07 00 00       	mov    $0x7d1,%eax
ffffffff802125d5:	40 f6 c7 01          	test   $0x1,%dil
ffffffff802125d9:	75 35                	jne    ffffffff80212610 <caml_obj_tag+0x40>
ffffffff802125db:	53                   	push   %rbx
ffffffff802125dc:	b8 d5 07 00 00       	mov    $0x7d5,%eax
ffffffff802125e1:	48 89 fb             	mov    %rdi,%rbx
ffffffff802125e4:	40 f6 c7 07          	test   $0x7,%dil
ffffffff802125e8:	75 1c                	jne    ffffffff80212606 <caml_obj_tag+0x36>
ffffffff802125ea:	e8 31 de ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802125ef:	41 89 c0             	mov    %eax,%r8d
ffffffff802125f2:	b8 d3 07 00 00       	mov    $0x7d3,%eax
ffffffff802125f7:	41 83 e0 07          	and    $0x7,%r8d
ffffffff802125fb:	74 09                	je     ffffffff80212606 <caml_obj_tag+0x36>
ffffffff802125fd:	0f b6 43 f8          	movzbl -0x8(%rbx),%eax
ffffffff80212601:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80212606:	5b                   	pop    %rbx
ffffffff80212607:	c3                   	retq   
ffffffff80212608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021260f:	00 
ffffffff80212610:	c3                   	retq   
ffffffff80212611:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80212618:	00 00 00 00 
ffffffff8021261c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80212620 <caml_obj_set_tag>:
ffffffff80212620:	48 d1 fe             	sar    %rsi
ffffffff80212623:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80212628:	40 88 77 f8          	mov    %sil,-0x8(%rdi)
ffffffff8021262c:	c3                   	retq   
ffffffff8021262d:	0f 1f 00             	nopl   (%rax)

ffffffff80212630 <caml_obj_make_forward>:
ffffffff80212630:	53                   	push   %rbx
ffffffff80212631:	48 89 fb             	mov    %rdi,%rbx
ffffffff80212634:	e8 27 e0 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff80212639:	c6 43 f8 fa          	movb   $0xfa,-0x8(%rbx)
ffffffff8021263d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80212642:	5b                   	pop    %rbx
ffffffff80212643:	c3                   	retq   
ffffffff80212644:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021264b:	00 00 00 00 
ffffffff8021264f:	90                   	nop

ffffffff80212650 <caml_obj_block>:
ffffffff80212650:	48 d1 ff             	sar    %rdi
ffffffff80212653:	48 d1 fe             	sar    %rsi
ffffffff80212656:	75 18                	jne    ffffffff80212670 <caml_obj_block+0x20>
ffffffff80212658:	48 8b 05 d1 3c 03 00 	mov    0x33cd1(%rip),%rax        # ffffffff80246330 <caml_atom_table>
ffffffff8021265f:	89 ff                	mov    %edi,%edi
ffffffff80212661:	48 8d 44 f8 08       	lea    0x8(%rax,%rdi,8),%rax
ffffffff80212666:	c3                   	retq   
ffffffff80212667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021266e:	00 00 
ffffffff80212670:	53                   	push   %rbx
ffffffff80212671:	48 89 f3             	mov    %rsi,%rbx
ffffffff80212674:	89 fe                	mov    %edi,%esi
ffffffff80212676:	48 89 df             	mov    %rbx,%rdi
ffffffff80212679:	e8 52 64 00 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff8021267e:	31 d2                	xor    %edx,%edx
ffffffff80212680:	48 89 c1             	mov    %rax,%rcx
ffffffff80212683:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80212688:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021268c:	48 c7 01 01 00 00 00 	movq   $0x1,(%rcx)
ffffffff80212693:	48 83 c1 08          	add    $0x8,%rcx
ffffffff80212697:	48 39 d3             	cmp    %rdx,%rbx
ffffffff8021269a:	75 ec                	jne    ffffffff80212688 <caml_obj_block+0x38>
ffffffff8021269c:	5b                   	pop    %rbx
ffffffff8021269d:	c3                   	retq   
ffffffff8021269e:	66 90                	xchg   %ax,%ax

ffffffff802126a0 <caml_obj_with_tag>:
ffffffff802126a0:	41 54                	push   %r12
ffffffff802126a2:	55                   	push   %rbp
ffffffff802126a3:	53                   	push   %rbx
ffffffff802126a4:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
ffffffff802126ab:	4c 8b 25 c6 19 03 00 	mov    0x319c6(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff802126b2:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff802126b6:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff802126bb:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff802126c0:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff802126c7:	00 00 
ffffffff802126c9:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
ffffffff802126d0:	00 
ffffffff802126d1:	31 c9                	xor    %ecx,%ecx
ffffffff802126d3:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
ffffffff802126d8:	48 89 e2             	mov    %rsp,%rdx
ffffffff802126db:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
ffffffff802126e0:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff802126e5:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
ffffffff802126ea:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
ffffffff802126ef:	48 89 15 82 19 03 00 	mov    %rdx,0x31982(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802126f6:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff802126fb:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
ffffffff80212700:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff80212707:	00 00 
ffffffff80212709:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
ffffffff80212710:	00 00 
ffffffff80212712:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80212719:	00 00 
ffffffff8021271b:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff80212722:	00 00 
ffffffff80212724:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff8021272b:	00 00 
ffffffff8021272d:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
ffffffff80212732:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
ffffffff80212736:	48 89 fe             	mov    %rdi,%rsi
ffffffff80212739:	48 d1 fe             	sar    %rsi
ffffffff8021273c:	48 89 d3             	mov    %rdx,%rbx
ffffffff8021273f:	48 c1 eb 0a          	shr    $0xa,%rbx
ffffffff80212743:	0f 84 9f 00 00 00    	je     ffffffff802127e8 <caml_obj_with_tag+0x148>
ffffffff80212749:	81 fe fa 00 00 00    	cmp    $0xfa,%esi
ffffffff8021274f:	77 47                	ja     ffffffff80212798 <caml_obj_with_tag+0xf8>
ffffffff80212751:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
ffffffff80212758:	0f 87 a2 00 00 00    	ja     ffffffff80212800 <caml_obj_with_tag+0x160>
ffffffff8021275e:	31 d2                	xor    %edx,%edx
ffffffff80212760:	48 89 df             	mov    %rbx,%rdi
ffffffff80212763:	48 c1 e3 03          	shl    $0x3,%rbx
ffffffff80212767:	e8 14 65 00 00       	callq  ffffffff80218c80 <caml_alloc_small_with_my_or_given_profinfo>
ffffffff8021276c:	31 d2                	xor    %edx,%edx
ffffffff8021276e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80212773:	eb 08                	jmp    ffffffff8021277d <caml_obj_with_tag+0xdd>
ffffffff80212775:	0f 1f 00             	nopl   (%rax)
ffffffff80212778:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021277d:	48 8b 0c 24          	mov    (%rsp),%rcx
ffffffff80212781:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
ffffffff80212785:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
ffffffff80212789:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8021278d:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80212790:	75 e6                	jne    ffffffff80212778 <caml_obj_with_tag+0xd8>
ffffffff80212792:	eb 25                	jmp    ffffffff802127b9 <caml_obj_with_tag+0x119>
ffffffff80212794:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80212798:	48 89 df             	mov    %rbx,%rdi
ffffffff8021279b:	e8 30 63 00 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff802127a0:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff802127a4:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
ffffffff802127ab:	00 
ffffffff802127ac:	48 89 c7             	mov    %rax,%rdi
ffffffff802127af:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff802127b4:	e8 ea d8 fe ff       	callq  ffffffff802000a3 <memcpy>
ffffffff802127b9:	4c 89 25 b8 18 03 00 	mov    %r12,0x318b8(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802127c0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff802127c5:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
ffffffff802127cc:	00 
ffffffff802127cd:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
ffffffff802127d4:	00 00 
ffffffff802127d6:	75 6c                	jne    ffffffff80212844 <caml_obj_with_tag+0x1a4>
ffffffff802127d8:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
ffffffff802127df:	5b                   	pop    %rbx
ffffffff802127e0:	5d                   	pop    %rbp
ffffffff802127e1:	41 5c                	pop    %r12
ffffffff802127e3:	c3                   	retq   
ffffffff802127e4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802127e8:	48 8b 05 41 3b 03 00 	mov    0x33b41(%rip),%rax        # ffffffff80246330 <caml_atom_table>
ffffffff802127ef:	89 f6                	mov    %esi,%esi
ffffffff802127f1:	4c 89 25 80 18 03 00 	mov    %r12,0x31880(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802127f8:	48 8d 44 f0 08       	lea    0x8(%rax,%rsi,8),%rax
ffffffff802127fd:	eb c6                	jmp    ffffffff802127c5 <caml_obj_with_tag+0x125>
ffffffff802127ff:	90                   	nop
ffffffff80212800:	48 89 df             	mov    %rbx,%rdi
ffffffff80212803:	48 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%rbp
ffffffff8021280a:	00 
ffffffff8021280b:	31 db                	xor    %ebx,%ebx
ffffffff8021280d:	e8 9e e7 ff ff       	callq  ffffffff80210fb0 <caml_alloc_shr>
ffffffff80212812:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80212817:	eb 0c                	jmp    ffffffff80212825 <caml_obj_with_tag+0x185>
ffffffff80212819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80212820:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80212825:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff80212829:	48 8d 3c 18          	lea    (%rax,%rbx,1),%rdi
ffffffff8021282d:	48 8b 34 1a          	mov    (%rdx,%rbx,1),%rsi
ffffffff80212831:	48 83 c3 08          	add    $0x8,%rbx
ffffffff80212835:	e8 b6 dd ff ff       	callq  ffffffff802105f0 <caml_initialize>
ffffffff8021283a:	48 39 dd             	cmp    %rbx,%rbp
ffffffff8021283d:	75 e1                	jne    ffffffff80212820 <caml_obj_with_tag+0x180>
ffffffff8021283f:	e9 75 ff ff ff       	jmpq   ffffffff802127b9 <caml_obj_with_tag+0x119>
ffffffff80212844:	e8 57 d8 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80212849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80212850 <caml_obj_dup>:
ffffffff80212850:	0f b6 47 f8          	movzbl -0x8(%rdi),%eax
ffffffff80212854:	48 89 fe             	mov    %rdi,%rsi
ffffffff80212857:	48 8d 7c 00 01       	lea    0x1(%rax,%rax,1),%rdi
ffffffff8021285c:	e9 3f fe ff ff       	jmpq   ffffffff802126a0 <caml_obj_with_tag>
ffffffff80212861:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80212868:	00 00 00 00 
ffffffff8021286c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80212870 <caml_obj_truncate>:
ffffffff80212870:	41 57                	push   %r15
ffffffff80212872:	41 56                	push   %r14
ffffffff80212874:	41 55                	push   %r13
ffffffff80212876:	41 54                	push   %r12
ffffffff80212878:	55                   	push   %rbp
ffffffff80212879:	53                   	push   %rbx
ffffffff8021287a:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8021287e:	48 8b 6f f8          	mov    -0x8(%rdi),%rbp
ffffffff80212882:	48 89 e8             	mov    %rbp,%rax
ffffffff80212885:	44 0f b6 ed          	movzbl %bpl,%r13d
ffffffff80212889:	48 c1 ed 0a          	shr    $0xa,%rbp
ffffffff8021288d:	25 00 03 00 00       	and    $0x300,%eax
ffffffff80212892:	48 d1 fe             	sar    %rsi
ffffffff80212895:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8021289a:	74 7a                	je     ffffffff80212916 <caml_obj_truncate+0xa6>
ffffffff8021289c:	48 89 f3             	mov    %rsi,%rbx
ffffffff8021289f:	48 39 ee             	cmp    %rbp,%rsi
ffffffff802128a2:	77 72                	ja     ffffffff80212916 <caml_obj_truncate+0xa6>
ffffffff802128a4:	74 5c                	je     ffffffff80212902 <caml_obj_truncate+0x92>
ffffffff802128a6:	49 89 fc             	mov    %rdi,%r12
ffffffff802128a9:	41 81 fd fa 00 00 00 	cmp    $0xfa,%r13d
ffffffff802128b0:	77 24                	ja     ffffffff802128d6 <caml_obj_truncate+0x66>
ffffffff802128b2:	48 39 ee             	cmp    %rbp,%rsi
ffffffff802128b5:	73 1f                	jae    ffffffff802128d6 <caml_obj_truncate+0x66>
ffffffff802128b7:	4c 8d 3c f7          	lea    (%rdi,%rsi,8),%r15
ffffffff802128bb:	4c 8d 34 ef          	lea    (%rdi,%rbp,8),%r14
ffffffff802128bf:	90                   	nop
ffffffff802128c0:	4c 89 ff             	mov    %r15,%rdi
ffffffff802128c3:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff802128c8:	49 83 c7 08          	add    $0x8,%r15
ffffffff802128cc:	e8 8f dd ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff802128d1:	4d 39 f7             	cmp    %r14,%r15
ffffffff802128d4:	75 ea                	jne    ffffffff802128c0 <caml_obj_truncate+0x50>
ffffffff802128d6:	48 89 d8             	mov    %rbx,%rax
ffffffff802128d9:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
ffffffff802128de:	48 f7 d0             	not    %rax
ffffffff802128e1:	48 01 c5             	add    %rax,%rbp
ffffffff802128e4:	48 c1 e5 0a          	shl    $0xa,%rbp
ffffffff802128e8:	48 81 c5 fb 03 00 00 	add    $0x3fb,%rbp
ffffffff802128ef:	49 89 2c dc          	mov    %rbp,(%r12,%rbx,8)
ffffffff802128f3:	48 c1 e3 0a          	shl    $0xa,%rbx
ffffffff802128f7:	49 01 df             	add    %rbx,%r15
ffffffff802128fa:	4d 01 fd             	add    %r15,%r13
ffffffff802128fd:	4d 89 6c 24 f8       	mov    %r13,-0x8(%r12)
ffffffff80212902:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80212906:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021290b:	5b                   	pop    %rbx
ffffffff8021290c:	5d                   	pop    %rbp
ffffffff8021290d:	41 5c                	pop    %r12
ffffffff8021290f:	41 5d                	pop    %r13
ffffffff80212911:	41 5e                	pop    %r14
ffffffff80212913:	41 5f                	pop    %r15
ffffffff80212915:	c3                   	retq   
ffffffff80212916:	48 8d 3d 30 f7 00 00 	lea    0xf730(%rip),%rdi        # ffffffff8022204d <int32_length+0x56d>
ffffffff8021291d:	e8 5e 4b ff ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff80212922:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80212929:	00 00 00 00 
ffffffff8021292d:	0f 1f 00             	nopl   (%rax)

ffffffff80212930 <caml_obj_add_offset>:
ffffffff80212930:	48 63 46 08          	movslq 0x8(%rsi),%rax
ffffffff80212934:	48 01 f8             	add    %rdi,%rax
ffffffff80212937:	c3                   	retq   
ffffffff80212938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021293f:	00 

ffffffff80212940 <caml_lazy_follow_forward>:
ffffffff80212940:	53                   	push   %rbx
ffffffff80212941:	48 89 fb             	mov    %rdi,%rbx
ffffffff80212944:	83 e7 01             	and    $0x1,%edi
ffffffff80212947:	74 07                	je     ffffffff80212950 <caml_lazy_follow_forward+0x10>
ffffffff80212949:	48 89 d8             	mov    %rbx,%rax
ffffffff8021294c:	5b                   	pop    %rbx
ffffffff8021294d:	c3                   	retq   
ffffffff8021294e:	66 90                	xchg   %ax,%ax
ffffffff80212950:	48 89 df             	mov    %rbx,%rdi
ffffffff80212953:	e8 c8 da ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80212958:	a8 07                	test   $0x7,%al
ffffffff8021295a:	74 ed                	je     ffffffff80212949 <caml_lazy_follow_forward+0x9>
ffffffff8021295c:	80 7b f8 fa          	cmpb   $0xfa,-0x8(%rbx)
ffffffff80212960:	75 e7                	jne    ffffffff80212949 <caml_lazy_follow_forward+0x9>
ffffffff80212962:	48 8b 03             	mov    (%rbx),%rax
ffffffff80212965:	5b                   	pop    %rbx
ffffffff80212966:	c3                   	retq   
ffffffff80212967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021296e:	00 00 

ffffffff80212970 <caml_lazy_make_forward>:
ffffffff80212970:	53                   	push   %rbx
ffffffff80212971:	be fa 00 00 00       	mov    $0xfa,%esi
ffffffff80212976:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
ffffffff8021297d:	48 8b 1d f4 16 03 00 	mov    0x316f4(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff80212984:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80212989:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8021298e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80212995:	00 00 
ffffffff80212997:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff8021299e:	00 
ffffffff8021299f:	31 c0                	xor    %eax,%eax
ffffffff802129a1:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff802129a6:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff802129ab:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff802129b0:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff802129b5:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff802129ba:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff802129bf:	48 89 05 b2 16 03 00 	mov    %rax,0x316b2(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802129c6:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff802129cb:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff802129d2:	00 00 
ffffffff802129d4:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff802129db:	00 00 
ffffffff802129dd:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff802129e4:	00 00 
ffffffff802129e6:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff802129ed:	00 00 
ffffffff802129ef:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff802129f6:	00 00 
ffffffff802129f8:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff802129fd:	e8 fe 61 00 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff80212a02:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80212a07:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80212a0c:	48 89 10             	mov    %rdx,(%rax)
ffffffff80212a0f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80212a14:	48 89 1d 5d 16 03 00 	mov    %rbx,0x3165d(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80212a1b:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
ffffffff80212a22:	00 
ffffffff80212a23:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80212a2a:	00 00 
ffffffff80212a2c:	75 09                	jne    ffffffff80212a37 <caml_lazy_make_forward+0xc7>
ffffffff80212a2e:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
ffffffff80212a35:	5b                   	pop    %rbx
ffffffff80212a36:	c3                   	retq   
ffffffff80212a37:	e8 64 d6 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80212a3c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80212a40 <caml_get_public_method>:
ffffffff80212a40:	4c 8b 07             	mov    (%rdi),%r8
ffffffff80212a43:	ba 03 00 00 00       	mov    $0x3,%edx
ffffffff80212a48:	41 8b 08             	mov    (%r8),%ecx
ffffffff80212a4b:	eb 17                	jmp    ffffffff80212a64 <caml_get_public_method+0x24>
ffffffff80212a4d:	0f 1f 00             	nopl   (%rax)
ffffffff80212a50:	8d 04 11             	lea    (%rcx,%rdx,1),%eax
ffffffff80212a53:	d1 f8                	sar    %eax
ffffffff80212a55:	83 c8 01             	or     $0x1,%eax
ffffffff80212a58:	48 63 f8             	movslq %eax,%rdi
ffffffff80212a5b:	49 39 34 f8          	cmp    %rsi,(%r8,%rdi,8)
ffffffff80212a5f:	7f 17                	jg     ffffffff80212a78 <caml_get_public_method+0x38>
ffffffff80212a61:	48 63 d0             	movslq %eax,%rdx
ffffffff80212a64:	39 d1                	cmp    %edx,%ecx
ffffffff80212a66:	7f e8                	jg     ffffffff80212a50 <caml_get_public_method+0x10>
ffffffff80212a68:	49 8d 14 d0          	lea    (%r8,%rdx,8),%rdx
ffffffff80212a6c:	31 c0                	xor    %eax,%eax
ffffffff80212a6e:	48 39 32             	cmp    %rsi,(%rdx)
ffffffff80212a71:	74 0d                	je     ffffffff80212a80 <caml_get_public_method+0x40>
ffffffff80212a73:	c3                   	retq   
ffffffff80212a74:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80212a78:	8d 48 fe             	lea    -0x2(%rax),%ecx
ffffffff80212a7b:	eb e7                	jmp    ffffffff80212a64 <caml_get_public_method+0x24>
ffffffff80212a7d:	0f 1f 00             	nopl   (%rax)
ffffffff80212a80:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff80212a84:	c3                   	retq   
ffffffff80212a85:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80212a8c:	00 00 00 00 

ffffffff80212a90 <caml_set_oo_id>:
ffffffff80212a90:	48 8b 15 71 92 01 00 	mov    0x19271(%rip),%rdx        # ffffffff8022bd08 <oo_last_id>
ffffffff80212a97:	48 89 f8             	mov    %rdi,%rax
ffffffff80212a9a:	48 89 57 08          	mov    %rdx,0x8(%rdi)
ffffffff80212a9e:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80212aa2:	48 89 15 5f 92 01 00 	mov    %rdx,0x1925f(%rip)        # ffffffff8022bd08 <oo_last_id>
ffffffff80212aa9:	c3                   	retq   
ffffffff80212aaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80212ab0 <caml_fresh_oo_id>:
ffffffff80212ab0:	48 8b 05 51 92 01 00 	mov    0x19251(%rip),%rax        # ffffffff8022bd08 <oo_last_id>
ffffffff80212ab7:	48 8d 50 02          	lea    0x2(%rax),%rdx
ffffffff80212abb:	48 89 15 46 92 01 00 	mov    %rdx,0x19246(%rip)        # ffffffff8022bd08 <oo_last_id>
ffffffff80212ac2:	c3                   	retq   
ffffffff80212ac3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80212aca:	00 00 00 00 
ffffffff80212ace:	66 90                	xchg   %ax,%ax

ffffffff80212ad0 <caml_int_as_pointer>:
ffffffff80212ad0:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
ffffffff80212ad4:	c3                   	retq   
ffffffff80212ad5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80212adc:	00 00 00 00 

ffffffff80212ae0 <caml_obj_reachable_words>:
ffffffff80212ae0:	41 57                	push   %r15
ffffffff80212ae2:	48 89 f8             	mov    %rdi,%rax
ffffffff80212ae5:	41 56                	push   %r14
ffffffff80212ae7:	41 55                	push   %r13
ffffffff80212ae9:	41 54                	push   %r12
ffffffff80212aeb:	55                   	push   %rbp
ffffffff80212aec:	53                   	push   %rbx
ffffffff80212aed:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80212af1:	83 e0 01             	and    $0x1,%eax
ffffffff80212af4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80212af9:	74 15                	je     ffffffff80212b10 <caml_obj_reachable_words+0x30>
ffffffff80212afb:	48 83 c4 38          	add    $0x38,%rsp
ffffffff80212aff:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80212b04:	5b                   	pop    %rbx
ffffffff80212b05:	5d                   	pop    %rbp
ffffffff80212b06:	41 5c                	pop    %r12
ffffffff80212b08:	41 5d                	pop    %r13
ffffffff80212b0a:	41 5e                	pop    %r14
ffffffff80212b0c:	41 5f                	pop    %r15
ffffffff80212b0e:	c3                   	retq   
ffffffff80212b0f:	90                   	nop
ffffffff80212b10:	48 89 fb             	mov    %rdi,%rbx
ffffffff80212b13:	e8 08 d9 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80212b18:	a8 03                	test   $0x3,%al
ffffffff80212b1a:	74 df                	je     ffffffff80212afb <caml_obj_reachable_words+0x1b>
ffffffff80212b1c:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff80212b20:	48 8d 4b f8          	lea    -0x8(%rbx),%rcx
ffffffff80212b24:	3c f9                	cmp    $0xf9,%al
ffffffff80212b26:	75 13                	jne    ffffffff80212b3b <caml_obj_reachable_words+0x5b>
ffffffff80212b28:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80212b2c:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80212b30:	48 29 c3             	sub    %rax,%rbx
ffffffff80212b33:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff80212b37:	48 8d 4b f8          	lea    -0x8(%rbx),%rcx
ffffffff80212b3b:	48 89 c2             	mov    %rax,%rdx
ffffffff80212b3e:	80 e4 fc             	and    $0xfc,%ah
ffffffff80212b41:	48 c1 ea 08          	shr    $0x8,%rdx
ffffffff80212b45:	80 cc 02             	or     $0x2,%ah
ffffffff80212b48:	83 e2 03             	and    $0x3,%edx
ffffffff80212b4b:	48 09 d3             	or     %rdx,%rbx
ffffffff80212b4e:	48 89 1d d3 94 02 00 	mov    %rbx,0x294d3(%rip)        # ffffffff8023c028 <first_chunk.3553+0x8>
ffffffff80212b55:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff80212b5a:	48 89 01             	mov    %rax,(%rcx)
ffffffff80212b5d:	48 8d 05 bc 94 02 00 	lea    0x294bc(%rip),%rax        # ffffffff8023c020 <first_chunk.3553>
ffffffff80212b64:	48 89 c7             	mov    %rax,%rdi
ffffffff80212b67:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80212b6c:	31 c0                	xor    %eax,%eax
ffffffff80212b6e:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff80212b73:	eb 34                	jmp    ffffffff80212ba9 <caml_obj_reachable_words+0xc9>
ffffffff80212b75:	0f 1f 00             	nopl   (%rax)
ffffffff80212b78:	44 39 f3             	cmp    %r14d,%ebx
ffffffff80212b7b:	75 10                	jne    ffffffff80212b8d <caml_obj_reachable_words+0xad>
ffffffff80212b7d:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80212b82:	48 39 74 24 18       	cmp    %rsi,0x18(%rsp)
ffffffff80212b87:	0f 84 3b 01 00 00    	je     ffffffff80212cc8 <caml_obj_reachable_words+0x1e8>
ffffffff80212b8d:	41 81 fe 00 10 00 00 	cmp    $0x1000,%r14d
ffffffff80212b94:	75 10                	jne    ffffffff80212ba6 <caml_obj_reachable_words+0xc6>
ffffffff80212b96:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80212b9b:	45 31 f6             	xor    %r14d,%r14d
ffffffff80212b9e:	48 8b 00             	mov    (%rax),%rax
ffffffff80212ba1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80212ba6:	49 63 c6             	movslq %r14d,%rax
ffffffff80212ba9:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
ffffffff80212bae:	44 8d 70 01          	lea    0x1(%rax),%r14d
ffffffff80212bb2:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
ffffffff80212bb7:	48 8b 4c c2 08       	mov    0x8(%rdx,%rax,8),%rcx
ffffffff80212bbc:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
ffffffff80212bc0:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
ffffffff80212bc4:	49 89 cc             	mov    %rcx,%r12
ffffffff80212bc7:	48 89 c5             	mov    %rax,%rbp
ffffffff80212bca:	48 c1 ed 0a          	shr    $0xa,%rbp
ffffffff80212bce:	48 8d 54 35 01       	lea    0x1(%rbp,%rsi,1),%rdx
ffffffff80212bd3:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff80212bd8:	3c fa                	cmp    $0xfa,%al
ffffffff80212bda:	77 9c                	ja     ffffffff80212b78 <caml_obj_reachable_words+0x98>
ffffffff80212bdc:	48 85 ed             	test   %rbp,%rbp
ffffffff80212bdf:	74 97                	je     ffffffff80212b78 <caml_obj_reachable_words+0x98>
ffffffff80212be1:	45 31 ed             	xor    %r13d,%r13d
ffffffff80212be4:	31 c0                	xor    %eax,%eax
ffffffff80212be6:	eb 18                	jmp    ffffffff80212c00 <caml_obj_reachable_words+0x120>
ffffffff80212be8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80212bef:	00 
ffffffff80212bf0:	41 83 c5 01          	add    $0x1,%r13d
ffffffff80212bf4:	49 63 c5             	movslq %r13d,%rax
ffffffff80212bf7:	48 39 e8             	cmp    %rbp,%rax
ffffffff80212bfa:	0f 83 78 ff ff ff    	jae    ffffffff80212b78 <caml_obj_reachable_words+0x98>
ffffffff80212c00:	4d 8b 3c c4          	mov    (%r12,%rax,8),%r15
ffffffff80212c04:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80212c08:	75 e6                	jne    ffffffff80212bf0 <caml_obj_reachable_words+0x110>
ffffffff80212c0a:	4c 89 ff             	mov    %r15,%rdi
ffffffff80212c0d:	e8 0e d8 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80212c12:	a8 03                	test   $0x3,%al
ffffffff80212c14:	74 da                	je     ffffffff80212bf0 <caml_obj_reachable_words+0x110>
ffffffff80212c16:	4d 8b 47 f8          	mov    -0x8(%r15),%r8
ffffffff80212c1a:	4d 8d 57 f8          	lea    -0x8(%r15),%r10
ffffffff80212c1e:	41 80 f8 f9          	cmp    $0xf9,%r8b
ffffffff80212c22:	75 13                	jne    ffffffff80212c37 <caml_obj_reachable_words+0x157>
ffffffff80212c24:	49 c1 e8 0a          	shr    $0xa,%r8
ffffffff80212c28:	49 c1 e0 03          	shl    $0x3,%r8
ffffffff80212c2c:	4d 29 c7             	sub    %r8,%r15
ffffffff80212c2f:	4d 8b 47 f8          	mov    -0x8(%r15),%r8
ffffffff80212c33:	4d 8d 57 f8          	lea    -0x8(%r15),%r10
ffffffff80212c37:	4c 89 c0             	mov    %r8,%rax
ffffffff80212c3a:	25 00 03 00 00       	and    $0x300,%eax
ffffffff80212c3f:	48 3d 00 02 00 00    	cmp    $0x200,%rax
ffffffff80212c45:	74 a9                	je     ffffffff80212bf0 <caml_obj_reachable_words+0x110>
ffffffff80212c47:	81 fb 00 10 00 00    	cmp    $0x1000,%ebx
ffffffff80212c4d:	74 39                	je     ffffffff80212c88 <caml_obj_reachable_words+0x1a8>
ffffffff80212c4f:	48 63 fb             	movslq %ebx,%rdi
ffffffff80212c52:	83 c3 01             	add    $0x1,%ebx
ffffffff80212c55:	4c 89 c0             	mov    %r8,%rax
ffffffff80212c58:	49 81 e0 ff fc ff ff 	and    $0xfffffffffffffcff,%r8
ffffffff80212c5f:	48 c1 e8 08          	shr    $0x8,%rax
ffffffff80212c63:	49 81 c8 00 02 00 00 	or     $0x200,%r8
ffffffff80212c6a:	83 e0 03             	and    $0x3,%eax
ffffffff80212c6d:	49 09 c7             	or     %rax,%r15
ffffffff80212c70:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80212c75:	4c 89 7c f8 08       	mov    %r15,0x8(%rax,%rdi,8)
ffffffff80212c7a:	4d 89 02             	mov    %r8,(%r10)
ffffffff80212c7d:	e9 6e ff ff ff       	jmpq   ffffffff80212bf0 <caml_obj_reachable_words+0x110>
ffffffff80212c82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80212c88:	bf 08 80 00 00       	mov    $0x8008,%edi
ffffffff80212c8d:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
ffffffff80212c92:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
ffffffff80212c97:	e8 e9 d3 fe ff       	callq  ffffffff80200085 <malloc>
ffffffff80212c9c:	48 85 c0             	test   %rax,%rax
ffffffff80212c9f:	0f 84 f2 00 00 00    	je     ffffffff80212d97 <caml_obj_reachable_words+0x2b7>
ffffffff80212ca5:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
ffffffff80212caa:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
ffffffff80212caf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80212cb4:	31 ff                	xor    %edi,%edi
ffffffff80212cb6:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
ffffffff80212cbb:	48 89 03             	mov    %rax,(%rbx)
ffffffff80212cbe:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff80212cc3:	eb 90                	jmp    ffffffff80212c55 <caml_obj_reachable_words+0x175>
ffffffff80212cc5:	0f 1f 00             	nopl   (%rax)
ffffffff80212cc8:	85 db                	test   %ebx,%ebx
ffffffff80212cca:	75 0e                	jne    ffffffff80212cda <caml_obj_reachable_words+0x1fa>
ffffffff80212ccc:	48 8d 35 4d 93 02 00 	lea    0x2934d(%rip),%rsi        # ffffffff8023c020 <first_chunk.3553>
ffffffff80212cd3:	48 39 74 24 18       	cmp    %rsi,0x18(%rsp)
ffffffff80212cd8:	74 5b                	je     ffffffff80212d35 <caml_obj_reachable_words+0x255>
ffffffff80212cda:	31 c9                	xor    %ecx,%ecx
ffffffff80212cdc:	48 8d 3d 3d 93 02 00 	lea    0x2933d(%rip),%rdi        # ffffffff8023c020 <first_chunk.3553>
ffffffff80212ce3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80212ce8:	81 f9 00 10 00 00    	cmp    $0x1000,%ecx
ffffffff80212cee:	74 70                	je     ffffffff80212d60 <caml_obj_reachable_words+0x280>
ffffffff80212cf0:	48 63 c1             	movslq %ecx,%rax
ffffffff80212cf3:	83 c1 01             	add    $0x1,%ecx
ffffffff80212cf6:	48 8b 44 c7 08       	mov    0x8(%rdi,%rax,8),%rax
ffffffff80212cfb:	48 89 c6             	mov    %rax,%rsi
ffffffff80212cfe:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff80212d02:	48 83 e6 fc          	and    $0xfffffffffffffffc,%rsi
ffffffff80212d06:	25 00 03 00 00       	and    $0x300,%eax
ffffffff80212d0b:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
ffffffff80212d0f:	80 e6 fc             	and    $0xfc,%dh
ffffffff80212d12:	48 09 d0             	or     %rdx,%rax
ffffffff80212d15:	48 89 46 f8          	mov    %rax,-0x8(%rsi)
ffffffff80212d19:	39 cb                	cmp    %ecx,%ebx
ffffffff80212d1b:	75 cb                	jne    ffffffff80212ce8 <caml_obj_reachable_words+0x208>
ffffffff80212d1d:	48 3b 7c 24 18       	cmp    0x18(%rsp),%rdi
ffffffff80212d22:	75 c4                	jne    ffffffff80212ce8 <caml_obj_reachable_words+0x208>
ffffffff80212d24:	48 8d 05 f5 92 02 00 	lea    0x292f5(%rip),%rax        # ffffffff8023c020 <first_chunk.3553>
ffffffff80212d2b:	48 39 c7             	cmp    %rax,%rdi
ffffffff80212d2e:	74 05                	je     ffffffff80212d35 <caml_obj_reachable_words+0x255>
ffffffff80212d30:	e8 6a d3 fe ff       	callq  ffffffff8020009f <free>
ffffffff80212d35:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
ffffffff80212d3b:	78 68                	js     ffffffff80212da5 <caml_obj_reachable_words+0x2c5>
ffffffff80212d3d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80212d42:	48 83 c4 38          	add    $0x38,%rsp
ffffffff80212d46:	5b                   	pop    %rbx
ffffffff80212d47:	5d                   	pop    %rbp
ffffffff80212d48:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80212d4d:	41 5c                	pop    %r12
ffffffff80212d4f:	41 5d                	pop    %r13
ffffffff80212d51:	41 5e                	pop    %r14
ffffffff80212d53:	41 5f                	pop    %r15
ffffffff80212d55:	c3                   	retq   
ffffffff80212d56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80212d5d:	00 00 00 
ffffffff80212d60:	48 8d 05 b9 92 02 00 	lea    0x292b9(%rip),%rax        # ffffffff8023c020 <first_chunk.3553>
ffffffff80212d67:	4c 8b 27             	mov    (%rdi),%r12
ffffffff80212d6a:	48 39 c7             	cmp    %rax,%rdi
ffffffff80212d6d:	74 19                	je     ffffffff80212d88 <caml_obj_reachable_words+0x2a8>
ffffffff80212d6f:	e8 2b d3 fe ff       	callq  ffffffff8020009f <free>
ffffffff80212d74:	4c 89 e7             	mov    %r12,%rdi
ffffffff80212d77:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80212d7c:	31 c0                	xor    %eax,%eax
ffffffff80212d7e:	e9 73 ff ff ff       	jmpq   ffffffff80212cf6 <caml_obj_reachable_words+0x216>
ffffffff80212d83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80212d88:	4c 89 e7             	mov    %r12,%rdi
ffffffff80212d8b:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80212d90:	31 c0                	xor    %eax,%eax
ffffffff80212d92:	e9 5f ff ff ff       	jmpq   ffffffff80212cf6 <caml_obj_reachable_words+0x216>
ffffffff80212d97:	48 c7 44 24 08 ff ff 	movq   $0xffffffffffffffff,0x8(%rsp)
ffffffff80212d9e:	ff ff 
ffffffff80212da0:	e9 35 ff ff ff       	jmpq   ffffffff80212cda <caml_obj_reachable_words+0x1fa>
ffffffff80212da5:	e8 16 47 ff ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff80212daa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80212db0 <add_string.isra.0>:
ffffffff80212db0:	41 55                	push   %r13
ffffffff80212db2:	49 89 d5             	mov    %rdx,%r13
ffffffff80212db5:	41 54                	push   %r12
ffffffff80212db7:	49 89 f4             	mov    %rsi,%r12
ffffffff80212dba:	55                   	push   %rbp
ffffffff80212dbb:	48 89 fd             	mov    %rdi,%rbp
ffffffff80212dbe:	48 89 d7             	mov    %rdx,%rdi
ffffffff80212dc1:	53                   	push   %rbx
ffffffff80212dc2:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80212dc6:	e8 dd d2 fe ff       	callq  ffffffff802000a8 <strlen>
ffffffff80212dcb:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
ffffffff80212dcf:	48 89 c3             	mov    %rax,%rbx
ffffffff80212dd2:	48 8d 14 07          	lea    (%rdi,%rax,1),%rdx
ffffffff80212dd6:	4c 89 e0             	mov    %r12,%rax
ffffffff80212dd9:	48 29 f8             	sub    %rdi,%rax
ffffffff80212ddc:	49 39 d4             	cmp    %rdx,%r12
ffffffff80212ddf:	48 0f 42 d8          	cmovb  %rax,%rbx
ffffffff80212de3:	48 85 db             	test   %rbx,%rbx
ffffffff80212de6:	75 18                	jne    ffffffff80212e00 <add_string.isra.0+0x50>
ffffffff80212de8:	48 01 df             	add    %rbx,%rdi
ffffffff80212deb:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
ffffffff80212def:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80212df3:	5b                   	pop    %rbx
ffffffff80212df4:	5d                   	pop    %rbp
ffffffff80212df5:	41 5c                	pop    %r12
ffffffff80212df7:	41 5d                	pop    %r13
ffffffff80212df9:	c3                   	retq   
ffffffff80212dfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80212e00:	48 89 da             	mov    %rbx,%rdx
ffffffff80212e03:	4c 89 ee             	mov    %r13,%rsi
ffffffff80212e06:	e8 9a d2 fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff80212e0b:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
ffffffff80212e0f:	eb d7                	jmp    ffffffff80212de8 <add_string.isra.0+0x38>
ffffffff80212e11:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80212e18:	00 00 00 00 
ffffffff80212e1c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80212e20 <caml_format_exception>:
ffffffff80212e20:	41 57                	push   %r15
ffffffff80212e22:	41 56                	push   %r14
ffffffff80212e24:	41 55                	push   %r13
ffffffff80212e26:	41 54                	push   %r12
ffffffff80212e28:	55                   	push   %rbp
ffffffff80212e29:	53                   	push   %rbx
ffffffff80212e2a:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
ffffffff80212e31:	48 8b 17             	mov    (%rdi),%rdx
ffffffff80212e34:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80212e3b:	00 00 
ffffffff80212e3d:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
ffffffff80212e44:	00 
ffffffff80212e45:	31 c0                	xor    %eax,%eax
ffffffff80212e47:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80212e4c:	80 7f f8 00          	cmpb   $0x0,-0x8(%rdi)
ffffffff80212e50:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
ffffffff80212e55:	48 8d b4 24 1f 01 00 	lea    0x11f(%rsp),%rsi
ffffffff80212e5c:	00 
ffffffff80212e5d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80212e62:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80212e67:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
ffffffff80212e6c:	0f 85 ee 00 00 00    	jne    ffffffff80212f60 <caml_format_exception+0x140>
ffffffff80212e72:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80212e75:	48 89 fb             	mov    %rdi,%rbx
ffffffff80212e78:	4c 8d 6f f8          	lea    -0x8(%rdi),%r13
ffffffff80212e7c:	48 89 ef             	mov    %rbp,%rdi
ffffffff80212e7f:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff80212e85:	e8 26 ff ff ff       	callq  ffffffff80212db0 <add_string.isra.0>
ffffffff80212e8a:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff80212e8e:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80212e92:	48 83 f8 02          	cmp    $0x2,%rax
ffffffff80212e96:	0f 84 c4 01 00 00    	je     ffffffff80213060 <caml_format_exception+0x240>
ffffffff80212e9c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80212ea1:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
ffffffff80212ea6:	0f 82 24 01 00 00    	jb     ffffffff80212fd0 <caml_format_exception+0x1b0>
ffffffff80212eac:	49 8b 55 00          	mov    0x0(%r13),%rdx
ffffffff80212eb0:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80212eb4:	49 39 d4             	cmp    %rdx,%r12
ffffffff80212eb7:	0f 83 b0 00 00 00    	jae    ffffffff80212f6d <caml_format_exception+0x14d>
ffffffff80212ebd:	4e 8d 3c e3          	lea    (%rbx,%r12,8),%r15
ffffffff80212ec1:	4c 8d b4 24 20 01 00 	lea    0x120(%rsp),%r14
ffffffff80212ec8:	00 
ffffffff80212ec9:	4c 89 e3             	mov    %r12,%rbx
ffffffff80212ecc:	eb 59                	jmp    ffffffff80212f27 <caml_format_exception+0x107>
ffffffff80212ece:	66 90                	xchg   %ax,%ax
ffffffff80212ed0:	80 7a f8 fc          	cmpb   $0xfc,-0x8(%rdx)
ffffffff80212ed4:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80212ed9:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
ffffffff80212ede:	0f 84 3c 01 00 00    	je     ffffffff80213020 <caml_format_exception+0x200>
ffffffff80212ee4:	48 39 f0             	cmp    %rsi,%rax
ffffffff80212ee7:	73 0c                	jae    ffffffff80212ef5 <caml_format_exception+0xd5>
ffffffff80212ee9:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80212eed:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
ffffffff80212ef2:	c6 00 5f             	movb   $0x5f,(%rax)
ffffffff80212ef5:	49 8b 45 00          	mov    0x0(%r13),%rax
ffffffff80212ef9:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80212efd:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80212f01:	48 39 d8             	cmp    %rbx,%rax
ffffffff80212f04:	0f 86 e6 00 00 00    	jbe    ffffffff80212ff0 <caml_format_exception+0x1d0>
ffffffff80212f0a:	49 39 dc             	cmp    %rbx,%r12
ffffffff80212f0d:	73 14                	jae    ffffffff80212f23 <caml_format_exception+0x103>
ffffffff80212f0f:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
ffffffff80212f14:	48 8d 15 3f f1 00 00 	lea    0xf13f(%rip),%rdx        # ffffffff8022205a <int32_length+0x57a>
ffffffff80212f1b:	48 89 ef             	mov    %rbp,%rdi
ffffffff80212f1e:	e8 8d fe ff ff       	callq  ffffffff80212db0 <add_string.isra.0>
ffffffff80212f23:	49 83 c7 08          	add    $0x8,%r15
ffffffff80212f27:	49 8b 17             	mov    (%r15),%rdx
ffffffff80212f2a:	f6 c2 01             	test   $0x1,%dl
ffffffff80212f2d:	74 a1                	je     ffffffff80212ed0 <caml_format_exception+0xb0>
ffffffff80212f2f:	48 89 d1             	mov    %rdx,%rcx
ffffffff80212f32:	4c 89 f7             	mov    %r14,%rdi
ffffffff80212f35:	48 8d 15 21 f1 00 00 	lea    0xf121(%rip),%rdx        # ffffffff8022205d <int32_length+0x57d>
ffffffff80212f3c:	31 c0                	xor    %eax,%eax
ffffffff80212f3e:	48 d1 f9             	sar    %rcx
ffffffff80212f41:	be 40 00 00 00       	mov    $0x40,%esi
ffffffff80212f46:	e8 62 d1 fe ff       	callq  ffffffff802000ad <snprintf>
ffffffff80212f4b:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
ffffffff80212f50:	4c 89 f2             	mov    %r14,%rdx
ffffffff80212f53:	48 89 ef             	mov    %rbp,%rdi
ffffffff80212f56:	e8 55 fe ff ff       	callq  ffffffff80212db0 <add_string.isra.0>
ffffffff80212f5b:	eb 98                	jmp    ffffffff80212ef5 <caml_format_exception+0xd5>
ffffffff80212f5d:	0f 1f 00             	nopl   (%rax)
ffffffff80212f60:	48 89 ef             	mov    %rbp,%rdi
ffffffff80212f63:	e8 48 fe ff ff       	callq  ffffffff80212db0 <add_string.isra.0>
ffffffff80212f68:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80212f6d:	c6 00 00             	movb   $0x0,(%rax)
ffffffff80212f70:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff80212f75:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
ffffffff80212f7a:	49 29 dc             	sub    %rbx,%r12
ffffffff80212f7d:	49 83 c4 01          	add    $0x1,%r12
ffffffff80212f81:	4c 89 e7             	mov    %r12,%rdi
ffffffff80212f84:	e8 27 d8 ff ff       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff80212f89:	49 89 c0             	mov    %rax,%r8
ffffffff80212f8c:	48 85 c0             	test   %rax,%rax
ffffffff80212f8f:	74 11                	je     ffffffff80212fa2 <caml_format_exception+0x182>
ffffffff80212f91:	4c 89 e2             	mov    %r12,%rdx
ffffffff80212f94:	48 89 de             	mov    %rbx,%rsi
ffffffff80212f97:	48 89 c7             	mov    %rax,%rdi
ffffffff80212f9a:	e8 06 d1 fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff80212f9f:	49 89 c0             	mov    %rax,%r8
ffffffff80212fa2:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
ffffffff80212fa9:	00 
ffffffff80212faa:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80212fb1:	00 00 
ffffffff80212fb3:	0f 85 dd 00 00 00    	jne    ffffffff80213096 <caml_format_exception+0x276>
ffffffff80212fb9:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
ffffffff80212fc0:	4c 89 c0             	mov    %r8,%rax
ffffffff80212fc3:	5b                   	pop    %rbx
ffffffff80212fc4:	5d                   	pop    %rbp
ffffffff80212fc5:	41 5c                	pop    %r12
ffffffff80212fc7:	41 5d                	pop    %r13
ffffffff80212fc9:	41 5e                	pop    %r14
ffffffff80212fcb:	41 5f                	pop    %r15
ffffffff80212fcd:	c3                   	retq   
ffffffff80212fce:	66 90                	xchg   %ax,%ax
ffffffff80212fd0:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80212fd4:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
ffffffff80212fd9:	c6 00 28             	movb   $0x28,(%rax)
ffffffff80212fdc:	49 8b 45 00          	mov    0x0(%r13),%rax
ffffffff80212fe0:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80212fe4:	49 39 c4             	cmp    %rax,%r12
ffffffff80212fe7:	0f 82 d0 fe ff ff    	jb     ffffffff80212ebd <caml_format_exception+0x9d>
ffffffff80212fed:	0f 1f 00             	nopl   (%rax)
ffffffff80212ff0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80212ff5:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
ffffffff80212ffa:	0f 83 6d ff ff ff    	jae    ffffffff80212f6d <caml_format_exception+0x14d>
ffffffff80213000:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80213004:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
ffffffff80213009:	c6 00 29             	movb   $0x29,(%rax)
ffffffff8021300c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80213011:	e9 57 ff ff ff       	jmpq   ffffffff80212f6d <caml_format_exception+0x14d>
ffffffff80213016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021301d:	00 00 00 
ffffffff80213020:	48 39 f0             	cmp    %rsi,%rax
ffffffff80213023:	73 11                	jae    ffffffff80213036 <caml_format_exception+0x216>
ffffffff80213025:	48 8d 48 01          	lea    0x1(%rax),%rcx
ffffffff80213029:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8021302e:	c6 00 22             	movb   $0x22,(%rax)
ffffffff80213031:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
ffffffff80213036:	48 89 ef             	mov    %rbp,%rdi
ffffffff80213039:	e8 72 fd ff ff       	callq  ffffffff80212db0 <add_string.isra.0>
ffffffff8021303e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80213043:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
ffffffff80213048:	0f 83 a7 fe ff ff    	jae    ffffffff80212ef5 <caml_format_exception+0xd5>
ffffffff8021304e:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff80213052:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
ffffffff80213057:	c6 00 22             	movb   $0x22,(%rax)
ffffffff8021305a:	e9 96 fe ff ff       	jmpq   ffffffff80212ef5 <caml_format_exception+0xd5>
ffffffff8021305f:	90                   	nop
ffffffff80213060:	48 8b 43 08          	mov    0x8(%rbx),%rax
ffffffff80213064:	a8 01                	test   $0x1,%al
ffffffff80213066:	0f 85 30 fe ff ff    	jne    ffffffff80212e9c <caml_format_exception+0x7c>
ffffffff8021306c:	80 78 f8 00          	cmpb   $0x0,-0x8(%rax)
ffffffff80213070:	0f 85 26 fe ff ff    	jne    ffffffff80212e9c <caml_format_exception+0x7c>
ffffffff80213076:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff80213079:	e8 22 45 ff ff       	callq  ffffffff802075a0 <caml_is_special_exception>
ffffffff8021307e:	85 c0                	test   %eax,%eax
ffffffff80213080:	0f 84 16 fe ff ff    	je     ffffffff80212e9c <caml_format_exception+0x7c>
ffffffff80213086:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff8021308a:	45 31 e4             	xor    %r12d,%r12d
ffffffff8021308d:	4c 8d 6b f8          	lea    -0x8(%rbx),%r13
ffffffff80213091:	e9 06 fe ff ff       	jmpq   ffffffff80212e9c <caml_format_exception+0x7c>
ffffffff80213096:	e8 05 d0 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021309b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802130a0 <caml_fatal_uncaught_exception>:
ffffffff802130a0:	41 54                	push   %r12
ffffffff802130a2:	55                   	push   %rbp
ffffffff802130a3:	48 89 fd             	mov    %rdi,%rbp
ffffffff802130a6:	48 8d 3d eb ef 00 00 	lea    0xefeb(%rip),%rdi        # ffffffff80222098 <int32_length+0x5b8>
ffffffff802130ad:	53                   	push   %rbx
ffffffff802130ae:	e8 9d 1f ff ff       	callq  ffffffff80205050 <caml_named_value>
ffffffff802130b3:	48 85 c0             	test   %rax,%rax
ffffffff802130b6:	74 28                	je     ffffffff802130e0 <caml_fatal_uncaught_exception+0x40>
ffffffff802130b8:	48 8b 38             	mov    (%rax),%rdi
ffffffff802130bb:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff802130c0:	48 89 ee             	mov    %rbp,%rsi
ffffffff802130c3:	e8 08 1e ff ff       	callq  ffffffff80204ed0 <caml_callback2>
ffffffff802130c8:	8b 05 5a 0f 03 00    	mov    0x30f5a(%rip),%eax        # ffffffff80244028 <caml_abort_on_uncaught_exn>
ffffffff802130ce:	85 c0                	test   %eax,%eax
ffffffff802130d0:	0f 85 8e 00 00 00    	jne    ffffffff80213164 <caml_fatal_uncaught_exception.cold>
ffffffff802130d6:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff802130db:	e8 e1 cf fe ff       	callq  ffffffff802000c1 <exit>
ffffffff802130e0:	48 89 ef             	mov    %rbp,%rdi
ffffffff802130e3:	e8 38 fd ff ff       	callq  ffffffff80212e20 <caml_format_exception>
ffffffff802130e8:	48 8d 3d 72 ef 00 00 	lea    0xef72(%rip),%rdi        # ffffffff80222061 <int32_length+0x581>
ffffffff802130ef:	44 8b 25 1e 1f 02 00 	mov    0x21f1e(%rip),%r12d        # ffffffff80235014 <caml_backtrace_active>
ffffffff802130f6:	8b 1d 14 1f 02 00    	mov    0x21f14(%rip),%ebx        # ffffffff80235010 <caml_backtrace_pos>
ffffffff802130fc:	c7 05 0e 1f 02 00 00 	movl   $0x0,0x21f0e(%rip)        # ffffffff80235014 <caml_backtrace_active>
ffffffff80213103:	00 00 00 
ffffffff80213106:	48 89 c5             	mov    %rax,%rbp
ffffffff80213109:	e8 42 1f ff ff       	callq  ffffffff80205050 <caml_named_value>
ffffffff8021310e:	48 85 c0             	test   %rax,%rax
ffffffff80213111:	74 0d                	je     ffffffff80213120 <caml_fatal_uncaught_exception+0x80>
ffffffff80213113:	48 8b 38             	mov    (%rax),%rdi
ffffffff80213116:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021311b:	e8 50 0d ff ff       	callq  ffffffff80203e70 <caml_callback_exn>
ffffffff80213120:	48 8b 3d c1 53 03 00 	mov    0x353c1(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff80213127:	48 89 ea             	mov    %rbp,%rdx
ffffffff8021312a:	48 8d 35 46 ef 00 00 	lea    0xef46(%rip),%rsi        # ffffffff80222077 <int32_length+0x597>
ffffffff80213131:	31 c0                	xor    %eax,%eax
ffffffff80213133:	44 89 25 da 1e 02 00 	mov    %r12d,0x21eda(%rip)        # ffffffff80235014 <caml_backtrace_active>
ffffffff8021313a:	89 1d d0 1e 02 00    	mov    %ebx,0x21ed0(%rip)        # ffffffff80235010 <caml_backtrace_pos>
ffffffff80213140:	e8 66 cf fe ff       	callq  ffffffff802000ab <fprintf>
ffffffff80213145:	48 89 ef             	mov    %rbp,%rdi
ffffffff80213148:	e8 03 d8 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8021314d:	83 3d c0 1e 02 00 00 	cmpl   $0x0,0x21ec0(%rip)        # ffffffff80235014 <caml_backtrace_active>
ffffffff80213154:	0f 84 6e ff ff ff    	je     ffffffff802130c8 <caml_fatal_uncaught_exception+0x28>
ffffffff8021315a:	e8 31 13 ff ff       	callq  ffffffff80204490 <caml_print_exception_backtrace>
ffffffff8021315f:	e9 64 ff ff ff       	jmpq   ffffffff802130c8 <caml_fatal_uncaught_exception+0x28>

ffffffff80213164 <caml_fatal_uncaught_exception.cold>:
ffffffff80213164:	e8 5e cf fe ff       	callq  ffffffff802000c7 <abort>
ffffffff80213169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80213170 <fill_hashtable>:
ffffffff80213170:	49 89 fa             	mov    %rdi,%r10
ffffffff80213173:	48 85 ff             	test   %rdi,%rdi
ffffffff80213176:	0f 84 8a 00 00 00    	je     ffffffff80213206 <fill_hashtable+0x96>
ffffffff8021317c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80213180:	49 8b 3a             	mov    (%r10),%rdi
ffffffff80213183:	4c 8b 0f             	mov    (%rdi),%r9
ffffffff80213186:	48 83 c7 08          	add    $0x8,%rdi
ffffffff8021318a:	4d 85 c9             	test   %r9,%r9
ffffffff8021318d:	7e 6a                	jle    ffffffff802131f9 <fill_hashtable+0x89>
ffffffff8021318f:	45 31 c0             	xor    %r8d,%r8d
ffffffff80213192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80213198:	48 8b 07             	mov    (%rdi),%rax
ffffffff8021319b:	48 8b 35 be 0e 03 00 	mov    0x30ebe(%rip),%rsi        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff802131a2:	48 8b 0d bf 0e 03 00 	mov    0x30ebf(%rip),%rcx        # ffffffff80244068 <caml_frame_descriptors>
ffffffff802131a9:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff802131ad:	48 21 f0             	and    %rsi,%rax
ffffffff802131b0:	48 8d 14 c1          	lea    (%rcx,%rax,8),%rdx
ffffffff802131b4:	48 83 3a 00          	cmpq   $0x0,(%rdx)
ffffffff802131b8:	74 17                	je     ffffffff802131d1 <fill_hashtable+0x61>
ffffffff802131ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802131c0:	48 83 c0 01          	add    $0x1,%rax
ffffffff802131c4:	48 21 f0             	and    %rsi,%rax
ffffffff802131c7:	48 8d 14 c1          	lea    (%rcx,%rax,8),%rdx
ffffffff802131cb:	48 83 3a 00          	cmpq   $0x0,(%rdx)
ffffffff802131cf:	75 ef                	jne    ffffffff802131c0 <fill_hashtable+0x50>
ffffffff802131d1:	48 89 3a             	mov    %rdi,(%rdx)
ffffffff802131d4:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
ffffffff802131d8:	48 8d 44 47 13       	lea    0x13(%rdi,%rax,2),%rax
ffffffff802131dd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff802131e1:	f6 47 08 01          	testb  $0x1,0x8(%rdi)
ffffffff802131e5:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff802131e9:	48 0f 45 c2          	cmovne %rdx,%rax
ffffffff802131ed:	49 83 c0 01          	add    $0x1,%r8
ffffffff802131f1:	48 89 c7             	mov    %rax,%rdi
ffffffff802131f4:	4d 39 c1             	cmp    %r8,%r9
ffffffff802131f7:	75 9f                	jne    ffffffff80213198 <fill_hashtable+0x28>
ffffffff802131f9:	4d 8b 52 08          	mov    0x8(%r10),%r10
ffffffff802131fd:	4d 85 d2             	test   %r10,%r10
ffffffff80213200:	0f 85 7a ff ff ff    	jne    ffffffff80213180 <fill_hashtable+0x10>
ffffffff80213206:	c3                   	retq   
ffffffff80213207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021320e:	00 00 

ffffffff80213210 <init_frame_descriptors>:
ffffffff80213210:	48 8b 05 49 0e 03 00 	mov    0x30e49(%rip),%rax        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff80213217:	41 54                	push   %r12
ffffffff80213219:	55                   	push   %rbp
ffffffff8021321a:	48 89 fd             	mov    %rdi,%rbp
ffffffff8021321d:	48 8b 3d 8c 0e 03 00 	mov    0x30e8c(%rip),%rdi        # ffffffff802440b0 <num_descr>
ffffffff80213224:	53                   	push   %rbx
ffffffff80213225:	48 8d 70 01          	lea    0x1(%rax),%rsi
ffffffff80213229:	48 8b 1d 88 0e 03 00 	mov    0x30e88(%rip),%rbx        # ffffffff802440b8 <frametables>
ffffffff80213230:	48 85 ed             	test   %rbp,%rbp
ffffffff80213233:	0f 84 17 01 00 00    	je     ffffffff80213350 <init_frame_descriptors+0x140>
ffffffff80213239:	48 89 e8             	mov    %rbp,%rax
ffffffff8021323c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80213240:	49 89 c3             	mov    %rax,%r11
ffffffff80213243:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80213247:	48 85 c0             	test   %rax,%rax
ffffffff8021324a:	75 f4                	jne    ffffffff80213240 <init_frame_descriptors+0x30>
ffffffff8021324c:	48 89 e8             	mov    %rbp,%rax
ffffffff8021324f:	31 d2                	xor    %edx,%edx
ffffffff80213251:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80213258:	48 8b 08             	mov    (%rax),%rcx
ffffffff8021325b:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8021325f:	48 03 11             	add    (%rcx),%rdx
ffffffff80213262:	48 85 c0             	test   %rax,%rax
ffffffff80213265:	75 f1                	jne    ffffffff80213258 <init_frame_descriptors+0x48>
ffffffff80213267:	48 01 fa             	add    %rdi,%rdx
ffffffff8021326a:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
ffffffff8021326e:	48 39 f0             	cmp    %rsi,%rax
ffffffff80213271:	0f 8e b9 00 00 00    	jle    ffffffff80213330 <init_frame_descriptors+0x120>
ffffffff80213277:	49 89 5b 08          	mov    %rbx,0x8(%r11)
ffffffff8021327b:	48 89 e8             	mov    %rbp,%rax
ffffffff8021327e:	31 d2                	xor    %edx,%edx
ffffffff80213280:	48 c7 05 2d 0e 03 00 	movq   $0x0,0x30e2d(%rip)        # ffffffff802440b8 <frametables>
ffffffff80213287:	00 00 00 00 
ffffffff8021328b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80213290:	48 8b 08             	mov    (%rax),%rcx
ffffffff80213293:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80213297:	48 03 11             	add    (%rcx),%rdx
ffffffff8021329a:	48 85 c0             	test   %rax,%rax
ffffffff8021329d:	75 f1                	jne    ffffffff80213290 <init_frame_descriptors+0x80>
ffffffff8021329f:	48 89 15 0a 0e 03 00 	mov    %rdx,0x30e0a(%rip)        # ffffffff802440b0 <num_descr>
ffffffff802132a6:	48 01 d2             	add    %rdx,%rdx
ffffffff802132a9:	48 8b 3d b8 0d 03 00 	mov    0x30db8(%rip),%rdi        # ffffffff80244068 <caml_frame_descriptors>
ffffffff802132b0:	48 83 fa 04          	cmp    $0x4,%rdx
ffffffff802132b4:	0f 8e ad 00 00 00    	jle    ffffffff80213367 <init_frame_descriptors+0x157>
ffffffff802132ba:	bb 04 00 00 00       	mov    $0x4,%ebx
ffffffff802132bf:	90                   	nop
ffffffff802132c0:	48 01 db             	add    %rbx,%rbx
ffffffff802132c3:	48 39 d3             	cmp    %rdx,%rbx
ffffffff802132c6:	7c f8                	jl     ffffffff802132c0 <init_frame_descriptors+0xb0>
ffffffff802132c8:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
ffffffff802132cc:	4c 8d 24 dd 00 00 00 	lea    0x0(,%rbx,8),%r12
ffffffff802132d3:	00 
ffffffff802132d4:	48 89 05 85 0d 03 00 	mov    %rax,0x30d85(%rip)        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff802132db:	48 85 ff             	test   %rdi,%rdi
ffffffff802132de:	74 05                	je     ffffffff802132e5 <init_frame_descriptors+0xd5>
ffffffff802132e0:	e8 6b d6 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802132e5:	4c 89 e7             	mov    %r12,%rdi
ffffffff802132e8:	e8 43 d6 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff802132ed:	48 89 05 74 0d 03 00 	mov    %rax,0x30d74(%rip)        # ffffffff80244068 <caml_frame_descriptors>
ffffffff802132f4:	31 d2                	xor    %edx,%edx
ffffffff802132f6:	eb 0f                	jmp    ffffffff80213307 <init_frame_descriptors+0xf7>
ffffffff802132f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802132ff:	00 
ffffffff80213300:	48 8b 05 61 0d 03 00 	mov    0x30d61(%rip),%rax        # ffffffff80244068 <caml_frame_descriptors>
ffffffff80213307:	48 c7 04 d0 00 00 00 	movq   $0x0,(%rax,%rdx,8)
ffffffff8021330e:	00 
ffffffff8021330f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80213313:	48 39 da             	cmp    %rbx,%rdx
ffffffff80213316:	7c e8                	jl     ffffffff80213300 <init_frame_descriptors+0xf0>
ffffffff80213318:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021331b:	e8 50 fe ff ff       	callq  ffffffff80213170 <fill_hashtable>
ffffffff80213320:	5b                   	pop    %rbx
ffffffff80213321:	48 89 2d 90 0d 03 00 	mov    %rbp,0x30d90(%rip)        # ffffffff802440b8 <frametables>
ffffffff80213328:	5d                   	pop    %rbp
ffffffff80213329:	41 5c                	pop    %r12
ffffffff8021332b:	c3                   	retq   
ffffffff8021332c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80213330:	48 89 ef             	mov    %rbp,%rdi
ffffffff80213333:	48 89 15 76 0d 03 00 	mov    %rdx,0x30d76(%rip)        # ffffffff802440b0 <num_descr>
ffffffff8021333a:	e8 31 fe ff ff       	callq  ffffffff80213170 <fill_hashtable>
ffffffff8021333f:	48 89 2d 72 0d 03 00 	mov    %rbp,0x30d72(%rip)        # ffffffff802440b8 <frametables>
ffffffff80213346:	49 89 5b 08          	mov    %rbx,0x8(%r11)
ffffffff8021334a:	5b                   	pop    %rbx
ffffffff8021334b:	5d                   	pop    %rbp
ffffffff8021334c:	41 5c                	pop    %r12
ffffffff8021334e:	c3                   	retq   
ffffffff8021334f:	90                   	nop
ffffffff80213350:	48 8d 14 3f          	lea    (%rdi,%rdi,1),%rdx
ffffffff80213354:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80213357:	0f 8e ae 09 00 00    	jle    ffffffff80213d0b <init_frame_descriptors.cold>
ffffffff8021335d:	48 89 1c 25 08 00 00 	mov    %rbx,0x8
ffffffff80213364:	00 
ffffffff80213365:	0f 0b                	ud2    
ffffffff80213367:	48 c7 05 ee 0c 03 00 	movq   $0x3,0x30cee(%rip)        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff8021336e:	03 00 00 00 
ffffffff80213372:	48 85 ff             	test   %rdi,%rdi
ffffffff80213375:	74 05                	je     ffffffff8021337c <init_frame_descriptors+0x16c>
ffffffff80213377:	e8 d4 d5 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8021337c:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80213381:	bb 04 00 00 00       	mov    $0x4,%ebx
ffffffff80213386:	e8 a5 d5 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021338b:	48 89 05 d6 0c 03 00 	mov    %rax,0x30cd6(%rip)        # ffffffff80244068 <caml_frame_descriptors>
ffffffff80213392:	e9 5d ff ff ff       	jmpq   ffffffff802132f4 <init_frame_descriptors+0xe4>
ffffffff80213397:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021339e:	00 00 

ffffffff802133a0 <caml_init_frame_descriptors>:
ffffffff802133a0:	41 54                	push   %r12
ffffffff802133a2:	55                   	push   %rbp
ffffffff802133a3:	53                   	push   %rbx
ffffffff802133a4:	48 8b 1d 65 55 01 00 	mov    0x15565(%rip),%rbx        # ffffffff80228910 <caml_frametable>
ffffffff802133ab:	48 85 db             	test   %rbx,%rbx
ffffffff802133ae:	74 40                	je     ffffffff802133f0 <caml_init_frame_descriptors+0x50>
ffffffff802133b0:	48 8d 2d 61 55 01 00 	lea    0x15561(%rip),%rbp        # ffffffff80228918 <caml_frametable+0x8>
ffffffff802133b7:	31 c0                	xor    %eax,%eax
ffffffff802133b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802133c0:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff802133c5:	49 89 c4             	mov    %rax,%r12
ffffffff802133c8:	48 83 c5 08          	add    $0x8,%rbp
ffffffff802133cc:	e8 5f d5 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff802133d1:	48 89 18             	mov    %rbx,(%rax)
ffffffff802133d4:	4c 89 60 08          	mov    %r12,0x8(%rax)
ffffffff802133d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
ffffffff802133dc:	48 85 db             	test   %rbx,%rbx
ffffffff802133df:	75 df                	jne    ffffffff802133c0 <caml_init_frame_descriptors+0x20>
ffffffff802133e1:	5b                   	pop    %rbx
ffffffff802133e2:	48 89 c7             	mov    %rax,%rdi
ffffffff802133e5:	5d                   	pop    %rbp
ffffffff802133e6:	41 5c                	pop    %r12
ffffffff802133e8:	e9 23 fe ff ff       	jmpq   ffffffff80213210 <init_frame_descriptors>
ffffffff802133ed:	0f 1f 00             	nopl   (%rax)
ffffffff802133f0:	31 c0                	xor    %eax,%eax
ffffffff802133f2:	5b                   	pop    %rbx
ffffffff802133f3:	5d                   	pop    %rbp
ffffffff802133f4:	48 89 c7             	mov    %rax,%rdi
ffffffff802133f7:	41 5c                	pop    %r12
ffffffff802133f9:	e9 12 fe ff ff       	jmpq   ffffffff80213210 <init_frame_descriptors>
ffffffff802133fe:	66 90                	xchg   %ax,%ax

ffffffff80213400 <caml_register_frametable>:
ffffffff80213400:	53                   	push   %rbx
ffffffff80213401:	48 89 fb             	mov    %rdi,%rbx
ffffffff80213404:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff80213409:	e8 22 d5 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021340e:	48 89 18             	mov    %rbx,(%rax)
ffffffff80213411:	48 89 c7             	mov    %rax,%rdi
ffffffff80213414:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8021341b:	00 
ffffffff8021341c:	5b                   	pop    %rbx
ffffffff8021341d:	e9 ee fd ff ff       	jmpq   ffffffff80213210 <init_frame_descriptors>
ffffffff80213422:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80213429:	00 00 00 00 
ffffffff8021342d:	0f 1f 00             	nopl   (%rax)

ffffffff80213430 <caml_unregister_frametable>:
ffffffff80213430:	41 57                	push   %r15
ffffffff80213432:	41 56                	push   %r14
ffffffff80213434:	41 55                	push   %r13
ffffffff80213436:	41 54                	push   %r12
ffffffff80213438:	55                   	push   %rbp
ffffffff80213439:	53                   	push   %rbx
ffffffff8021343a:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021343d:	48 8b 3d 74 0c 03 00 	mov    0x30c74(%rip),%rdi        # ffffffff802440b8 <frametables>
ffffffff80213444:	48 8b 2b             	mov    (%rbx),%rbp
ffffffff80213447:	48 85 ed             	test   %rbp,%rbp
ffffffff8021344a:	0f 8e f3 00 00 00    	jle    ffffffff80213543 <caml_unregister_frametable+0x113>
ffffffff80213450:	4c 8b 0d 09 0c 03 00 	mov    0x30c09(%rip),%r9        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff80213457:	48 8b 35 0a 0c 03 00 	mov    0x30c0a(%rip),%rsi        # ffffffff80244068 <caml_frame_descriptors>
ffffffff8021345e:	4c 8d 43 08          	lea    0x8(%rbx),%r8
ffffffff80213462:	45 31 db             	xor    %r11d,%r11d
ffffffff80213465:	0f 1f 00             	nopl   (%rax)
ffffffff80213468:	49 8b 00             	mov    (%r8),%rax
ffffffff8021346b:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8021346f:	4c 21 c8             	and    %r9,%rax
ffffffff80213472:	4c 39 04 c6          	cmp    %r8,(%rsi,%rax,8)
ffffffff80213476:	74 15                	je     ffffffff8021348d <caml_unregister_frametable+0x5d>
ffffffff80213478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021347f:	00 
ffffffff80213480:	48 83 c0 01          	add    $0x1,%rax
ffffffff80213484:	4c 21 c8             	and    %r9,%rax
ffffffff80213487:	4c 39 04 c6          	cmp    %r8,(%rsi,%rax,8)
ffffffff8021348b:	75 f3                	jne    ffffffff80213480 <caml_unregister_frametable+0x50>
ffffffff8021348d:	48 c7 04 c6 00 00 00 	movq   $0x0,(%rsi,%rax,8)
ffffffff80213494:	00 
ffffffff80213495:	4c 8b 0d c4 0b 03 00 	mov    0x30bc4(%rip),%r9        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff8021349c:	48 8d 50 01          	lea    0x1(%rax),%rdx
ffffffff802134a0:	4c 8d 24 c5 00 00 00 	lea    0x0(,%rax,8),%r12
ffffffff802134a7:	00 
ffffffff802134a8:	48 8b 35 b9 0b 03 00 	mov    0x30bb9(%rip),%rsi        # ffffffff80244068 <caml_frame_descriptors>
ffffffff802134af:	4c 21 ca             	and    %r9,%rdx
ffffffff802134b2:	4c 8b 14 d6          	mov    (%rsi,%rdx,8),%r10
ffffffff802134b6:	4d 85 d2             	test   %r10,%r10
ffffffff802134b9:	75 1a                	jne    ffffffff802134d5 <caml_unregister_frametable+0xa5>
ffffffff802134bb:	eb 5b                	jmp    ffffffff80213518 <caml_unregister_frametable+0xe8>
ffffffff802134bd:	0f 1f 00             	nopl   (%rax)
ffffffff802134c0:	48 39 c8             	cmp    %rcx,%rax
ffffffff802134c3:	73 30                	jae    ffffffff802134f5 <caml_unregister_frametable+0xc5>
ffffffff802134c5:	48 83 c2 01          	add    $0x1,%rdx
ffffffff802134c9:	4c 21 ca             	and    %r9,%rdx
ffffffff802134cc:	4c 8b 14 d6          	mov    (%rsi,%rdx,8),%r10
ffffffff802134d0:	4d 85 d2             	test   %r10,%r10
ffffffff802134d3:	74 43                	je     ffffffff80213518 <caml_unregister_frametable+0xe8>
ffffffff802134d5:	49 8b 0a             	mov    (%r10),%rcx
ffffffff802134d8:	48 c1 e9 03          	shr    $0x3,%rcx
ffffffff802134dc:	4c 21 c9             	and    %r9,%rcx
ffffffff802134df:	48 39 d1             	cmp    %rdx,%rcx
ffffffff802134e2:	41 0f 96 c6          	setbe  %r14b
ffffffff802134e6:	48 39 d0             	cmp    %rdx,%rax
ffffffff802134e9:	41 0f 97 c5          	seta   %r13b
ffffffff802134ed:	45 89 f7             	mov    %r14d,%r15d
ffffffff802134f0:	45 08 ef             	or     %r13b,%r15b
ffffffff802134f3:	75 cb                	jne    ffffffff802134c0 <caml_unregister_frametable+0x90>
ffffffff802134f5:	45 84 f6             	test   %r14b,%r14b
ffffffff802134f8:	74 05                	je     ffffffff802134ff <caml_unregister_frametable+0xcf>
ffffffff802134fa:	45 84 ed             	test   %r13b,%r13b
ffffffff802134fd:	75 c6                	jne    ffffffff802134c5 <caml_unregister_frametable+0x95>
ffffffff802134ff:	4e 89 14 26          	mov    %r10,(%rsi,%r12,1)
ffffffff80213503:	48 89 d0             	mov    %rdx,%rax
ffffffff80213506:	48 8b 35 5b 0b 03 00 	mov    0x30b5b(%rip),%rsi        # ffffffff80244068 <caml_frame_descriptors>
ffffffff8021350d:	e9 7b ff ff ff       	jmpq   ffffffff8021348d <caml_unregister_frametable+0x5d>
ffffffff80213512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80213518:	41 0f b7 40 0a       	movzwl 0xa(%r8),%eax
ffffffff8021351d:	49 8d 44 40 13       	lea    0x13(%r8,%rax,2),%rax
ffffffff80213522:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
ffffffff80213526:	41 f6 40 08 01       	testb  $0x1,0x8(%r8)
ffffffff8021352b:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8021352f:	48 0f 45 c2          	cmovne %rdx,%rax
ffffffff80213533:	49 83 c3 01          	add    $0x1,%r11
ffffffff80213537:	49 89 c0             	mov    %rax,%r8
ffffffff8021353a:	4c 39 dd             	cmp    %r11,%rbp
ffffffff8021353d:	0f 85 25 ff ff ff    	jne    ffffffff80213468 <caml_unregister_frametable+0x38>
ffffffff80213543:	48 89 fa             	mov    %rdi,%rdx
ffffffff80213546:	48 85 ff             	test   %rdi,%rdi
ffffffff80213549:	75 10                	jne    ffffffff8021355b <caml_unregister_frametable+0x12b>
ffffffff8021354b:	eb 33                	jmp    ffffffff80213580 <caml_unregister_frametable+0x150>
ffffffff8021354d:	0f 1f 00             	nopl   (%rax)
ffffffff80213550:	48 89 fa             	mov    %rdi,%rdx
ffffffff80213553:	48 85 c0             	test   %rax,%rax
ffffffff80213556:	74 28                	je     ffffffff80213580 <caml_unregister_frametable+0x150>
ffffffff80213558:	48 89 c7             	mov    %rax,%rdi
ffffffff8021355b:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021355f:	48 39 1f             	cmp    %rbx,(%rdi)
ffffffff80213562:	75 ec                	jne    ffffffff80213550 <caml_unregister_frametable+0x120>
ffffffff80213564:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff80213568:	5b                   	pop    %rbx
ffffffff80213569:	5d                   	pop    %rbp
ffffffff8021356a:	41 5c                	pop    %r12
ffffffff8021356c:	41 5d                	pop    %r13
ffffffff8021356e:	41 5e                	pop    %r14
ffffffff80213570:	41 5f                	pop    %r15
ffffffff80213572:	e9 d9 d3 ff ff       	jmpq   ffffffff80210950 <caml_stat_free>
ffffffff80213577:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021357e:	00 00 
ffffffff80213580:	5b                   	pop    %rbx
ffffffff80213581:	5d                   	pop    %rbp
ffffffff80213582:	41 5c                	pop    %r12
ffffffff80213584:	41 5d                	pop    %r13
ffffffff80213586:	41 5e                	pop    %r14
ffffffff80213588:	41 5f                	pop    %r15
ffffffff8021358a:	c3                   	retq   
ffffffff8021358b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80213590 <caml_register_dyn_global>:
ffffffff80213590:	55                   	push   %rbp
ffffffff80213591:	53                   	push   %rbx
ffffffff80213592:	48 89 fb             	mov    %rdi,%rbx
ffffffff80213595:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021359a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021359e:	48 8b 2d fb 0a 03 00 	mov    0x30afb(%rip),%rbp        # ffffffff802440a0 <caml_dyn_globals>
ffffffff802135a5:	e8 86 d3 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff802135aa:	48 89 18             	mov    %rbx,(%rax)
ffffffff802135ad:	48 89 68 08          	mov    %rbp,0x8(%rax)
ffffffff802135b1:	48 89 05 e8 0a 03 00 	mov    %rax,0x30ae8(%rip)        # ffffffff802440a0 <caml_dyn_globals>
ffffffff802135b8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802135bc:	5b                   	pop    %rbx
ffffffff802135bd:	5d                   	pop    %rbp
ffffffff802135be:	c3                   	retq   
ffffffff802135bf:	90                   	nop

ffffffff802135c0 <caml_oldify_local_roots>:
ffffffff802135c0:	41 56                	push   %r14
ffffffff802135c2:	48 8b 05 77 0a 03 00 	mov    0x30a77(%rip),%rax        # ffffffff80244040 <caml_globals_inited>
ffffffff802135c9:	41 55                	push   %r13
ffffffff802135cb:	41 54                	push   %r12
ffffffff802135cd:	4c 8d 25 c4 4c 01 00 	lea    0x14cc4(%rip),%r12        # ffffffff80228298 <caml_globals>
ffffffff802135d4:	55                   	push   %rbp
ffffffff802135d5:	48 8b 2d cc 0a 03 00 	mov    0x30acc(%rip),%rbp        # ffffffff802440a8 <caml_globals_scanned>
ffffffff802135dc:	53                   	push   %rbx
ffffffff802135dd:	48 39 c5             	cmp    %rax,%rbp
ffffffff802135e0:	0f 8f 90 00 00 00    	jg     ffffffff80213676 <caml_oldify_local_roots+0xb6>
ffffffff802135e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802135ed:	00 00 00 
ffffffff802135f0:	4d 8b 2c ec          	mov    (%r12,%rbp,8),%r13
ffffffff802135f4:	4d 85 ed             	test   %r13,%r13
ffffffff802135f7:	74 7d                	je     ffffffff80213676 <caml_oldify_local_roots+0xb6>
ffffffff802135f9:	49 8b 55 00          	mov    0x0(%r13),%rdx
ffffffff802135fd:	48 85 d2             	test   %rdx,%rdx
ffffffff80213600:	74 67                	je     ffffffff80213669 <caml_oldify_local_roots+0xa9>
ffffffff80213602:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80213608:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff8021360c:	31 db                	xor    %ebx,%ebx
ffffffff8021360e:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80213612:	74 41                	je     ffffffff80213655 <caml_oldify_local_roots+0x95>
ffffffff80213614:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80213618:	48 8d 34 da          	lea    (%rdx,%rbx,8),%rsi
ffffffff8021361c:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff8021361f:	40 f6 c7 01          	test   $0x1,%dil
ffffffff80213623:	75 1b                	jne    ffffffff80213640 <caml_oldify_local_roots+0x80>
ffffffff80213625:	48 3b 3d 7c 89 02 00 	cmp    0x2897c(%rip),%rdi        # ffffffff8023bfa8 <caml_young_end>
ffffffff8021362c:	73 12                	jae    ffffffff80213640 <caml_oldify_local_roots+0x80>
ffffffff8021362e:	48 3b 3d 7b 89 02 00 	cmp    0x2897b(%rip),%rdi        # ffffffff8023bfb0 <caml_young_start>
ffffffff80213635:	0f 87 45 01 00 00    	ja     ffffffff80213780 <caml_oldify_local_roots+0x1c0>
ffffffff8021363b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80213640:	49 8b 55 00          	mov    0x0(%r13),%rdx
ffffffff80213644:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80213648:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff8021364c:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80213650:	48 39 d8             	cmp    %rbx,%rax
ffffffff80213653:	77 c3                	ja     ffffffff80213618 <caml_oldify_local_roots+0x58>
ffffffff80213655:	49 8b 55 08          	mov    0x8(%r13),%rdx
ffffffff80213659:	49 83 c5 08          	add    $0x8,%r13
ffffffff8021365d:	48 85 d2             	test   %rdx,%rdx
ffffffff80213660:	75 a6                	jne    ffffffff80213608 <caml_oldify_local_roots+0x48>
ffffffff80213662:	48 8b 05 d7 09 03 00 	mov    0x309d7(%rip),%rax        # ffffffff80244040 <caml_globals_inited>
ffffffff80213669:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8021366d:	48 39 e8             	cmp    %rbp,%rax
ffffffff80213670:	0f 8d 7a ff ff ff    	jge    ffffffff802135f0 <caml_oldify_local_roots+0x30>
ffffffff80213676:	48 8b 2d 23 0a 03 00 	mov    0x30a23(%rip),%rbp        # ffffffff802440a0 <caml_dyn_globals>
ffffffff8021367d:	48 89 05 24 0a 03 00 	mov    %rax,0x30a24(%rip)        # ffffffff802440a8 <caml_globals_scanned>
ffffffff80213684:	48 85 ed             	test   %rbp,%rbp
ffffffff80213687:	74 7b                	je     ffffffff80213704 <caml_oldify_local_roots+0x144>
ffffffff80213689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80213690:	4c 8b 65 00          	mov    0x0(%rbp),%r12
ffffffff80213694:	49 8b 14 24          	mov    (%r12),%rdx
ffffffff80213698:	48 85 d2             	test   %rdx,%rdx
ffffffff8021369b:	74 5e                	je     ffffffff802136fb <caml_oldify_local_roots+0x13b>
ffffffff8021369d:	0f 1f 00             	nopl   (%rax)
ffffffff802136a0:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff802136a4:	31 db                	xor    %ebx,%ebx
ffffffff802136a6:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802136aa:	74 41                	je     ffffffff802136ed <caml_oldify_local_roots+0x12d>
ffffffff802136ac:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802136b0:	48 8d 34 da          	lea    (%rdx,%rbx,8),%rsi
ffffffff802136b4:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff802136b7:	40 f6 c7 01          	test   $0x1,%dil
ffffffff802136bb:	75 1b                	jne    ffffffff802136d8 <caml_oldify_local_roots+0x118>
ffffffff802136bd:	48 3b 3d e4 88 02 00 	cmp    0x288e4(%rip),%rdi        # ffffffff8023bfa8 <caml_young_end>
ffffffff802136c4:	73 12                	jae    ffffffff802136d8 <caml_oldify_local_roots+0x118>
ffffffff802136c6:	48 3b 3d e3 88 02 00 	cmp    0x288e3(%rip),%rdi        # ffffffff8023bfb0 <caml_young_start>
ffffffff802136cd:	0f 87 bd 00 00 00    	ja     ffffffff80213790 <caml_oldify_local_roots+0x1d0>
ffffffff802136d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802136d8:	49 8b 14 24          	mov    (%r12),%rdx
ffffffff802136dc:	48 83 c3 01          	add    $0x1,%rbx
ffffffff802136e0:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff802136e4:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802136e8:	48 39 d8             	cmp    %rbx,%rax
ffffffff802136eb:	77 c3                	ja     ffffffff802136b0 <caml_oldify_local_roots+0xf0>
ffffffff802136ed:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
ffffffff802136f2:	49 83 c4 08          	add    $0x8,%r12
ffffffff802136f6:	48 85 d2             	test   %rdx,%rdx
ffffffff802136f9:	75 a5                	jne    ffffffff802136a0 <caml_oldify_local_roots+0xe0>
ffffffff802136fb:	48 8b 6d 08          	mov    0x8(%rbp),%rbp
ffffffff802136ff:	48 85 ed             	test   %rbp,%rbp
ffffffff80213702:	75 8c                	jne    ffffffff80213690 <caml_oldify_local_roots+0xd0>
ffffffff80213704:	4c 8b 25 45 09 03 00 	mov    0x30945(%rip),%r12        # ffffffff80244050 <caml_bottom_of_stack>
ffffffff8021370b:	4d 85 e4             	test   %r12,%r12
ffffffff8021370e:	0f 84 0f 01 00 00    	je     ffffffff80213823 <caml_oldify_local_roots+0x263>
ffffffff80213714:	48 8b 15 f5 85 01 00 	mov    0x185f5(%rip),%rdx        # ffffffff8022bd10 <caml_last_return_address>
ffffffff8021371b:	4c 8b 2d 26 09 03 00 	mov    0x30926(%rip),%r13        # ffffffff80244048 <caml_gc_regs>
ffffffff80213722:	48 8b 35 37 09 03 00 	mov    0x30937(%rip),%rsi        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff80213729:	48 8b 0d 38 09 03 00 	mov    0x30938(%rip),%rcx        # ffffffff80244068 <caml_frame_descriptors>
ffffffff80213730:	48 89 d0             	mov    %rdx,%rax
ffffffff80213733:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff80213737:	48 21 f0             	and    %rsi,%rax
ffffffff8021373a:	48 8b 1c c1          	mov    (%rcx,%rax,8),%rbx
ffffffff8021373e:	48 3b 13             	cmp    (%rbx),%rdx
ffffffff80213741:	74 15                	je     ffffffff80213758 <caml_oldify_local_roots+0x198>
ffffffff80213743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80213748:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021374c:	48 21 f0             	and    %rsi,%rax
ffffffff8021374f:	48 8b 1c c1          	mov    (%rcx,%rax,8),%rbx
ffffffff80213753:	48 39 13             	cmp    %rdx,(%rbx)
ffffffff80213756:	75 f0                	jne    ffffffff80213748 <caml_oldify_local_roots+0x188>
ffffffff80213758:	0f b7 43 08          	movzwl 0x8(%rbx),%eax
ffffffff8021375c:	66 83 f8 ff          	cmp    $0xffff,%ax
ffffffff80213760:	75 38                	jne    ffffffff8021379a <caml_oldify_local_roots+0x1da>
ffffffff80213762:	49 8b 44 24 10       	mov    0x10(%r12),%rax
ffffffff80213767:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
ffffffff8021376c:	4d 8b 6c 24 20       	mov    0x20(%r12),%r13
ffffffff80213771:	48 85 c0             	test   %rax,%rax
ffffffff80213774:	0f 84 a9 00 00 00    	je     ffffffff80213823 <caml_oldify_local_roots+0x263>
ffffffff8021377a:	49 89 c4             	mov    %rax,%r12
ffffffff8021377d:	eb b1                	jmp    ffffffff80213730 <caml_oldify_local_roots+0x170>
ffffffff8021377f:	90                   	nop
ffffffff80213780:	e8 fb de ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff80213785:	e9 b6 fe ff ff       	jmpq   ffffffff80213640 <caml_oldify_local_roots+0x80>
ffffffff8021378a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80213790:	e8 eb de ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff80213795:	e9 3e ff ff ff       	jmpq   ffffffff802136d8 <caml_oldify_local_roots+0x118>
ffffffff8021379a:	0f b7 53 0a          	movzwl 0xa(%rbx),%edx
ffffffff8021379e:	48 8d 6b 0c          	lea    0xc(%rbx),%rbp
ffffffff802137a2:	66 85 d2             	test   %dx,%dx
ffffffff802137a5:	74 64                	je     ffffffff8021380b <caml_oldify_local_roots+0x24b>
ffffffff802137a7:	8d 42 ff             	lea    -0x1(%rdx),%eax
ffffffff802137aa:	4c 8d 74 43 0e       	lea    0xe(%rbx,%rax,2),%r14
ffffffff802137af:	90                   	nop
ffffffff802137b0:	0f b7 45 00          	movzwl 0x0(%rbp),%eax
ffffffff802137b4:	49 8d 34 04          	lea    (%r12,%rax,1),%rsi
ffffffff802137b8:	a8 01                	test   $0x1,%al
ffffffff802137ba:	74 15                	je     ffffffff802137d1 <caml_oldify_local_roots+0x211>
ffffffff802137bc:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
ffffffff802137c3:	00 
ffffffff802137c4:	48 89 f0             	mov    %rsi,%rax
ffffffff802137c7:	25 f8 ff 03 00       	and    $0x3fff8,%eax
ffffffff802137cc:	49 8d 74 05 00       	lea    0x0(%r13,%rax,1),%rsi
ffffffff802137d1:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff802137d4:	40 f6 c7 01          	test   $0x1,%dil
ffffffff802137d8:	75 16                	jne    ffffffff802137f0 <caml_oldify_local_roots+0x230>
ffffffff802137da:	48 3b 3d c7 87 02 00 	cmp    0x287c7(%rip),%rdi        # ffffffff8023bfa8 <caml_young_end>
ffffffff802137e1:	73 0d                	jae    ffffffff802137f0 <caml_oldify_local_roots+0x230>
ffffffff802137e3:	48 3b 3d c6 87 02 00 	cmp    0x287c6(%rip),%rdi        # ffffffff8023bfb0 <caml_young_start>
ffffffff802137ea:	77 30                	ja     ffffffff8021381c <caml_oldify_local_roots+0x25c>
ffffffff802137ec:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802137f0:	48 83 c5 02          	add    $0x2,%rbp
ffffffff802137f4:	4c 39 f5             	cmp    %r14,%rbp
ffffffff802137f7:	75 b7                	jne    ffffffff802137b0 <caml_oldify_local_roots+0x1f0>
ffffffff802137f9:	0f b7 43 08          	movzwl 0x8(%rbx),%eax
ffffffff802137fd:	48 8b 35 5c 08 03 00 	mov    0x3085c(%rip),%rsi        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff80213804:	48 8b 0d 5d 08 03 00 	mov    0x3085d(%rip),%rcx        # ffffffff80244068 <caml_frame_descriptors>
ffffffff8021380b:	25 fc ff 00 00       	and    $0xfffc,%eax
ffffffff80213810:	4c 01 e0             	add    %r12,%rax
ffffffff80213813:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
ffffffff80213817:	e9 5e ff ff ff       	jmpq   ffffffff8021377a <caml_oldify_local_roots+0x1ba>
ffffffff8021381c:	e8 5f de ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff80213821:	eb cd                	jmp    ffffffff802137f0 <caml_oldify_local_roots+0x230>
ffffffff80213823:	48 8b 2d 4e 08 03 00 	mov    0x3084e(%rip),%rbp        # ffffffff80244078 <caml_local_roots>
ffffffff8021382a:	48 85 ed             	test   %rbp,%rbp
ffffffff8021382d:	74 66                	je     ffffffff80213895 <caml_oldify_local_roots+0x2d5>
ffffffff8021382f:	90                   	nop
ffffffff80213830:	45 31 e4             	xor    %r12d,%r12d
ffffffff80213833:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
ffffffff80213838:	7e 52                	jle    ffffffff8021388c <caml_oldify_local_roots+0x2cc>
ffffffff8021383a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80213840:	31 db                	xor    %ebx,%ebx
ffffffff80213842:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
ffffffff80213847:	7e 39                	jle    ffffffff80213882 <caml_oldify_local_roots+0x2c2>
ffffffff80213849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80213850:	4a 8b 44 e5 18       	mov    0x18(%rbp,%r12,8),%rax
ffffffff80213855:	48 8d 34 d8          	lea    (%rax,%rbx,8),%rsi
ffffffff80213859:	48 8b 3e             	mov    (%rsi),%rdi
ffffffff8021385c:	40 f6 c7 01          	test   $0x1,%dil
ffffffff80213860:	75 16                	jne    ffffffff80213878 <caml_oldify_local_roots+0x2b8>
ffffffff80213862:	48 3b 3d 3f 87 02 00 	cmp    0x2873f(%rip),%rdi        # ffffffff8023bfa8 <caml_young_end>
ffffffff80213869:	73 0d                	jae    ffffffff80213878 <caml_oldify_local_roots+0x2b8>
ffffffff8021386b:	48 3b 3d 3e 87 02 00 	cmp    0x2873e(%rip),%rdi        # ffffffff8023bfb0 <caml_young_start>
ffffffff80213872:	77 54                	ja     ffffffff802138c8 <caml_oldify_local_roots+0x308>
ffffffff80213874:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80213878:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021387c:	48 39 5d 10          	cmp    %rbx,0x10(%rbp)
ffffffff80213880:	7f ce                	jg     ffffffff80213850 <caml_oldify_local_roots+0x290>
ffffffff80213882:	49 83 c4 01          	add    $0x1,%r12
ffffffff80213886:	4c 39 65 08          	cmp    %r12,0x8(%rbp)
ffffffff8021388a:	7f b4                	jg     ffffffff80213840 <caml_oldify_local_roots+0x280>
ffffffff8021388c:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
ffffffff80213890:	48 85 ed             	test   %rbp,%rbp
ffffffff80213893:	75 9b                	jne    ffffffff80213830 <caml_oldify_local_roots+0x270>
ffffffff80213895:	48 c7 c5 80 16 21 80 	mov    $0xffffffff80211680,%rbp
ffffffff8021389c:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021389f:	e8 9c 54 ff ff       	callq  ffffffff80208d40 <caml_scan_global_young_roots>
ffffffff802138a4:	e8 c7 70 00 00       	callq  ffffffff8021a970 <caml_final_oldify_young_roots>
ffffffff802138a9:	48 8b 05 c0 07 03 00 	mov    0x307c0(%rip),%rax        # ffffffff80244070 <caml_scan_roots_hook>
ffffffff802138b0:	48 85 c0             	test   %rax,%rax
ffffffff802138b3:	74 1a                	je     ffffffff802138cf <caml_oldify_local_roots+0x30f>
ffffffff802138b5:	5b                   	pop    %rbx
ffffffff802138b6:	48 89 ef             	mov    %rbp,%rdi
ffffffff802138b9:	5d                   	pop    %rbp
ffffffff802138ba:	41 5c                	pop    %r12
ffffffff802138bc:	41 5d                	pop    %r13
ffffffff802138be:	41 5e                	pop    %r14
ffffffff802138c0:	ff e0                	jmpq   *%rax
ffffffff802138c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802138c8:	e8 b3 dd ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff802138cd:	eb a9                	jmp    ffffffff80213878 <caml_oldify_local_roots+0x2b8>
ffffffff802138cf:	5b                   	pop    %rbx
ffffffff802138d0:	5d                   	pop    %rbp
ffffffff802138d1:	41 5c                	pop    %r12
ffffffff802138d3:	41 5d                	pop    %r13
ffffffff802138d5:	41 5e                	pop    %r14
ffffffff802138d7:	c3                   	retq   
ffffffff802138d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802138df:	00 

ffffffff802138e0 <caml_darken_all_roots_slice>:
ffffffff802138e0:	55                   	push   %rbp
ffffffff802138e1:	48 89 fd             	mov    %rdi,%rbp
ffffffff802138e4:	53                   	push   %rbx
ffffffff802138e5:	48 89 fb             	mov    %rdi,%rbx
ffffffff802138e8:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802138ec:	8b 05 aa 07 03 00    	mov    0x307aa(%rip),%eax        # ffffffff8024409c <do_resume.3755>
ffffffff802138f2:	85 c0                	test   %eax,%eax
ffffffff802138f4:	75 6a                	jne    ffffffff80213960 <caml_darken_all_roots_slice+0x80>
ffffffff802138f6:	c7 05 98 07 03 00 00 	movl   $0x0,0x30798(%rip)        # ffffffff80244098 <i.3752>
ffffffff802138fd:	00 00 00 
ffffffff80213900:	48 98                	cltq   
ffffffff80213902:	48 8d 15 8f 49 01 00 	lea    0x1498f(%rip),%rdx        # ffffffff80228298 <caml_globals>
ffffffff80213909:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff8021390d:	48 85 c0             	test   %rax,%rax
ffffffff80213910:	0f 84 a2 00 00 00    	je     ffffffff802139b8 <caml_darken_all_roots_slice+0xd8>
ffffffff80213916:	48 8b 30             	mov    (%rax),%rsi
ffffffff80213919:	48 89 05 70 07 03 00 	mov    %rax,0x30770(%rip)        # ffffffff80244090 <glob.3754>
ffffffff80213920:	48 85 f6             	test   %rsi,%rsi
ffffffff80213923:	74 78                	je     ffffffff8021399d <caml_darken_all_roots_slice+0xbd>
ffffffff80213925:	c7 05 59 07 03 00 00 	movl   $0x0,0x30759(%rip)        # ffffffff80244088 <j.3753>
ffffffff8021392c:	00 00 00 
ffffffff8021392f:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
ffffffff80213933:	31 d2                	xor    %edx,%edx
ffffffff80213935:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff80213939:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8021393c:	76 4b                	jbe    ffffffff80213989 <caml_darken_all_roots_slice+0xa9>
ffffffff8021393e:	48 8d 04 d6          	lea    (%rsi,%rdx,8),%rax
ffffffff80213942:	48 8b 38             	mov    (%rax),%rdi
ffffffff80213945:	48 89 c6             	mov    %rax,%rsi
ffffffff80213948:	e8 93 b0 ff ff       	callq  ffffffff8020e9e0 <caml_darken>
ffffffff8021394d:	48 83 eb 01          	sub    $0x1,%rbx
ffffffff80213951:	0f 84 99 00 00 00    	je     ffffffff802139f0 <caml_darken_all_roots_slice+0x110>
ffffffff80213957:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021395e:	00 00 
ffffffff80213960:	8b 05 22 07 03 00    	mov    0x30722(%rip),%eax        # ffffffff80244088 <j.3753>
ffffffff80213966:	83 c0 01             	add    $0x1,%eax
ffffffff80213969:	89 05 19 07 03 00    	mov    %eax,0x30719(%rip)        # ffffffff80244088 <j.3753>
ffffffff8021396f:	48 63 d0             	movslq %eax,%rdx
ffffffff80213972:	48 8b 05 17 07 03 00 	mov    0x30717(%rip),%rax        # ffffffff80244090 <glob.3754>
ffffffff80213979:	48 8b 30             	mov    (%rax),%rsi
ffffffff8021397c:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
ffffffff80213980:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff80213984:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80213987:	77 b5                	ja     ffffffff8021393e <caml_darken_all_roots_slice+0x5e>
ffffffff80213989:	48 8b 70 08          	mov    0x8(%rax),%rsi
ffffffff8021398d:	48 83 c0 08          	add    $0x8,%rax
ffffffff80213991:	48 89 05 f8 06 03 00 	mov    %rax,0x306f8(%rip)        # ffffffff80244090 <glob.3754>
ffffffff80213998:	48 85 f6             	test   %rsi,%rsi
ffffffff8021399b:	75 88                	jne    ffffffff80213925 <caml_darken_all_roots_slice+0x45>
ffffffff8021399d:	8b 05 f5 06 03 00    	mov    0x306f5(%rip),%eax        # ffffffff80244098 <i.3752>
ffffffff802139a3:	83 c0 01             	add    $0x1,%eax
ffffffff802139a6:	89 05 ec 06 03 00    	mov    %eax,0x306ec(%rip)        # ffffffff80244098 <i.3752>
ffffffff802139ac:	e9 4f ff ff ff       	jmpq   ffffffff80213900 <caml_darken_all_roots_slice+0x20>
ffffffff802139b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802139b8:	48 03 2d c1 06 03 00 	add    0x306c1(%rip),%rbp        # ffffffff80244080 <roots_count.3756>
ffffffff802139bf:	48 89 d8             	mov    %rbx,%rax
ffffffff802139c2:	c7 05 d0 06 03 00 00 	movl   $0x0,0x306d0(%rip)        # ffffffff8024409c <do_resume.3755>
ffffffff802139c9:	00 00 00 
ffffffff802139cc:	48 c7 05 a9 06 03 00 	movq   $0x0,0x306a9(%rip)        # ffffffff80244080 <roots_count.3756>
ffffffff802139d3:	00 00 00 00 
ffffffff802139d7:	48 29 dd             	sub    %rbx,%rbp
ffffffff802139da:	48 89 2d 57 06 03 00 	mov    %rbp,0x30657(%rip)        # ffffffff80244038 <caml_incremental_roots_count>
ffffffff802139e1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802139e5:	5b                   	pop    %rbx
ffffffff802139e6:	5d                   	pop    %rbp
ffffffff802139e7:	c3                   	retq   
ffffffff802139e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802139ef:	00 
ffffffff802139f0:	48 01 2d 89 06 03 00 	add    %rbp,0x30689(%rip)        # ffffffff80244080 <roots_count.3756>
ffffffff802139f7:	31 c0                	xor    %eax,%eax
ffffffff802139f9:	c7 05 99 06 03 00 01 	movl   $0x1,0x30699(%rip)        # ffffffff8024409c <do_resume.3755>
ffffffff80213a00:	00 00 00 
ffffffff80213a03:	eb dc                	jmp    ffffffff802139e1 <caml_darken_all_roots_slice+0x101>
ffffffff80213a05:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80213a0c:	00 00 00 00 

ffffffff80213a10 <caml_do_local_roots>:
ffffffff80213a10:	41 57                	push   %r15
ffffffff80213a12:	41 56                	push   %r14
ffffffff80213a14:	41 55                	push   %r13
ffffffff80213a16:	41 54                	push   %r12
ffffffff80213a18:	49 89 fc             	mov    %rdi,%r12
ffffffff80213a1b:	55                   	push   %rbp
ffffffff80213a1c:	4c 89 c5             	mov    %r8,%rbp
ffffffff80213a1f:	53                   	push   %rbx
ffffffff80213a20:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80213a24:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
ffffffff80213a29:	48 85 f6             	test   %rsi,%rsi
ffffffff80213a2c:	74 7e                	je     ffffffff80213aac <caml_do_local_roots+0x9c>
ffffffff80213a2e:	48 89 f3             	mov    %rsi,%rbx
ffffffff80213a31:	48 8b 0d 30 06 03 00 	mov    0x30630(%rip),%rcx        # ffffffff80244068 <caml_frame_descriptors>
ffffffff80213a38:	48 8b 35 21 06 03 00 	mov    0x30621(%rip),%rsi        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff80213a3f:	90                   	nop
ffffffff80213a40:	48 89 d0             	mov    %rdx,%rax
ffffffff80213a43:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff80213a47:	48 21 f0             	and    %rsi,%rax
ffffffff80213a4a:	4c 8b 3c c1          	mov    (%rcx,%rax,8),%r15
ffffffff80213a4e:	49 3b 17             	cmp    (%r15),%rdx
ffffffff80213a51:	74 15                	je     ffffffff80213a68 <caml_do_local_roots+0x58>
ffffffff80213a53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80213a58:	48 83 c0 01          	add    $0x1,%rax
ffffffff80213a5c:	48 21 f0             	and    %rsi,%rax
ffffffff80213a5f:	4c 8b 3c c1          	mov    (%rcx,%rax,8),%r15
ffffffff80213a63:	49 39 17             	cmp    %rdx,(%r15)
ffffffff80213a66:	75 f0                	jne    ffffffff80213a58 <caml_do_local_roots+0x48>
ffffffff80213a68:	41 0f b7 47 08       	movzwl 0x8(%r15),%eax
ffffffff80213a6d:	66 83 f8 ff          	cmp    $0xffff,%ax
ffffffff80213a71:	0f 85 91 00 00 00    	jne    ffffffff80213b08 <caml_do_local_roots+0xf8>
ffffffff80213a77:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
ffffffff80213a7b:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff80213a7f:	48 8b 53 18          	mov    0x18(%rbx),%rdx
ffffffff80213a83:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80213a88:	48 85 c0             	test   %rax,%rax
ffffffff80213a8b:	74 1f                	je     ffffffff80213aac <caml_do_local_roots+0x9c>
ffffffff80213a8d:	48 89 c3             	mov    %rax,%rbx
ffffffff80213a90:	eb ae                	jmp    ffffffff80213a40 <caml_do_local_roots+0x30>
ffffffff80213a92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80213a98:	41 83 c5 01          	add    $0x1,%r13d
ffffffff80213a9c:	4d 63 f5             	movslq %r13d,%r14
ffffffff80213a9f:	4c 3b 75 08          	cmp    0x8(%rbp),%r14
ffffffff80213aa3:	7c 1b                	jl     ffffffff80213ac0 <caml_do_local_roots+0xb0>
ffffffff80213aa5:	0f 1f 00             	nopl   (%rax)
ffffffff80213aa8:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
ffffffff80213aac:	48 85 ed             	test   %rbp,%rbp
ffffffff80213aaf:	0f 84 bf 00 00 00    	je     ffffffff80213b74 <caml_do_local_roots+0x164>
ffffffff80213ab5:	45 31 ed             	xor    %r13d,%r13d
ffffffff80213ab8:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
ffffffff80213abd:	7e e9                	jle    ffffffff80213aa8 <caml_do_local_roots+0x98>
ffffffff80213abf:	90                   	nop
ffffffff80213ac0:	4d 63 f5             	movslq %r13d,%r14
ffffffff80213ac3:	31 db                	xor    %ebx,%ebx
ffffffff80213ac5:	31 c0                	xor    %eax,%eax
ffffffff80213ac7:	49 83 c6 02          	add    $0x2,%r14
ffffffff80213acb:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
ffffffff80213ad0:	7e c6                	jle    ffffffff80213a98 <caml_do_local_roots+0x88>
ffffffff80213ad2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80213ad8:	4a 8b 54 f5 08       	mov    0x8(%rbp,%r14,8),%rdx
ffffffff80213add:	83 c3 01             	add    $0x1,%ebx
ffffffff80213ae0:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
ffffffff80213ae4:	48 8b 38             	mov    (%rax),%rdi
ffffffff80213ae7:	48 89 c6             	mov    %rax,%rsi
ffffffff80213aea:	41 ff d4             	callq  *%r12
ffffffff80213aed:	48 63 c3             	movslq %ebx,%rax
ffffffff80213af0:	48 3b 45 10          	cmp    0x10(%rbp),%rax
ffffffff80213af4:	7c e2                	jl     ffffffff80213ad8 <caml_do_local_roots+0xc8>
ffffffff80213af6:	41 83 c5 01          	add    $0x1,%r13d
ffffffff80213afa:	4d 63 f5             	movslq %r13d,%r14
ffffffff80213afd:	4c 3b 75 08          	cmp    0x8(%rbp),%r14
ffffffff80213b01:	7c bd                	jl     ffffffff80213ac0 <caml_do_local_roots+0xb0>
ffffffff80213b03:	eb a3                	jmp    ffffffff80213aa8 <caml_do_local_roots+0x98>
ffffffff80213b05:	0f 1f 00             	nopl   (%rax)
ffffffff80213b08:	41 0f b7 7f 0a       	movzwl 0xa(%r15),%edi
ffffffff80213b0d:	4d 8d 6f 0c          	lea    0xc(%r15),%r13
ffffffff80213b11:	66 85 ff             	test   %di,%di
ffffffff80213b14:	74 4d                	je     ffffffff80213b63 <caml_do_local_roots+0x153>
ffffffff80213b16:	8d 47 ff             	lea    -0x1(%rdi),%eax
ffffffff80213b19:	4d 8d 74 47 0e       	lea    0xe(%r15,%rax,2),%r14
ffffffff80213b1e:	eb 20                	jmp    ffffffff80213b40 <caml_do_local_roots+0x130>
ffffffff80213b20:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff80213b24:	25 f8 ff 03 00       	and    $0x3fff8,%eax
ffffffff80213b29:	48 03 44 24 08       	add    0x8(%rsp),%rax
ffffffff80213b2e:	49 83 c5 02          	add    $0x2,%r13
ffffffff80213b32:	48 8b 38             	mov    (%rax),%rdi
ffffffff80213b35:	48 89 c6             	mov    %rax,%rsi
ffffffff80213b38:	41 ff d4             	callq  *%r12
ffffffff80213b3b:	4d 39 f5             	cmp    %r14,%r13
ffffffff80213b3e:	74 10                	je     ffffffff80213b50 <caml_do_local_roots+0x140>
ffffffff80213b40:	41 0f b7 45 00       	movzwl 0x0(%r13),%eax
ffffffff80213b45:	a8 01                	test   $0x1,%al
ffffffff80213b47:	75 d7                	jne    ffffffff80213b20 <caml_do_local_roots+0x110>
ffffffff80213b49:	48 01 d8             	add    %rbx,%rax
ffffffff80213b4c:	eb e0                	jmp    ffffffff80213b2e <caml_do_local_roots+0x11e>
ffffffff80213b4e:	66 90                	xchg   %ax,%ax
ffffffff80213b50:	41 0f b7 47 08       	movzwl 0x8(%r15),%eax
ffffffff80213b55:	48 8b 35 04 05 03 00 	mov    0x30504(%rip),%rsi        # ffffffff80244060 <caml_frame_descriptors_mask>
ffffffff80213b5c:	48 8b 0d 05 05 03 00 	mov    0x30505(%rip),%rcx        # ffffffff80244068 <caml_frame_descriptors>
ffffffff80213b63:	25 fc ff 00 00       	and    $0xfffc,%eax
ffffffff80213b68:	48 01 d8             	add    %rbx,%rax
ffffffff80213b6b:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
ffffffff80213b6f:	e9 19 ff ff ff       	jmpq   ffffffff80213a8d <caml_do_local_roots+0x7d>
ffffffff80213b74:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80213b78:	5b                   	pop    %rbx
ffffffff80213b79:	5d                   	pop    %rbp
ffffffff80213b7a:	41 5c                	pop    %r12
ffffffff80213b7c:	41 5d                	pop    %r13
ffffffff80213b7e:	41 5e                	pop    %r14
ffffffff80213b80:	41 5f                	pop    %r15
ffffffff80213b82:	c3                   	retq   
ffffffff80213b83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80213b8a:	00 00 00 00 
ffffffff80213b8e:	66 90                	xchg   %ax,%ax

ffffffff80213b90 <caml_do_roots>:
ffffffff80213b90:	41 56                	push   %r14
ffffffff80213b92:	41 55                	push   %r13
ffffffff80213b94:	41 54                	push   %r12
ffffffff80213b96:	55                   	push   %rbp
ffffffff80213b97:	48 89 fd             	mov    %rdi,%rbp
ffffffff80213b9a:	53                   	push   %rbx
ffffffff80213b9b:	85 f6                	test   %esi,%esi
ffffffff80213b9d:	74 72                	je     ffffffff80213c11 <caml_do_roots+0x81>
ffffffff80213b9f:	48 8b 1d f2 46 01 00 	mov    0x146f2(%rip),%rbx        # ffffffff80228298 <caml_globals>
ffffffff80213ba6:	45 31 e4             	xor    %r12d,%r12d
ffffffff80213ba9:	4c 8d 2d e8 46 01 00 	lea    0x146e8(%rip),%r13        # ffffffff80228298 <caml_globals>
ffffffff80213bb0:	48 85 db             	test   %rbx,%rbx
ffffffff80213bb3:	74 5c                	je     ffffffff80213c11 <caml_do_roots+0x81>
ffffffff80213bb5:	48 8b 13             	mov    (%rbx),%rdx
ffffffff80213bb8:	48 85 d2             	test   %rdx,%rdx
ffffffff80213bbb:	74 43                	je     ffffffff80213c00 <caml_do_roots+0x70>
ffffffff80213bbd:	0f 1f 00             	nopl   (%rax)
ffffffff80213bc0:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff80213bc4:	45 31 f6             	xor    %r14d,%r14d
ffffffff80213bc7:	31 c9                	xor    %ecx,%ecx
ffffffff80213bc9:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80213bcd:	74 24                	je     ffffffff80213bf3 <caml_do_roots+0x63>
ffffffff80213bcf:	90                   	nop
ffffffff80213bd0:	48 8d 04 ca          	lea    (%rdx,%rcx,8),%rax
ffffffff80213bd4:	41 83 c6 01          	add    $0x1,%r14d
ffffffff80213bd8:	48 8b 38             	mov    (%rax),%rdi
ffffffff80213bdb:	48 89 c6             	mov    %rax,%rsi
ffffffff80213bde:	ff d5                	callq  *%rbp
ffffffff80213be0:	48 8b 13             	mov    (%rbx),%rdx
ffffffff80213be3:	49 63 ce             	movslq %r14d,%rcx
ffffffff80213be6:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff80213bea:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80213bee:	48 39 c1             	cmp    %rax,%rcx
ffffffff80213bf1:	72 dd                	jb     ffffffff80213bd0 <caml_do_roots+0x40>
ffffffff80213bf3:	48 8b 53 08          	mov    0x8(%rbx),%rdx
ffffffff80213bf7:	48 83 c3 08          	add    $0x8,%rbx
ffffffff80213bfb:	48 85 d2             	test   %rdx,%rdx
ffffffff80213bfe:	75 c0                	jne    ffffffff80213bc0 <caml_do_roots+0x30>
ffffffff80213c00:	41 83 c4 01          	add    $0x1,%r12d
ffffffff80213c04:	49 63 c4             	movslq %r12d,%rax
ffffffff80213c07:	49 8b 5c c5 00       	mov    0x0(%r13,%rax,8),%rbx
ffffffff80213c0c:	48 85 db             	test   %rbx,%rbx
ffffffff80213c0f:	75 a4                	jne    ffffffff80213bb5 <caml_do_roots+0x25>
ffffffff80213c11:	4c 8b 25 88 04 03 00 	mov    0x30488(%rip),%r12        # ffffffff802440a0 <caml_dyn_globals>
ffffffff80213c18:	4d 85 e4             	test   %r12,%r12
ffffffff80213c1b:	74 5d                	je     ffffffff80213c7a <caml_do_roots+0xea>
ffffffff80213c1d:	0f 1f 00             	nopl   (%rax)
ffffffff80213c20:	49 8b 1c 24          	mov    (%r12),%rbx
ffffffff80213c24:	48 8b 13             	mov    (%rbx),%rdx
ffffffff80213c27:	48 85 d2             	test   %rdx,%rdx
ffffffff80213c2a:	74 44                	je     ffffffff80213c70 <caml_do_roots+0xe0>
ffffffff80213c2c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80213c30:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff80213c34:	45 31 ed             	xor    %r13d,%r13d
ffffffff80213c37:	31 c9                	xor    %ecx,%ecx
ffffffff80213c39:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80213c3d:	74 24                	je     ffffffff80213c63 <caml_do_roots+0xd3>
ffffffff80213c3f:	90                   	nop
ffffffff80213c40:	48 8d 04 ca          	lea    (%rdx,%rcx,8),%rax
ffffffff80213c44:	41 83 c5 01          	add    $0x1,%r13d
ffffffff80213c48:	48 8b 38             	mov    (%rax),%rdi
ffffffff80213c4b:	48 89 c6             	mov    %rax,%rsi
ffffffff80213c4e:	ff d5                	callq  *%rbp
ffffffff80213c50:	48 8b 13             	mov    (%rbx),%rdx
ffffffff80213c53:	49 63 cd             	movslq %r13d,%rcx
ffffffff80213c56:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff80213c5a:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80213c5e:	48 39 c1             	cmp    %rax,%rcx
ffffffff80213c61:	72 dd                	jb     ffffffff80213c40 <caml_do_roots+0xb0>
ffffffff80213c63:	48 8b 53 08          	mov    0x8(%rbx),%rdx
ffffffff80213c67:	48 83 c3 08          	add    $0x8,%rbx
ffffffff80213c6b:	48 85 d2             	test   %rdx,%rdx
ffffffff80213c6e:	75 c0                	jne    ffffffff80213c30 <caml_do_roots+0xa0>
ffffffff80213c70:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
ffffffff80213c75:	4d 85 e4             	test   %r12,%r12
ffffffff80213c78:	75 a6                	jne    ffffffff80213c20 <caml_do_roots+0x90>
ffffffff80213c7a:	4c 8b 05 f7 03 03 00 	mov    0x303f7(%rip),%r8        # ffffffff80244078 <caml_local_roots>
ffffffff80213c81:	48 8b 0d c0 03 03 00 	mov    0x303c0(%rip),%rcx        # ffffffff80244048 <caml_gc_regs>
ffffffff80213c88:	48 89 ef             	mov    %rbp,%rdi
ffffffff80213c8b:	48 8b 15 7e 80 01 00 	mov    0x1807e(%rip),%rdx        # ffffffff8022bd10 <caml_last_return_address>
ffffffff80213c92:	48 8b 35 b7 03 03 00 	mov    0x303b7(%rip),%rsi        # ffffffff80244050 <caml_bottom_of_stack>
ffffffff80213c99:	e8 72 fd ff ff       	callq  ffffffff80213a10 <caml_do_local_roots>
ffffffff80213c9e:	48 89 ef             	mov    %rbp,%rdi
ffffffff80213ca1:	e8 1a 50 ff ff       	callq  ffffffff80208cc0 <caml_scan_global_roots>
ffffffff80213ca6:	48 89 ef             	mov    %rbp,%rdi
ffffffff80213ca9:	e8 52 6b 00 00       	callq  ffffffff8021a800 <caml_final_do_roots>
ffffffff80213cae:	48 8b 05 bb 03 03 00 	mov    0x303bb(%rip),%rax        # ffffffff80244070 <caml_scan_roots_hook>
ffffffff80213cb5:	48 85 c0             	test   %rax,%rax
ffffffff80213cb8:	74 0d                	je     ffffffff80213cc7 <caml_do_roots+0x137>
ffffffff80213cba:	5b                   	pop    %rbx
ffffffff80213cbb:	48 89 ef             	mov    %rbp,%rdi
ffffffff80213cbe:	5d                   	pop    %rbp
ffffffff80213cbf:	41 5c                	pop    %r12
ffffffff80213cc1:	41 5d                	pop    %r13
ffffffff80213cc3:	41 5e                	pop    %r14
ffffffff80213cc5:	ff e0                	jmpq   *%rax
ffffffff80213cc7:	5b                   	pop    %rbx
ffffffff80213cc8:	5d                   	pop    %rbp
ffffffff80213cc9:	41 5c                	pop    %r12
ffffffff80213ccb:	41 5d                	pop    %r13
ffffffff80213ccd:	41 5e                	pop    %r14
ffffffff80213ccf:	c3                   	retq   

ffffffff80213cd0 <caml_darken_all_roots_start>:
ffffffff80213cd0:	48 c7 c7 e0 e9 20 80 	mov    $0xffffffff8020e9e0,%rdi
ffffffff80213cd7:	31 f6                	xor    %esi,%esi
ffffffff80213cd9:	e9 b2 fe ff ff       	jmpq   ffffffff80213b90 <caml_do_roots>
ffffffff80213cde:	66 90                	xchg   %ax,%ax

ffffffff80213ce0 <caml_stack_usage>:
ffffffff80213ce0:	48 8b 05 49 03 03 00 	mov    0x30349(%rip),%rax        # ffffffff80244030 <caml_stack_usage_hook>
ffffffff80213ce7:	41 54                	push   %r12
ffffffff80213ce9:	4c 8b 25 68 03 03 00 	mov    0x30368(%rip),%r12        # ffffffff80244058 <caml_top_of_stack>
ffffffff80213cf0:	4c 2b 25 59 03 03 00 	sub    0x30359(%rip),%r12        # ffffffff80244050 <caml_bottom_of_stack>
ffffffff80213cf7:	49 c1 fc 03          	sar    $0x3,%r12
ffffffff80213cfb:	48 85 c0             	test   %rax,%rax
ffffffff80213cfe:	74 05                	je     ffffffff80213d05 <caml_stack_usage+0x25>
ffffffff80213d00:	ff d0                	callq  *%rax
ffffffff80213d02:	49 01 c4             	add    %rax,%r12
ffffffff80213d05:	4c 89 e0             	mov    %r12,%rax
ffffffff80213d08:	41 5c                	pop    %r12
ffffffff80213d0a:	c3                   	retq   

ffffffff80213d0b <init_frame_descriptors.cold>:
ffffffff80213d0b:	31 ff                	xor    %edi,%edi
ffffffff80213d0d:	e8 5e f4 ff ff       	callq  ffffffff80213170 <fill_hashtable>
ffffffff80213d12:	48 89 1c 25 08 00 00 	mov    %rbx,0x8
ffffffff80213d19:	00 
ffffffff80213d1a:	0f 0b                	ud2    
ffffffff80213d1c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80213d20 <handle_signal>:
ffffffff80213d20:	83 ff 40             	cmp    $0x40,%edi
ffffffff80213d23:	77 4b                	ja     ffffffff80213d70 <handle_signal+0x50>
ffffffff80213d25:	41 54                	push   %r12
ffffffff80213d27:	55                   	push   %rbp
ffffffff80213d28:	89 fd                	mov    %edi,%ebp
ffffffff80213d2a:	53                   	push   %rbx
ffffffff80213d2b:	e8 c0 47 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff80213d30:	44 8b 20             	mov    (%rax),%r12d
ffffffff80213d33:	48 89 c3             	mov    %rax,%rbx
ffffffff80213d36:	ff 15 dc 7f 01 00    	callq  *0x17fdc(%rip)        # ffffffff8022bd18 <caml_try_leave_blocking_section_hook>
ffffffff80213d3c:	85 c0                	test   %eax,%eax
ffffffff80213d3e:	75 10                	jne    ffffffff80213d50 <handle_signal+0x30>
ffffffff80213d40:	89 ef                	mov    %ebp,%edi
ffffffff80213d42:	e8 99 03 00 00       	callq  ffffffff802140e0 <caml_record_signal>
ffffffff80213d47:	44 89 23             	mov    %r12d,(%rbx)
ffffffff80213d4a:	5b                   	pop    %rbx
ffffffff80213d4b:	5d                   	pop    %rbp
ffffffff80213d4c:	41 5c                	pop    %r12
ffffffff80213d4e:	c3                   	retq   
ffffffff80213d4f:	90                   	nop
ffffffff80213d50:	89 ef                	mov    %ebp,%edi
ffffffff80213d52:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80213d57:	e8 b4 03 00 00       	callq  ffffffff80214110 <caml_execute_signal>
ffffffff80213d5c:	ff 15 c6 7f 01 00    	callq  *0x17fc6(%rip)        # ffffffff8022bd28 <caml_enter_blocking_section_hook>
ffffffff80213d62:	44 89 23             	mov    %r12d,(%rbx)
ffffffff80213d65:	5b                   	pop    %rbx
ffffffff80213d66:	5d                   	pop    %rbp
ffffffff80213d67:	41 5c                	pop    %r12
ffffffff80213d69:	c3                   	retq   
ffffffff80213d6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80213d70:	c3                   	retq   
ffffffff80213d71:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80213d78:	00 00 00 00 
ffffffff80213d7c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80213d80 <segv_handler>:
ffffffff80213d80:	55                   	push   %rbp
ffffffff80213d81:	53                   	push   %rbx
ffffffff80213d82:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff80213d89:	48 8b aa d8 00 00 00 	mov    0xd8(%rdx),%rbp
ffffffff80213d90:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80213d97:	00 00 
ffffffff80213d99:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff80213da0:	00 
ffffffff80213da1:	31 c0                	xor    %eax,%eax
ffffffff80213da3:	40 f6 c5 07          	test   $0x7,%bpl
ffffffff80213da7:	75 14                	jne    ffffffff80213dbd <segv_handler+0x3d>
ffffffff80213da9:	48 89 e6             	mov    %rsp,%rsi
ffffffff80213dac:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff80213db1:	48 89 d3             	mov    %rdx,%rbx
ffffffff80213db4:	e8 0f c3 fe ff       	callq  ffffffff802000c8 <getrlimit64>
ffffffff80213db9:	85 c0                	test   %eax,%eax
ffffffff80213dbb:	74 53                	je     ffffffff80213e10 <segv_handler+0x90>
ffffffff80213dbd:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
ffffffff80213dc2:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
ffffffff80213dc7:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
ffffffff80213dce:	00 00 
ffffffff80213dd0:	c7 84 24 98 00 00 00 	movl   $0x0,0x98(%rsp)
ffffffff80213dd7:	00 00 00 00 
ffffffff80213ddb:	e8 e9 c2 fe ff       	callq  ffffffff802000c9 <sigemptyset>
ffffffff80213de0:	31 d2                	xor    %edx,%edx
ffffffff80213de2:	48 89 ee             	mov    %rbp,%rsi
ffffffff80213de5:	bf 0b 00 00 00       	mov    $0xb,%edi
ffffffff80213dea:	e8 db c2 fe ff       	callq  ffffffff802000ca <sigaction>
ffffffff80213def:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
ffffffff80213df6:	00 
ffffffff80213df7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80213dfe:	00 00 
ffffffff80213e00:	0f 85 89 00 00 00    	jne    ffffffff80213e8f <segv_handler+0x10f>
ffffffff80213e06:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
ffffffff80213e0d:	5b                   	pop    %rbx
ffffffff80213e0e:	5d                   	pop    %rbp
ffffffff80213e0f:	c3                   	retq   
ffffffff80213e10:	48 8b 05 a9 22 03 00 	mov    0x322a9(%rip),%rax        # ffffffff802460c0 <system_stack_top>
ffffffff80213e17:	48 39 e8             	cmp    %rbp,%rax
ffffffff80213e1a:	76 a1                	jbe    ffffffff80213dbd <segv_handler+0x3d>
ffffffff80213e1c:	48 2b 04 24          	sub    (%rsp),%rax
ffffffff80213e20:	48 2d 00 20 20 00    	sub    $0x202000,%rax
ffffffff80213e26:	48 39 c5             	cmp    %rax,%rbp
ffffffff80213e29:	72 92                	jb     ffffffff80213dbd <segv_handler+0x3d>
ffffffff80213e2b:	48 8b bb a8 00 00 00 	mov    0xa8(%rbx),%rdi
ffffffff80213e32:	48 3b 3d 0f 26 03 00 	cmp    0x3260f(%rip),%rdi        # ffffffff80246448 <caml_code_area_start>
ffffffff80213e39:	72 09                	jb     ffffffff80213e44 <segv_handler+0xc4>
ffffffff80213e3b:	48 3b 3d fe 25 03 00 	cmp    0x325fe(%rip),%rdi        # ffffffff80246440 <caml_code_area_end>
ffffffff80213e42:	76 18                	jbe    ffffffff80213e5c <segv_handler+0xdc>
ffffffff80213e44:	48 8d 05 99 00 ff ff 	lea    -0xff67(%rip),%rax        # ffffffff80203ee4 <caml_system__code_end>
ffffffff80213e4b:	48 39 c7             	cmp    %rax,%rdi
ffffffff80213e4e:	77 30                	ja     ffffffff80213e80 <segv_handler+0x100>
ffffffff80213e50:	48 8d 05 f5 fb fe ff 	lea    -0x1040b(%rip),%rax        # ffffffff80203a4c <camlStdlib__code_end>
ffffffff80213e57:	48 39 c7             	cmp    %rax,%rdi
ffffffff80213e5a:	72 24                	jb     ffffffff80213e80 <segv_handler+0x100>
ffffffff80213e5c:	48 8b 43 58          	mov    0x58(%rbx),%rax
ffffffff80213e60:	48 89 05 d1 62 02 00 	mov    %rax,0x262d1(%rip)        # ffffffff8023a138 <caml_exception_pointer>
ffffffff80213e67:	48 8b 43 60          	mov    0x60(%rbx),%rax
ffffffff80213e6b:	48 89 05 16 81 02 00 	mov    %rax,0x28116(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80213e72:	e8 59 36 ff ff       	callq  ffffffff802074d0 <caml_raise_stack_overflow>
ffffffff80213e77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80213e7e:	00 00 
ffffffff80213e80:	e8 9b c5 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80213e85:	a8 08                	test   $0x8,%al
ffffffff80213e87:	0f 84 30 ff ff ff    	je     ffffffff80213dbd <segv_handler+0x3d>
ffffffff80213e8d:	eb cd                	jmp    ffffffff80213e5c <segv_handler+0xdc>
ffffffff80213e8f:	e8 0c c2 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80213e94:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80213e9b:	00 00 00 00 
ffffffff80213e9f:	90                   	nop

ffffffff80213ea0 <caml_garbage_collection>:
ffffffff80213ea0:	48 8b 05 d1 80 02 00 	mov    0x280d1(%rip),%rax        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80213ea7:	8b 15 37 22 03 00    	mov    0x32237(%rip),%edx        # ffffffff802460e4 <caml_requested_major_slice>
ffffffff80213ead:	48 89 05 cc 80 02 00 	mov    %rax,0x280cc(%rip)        # ffffffff8023bf80 <caml_young_limit>
ffffffff80213eb4:	85 d2                	test   %edx,%edx
ffffffff80213eb6:	75 0a                	jne    ffffffff80213ec2 <caml_garbage_collection+0x22>
ffffffff80213eb8:	8b 15 22 22 03 00    	mov    0x32222(%rip),%edx        # ffffffff802460e0 <caml_requested_minor_gc>
ffffffff80213ebe:	85 d2                	test   %edx,%edx
ffffffff80213ec0:	74 16                	je     ffffffff80213ed8 <caml_garbage_collection+0x38>
ffffffff80213ec2:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80213ec6:	e8 f5 e0 ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff80213ecb:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80213ecf:	e9 5c 03 00 00       	jmpq   ffffffff80214230 <caml_process_pending_signals>
ffffffff80213ed4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80213ed8:	48 8b 0d a9 80 02 00 	mov    0x280a9(%rip),%rcx        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80213edf:	48 29 c1             	sub    %rax,%rcx
ffffffff80213ee2:	48 81 f9 00 08 00 00 	cmp    $0x800,%rcx
ffffffff80213ee9:	7e d7                	jle    ffffffff80213ec2 <caml_garbage_collection+0x22>
ffffffff80213eeb:	e9 40 03 00 00       	jmpq   ffffffff80214230 <caml_process_pending_signals>

ffffffff80213ef0 <caml_set_signal_action>:
ffffffff80213ef0:	41 54                	push   %r12
ffffffff80213ef2:	55                   	push   %rbp
ffffffff80213ef3:	89 fd                	mov    %edi,%ebp
ffffffff80213ef5:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
ffffffff80213efc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80213f03:	00 00 
ffffffff80213f05:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
ffffffff80213f0c:	00 
ffffffff80213f0d:	31 c0                	xor    %eax,%eax
ffffffff80213f0f:	85 f6                	test   %esi,%esi
ffffffff80213f11:	0f 84 89 00 00 00    	je     ffffffff80213fa0 <caml_set_signal_action+0xb0>
ffffffff80213f17:	83 fe 01             	cmp    $0x1,%esi
ffffffff80213f1a:	0f 84 98 00 00 00    	je     ffffffff80213fb8 <caml_set_signal_action+0xc8>
ffffffff80213f20:	48 8d 05 f9 fd ff ff 	lea    -0x207(%rip),%rax        # ffffffff80213d20 <handle_signal>
ffffffff80213f27:	c7 84 24 88 00 00 00 	movl   $0x4,0x88(%rsp)
ffffffff80213f2e:	04 00 00 00 
ffffffff80213f32:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80213f36:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
ffffffff80213f3b:	49 89 e4             	mov    %rsp,%r12
ffffffff80213f3e:	e8 86 c1 fe ff       	callq  ffffffff802000c9 <sigemptyset>
ffffffff80213f43:	48 8d 94 24 a0 00 00 	lea    0xa0(%rsp),%rdx
ffffffff80213f4a:	00 
ffffffff80213f4b:	4c 89 e6             	mov    %r12,%rsi
ffffffff80213f4e:	89 ef                	mov    %ebp,%edi
ffffffff80213f50:	e8 75 c1 fe ff       	callq  ffffffff802000ca <sigaction>
ffffffff80213f55:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff80213f58:	74 1e                	je     ffffffff80213f78 <caml_set_signal_action+0x88>
ffffffff80213f5a:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
ffffffff80213f61:	00 
ffffffff80213f62:	48 8d 15 b7 fd ff ff 	lea    -0x249(%rip),%rdx        # ffffffff80213d20 <handle_signal>
ffffffff80213f69:	48 39 d0             	cmp    %rdx,%rax
ffffffff80213f6c:	74 62                	je     ffffffff80213fd0 <caml_set_signal_action+0xe0>
ffffffff80213f6e:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80213f72:	0f 94 c0             	sete   %al
ffffffff80213f75:	0f b6 c0             	movzbl %al,%eax
ffffffff80213f78:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
ffffffff80213f7f:	00 
ffffffff80213f80:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80213f87:	00 00 
ffffffff80213f89:	75 4c                	jne    ffffffff80213fd7 <caml_set_signal_action+0xe7>
ffffffff80213f8b:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
ffffffff80213f92:	5d                   	pop    %rbp
ffffffff80213f93:	41 5c                	pop    %r12
ffffffff80213f95:	c3                   	retq   
ffffffff80213f96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80213f9d:	00 00 00 
ffffffff80213fa0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
ffffffff80213fa7:	00 
ffffffff80213fa8:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
ffffffff80213faf:	00 00 00 00 
ffffffff80213fb3:	eb 81                	jmp    ffffffff80213f36 <caml_set_signal_action+0x46>
ffffffff80213fb5:	0f 1f 00             	nopl   (%rax)
ffffffff80213fb8:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
ffffffff80213fbf:	00 
ffffffff80213fc0:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
ffffffff80213fc7:	00 00 00 00 
ffffffff80213fcb:	e9 66 ff ff ff       	jmpq   ffffffff80213f36 <caml_set_signal_action+0x46>
ffffffff80213fd0:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff80213fd5:	eb a1                	jmp    ffffffff80213f78 <caml_set_signal_action+0x88>
ffffffff80213fd7:	e8 c4 c0 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80213fdc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80213fe0 <caml_init_signals>:
ffffffff80213fe0:	55                   	push   %rbp
ffffffff80213fe1:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
ffffffff80213fe8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80213fef:	00 00 
ffffffff80213ff1:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
ffffffff80213ff8:	00 
ffffffff80213ff9:	31 c0                	xor    %eax,%eax
ffffffff80213ffb:	48 8d 05 be 00 03 00 	lea    0x300be(%rip),%rax        # ffffffff802440c0 <sig_alt_stack>
ffffffff80214002:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff80214007:	48 c7 44 24 10 00 20 	movq   $0x2000,0x10(%rsp)
ffffffff8021400e:	00 00 
ffffffff80214010:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80214014:	48 8d 05 65 fd ff ff 	lea    -0x29b(%rip),%rax        # ffffffff80213d80 <segv_handler>
ffffffff8021401b:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
ffffffff80214020:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
ffffffff80214027:	00 
ffffffff80214028:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff8021402d:	c7 84 24 a8 00 00 00 	movl   $0x48000004,0xa8(%rsp)
ffffffff80214034:	04 00 00 48 
ffffffff80214038:	e8 8c c0 fe ff       	callq  ffffffff802000c9 <sigemptyset>
ffffffff8021403d:	31 f6                	xor    %esi,%esi
ffffffff8021403f:	48 89 e7             	mov    %rsp,%rdi
ffffffff80214042:	48 89 2d 77 20 03 00 	mov    %rbp,0x32077(%rip)        # ffffffff802460c0 <system_stack_top>
ffffffff80214049:	e8 71 c0 fe ff       	callq  ffffffff802000bf <sigaltstack>
ffffffff8021404e:	85 c0                	test   %eax,%eax
ffffffff80214050:	74 1e                	je     ffffffff80214070 <caml_init_signals+0x90>
ffffffff80214052:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
ffffffff80214059:	00 
ffffffff8021405a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80214061:	00 00 
ffffffff80214063:	75 1c                	jne    ffffffff80214081 <caml_init_signals+0xa1>
ffffffff80214065:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
ffffffff8021406c:	5d                   	pop    %rbp
ffffffff8021406d:	c3                   	retq   
ffffffff8021406e:	66 90                	xchg   %ax,%ax
ffffffff80214070:	31 d2                	xor    %edx,%edx
ffffffff80214072:	48 89 ee             	mov    %rbp,%rsi
ffffffff80214075:	bf 0b 00 00 00       	mov    $0xb,%edi
ffffffff8021407a:	e8 4b c0 fe ff       	callq  ffffffff802000ca <sigaction>
ffffffff8021407f:	eb d1                	jmp    ffffffff80214052 <caml_init_signals+0x72>
ffffffff80214081:	e8 1a c0 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80214086:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021408d:	00 00 00 

ffffffff80214090 <caml_enter_blocking_section_default>:
ffffffff80214090:	48 c7 05 7d 22 03 00 	movq   $0x1,0x3227d(%rip)        # ffffffff80246318 <caml_async_signal_mode>
ffffffff80214097:	01 00 00 00 
ffffffff8021409b:	c3                   	retq   
ffffffff8021409c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802140a0 <caml_leave_blocking_section_default>:
ffffffff802140a0:	48 c7 05 6d 22 03 00 	movq   $0x0,0x3226d(%rip)        # ffffffff80246318 <caml_async_signal_mode>
ffffffff802140a7:	00 00 00 00 
ffffffff802140ab:	c3                   	retq   
ffffffff802140ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802140b0 <caml_try_leave_blocking_section_default>:
ffffffff802140b0:	31 c0                	xor    %eax,%eax
ffffffff802140b2:	48 87 05 5f 22 03 00 	xchg   %rax,0x3225f(%rip)        # ffffffff80246318 <caml_async_signal_mode>
ffffffff802140b9:	c3                   	retq   
ffffffff802140ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802140c0 <sigprocmask_wrapper>:
ffffffff802140c0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802140c4:	e8 05 c0 fe ff       	callq  ffffffff802000ce <sigprocmask>
ffffffff802140c9:	85 c0                	test   %eax,%eax
ffffffff802140cb:	74 07                	je     ffffffff802140d4 <sigprocmask_wrapper+0x14>
ffffffff802140cd:	e8 1e 44 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff802140d2:	8b 00                	mov    (%rax),%eax
ffffffff802140d4:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802140d8:	c3                   	retq   
ffffffff802140d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802140e0 <caml_record_signal>:
ffffffff802140e0:	48 8d 05 19 20 03 00 	lea    0x32019(%rip),%rax        # ffffffff80246100 <caml_pending_signals>
ffffffff802140e7:	48 63 ff             	movslq %edi,%rdi
ffffffff802140ea:	48 c7 04 f8 01 00 00 	movq   $0x1,(%rax,%rdi,8)
ffffffff802140f1:	00 
ffffffff802140f2:	48 8b 05 97 7e 02 00 	mov    0x27e97(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff802140f9:	48 c7 05 04 22 03 00 	movq   $0x1,0x32204(%rip)        # ffffffff80246308 <caml_signals_are_pending>
ffffffff80214100:	01 00 00 00 
ffffffff80214104:	48 89 05 75 7e 02 00 	mov    %rax,0x27e75(%rip)        # ffffffff8023bf80 <caml_young_limit>
ffffffff8021410b:	c3                   	retq   
ffffffff8021410c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80214110 <caml_execute_signal>:
ffffffff80214110:	41 55                	push   %r13
ffffffff80214112:	41 54                	push   %r12
ffffffff80214114:	55                   	push   %rbp
ffffffff80214115:	89 fd                	mov    %edi,%ebp
ffffffff80214117:	53                   	push   %rbx
ffffffff80214118:	89 f3                	mov    %esi,%ebx
ffffffff8021411a:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
ffffffff80214121:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80214128:	00 00 
ffffffff8021412a:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
ffffffff80214131:	00 
ffffffff80214132:	31 c0                	xor    %eax,%eax
ffffffff80214134:	49 89 e5             	mov    %rsp,%r13
ffffffff80214137:	4c 8d a4 24 80 00 00 	lea    0x80(%rsp),%r12
ffffffff8021413e:	00 
ffffffff8021413f:	4c 89 ef             	mov    %r13,%rdi
ffffffff80214142:	e8 82 bf fe ff       	callq  ffffffff802000c9 <sigemptyset>
ffffffff80214147:	89 ee                	mov    %ebp,%esi
ffffffff80214149:	4c 89 ef             	mov    %r13,%rdi
ffffffff8021414c:	e8 7a bf fe ff       	callq  ffffffff802000cb <sigaddset>
ffffffff80214151:	4c 89 e2             	mov    %r12,%rdx
ffffffff80214154:	4c 89 ee             	mov    %r13,%rsi
ffffffff80214157:	31 ff                	xor    %edi,%edi
ffffffff80214159:	ff 15 d1 7b 01 00    	callq  *0x17bd1(%rip)        # ffffffff8022bd30 <caml_sigmask_hook>
ffffffff8021415f:	48 8b 05 aa 21 03 00 	mov    0x321aa(%rip),%rax        # ffffffff80246310 <caml_signal_handlers>
ffffffff80214166:	48 63 fd             	movslq %ebp,%rdi
ffffffff80214169:	ba 06 00 00 00       	mov    $0x6,%edx
ffffffff8021416e:	48 8d 35 6b df 00 00 	lea    0xdf6b(%rip),%rsi        # ffffffff802220e0 <posix_signals>
ffffffff80214175:	4c 8b 04 f8          	mov    (%rax,%rdi,8),%r8
ffffffff80214179:	31 c0                	xor    %eax,%eax
ffffffff8021417b:	eb 10                	jmp    ffffffff8021418d <caml_execute_signal+0x7d>
ffffffff8021417d:	0f 1f 00             	nopl   (%rax)
ffffffff80214180:	48 83 c0 01          	add    $0x1,%rax
ffffffff80214184:	48 83 f8 1c          	cmp    $0x1c,%rax
ffffffff80214188:	74 0e                	je     ffffffff80214198 <caml_execute_signal+0x88>
ffffffff8021418a:	8b 14 86             	mov    (%rsi,%rax,4),%edx
ffffffff8021418d:	89 c1                	mov    %eax,%ecx
ffffffff8021418f:	39 d5                	cmp    %edx,%ebp
ffffffff80214191:	75 ed                	jne    ffffffff80214180 <caml_execute_signal+0x70>
ffffffff80214193:	f7 d1                	not    %ecx
ffffffff80214195:	48 63 f9             	movslq %ecx,%rdi
ffffffff80214198:	48 8d 74 3f 01       	lea    0x1(%rdi,%rdi,1),%rsi
ffffffff8021419d:	4c 89 c7             	mov    %r8,%rdi
ffffffff802141a0:	e8 cb fc fe ff       	callq  ffffffff80203e70 <caml_callback_exn>
ffffffff802141a5:	49 89 c5             	mov    %rax,%r13
ffffffff802141a8:	85 db                	test   %ebx,%ebx
ffffffff802141aa:	74 34                	je     ffffffff802141e0 <caml_execute_signal+0xd0>
ffffffff802141ac:	83 e0 03             	and    $0x3,%eax
ffffffff802141af:	48 83 f8 02          	cmp    $0x2,%rax
ffffffff802141b3:	74 4b                	je     ffffffff80214200 <caml_execute_signal+0xf0>
ffffffff802141b5:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
ffffffff802141bc:	00 
ffffffff802141bd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff802141c4:	00 00 
ffffffff802141c6:	75 5e                	jne    ffffffff80214226 <caml_execute_signal+0x116>
ffffffff802141c8:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
ffffffff802141cf:	5b                   	pop    %rbx
ffffffff802141d0:	5d                   	pop    %rbp
ffffffff802141d1:	41 5c                	pop    %r12
ffffffff802141d3:	41 5d                	pop    %r13
ffffffff802141d5:	c3                   	retq   
ffffffff802141d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802141dd:	00 00 00 
ffffffff802141e0:	31 d2                	xor    %edx,%edx
ffffffff802141e2:	4c 89 e6             	mov    %r12,%rsi
ffffffff802141e5:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff802141ea:	ff 15 40 7b 01 00    	callq  *0x17b40(%rip)        # ffffffff8022bd30 <caml_sigmask_hook>
ffffffff802141f0:	4c 89 e8             	mov    %r13,%rax
ffffffff802141f3:	83 e0 03             	and    $0x3,%eax
ffffffff802141f6:	48 83 f8 02          	cmp    $0x2,%rax
ffffffff802141fa:	75 b9                	jne    ffffffff802141b5 <caml_execute_signal+0xa5>
ffffffff802141fc:	eb 1c                	jmp    ffffffff8021421a <caml_execute_signal+0x10a>
ffffffff802141fe:	66 90                	xchg   %ax,%ax
ffffffff80214200:	89 ee                	mov    %ebp,%esi
ffffffff80214202:	4c 89 e7             	mov    %r12,%rdi
ffffffff80214205:	e8 c3 be fe ff       	callq  ffffffff802000cd <sigdelset>
ffffffff8021420a:	31 d2                	xor    %edx,%edx
ffffffff8021420c:	4c 89 e6             	mov    %r12,%rsi
ffffffff8021420f:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80214214:	ff 15 16 7b 01 00    	callq  *0x17b16(%rip)        # ffffffff8022bd30 <caml_sigmask_hook>
ffffffff8021421a:	4c 89 ef             	mov    %r13,%rdi
ffffffff8021421d:	48 83 e7 fc          	and    $0xfffffffffffffffc,%rdi
ffffffff80214221:	e8 aa 2f ff ff       	callq  ffffffff802071d0 <caml_raise>
ffffffff80214226:	e8 75 be fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021422b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80214230 <caml_process_pending_signals>:
ffffffff80214230:	41 55                	push   %r13
ffffffff80214232:	41 54                	push   %r12
ffffffff80214234:	55                   	push   %rbp
ffffffff80214235:	53                   	push   %rbx
ffffffff80214236:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
ffffffff8021423d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80214244:	00 00 
ffffffff80214246:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff8021424d:	00 
ffffffff8021424e:	31 c0                	xor    %eax,%eax
ffffffff80214250:	48 8b 05 b1 20 03 00 	mov    0x320b1(%rip),%rax        # ffffffff80246308 <caml_signals_are_pending>
ffffffff80214257:	48 85 c0             	test   %rax,%rax
ffffffff8021425a:	74 77                	je     ffffffff802142d3 <caml_process_pending_signals+0xa3>
ffffffff8021425c:	48 c7 05 a1 20 03 00 	movq   $0x0,0x320a1(%rip)        # ffffffff80246308 <caml_signals_are_pending>
ffffffff80214263:	00 00 00 00 
ffffffff80214267:	31 c0                	xor    %eax,%eax
ffffffff80214269:	4c 8d 25 90 1e 03 00 	lea    0x31e90(%rip),%r12        # ffffffff80246100 <caml_pending_signals>
ffffffff80214270:	eb 0e                	jmp    ffffffff80214280 <caml_process_pending_signals+0x50>
ffffffff80214272:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80214278:	83 c0 01             	add    $0x1,%eax
ffffffff8021427b:	83 f8 41             	cmp    $0x41,%eax
ffffffff8021427e:	74 53                	je     ffffffff802142d3 <caml_process_pending_signals+0xa3>
ffffffff80214280:	48 63 d0             	movslq %eax,%rdx
ffffffff80214283:	49 8b 14 d4          	mov    (%r12,%rdx,8),%rdx
ffffffff80214287:	48 85 d2             	test   %rdx,%rdx
ffffffff8021428a:	74 ec                	je     ffffffff80214278 <caml_process_pending_signals+0x48>
ffffffff8021428c:	49 89 e5             	mov    %rsp,%r13
ffffffff8021428f:	31 f6                	xor    %esi,%esi
ffffffff80214291:	31 ff                	xor    %edi,%edi
ffffffff80214293:	31 db                	xor    %ebx,%ebx
ffffffff80214295:	4c 89 ea             	mov    %r13,%rdx
ffffffff80214298:	ff 15 92 7a 01 00    	callq  *0x17a92(%rip)        # ffffffff8022bd30 <caml_sigmask_hook>
ffffffff8021429e:	66 90                	xchg   %ax,%ax
ffffffff802142a0:	48 63 eb             	movslq %ebx,%rbp
ffffffff802142a3:	49 8b 04 ec          	mov    (%r12,%rbp,8),%rax
ffffffff802142a7:	48 85 c0             	test   %rax,%rax
ffffffff802142aa:	74 1f                	je     ffffffff802142cb <caml_process_pending_signals+0x9b>
ffffffff802142ac:	89 de                	mov    %ebx,%esi
ffffffff802142ae:	4c 89 ef             	mov    %r13,%rdi
ffffffff802142b1:	e8 16 be fe ff       	callq  ffffffff802000cc <sigismember>
ffffffff802142b6:	85 c0                	test   %eax,%eax
ffffffff802142b8:	75 11                	jne    ffffffff802142cb <caml_process_pending_signals+0x9b>
ffffffff802142ba:	31 f6                	xor    %esi,%esi
ffffffff802142bc:	89 df                	mov    %ebx,%edi
ffffffff802142be:	49 c7 04 ec 00 00 00 	movq   $0x0,(%r12,%rbp,8)
ffffffff802142c5:	00 
ffffffff802142c6:	e8 45 fe ff ff       	callq  ffffffff80214110 <caml_execute_signal>
ffffffff802142cb:	83 c3 01             	add    $0x1,%ebx
ffffffff802142ce:	83 fb 41             	cmp    $0x41,%ebx
ffffffff802142d1:	75 cd                	jne    ffffffff802142a0 <caml_process_pending_signals+0x70>
ffffffff802142d3:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
ffffffff802142da:	00 
ffffffff802142db:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff802142e2:	00 00 
ffffffff802142e4:	75 0e                	jne    ffffffff802142f4 <caml_process_pending_signals+0xc4>
ffffffff802142e6:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
ffffffff802142ed:	5b                   	pop    %rbx
ffffffff802142ee:	5d                   	pop    %rbp
ffffffff802142ef:	41 5c                	pop    %r12
ffffffff802142f1:	41 5d                	pop    %r13
ffffffff802142f3:	c3                   	retq   
ffffffff802142f4:	e8 a7 bd fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802142f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80214300 <caml_enter_blocking_section>:
ffffffff80214300:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80214304:	eb 10                	jmp    ffffffff80214316 <caml_enter_blocking_section+0x16>
ffffffff80214306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021430d:	00 00 00 
ffffffff80214310:	ff 15 0a 7a 01 00    	callq  *0x17a0a(%rip)        # ffffffff8022bd20 <caml_leave_blocking_section_hook>
ffffffff80214316:	e8 15 ff ff ff       	callq  ffffffff80214230 <caml_process_pending_signals>
ffffffff8021431b:	ff 15 07 7a 01 00    	callq  *0x17a07(%rip)        # ffffffff8022bd28 <caml_enter_blocking_section_hook>
ffffffff80214321:	48 8b 05 e0 1f 03 00 	mov    0x31fe0(%rip),%rax        # ffffffff80246308 <caml_signals_are_pending>
ffffffff80214328:	48 85 c0             	test   %rax,%rax
ffffffff8021432b:	75 e3                	jne    ffffffff80214310 <caml_enter_blocking_section+0x10>
ffffffff8021432d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80214331:	c3                   	retq   
ffffffff80214332:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214339:	00 00 00 00 
ffffffff8021433d:	0f 1f 00             	nopl   (%rax)

ffffffff80214340 <caml_leave_blocking_section>:
ffffffff80214340:	55                   	push   %rbp
ffffffff80214341:	53                   	push   %rbx
ffffffff80214342:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80214346:	e8 a5 41 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff8021434b:	8b 28                	mov    (%rax),%ebp
ffffffff8021434d:	48 89 c3             	mov    %rax,%rbx
ffffffff80214350:	ff 15 ca 79 01 00    	callq  *0x179ca(%rip)        # ffffffff8022bd20 <caml_leave_blocking_section_hook>
ffffffff80214356:	48 c7 05 a7 1f 03 00 	movq   $0x1,0x31fa7(%rip)        # ffffffff80246308 <caml_signals_are_pending>
ffffffff8021435d:	01 00 00 00 
ffffffff80214361:	e8 ca fe ff ff       	callq  ffffffff80214230 <caml_process_pending_signals>
ffffffff80214366:	89 2b                	mov    %ebp,(%rbx)
ffffffff80214368:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021436c:	5b                   	pop    %rbx
ffffffff8021436d:	5d                   	pop    %rbp
ffffffff8021436e:	c3                   	retq   
ffffffff8021436f:	90                   	nop

ffffffff80214370 <caml_request_major_slice>:
ffffffff80214370:	48 8b 05 19 7c 02 00 	mov    0x27c19(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff80214377:	c7 05 63 1d 03 00 01 	movl   $0x1,0x31d63(%rip)        # ffffffff802460e4 <caml_requested_major_slice>
ffffffff8021437e:	00 00 00 
ffffffff80214381:	48 89 05 f8 7b 02 00 	mov    %rax,0x27bf8(%rip)        # ffffffff8023bf80 <caml_young_limit>
ffffffff80214388:	c3                   	retq   
ffffffff80214389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80214390 <caml_request_minor_gc>:
ffffffff80214390:	48 8b 05 f9 7b 02 00 	mov    0x27bf9(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff80214397:	c7 05 3f 1d 03 00 01 	movl   $0x1,0x31d3f(%rip)        # ffffffff802460e0 <caml_requested_minor_gc>
ffffffff8021439e:	00 00 00 
ffffffff802143a1:	48 89 05 d8 7b 02 00 	mov    %rax,0x27bd8(%rip)        # ffffffff8023bf80 <caml_young_limit>
ffffffff802143a8:	c3                   	retq   
ffffffff802143a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802143b0 <caml_convert_signal_number>:
ffffffff802143b0:	89 f8                	mov    %edi,%eax
ffffffff802143b2:	85 ff                	test   %edi,%edi
ffffffff802143b4:	79 13                	jns    ffffffff802143c9 <caml_convert_signal_number+0x19>
ffffffff802143b6:	83 ff e3             	cmp    $0xffffffe3,%edi
ffffffff802143b9:	76 0e                	jbe    ffffffff802143c9 <caml_convert_signal_number+0x19>
ffffffff802143bb:	f7 d0                	not    %eax
ffffffff802143bd:	48 8d 15 1c dd 00 00 	lea    0xdd1c(%rip),%rdx        # ffffffff802220e0 <posix_signals>
ffffffff802143c4:	48 98                	cltq   
ffffffff802143c6:	8b 04 82             	mov    (%rdx,%rax,4),%eax
ffffffff802143c9:	c3                   	retq   
ffffffff802143ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802143d0 <caml_rev_convert_signal_number>:
ffffffff802143d0:	31 d2                	xor    %edx,%edx
ffffffff802143d2:	b9 06 00 00 00       	mov    $0x6,%ecx
ffffffff802143d7:	48 8d 35 02 dd 00 00 	lea    0xdd02(%rip),%rsi        # ffffffff802220e0 <posix_signals>
ffffffff802143de:	eb 0d                	jmp    ffffffff802143ed <caml_rev_convert_signal_number+0x1d>
ffffffff802143e0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff802143e4:	48 83 fa 1c          	cmp    $0x1c,%rdx
ffffffff802143e8:	74 16                	je     ffffffff80214400 <caml_rev_convert_signal_number+0x30>
ffffffff802143ea:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
ffffffff802143ed:	89 d0                	mov    %edx,%eax
ffffffff802143ef:	39 cf                	cmp    %ecx,%edi
ffffffff802143f1:	75 ed                	jne    ffffffff802143e0 <caml_rev_convert_signal_number+0x10>
ffffffff802143f3:	f7 d0                	not    %eax
ffffffff802143f5:	c3                   	retq   
ffffffff802143f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802143fd:	00 00 00 
ffffffff80214400:	89 f8                	mov    %edi,%eax
ffffffff80214402:	c3                   	retq   
ffffffff80214403:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021440a:	00 00 00 00 
ffffffff8021440e:	66 90                	xchg   %ax,%ax

ffffffff80214410 <caml_install_signal_handler>:
ffffffff80214410:	55                   	push   %rbp
ffffffff80214411:	48 89 f8             	mov    %rdi,%rax
ffffffff80214414:	53                   	push   %rbx
ffffffff80214415:	48 d1 f8             	sar    %rax
ffffffff80214418:	48 63 e8             	movslq %eax,%rbp
ffffffff8021441b:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff80214422:	48 8b 1d 4f fc 02 00 	mov    0x2fc4f(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff80214429:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8021442e:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff80214433:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff80214437:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
ffffffff8021443e:	00 00 
ffffffff80214440:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
ffffffff80214447:	00 
ffffffff80214448:	31 c9                	xor    %ecx,%ecx
ffffffff8021444a:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
ffffffff8021444f:	48 89 e2             	mov    %rsp,%rdx
ffffffff80214452:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
ffffffff80214457:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff8021445c:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
ffffffff80214461:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
ffffffff80214466:	48 89 15 0b fc 02 00 	mov    %rdx,0x2fc0b(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021446d:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff80214472:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
ffffffff80214477:	89 c2                	mov    %eax,%edx
ffffffff80214479:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8021447e:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff80214485:	00 00 
ffffffff80214487:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
ffffffff8021448e:	00 00 
ffffffff80214490:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80214497:	00 00 
ffffffff80214499:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff802144a0:	00 00 
ffffffff802144a2:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff802144a9:	00 00 
ffffffff802144ab:	85 c0                	test   %eax,%eax
ffffffff802144ad:	79 16                	jns    ffffffff802144c5 <caml_install_signal_handler+0xb5>
ffffffff802144af:	83 f8 e3             	cmp    $0xffffffe3,%eax
ffffffff802144b2:	76 11                	jbe    ffffffff802144c5 <caml_install_signal_handler+0xb5>
ffffffff802144b4:	f7 d0                	not    %eax
ffffffff802144b6:	48 8d 15 23 dc 00 00 	lea    0xdc23(%rip),%rdx        # ffffffff802220e0 <posix_signals>
ffffffff802144bd:	48 98                	cltq   
ffffffff802144bf:	48 63 2c 82          	movslq (%rdx,%rax,4),%rbp
ffffffff802144c3:	89 ea                	mov    %ebp,%edx
ffffffff802144c5:	83 fa 40             	cmp    $0x40,%edx
ffffffff802144c8:	0f 87 11 01 00 00    	ja     ffffffff802145df <caml_install_signal_handler+0x1cf>
ffffffff802144ce:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802144d2:	31 f6                	xor    %esi,%esi
ffffffff802144d4:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff802144d8:	74 0d                	je     ffffffff802144e7 <caml_install_signal_handler+0xd7>
ffffffff802144da:	31 f6                	xor    %esi,%esi
ffffffff802144dc:	48 83 f8 03          	cmp    $0x3,%rax
ffffffff802144e0:	40 0f 95 c6          	setne  %sil
ffffffff802144e4:	83 c6 01             	add    $0x1,%esi
ffffffff802144e7:	89 ef                	mov    %ebp,%edi
ffffffff802144e9:	e8 02 fa ff ff       	callq  ffffffff80213ef0 <caml_set_signal_action>
ffffffff802144ee:	83 f8 01             	cmp    $0x1,%eax
ffffffff802144f1:	74 1d                	je     ffffffff80214510 <caml_install_signal_handler+0x100>
ffffffff802144f3:	83 f8 02             	cmp    $0x2,%eax
ffffffff802144f6:	0f 84 84 00 00 00    	je     ffffffff80214580 <caml_install_signal_handler+0x170>
ffffffff802144fc:	85 c0                	test   %eax,%eax
ffffffff802144fe:	74 70                	je     ffffffff80214570 <caml_install_signal_handler+0x160>
ffffffff80214500:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80214505:	e8 d6 10 00 00       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff8021450a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80214510:	48 c7 44 24 18 03 00 	movq   $0x3,0x18(%rsp)
ffffffff80214517:	00 00 
ffffffff80214519:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8021451d:	a8 01                	test   $0x1,%al
ffffffff8021451f:	75 1c                	jne    ffffffff8021453d <caml_install_signal_handler+0x12d>
ffffffff80214521:	48 8b 15 e8 1d 03 00 	mov    0x31de8(%rip),%rdx        # ffffffff80246310 <caml_signal_handlers>
ffffffff80214528:	48 85 d2             	test   %rdx,%rdx
ffffffff8021452b:	0f 84 7f 00 00 00    	je     ffffffff802145b0 <caml_install_signal_handler+0x1a0>
ffffffff80214531:	48 8b 30             	mov    (%rax),%rsi
ffffffff80214534:	48 8d 3c ea          	lea    (%rdx,%rbp,8),%rdi
ffffffff80214538:	e8 23 c1 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021453d:	e8 ee fc ff ff       	callq  ffffffff80214230 <caml_process_pending_signals>
ffffffff80214542:	48 89 1d 2f fb 02 00 	mov    %rbx,0x2fb2f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80214549:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021454e:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
ffffffff80214555:	00 
ffffffff80214556:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8021455d:	00 00 
ffffffff8021455f:	0f 85 86 00 00 00    	jne    ffffffff802145eb <caml_install_signal_handler+0x1db>
ffffffff80214565:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
ffffffff8021456c:	5b                   	pop    %rbx
ffffffff8021456d:	5d                   	pop    %rbp
ffffffff8021456e:	c3                   	retq   
ffffffff8021456f:	90                   	nop
ffffffff80214570:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80214577:	00 00 
ffffffff80214579:	eb 9e                	jmp    ffffffff80214519 <caml_install_signal_handler+0x109>
ffffffff8021457b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80214580:	31 f6                	xor    %esi,%esi
ffffffff80214582:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80214587:	e8 74 46 00 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff8021458c:	48 8b 0d 7d 1d 03 00 	mov    0x31d7d(%rip),%rcx        # ffffffff80246310 <caml_signal_handlers>
ffffffff80214593:	48 63 d5             	movslq %ebp,%rdx
ffffffff80214596:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021459b:	48 8b 14 d1          	mov    (%rcx,%rdx,8),%rdx
ffffffff8021459f:	48 89 10             	mov    %rdx,(%rax)
ffffffff802145a2:	e9 72 ff ff ff       	jmpq   ffffffff80214519 <caml_install_signal_handler+0x109>
ffffffff802145a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802145ae:	00 00 
ffffffff802145b0:	31 f6                	xor    %esi,%esi
ffffffff802145b2:	bf 41 00 00 00       	mov    $0x41,%edi
ffffffff802145b7:	e8 14 45 00 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff802145bc:	48 8d 3d 4d 1d 03 00 	lea    0x31d4d(%rip),%rdi        # ffffffff80246310 <caml_signal_handlers>
ffffffff802145c3:	48 89 05 46 1d 03 00 	mov    %rax,0x31d46(%rip)        # ffffffff80246310 <caml_signal_handlers>
ffffffff802145ca:	e8 a1 45 ff ff       	callq  ffffffff80208b70 <caml_register_global_root>
ffffffff802145cf:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802145d3:	48 8b 15 36 1d 03 00 	mov    0x31d36(%rip),%rdx        # ffffffff80246310 <caml_signal_handlers>
ffffffff802145da:	e9 52 ff ff ff       	jmpq   ffffffff80214531 <caml_install_signal_handler+0x121>
ffffffff802145df:	48 8d 3d da da 00 00 	lea    0xdada(%rip),%rdi        # ffffffff802220c0 <int32_length+0x5e0>
ffffffff802145e6:	e8 95 2e ff ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff802145eb:	e8 b0 ba fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>

ffffffff802145f0 <scanmult>:
ffffffff802145f0:	41 55                	push   %r13
ffffffff802145f2:	41 54                	push   %r12
ffffffff802145f4:	55                   	push   %rbp
ffffffff802145f5:	48 89 fd             	mov    %rdi,%rbp
ffffffff802145f8:	53                   	push   %rbx
ffffffff802145f9:	48 89 f3             	mov    %rsi,%rbx
ffffffff802145fc:	48 8d 35 4d db 00 00 	lea    0xdb4d(%rip),%rsi        # ffffffff80222150 <posix_signals+0x70>
ffffffff80214603:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80214607:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021460e:	00 00 
ffffffff80214610:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80214615:	31 c0                	xor    %eax,%eax
ffffffff80214617:	4c 8d 6c 24 03       	lea    0x3(%rsp),%r13
ffffffff8021461c:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
ffffffff80214621:	c6 44 24 03 20       	movb   $0x20,0x3(%rsp)
ffffffff80214626:	4c 89 e9             	mov    %r13,%rcx
ffffffff80214629:	4c 89 e2             	mov    %r12,%rdx
ffffffff8021462c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%rsp)
ffffffff80214633:	00 
ffffffff80214634:	e8 70 ba fe ff       	callq  ffffffff802000a9 <__isoc99_sscanf>
ffffffff80214639:	4c 89 e9             	mov    %r13,%rcx
ffffffff8021463c:	4c 89 e2             	mov    %r12,%rdx
ffffffff8021463f:	48 89 ef             	mov    %rbp,%rdi
ffffffff80214642:	48 8d 35 0d db 00 00 	lea    0xdb0d(%rip),%rsi        # ffffffff80222156 <posix_signals+0x76>
ffffffff80214649:	31 c0                	xor    %eax,%eax
ffffffff8021464b:	e8 59 ba fe ff       	callq  ffffffff802000a9 <__isoc99_sscanf>
ffffffff80214650:	0f b6 44 24 03       	movzbl 0x3(%rsp),%eax
ffffffff80214655:	3c 4d                	cmp    $0x4d,%al
ffffffff80214657:	74 2f                	je     ffffffff80214688 <scanmult+0x98>
ffffffff80214659:	3c 6b                	cmp    $0x6b,%al
ffffffff8021465b:	74 4b                	je     ffffffff802146a8 <scanmult+0xb8>
ffffffff8021465d:	3c 47                	cmp    $0x47,%al
ffffffff8021465f:	74 37                	je     ffffffff80214698 <scanmult+0xa8>
ffffffff80214661:	8b 44 24 04          	mov    0x4(%rsp),%eax
ffffffff80214665:	48 89 03             	mov    %rax,(%rbx)
ffffffff80214668:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021466d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80214674:	00 00 
ffffffff80214676:	75 3d                	jne    ffffffff802146b5 <scanmult+0xc5>
ffffffff80214678:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021467c:	5b                   	pop    %rbx
ffffffff8021467d:	5d                   	pop    %rbp
ffffffff8021467e:	41 5c                	pop    %r12
ffffffff80214680:	41 5d                	pop    %r13
ffffffff80214682:	c3                   	retq   
ffffffff80214683:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80214688:	8b 44 24 04          	mov    0x4(%rsp),%eax
ffffffff8021468c:	48 c1 e0 14          	shl    $0x14,%rax
ffffffff80214690:	48 89 03             	mov    %rax,(%rbx)
ffffffff80214693:	eb d3                	jmp    ffffffff80214668 <scanmult+0x78>
ffffffff80214695:	0f 1f 00             	nopl   (%rax)
ffffffff80214698:	8b 44 24 04          	mov    0x4(%rsp),%eax
ffffffff8021469c:	48 c1 e0 1e          	shl    $0x1e,%rax
ffffffff802146a0:	48 89 03             	mov    %rax,(%rbx)
ffffffff802146a3:	eb c3                	jmp    ffffffff80214668 <scanmult+0x78>
ffffffff802146a5:	0f 1f 00             	nopl   (%rax)
ffffffff802146a8:	8b 44 24 04          	mov    0x4(%rsp),%eax
ffffffff802146ac:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff802146b0:	48 89 03             	mov    %rax,(%rbx)
ffffffff802146b3:	eb b3                	jmp    ffffffff80214668 <scanmult+0x78>
ffffffff802146b5:	e8 e6 b9 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802146ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802146c0 <call_registered_value>:
ffffffff802146c0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802146c4:	e8 87 09 ff ff       	callq  ffffffff80205050 <caml_named_value>
ffffffff802146c9:	48 85 c0             	test   %rax,%rax
ffffffff802146cc:	74 12                	je     ffffffff802146e0 <call_registered_value+0x20>
ffffffff802146ce:	48 8b 38             	mov    (%rax),%rdi
ffffffff802146d1:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff802146d6:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802146da:	e9 91 f7 fe ff       	jmpq   ffffffff80203e70 <caml_callback_exn>
ffffffff802146df:	90                   	nop
ffffffff802146e0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802146e4:	c3                   	retq   
ffffffff802146e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802146ec:	00 00 00 00 

ffffffff802146f0 <caml_init_atom_table>:
ffffffff802146f0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff802146f4:	31 f6                	xor    %esi,%esi
ffffffff802146f6:	bf 00 10 00 00       	mov    $0x1000,%edi
ffffffff802146fb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80214702:	00 00 
ffffffff80214704:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80214709:	31 c0                	xor    %eax,%eax
ffffffff8021470b:	48 89 e2             	mov    %rsp,%rdx
ffffffff8021470e:	e8 dd c0 ff ff       	callq  ffffffff802107f0 <caml_stat_alloc_aligned_noexc>
ffffffff80214713:	31 d2                	xor    %edx,%edx
ffffffff80214715:	48 89 05 14 1c 03 00 	mov    %rax,0x31c14(%rip)        # ffffffff80246330 <caml_atom_table>
ffffffff8021471c:	eb 09                	jmp    ffffffff80214727 <caml_init_atom_table+0x37>
ffffffff8021471e:	66 90                	xchg   %ax,%ax
ffffffff80214720:	48 8b 05 09 1c 03 00 	mov    0x31c09(%rip),%rax        # ffffffff80246330 <caml_atom_table>
ffffffff80214727:	48 89 14 d0          	mov    %rdx,(%rax,%rdx,8)
ffffffff8021472b:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021472f:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
ffffffff80214736:	75 e8                	jne    ffffffff80214720 <caml_init_atom_table+0x30>
ffffffff80214738:	48 8b 35 f1 1b 03 00 	mov    0x31bf1(%rip),%rsi        # ffffffff80246330 <caml_atom_table>
ffffffff8021473f:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80214744:	48 8d 96 08 08 00 00 	lea    0x808(%rsi),%rdx
ffffffff8021474b:	e8 d0 c5 ff ff       	callq  ffffffff80210d20 <caml_page_table_add>
ffffffff80214750:	85 c0                	test   %eax,%eax
ffffffff80214752:	75 15                	jne    ffffffff80214769 <caml_init_atom_table+0x79>
ffffffff80214754:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80214759:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80214760:	00 00 
ffffffff80214762:	75 13                	jne    ffffffff80214777 <caml_init_atom_table+0x87>
ffffffff80214764:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80214768:	c3                   	retq   
ffffffff80214769:	48 8d 3d 10 da 00 00 	lea    0xda10(%rip),%rdi        # ffffffff80222180 <posix_signals+0xa0>
ffffffff80214770:	31 c0                	xor    %eax,%eax
ffffffff80214772:	e8 59 db ff ff       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff80214777:	e8 24 b9 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021477c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80214780 <caml_parse_ocamlrunparam>:
ffffffff80214780:	55                   	push   %rbp
ffffffff80214781:	48 8d 3d d6 d9 00 00 	lea    0xd9d6(%rip),%rdi        # ffffffff8022215e <posix_signals+0x7e>
ffffffff80214788:	53                   	push   %rbx
ffffffff80214789:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8021478d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80214794:	00 00 
ffffffff80214796:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8021479b:	31 c0                	xor    %eax,%eax
ffffffff8021479d:	e8 be 24 00 00       	callq  ffffffff80216c60 <caml_secure_getenv>
ffffffff802147a2:	48 89 c3             	mov    %rax,%rbx
ffffffff802147a5:	48 85 c0             	test   %rax,%rax
ffffffff802147a8:	0f 84 fc 01 00 00    	je     ffffffff802149aa <caml_parse_ocamlrunparam+0x22a>
ffffffff802147ae:	0f b6 03             	movzbl (%rbx),%eax
ffffffff802147b1:	84 c0                	test   %al,%al
ffffffff802147b3:	74 3a                	je     ffffffff802147ef <caml_parse_ocamlrunparam+0x6f>
ffffffff802147b5:	48 8d 2d 88 da 00 00 	lea    0xda88(%rip),%rbp        # ffffffff80222244 <posix_signals+0x164>
ffffffff802147bc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802147c0:	83 e8 48             	sub    $0x48,%eax
ffffffff802147c3:	48 83 c3 01          	add    $0x1,%rbx
ffffffff802147c7:	3c 2f                	cmp    $0x2f,%al
ffffffff802147c9:	77 1d                	ja     ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff802147cb:	0f b6 c0             	movzbl %al,%eax
ffffffff802147ce:	48 63 44 85 00       	movslq 0x0(%rbp,%rax,4),%rax
ffffffff802147d3:	48 01 e8             	add    %rbp,%rax
ffffffff802147d6:	ff e0                	jmpq   *%rax
ffffffff802147d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802147df:	00 
ffffffff802147e0:	48 83 c3 01          	add    $0x1,%rbx
ffffffff802147e4:	3c 2c                	cmp    $0x2c,%al
ffffffff802147e6:	74 28                	je     ffffffff80214810 <caml_parse_ocamlrunparam+0x90>
ffffffff802147e8:	0f b6 03             	movzbl (%rbx),%eax
ffffffff802147eb:	84 c0                	test   %al,%al
ffffffff802147ed:	75 f1                	jne    ffffffff802147e0 <caml_parse_ocamlrunparam+0x60>
ffffffff802147ef:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff802147f4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff802147fb:	00 00 
ffffffff802147fd:	0f 85 c4 01 00 00    	jne    ffffffff802149c7 <caml_parse_ocamlrunparam+0x247>
ffffffff80214803:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80214807:	5b                   	pop    %rbx
ffffffff80214808:	5d                   	pop    %rbp
ffffffff80214809:	c3                   	retq   
ffffffff8021480a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80214810:	0f b6 03             	movzbl (%rbx),%eax
ffffffff80214813:	84 c0                	test   %al,%al
ffffffff80214815:	75 a9                	jne    ffffffff802147c0 <caml_parse_ocamlrunparam+0x40>
ffffffff80214817:	eb d6                	jmp    ffffffff802147ef <caml_parse_ocamlrunparam+0x6f>
ffffffff80214819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80214820:	48 8d 35 29 75 01 00 	lea    0x17529(%rip),%rsi        # ffffffff8022bd50 <caml_init_major_window>
ffffffff80214827:	48 89 df             	mov    %rbx,%rdi
ffffffff8021482a:	e8 c1 fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff8021482f:	eb b7                	jmp    ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff80214831:	48 8d 35 a0 77 02 00 	lea    0x277a0(%rip),%rsi        # ffffffff8023bfd8 <caml_verb_gc>
ffffffff80214838:	48 89 df             	mov    %rbx,%rdi
ffffffff8021483b:	e8 b0 fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff80214840:	eb a6                	jmp    ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff80214842:	48 8d 35 df 1a 03 00 	lea    0x31adf(%rip),%rsi        # ffffffff80246328 <caml_trace_level>
ffffffff80214849:	48 89 df             	mov    %rbx,%rdi
ffffffff8021484c:	e8 9f fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff80214851:	eb 95                	jmp    ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff80214853:	48 8d 35 16 75 01 00 	lea    0x17516(%rip),%rsi        # ffffffff8022bd70 <caml_init_minor_heap_wsz>
ffffffff8021485a:	48 89 df             	mov    %rbx,%rdi
ffffffff8021485d:	e8 8e fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff80214862:	eb 84                	jmp    ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff80214864:	48 89 e6             	mov    %rsp,%rsi
ffffffff80214867:	48 89 df             	mov    %rbx,%rdi
ffffffff8021486a:	e8 81 fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff8021486f:	31 c0                	xor    %eax,%eax
ffffffff80214871:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
ffffffff80214876:	0f 95 c0             	setne  %al
ffffffff80214879:	89 05 51 3c 03 00    	mov    %eax,0x33c51(%rip)        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021487f:	e9 64 ff ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff80214884:	48 8d 35 f5 74 01 00 	lea    0x174f5(%rip),%rsi        # ffffffff8022bd80 <caml_init_percent_free>
ffffffff8021488b:	48 89 df             	mov    %rbx,%rdi
ffffffff8021488e:	e8 5d fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff80214893:	e9 50 ff ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff80214898:	48 8d 35 99 74 01 00 	lea    0x17499(%rip),%rsi        # ffffffff8022bd38 <caml_init_custom_minor_max_bsz>
ffffffff8021489f:	48 89 df             	mov    %rbx,%rdi
ffffffff802148a2:	e8 49 fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff802148a7:	e9 3c ff ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff802148ac:	48 8d 35 8d 74 01 00 	lea    0x1748d(%rip),%rsi        # ffffffff8022bd40 <caml_init_custom_minor_ratio>
ffffffff802148b3:	48 89 df             	mov    %rbx,%rdi
ffffffff802148b6:	e8 35 fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff802148bb:	e9 28 ff ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff802148c0:	48 8d 35 91 74 01 00 	lea    0x17491(%rip),%rsi        # ffffffff8022bd58 <caml_init_max_stack_wsz>
ffffffff802148c7:	48 89 df             	mov    %rbx,%rdi
ffffffff802148ca:	e8 21 fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff802148cf:	e9 14 ff ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff802148d4:	48 8d 35 8d 74 01 00 	lea    0x1748d(%rip),%rsi        # ffffffff8022bd68 <caml_init_heap_chunk_sz>
ffffffff802148db:	48 89 df             	mov    %rbx,%rdi
ffffffff802148de:	e8 0d fd ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff802148e3:	e9 00 ff ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff802148e8:	48 8d 35 71 74 01 00 	lea    0x17471(%rip),%rsi        # ffffffff8022bd60 <caml_init_heap_wsz>
ffffffff802148ef:	48 89 df             	mov    %rbx,%rdi
ffffffff802148f2:	e8 f9 fc ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff802148f7:	e9 ec fe ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff802148fc:	48 89 e6             	mov    %rsp,%rsi
ffffffff802148ff:	48 89 df             	mov    %rbx,%rdi
ffffffff80214902:	e8 e9 fc ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff80214907:	31 c0                	xor    %eax,%eax
ffffffff80214909:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
ffffffff8021490e:	0f 95 c0             	setne  %al
ffffffff80214911:	89 05 09 1a 03 00    	mov    %eax,0x31a09(%rip)        # ffffffff80246320 <caml_cleanup_on_exit>
ffffffff80214917:	e9 cc fe ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff8021491c:	48 89 df             	mov    %rbx,%rdi
ffffffff8021491f:	48 89 e6             	mov    %rsp,%rsi
ffffffff80214922:	e8 c9 fc ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff80214927:	48 83 3c 24 01       	cmpq   $0x1,(%rsp)
ffffffff8021492c:	48 19 ff             	sbb    %rdi,%rdi
ffffffff8021492f:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
ffffffff80214933:	48 83 c7 03          	add    $0x3,%rdi
ffffffff80214937:	e8 04 fb fe ff       	callq  ffffffff80204440 <caml_record_backtrace>
ffffffff8021493c:	e9 a7 fe ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff80214941:	48 89 df             	mov    %rbx,%rdi
ffffffff80214944:	48 89 e6             	mov    %rsp,%rsi
ffffffff80214947:	e8 a4 fc ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff8021494c:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff80214950:	e8 bb 6e 00 00       	callq  ffffffff8021b810 <caml_set_allocation_policy>
ffffffff80214955:	e9 8e fe ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff8021495a:	48 8d 35 6f 76 02 00 	lea    0x2766f(%rip),%rsi        # ffffffff8023bfd0 <caml_runtime_warnings>
ffffffff80214961:	48 89 df             	mov    %rbx,%rdi
ffffffff80214964:	e8 87 fc ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff80214969:	e9 7a fe ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff8021496e:	48 8d 35 03 74 01 00 	lea    0x17403(%rip),%rsi        # ffffffff8022bd78 <caml_init_max_percent_free>
ffffffff80214975:	48 89 df             	mov    %rbx,%rdi
ffffffff80214978:	e8 73 fc ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff8021497d:	e9 66 fe ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff80214982:	48 8d 35 bf 73 01 00 	lea    0x173bf(%rip),%rsi        # ffffffff8022bd48 <caml_init_custom_major_ratio>
ffffffff80214989:	48 89 df             	mov    %rbx,%rdi
ffffffff8021498c:	e8 5f fc ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff80214991:	e9 52 fe ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff80214996:	48 8d 35 a3 74 02 00 	lea    0x274a3(%rip),%rsi        # ffffffff8023be40 <caml_use_huge_pages>
ffffffff8021499d:	48 89 df             	mov    %rbx,%rdi
ffffffff802149a0:	e8 4b fc ff ff       	callq  ffffffff802145f0 <scanmult>
ffffffff802149a5:	e9 3e fe ff ff       	jmpq   ffffffff802147e8 <caml_parse_ocamlrunparam+0x68>
ffffffff802149aa:	48 8d 3d ae d7 00 00 	lea    0xd7ae(%rip),%rdi        # ffffffff8022215f <posix_signals+0x7f>
ffffffff802149b1:	e8 aa 22 00 00       	callq  ffffffff80216c60 <caml_secure_getenv>
ffffffff802149b6:	48 89 c3             	mov    %rax,%rbx
ffffffff802149b9:	48 85 c0             	test   %rax,%rax
ffffffff802149bc:	0f 84 2d fe ff ff    	je     ffffffff802147ef <caml_parse_ocamlrunparam+0x6f>
ffffffff802149c2:	e9 e7 fd ff ff       	jmpq   ffffffff802147ae <caml_parse_ocamlrunparam+0x2e>
ffffffff802149c7:	e8 d4 b6 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802149cc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802149d0 <caml_startup_aux>:
ffffffff802149d0:	83 3d 61 19 03 00 01 	cmpl   $0x1,0x31961(%rip)        # ffffffff80246338 <shutdown_happened>
ffffffff802149d7:	41 54                	push   %r12
ffffffff802149d9:	74 38                	je     ffffffff80214a13 <caml_startup_aux+0x43>
ffffffff802149db:	8b 05 5b 19 03 00    	mov    0x3195b(%rip),%eax        # ffffffff8024633c <startup_count>
ffffffff802149e1:	45 31 e4             	xor    %r12d,%r12d
ffffffff802149e4:	83 c0 01             	add    $0x1,%eax
ffffffff802149e7:	89 05 4f 19 03 00    	mov    %eax,0x3194f(%rip)        # ffffffff8024633c <startup_count>
ffffffff802149ed:	83 f8 01             	cmp    $0x1,%eax
ffffffff802149f0:	7f 0a                	jg     ffffffff802149fc <caml_startup_aux+0x2c>
ffffffff802149f2:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff802149f8:	85 ff                	test   %edi,%edi
ffffffff802149fa:	75 0c                	jne    ffffffff80214a08 <caml_startup_aux+0x38>
ffffffff802149fc:	44 89 e0             	mov    %r12d,%eax
ffffffff802149ff:	41 5c                	pop    %r12
ffffffff80214a01:	c3                   	retq   
ffffffff80214a02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80214a08:	e8 13 bd ff ff       	callq  ffffffff80210720 <caml_stat_create_pool>
ffffffff80214a0d:	44 89 e0             	mov    %r12d,%eax
ffffffff80214a10:	41 5c                	pop    %r12
ffffffff80214a12:	c3                   	retq   
ffffffff80214a13:	48 8d 3d 96 d7 00 00 	lea    0xd796(%rip),%rdi        # ffffffff802221b0 <posix_signals+0xd0>
ffffffff80214a1a:	31 c0                	xor    %eax,%eax
ffffffff80214a1c:	e8 af d8 ff ff       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff80214a21:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214a28:	00 00 00 00 
ffffffff80214a2c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80214a30 <caml_shutdown>:
ffffffff80214a30:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80214a34:	8b 05 02 19 03 00    	mov    0x31902(%rip),%eax        # ffffffff8024633c <startup_count>
ffffffff80214a3a:	85 c0                	test   %eax,%eax
ffffffff80214a3c:	7e 43                	jle    ffffffff80214a81 <caml_shutdown+0x51>
ffffffff80214a3e:	83 e8 01             	sub    $0x1,%eax
ffffffff80214a41:	89 05 f5 18 03 00    	mov    %eax,0x318f5(%rip)        # ffffffff8024633c <startup_count>
ffffffff80214a47:	85 c0                	test   %eax,%eax
ffffffff80214a49:	7f 31                	jg     ffffffff80214a7c <caml_shutdown+0x4c>
ffffffff80214a4b:	48 8d 3d 0f d6 00 00 	lea    0xd60f(%rip),%rdi        # ffffffff80222061 <int32_length+0x581>
ffffffff80214a52:	e8 69 fc ff ff       	callq  ffffffff802146c0 <call_registered_value>
ffffffff80214a57:	48 8d 3d 0e d7 00 00 	lea    0xd70e(%rip),%rdi        # ffffffff8022216c <posix_signals+0x8c>
ffffffff80214a5e:	e8 5d fc ff ff       	callq  ffffffff802146c0 <call_registered_value>
ffffffff80214a63:	e8 38 ac ff ff       	callq  ffffffff8020f6a0 <caml_finalise_heap>
ffffffff80214a68:	e8 a3 2b ff ff       	callq  ffffffff80207610 <caml_free_locale>
ffffffff80214a6d:	e8 fe bc ff ff       	callq  ffffffff80210770 <caml_stat_destroy_pool>
ffffffff80214a72:	c7 05 bc 18 03 00 01 	movl   $0x1,0x318bc(%rip)        # ffffffff80246338 <shutdown_happened>
ffffffff80214a79:	00 00 00 
ffffffff80214a7c:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80214a80:	c3                   	retq   
ffffffff80214a81:	48 8d 3d 78 d7 00 00 	lea    0xd778(%rip),%rdi        # ffffffff80222200 <posix_signals+0x120>
ffffffff80214a88:	31 c0                	xor    %eax,%eax
ffffffff80214a8a:	e8 41 d8 ff ff       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff80214a8f:	90                   	nop

ffffffff80214a90 <caml_startup_common>:
ffffffff80214a90:	41 54                	push   %r12
ffffffff80214a92:	49 89 fc             	mov    %rdi,%r12
ffffffff80214a95:	55                   	push   %rbp
ffffffff80214a96:	89 f5                	mov    %esi,%ebp
ffffffff80214a98:	53                   	push   %rbx
ffffffff80214a99:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80214a9d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80214aa4:	00 00 
ffffffff80214aa6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80214aab:	31 c0                	xor    %eax,%eax
ffffffff80214aad:	e8 ce fc ff ff       	callq  ffffffff80214780 <caml_parse_ocamlrunparam>
ffffffff80214ab2:	8b 05 68 18 03 00    	mov    0x31868(%rip),%eax        # ffffffff80246320 <caml_cleanup_on_exit>
ffffffff80214ab8:	85 c0                	test   %eax,%eax
ffffffff80214aba:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80214abf:	0f 45 e8             	cmovne %eax,%ebp
ffffffff80214ac2:	89 ef                	mov    %ebp,%edi
ffffffff80214ac4:	e8 07 ff ff ff       	callq  ffffffff802149d0 <caml_startup_aux>
ffffffff80214ac9:	85 c0                	test   %eax,%eax
ffffffff80214acb:	75 2b                	jne    ffffffff80214af8 <caml_startup_common+0x68>
ffffffff80214acd:	0f 1f 00             	nopl   (%rax)
ffffffff80214ad0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80214ad5:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff80214ada:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff80214ae1:	00 00 
ffffffff80214ae3:	0f 85 24 02 00 00    	jne    ffffffff80214d0d <caml_startup_common+0x27d>
ffffffff80214ae9:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80214aed:	5b                   	pop    %rbx
ffffffff80214aee:	5d                   	pop    %rbp
ffffffff80214aef:	41 5c                	pop    %r12
ffffffff80214af1:	c3                   	retq   
ffffffff80214af2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80214af8:	e8 a3 e8 ff ff       	callq  ffffffff802133a0 <caml_init_frame_descriptors>
ffffffff80214afd:	31 ed                	xor    %ebp,%ebp
ffffffff80214aff:	48 8d 1d 3a 3d 01 00 	lea    0x13d3a(%rip),%rbx        # ffffffff80228840 <caml_data_segments>
ffffffff80214b06:	e8 45 3d ff ff       	callq  ffffffff80208850 <caml_init_ieee_floats>
ffffffff80214b0b:	e8 c0 2a ff ff       	callq  ffffffff802075d0 <caml_init_locale>
ffffffff80214b10:	e8 5b 57 00 00       	callq  ffffffff8021a270 <caml_init_custom_operations>
ffffffff80214b15:	48 8d 44 24 07       	lea    0x7(%rsp),%rax
ffffffff80214b1a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80214b1e:	ff 35 14 72 01 00    	pushq  0x17214(%rip)        # ffffffff8022bd38 <caml_init_custom_minor_max_bsz>
ffffffff80214b24:	48 8b 35 35 72 01 00 	mov    0x17235(%rip),%rsi        # ffffffff8022bd60 <caml_init_heap_wsz>
ffffffff80214b2b:	ff 35 0f 72 01 00    	pushq  0x1720f(%rip)        # ffffffff8022bd40 <caml_init_custom_minor_ratio>
ffffffff80214b31:	4c 8b 0d 18 72 01 00 	mov    0x17218(%rip),%r9        # ffffffff8022bd50 <caml_init_major_window>
ffffffff80214b38:	ff 35 0a 72 01 00    	pushq  0x1720a(%rip)        # ffffffff8022bd48 <caml_init_custom_major_ratio>
ffffffff80214b3e:	4c 8b 05 33 72 01 00 	mov    0x17233(%rip),%r8        # ffffffff8022bd78 <caml_init_max_percent_free>
ffffffff80214b45:	48 89 05 0c f5 02 00 	mov    %rax,0x2f50c(%rip)        # ffffffff80244058 <caml_top_of_stack>
ffffffff80214b4c:	48 8b 0d 2d 72 01 00 	mov    0x1722d(%rip),%rcx        # ffffffff8022bd80 <caml_init_percent_free>
ffffffff80214b53:	48 8b 15 0e 72 01 00 	mov    0x1720e(%rip),%rdx        # ffffffff8022bd68 <caml_init_heap_chunk_sz>
ffffffff80214b5a:	48 8b 3d 0f 72 01 00 	mov    0x1720f(%rip),%rdi        # ffffffff8022bd70 <caml_init_minor_heap_wsz>
ffffffff80214b61:	e8 ba 7d 00 00       	callq  ffffffff8021c920 <caml_init_gc>
ffffffff80214b66:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80214b6a:	e8 81 fb ff ff       	callq  ffffffff802146f0 <caml_init_atom_table>
ffffffff80214b6f:	48 8b 35 ca 3c 01 00 	mov    0x13cca(%rip),%rsi        # ffffffff80228840 <caml_data_segments>
ffffffff80214b76:	48 85 f6             	test   %rsi,%rsi
ffffffff80214b79:	74 3a                	je     ffffffff80214bb5 <caml_startup_common+0x125>
ffffffff80214b7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80214b80:	48 63 c5             	movslq %ebp,%rax
ffffffff80214b83:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff80214b88:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80214b8c:	48 8b 54 03 08       	mov    0x8(%rbx,%rax,1),%rdx
ffffffff80214b91:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80214b95:	e8 86 c1 ff ff       	callq  ffffffff80210d20 <caml_page_table_add>
ffffffff80214b9a:	85 c0                	test   %eax,%eax
ffffffff80214b9c:	0f 85 70 01 00 00    	jne    ffffffff80214d12 <caml_startup_common+0x282>
ffffffff80214ba2:	83 c5 01             	add    $0x1,%ebp
ffffffff80214ba5:	48 63 c5             	movslq %ebp,%rax
ffffffff80214ba8:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80214bac:	48 8b 34 03          	mov    (%rbx,%rax,1),%rsi
ffffffff80214bb0:	48 85 f6             	test   %rsi,%rsi
ffffffff80214bb3:	75 cb                	jne    ffffffff80214b80 <caml_startup_common+0xf0>
ffffffff80214bb5:	48 8b 0d ec 3c 01 00 	mov    0x13cec(%rip),%rcx        # ffffffff802288a8 <caml_code_segments>
ffffffff80214bbc:	48 8b 35 ed 3c 01 00 	mov    0x13ced(%rip),%rsi        # ffffffff802288b0 <caml_code_segments+0x8>
ffffffff80214bc3:	45 31 d2             	xor    %r10d,%r10d
ffffffff80214bc6:	45 31 c9             	xor    %r9d,%r9d
ffffffff80214bc9:	48 8b 05 e8 3c 01 00 	mov    0x13ce8(%rip),%rax        # ffffffff802288b8 <caml_code_segments+0x10>
ffffffff80214bd0:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80214bd5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff80214bdb:	48 8d 3d c6 3c 01 00 	lea    0x13cc6(%rip),%rdi        # ffffffff802288a8 <caml_code_segments>
ffffffff80214be2:	48 89 0d 5f 18 03 00 	mov    %rcx,0x3185f(%rip)        # ffffffff80246448 <caml_code_area_start>
ffffffff80214be9:	48 89 35 50 18 03 00 	mov    %rsi,0x31850(%rip)        # ffffffff80246440 <caml_code_area_end>
ffffffff80214bf0:	48 85 c0             	test   %rax,%rax
ffffffff80214bf3:	74 50                	je     ffffffff80214c45 <caml_startup_common+0x1b5>
ffffffff80214bf5:	0f 1f 00             	nopl   (%rax)
ffffffff80214bf8:	48 39 c1             	cmp    %rax,%rcx
ffffffff80214bfb:	76 06                	jbe    ffffffff80214c03 <caml_startup_common+0x173>
ffffffff80214bfd:	48 89 c1             	mov    %rax,%rcx
ffffffff80214c00:	45 89 c1             	mov    %r8d,%r9d
ffffffff80214c03:	48 63 c2             	movslq %edx,%rax
ffffffff80214c06:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80214c0a:	48 8b 44 07 08       	mov    0x8(%rdi,%rax,1),%rax
ffffffff80214c0f:	48 39 c6             	cmp    %rax,%rsi
ffffffff80214c12:	73 06                	jae    ffffffff80214c1a <caml_startup_common+0x18a>
ffffffff80214c14:	48 89 c6             	mov    %rax,%rsi
ffffffff80214c17:	45 89 c2             	mov    %r8d,%r10d
ffffffff80214c1a:	83 c2 01             	add    $0x1,%edx
ffffffff80214c1d:	48 63 c2             	movslq %edx,%rax
ffffffff80214c20:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80214c24:	48 8b 04 07          	mov    (%rdi,%rax,1),%rax
ffffffff80214c28:	48 85 c0             	test   %rax,%rax
ffffffff80214c2b:	75 cb                	jne    ffffffff80214bf8 <caml_startup_common+0x168>
ffffffff80214c2d:	45 84 c9             	test   %r9b,%r9b
ffffffff80214c30:	74 07                	je     ffffffff80214c39 <caml_startup_common+0x1a9>
ffffffff80214c32:	48 89 0d 0f 18 03 00 	mov    %rcx,0x3180f(%rip)        # ffffffff80246448 <caml_code_area_start>
ffffffff80214c39:	45 84 d2             	test   %r10b,%r10b
ffffffff80214c3c:	74 07                	je     ffffffff80214c45 <caml_startup_common+0x1b5>
ffffffff80214c3e:	48 89 35 fb 17 03 00 	mov    %rsi,0x317fb(%rip)        # ffffffff80246440 <caml_code_area_end>
ffffffff80214c45:	bf 28 00 00 00       	mov    $0x28,%edi
ffffffff80214c4a:	e8 e1 bc ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff80214c4f:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80214c54:	48 8d 3d d5 17 03 00 	lea    0x317d5(%rip),%rdi        # ffffffff80246430 <caml_code_fragments_table>
ffffffff80214c5b:	48 89 c5             	mov    %rax,%rbp
ffffffff80214c5e:	48 8b 05 e3 17 03 00 	mov    0x317e3(%rip),%rax        # ffffffff80246448 <caml_code_area_start>
ffffffff80214c65:	c6 45 20 00          	movb   $0x0,0x20(%rbp)
ffffffff80214c69:	48 89 45 00          	mov    %rax,0x0(%rbp)
ffffffff80214c6d:	48 8b 05 cc 17 03 00 	mov    0x317cc(%rip),%rax        # ffffffff80246440 <caml_code_area_end>
ffffffff80214c74:	48 89 45 08          	mov    %rax,0x8(%rbp)
ffffffff80214c78:	e8 33 d7 ff ff       	callq  ffffffff802123b0 <caml_ext_table_init>
ffffffff80214c7d:	48 89 ee             	mov    %rbp,%rsi
ffffffff80214c80:	48 8d 3d a9 17 03 00 	lea    0x317a9(%rip),%rdi        # ffffffff80246430 <caml_code_fragments_table>
ffffffff80214c87:	e8 54 d7 ff ff       	callq  ffffffff802123e0 <caml_ext_table_add>
ffffffff80214c8c:	e8 4f f3 ff ff       	callq  ffffffff80213fe0 <caml_init_signals>
ffffffff80214c91:	e8 9a f7 fe ff       	callq  ffffffff80204430 <caml_init_backtrace>
ffffffff80214c96:	e8 85 56 00 00       	callq  ffffffff8021a320 <caml_debugger_init>
ffffffff80214c9b:	49 8b 2c 24          	mov    (%r12),%rbp
ffffffff80214c9f:	48 8d 05 e8 d7 00 00 	lea    0xd7e8(%rip),%rax        # ffffffff8022248e <posix_signals+0x3ae>
ffffffff80214ca6:	48 85 ed             	test   %rbp,%rbp
ffffffff80214ca9:	48 0f 44 e8          	cmove  %rax,%rbp
ffffffff80214cad:	e8 ce 1e 00 00       	callq  ffffffff80216b80 <caml_executable_name>
ffffffff80214cb2:	48 89 c7             	mov    %rax,%rdi
ffffffff80214cb5:	48 85 c0             	test   %rax,%rax
ffffffff80214cb8:	74 46                	je     ffffffff80214d00 <caml_startup_common+0x270>
ffffffff80214cba:	4c 89 e6             	mov    %r12,%rsi
ffffffff80214cbd:	e8 4e 13 00 00       	callq  ffffffff80216010 <caml_sys_init>
ffffffff80214cc2:	31 f6                	xor    %esi,%esi
ffffffff80214cc4:	48 8d 3d 95 16 03 00 	lea    0x31695(%rip),%rdi        # ffffffff80246360 <caml_termination_jmpbuf>
ffffffff80214ccb:	e8 ff b3 fe ff       	callq  ffffffff802000cf <__sigsetjmp>
ffffffff80214cd0:	85 c0                	test   %eax,%eax
ffffffff80214cd2:	74 1c                	je     ffffffff80214cf0 <caml_startup_common+0x260>
ffffffff80214cd4:	48 8b 05 65 16 03 00 	mov    0x31665(%rip),%rax        # ffffffff80246340 <caml_termination_hook>
ffffffff80214cdb:	48 85 c0             	test   %rax,%rax
ffffffff80214cde:	0f 84 ec fd ff ff    	je     ffffffff80214ad0 <caml_startup_common+0x40>
ffffffff80214ce4:	31 ff                	xor    %edi,%edi
ffffffff80214ce6:	ff d0                	callq  *%rax
ffffffff80214ce8:	e9 e3 fd ff ff       	jmpq   ffffffff80214ad0 <caml_startup_common+0x40>
ffffffff80214ced:	0f 1f 00             	nopl   (%rax)
ffffffff80214cf0:	e8 1b f0 fe ff       	callq  ffffffff80203d10 <caml_start_program>
ffffffff80214cf5:	e9 db fd ff ff       	jmpq   ffffffff80214ad5 <caml_startup_common+0x45>
ffffffff80214cfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80214d00:	48 89 ef             	mov    %rbp,%rdi
ffffffff80214d03:	e8 b8 1c 00 00       	callq  ffffffff802169c0 <caml_search_exe_in_path>
ffffffff80214d08:	48 89 c7             	mov    %rax,%rdi
ffffffff80214d0b:	eb ad                	jmp    ffffffff80214cba <caml_startup_common+0x22a>
ffffffff80214d0d:	e8 8e b3 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80214d12:	48 8d 3d 67 d4 00 00 	lea    0xd467(%rip),%rdi        # ffffffff80222180 <posix_signals+0xa0>
ffffffff80214d19:	31 c0                	xor    %eax,%eax
ffffffff80214d1b:	e8 b0 d5 ff ff       	callq  ffffffff802122d0 <caml_fatal_error>

ffffffff80214d20 <caml_startup_exn>:
ffffffff80214d20:	31 f6                	xor    %esi,%esi
ffffffff80214d22:	e9 69 fd ff ff       	jmpq   ffffffff80214a90 <caml_startup_common>
ffffffff80214d27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80214d2e:	00 00 

ffffffff80214d30 <caml_startup>:
ffffffff80214d30:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80214d34:	31 f6                	xor    %esi,%esi
ffffffff80214d36:	e8 55 fd ff ff       	callq  ffffffff80214a90 <caml_startup_common>
ffffffff80214d3b:	48 89 c2             	mov    %rax,%rdx
ffffffff80214d3e:	83 e2 03             	and    $0x3,%edx
ffffffff80214d41:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffff80214d45:	74 05                	je     ffffffff80214d4c <caml_startup+0x1c>
ffffffff80214d47:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80214d4b:	c3                   	retq   
ffffffff80214d4c:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffff80214d50:	48 89 c7             	mov    %rax,%rdi
ffffffff80214d53:	e8 48 e3 ff ff       	callq  ffffffff802130a0 <caml_fatal_uncaught_exception>
ffffffff80214d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80214d5f:	00 

ffffffff80214d60 <caml_main>:
ffffffff80214d60:	eb ce                	jmp    ffffffff80214d30 <caml_startup>
ffffffff80214d62:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214d69:	00 00 00 00 
ffffffff80214d6d:	0f 1f 00             	nopl   (%rax)

ffffffff80214d70 <caml_startup_pooled_exn>:
ffffffff80214d70:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80214d75:	e9 16 fd ff ff       	jmpq   ffffffff80214a90 <caml_startup_common>
ffffffff80214d7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80214d80 <caml_startup_pooled>:
ffffffff80214d80:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80214d84:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80214d89:	e8 02 fd ff ff       	callq  ffffffff80214a90 <caml_startup_common>
ffffffff80214d8e:	48 89 c2             	mov    %rax,%rdx
ffffffff80214d91:	83 e2 03             	and    $0x3,%edx
ffffffff80214d94:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffff80214d98:	74 05                	je     ffffffff80214d9f <caml_startup_pooled+0x1f>
ffffffff80214d9a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80214d9e:	c3                   	retq   
ffffffff80214d9f:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffff80214da3:	48 89 c7             	mov    %rax,%rdi
ffffffff80214da6:	e8 f5 e2 ff ff       	callq  ffffffff802130a0 <caml_fatal_uncaught_exception>
ffffffff80214dab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80214db0 <caml_string_length>:
ffffffff80214db0:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
ffffffff80214db4:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80214db8:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff80214dbc:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
ffffffff80214dc0:	48 0f be 54 17 ff    	movsbq -0x1(%rdi,%rdx,1),%rdx
ffffffff80214dc6:	48 29 d0             	sub    %rdx,%rax
ffffffff80214dc9:	c3                   	retq   
ffffffff80214dca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80214dd0 <caml_ml_string_length>:
ffffffff80214dd0:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80214dd4:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80214dd8:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80214ddc:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80214de0:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff80214de6:	48 29 c2             	sub    %rax,%rdx
ffffffff80214de9:	48 8d 44 12 01       	lea    0x1(%rdx,%rdx,1),%rax
ffffffff80214dee:	c3                   	retq   
ffffffff80214def:	90                   	nop

ffffffff80214df0 <caml_ml_bytes_length>:
ffffffff80214df0:	eb de                	jmp    ffffffff80214dd0 <caml_ml_string_length>
ffffffff80214df2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214df9:	00 00 00 00 
ffffffff80214dfd:	0f 1f 00             	nopl   (%rax)

ffffffff80214e00 <caml_string_is_c_safe>:
ffffffff80214e00:	53                   	push   %rbx
ffffffff80214e01:	48 89 fb             	mov    %rdi,%rbx
ffffffff80214e04:	e8 9f b2 fe ff       	callq  ffffffff802000a8 <strlen>
ffffffff80214e09:	49 89 c0             	mov    %rax,%r8
ffffffff80214e0c:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff80214e10:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80214e14:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80214e18:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80214e1c:	48 0f be 44 03 ff    	movsbq -0x1(%rbx,%rax,1),%rax
ffffffff80214e22:	5b                   	pop    %rbx
ffffffff80214e23:	48 29 c2             	sub    %rax,%rdx
ffffffff80214e26:	4c 39 c2             	cmp    %r8,%rdx
ffffffff80214e29:	0f 94 c0             	sete   %al
ffffffff80214e2c:	0f b6 c0             	movzbl %al,%eax
ffffffff80214e2f:	c3                   	retq   

ffffffff80214e30 <caml_create_string>:
ffffffff80214e30:	48 b8 f7 ff ff ff ff 	movabs $0x1fffffffffffff7,%rax
ffffffff80214e37:	ff ff 01 
ffffffff80214e3a:	48 d1 ff             	sar    %rdi
ffffffff80214e3d:	48 39 c7             	cmp    %rax,%rdi
ffffffff80214e40:	77 05                	ja     ffffffff80214e47 <caml_create_string+0x17>
ffffffff80214e42:	e9 f9 3e 00 00       	jmpq   ffffffff80218d40 <caml_alloc_string>
ffffffff80214e47:	50                   	push   %rax
ffffffff80214e48:	48 8d 3d b5 d4 00 00 	lea    0xd4b5(%rip),%rdi        # ffffffff80222304 <posix_signals+0x224>
ffffffff80214e4f:	e8 2c 26 ff ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff80214e54:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214e5b:	00 00 00 00 
ffffffff80214e5f:	90                   	nop

ffffffff80214e60 <caml_create_bytes>:
ffffffff80214e60:	48 b8 f7 ff ff ff ff 	movabs $0x1fffffffffffff7,%rax
ffffffff80214e67:	ff ff 01 
ffffffff80214e6a:	48 d1 ff             	sar    %rdi
ffffffff80214e6d:	48 39 c7             	cmp    %rax,%rdi
ffffffff80214e70:	77 05                	ja     ffffffff80214e77 <caml_create_bytes+0x17>
ffffffff80214e72:	e9 c9 3e 00 00       	jmpq   ffffffff80218d40 <caml_alloc_string>
ffffffff80214e77:	50                   	push   %rax
ffffffff80214e78:	48 8d 3d 93 d4 00 00 	lea    0xd493(%rip),%rdi        # ffffffff80222312 <posix_signals+0x232>
ffffffff80214e7f:	e8 fc 25 ff ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff80214e84:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214e8b:	00 00 00 00 
ffffffff80214e8f:	90                   	nop

ffffffff80214e90 <caml_string_get>:
ffffffff80214e90:	48 d1 fe             	sar    %rsi
ffffffff80214e93:	78 28                	js     ffffffff80214ebd <caml_string_get+0x2d>
ffffffff80214e95:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80214e99:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80214e9d:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80214ea1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80214ea5:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff80214eab:	48 29 c2             	sub    %rax,%rdx
ffffffff80214eae:	48 39 d6             	cmp    %rdx,%rsi
ffffffff80214eb1:	73 0a                	jae    ffffffff80214ebd <caml_string_get+0x2d>
ffffffff80214eb3:	0f b6 04 3e          	movzbl (%rsi,%rdi,1),%eax
ffffffff80214eb7:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80214ebc:	c3                   	retq   
ffffffff80214ebd:	50                   	push   %rax
ffffffff80214ebe:	e8 7d 26 ff ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff80214ec3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214eca:	00 00 00 00 
ffffffff80214ece:	66 90                	xchg   %ax,%ax

ffffffff80214ed0 <caml_bytes_get>:
ffffffff80214ed0:	eb be                	jmp    ffffffff80214e90 <caml_string_get>
ffffffff80214ed2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214ed9:	00 00 00 00 
ffffffff80214edd:	0f 1f 00             	nopl   (%rax)

ffffffff80214ee0 <caml_bytes_set>:
ffffffff80214ee0:	48 d1 fe             	sar    %rsi
ffffffff80214ee3:	78 2a                	js     ffffffff80214f0f <caml_bytes_set+0x2f>
ffffffff80214ee5:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80214ee9:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80214eed:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80214ef1:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff80214ef5:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff80214efb:	48 29 c1             	sub    %rax,%rcx
ffffffff80214efe:	48 39 ce             	cmp    %rcx,%rsi
ffffffff80214f01:	73 0c                	jae    ffffffff80214f0f <caml_bytes_set+0x2f>
ffffffff80214f03:	48 d1 fa             	sar    %rdx
ffffffff80214f06:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80214f0b:	88 14 3e             	mov    %dl,(%rsi,%rdi,1)
ffffffff80214f0e:	c3                   	retq   
ffffffff80214f0f:	50                   	push   %rax
ffffffff80214f10:	e8 2b 26 ff ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff80214f15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214f1c:	00 00 00 00 

ffffffff80214f20 <caml_string_set>:
ffffffff80214f20:	eb be                	jmp    ffffffff80214ee0 <caml_bytes_set>
ffffffff80214f22:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214f29:	00 00 00 00 
ffffffff80214f2d:	0f 1f 00             	nopl   (%rax)

ffffffff80214f30 <caml_string_get16>:
ffffffff80214f30:	48 d1 fe             	sar    %rsi
ffffffff80214f33:	78 39                	js     ffffffff80214f6e <caml_string_get16+0x3e>
ffffffff80214f35:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80214f39:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
ffffffff80214f3d:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80214f41:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80214f45:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80214f49:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff80214f4f:	48 29 c2             	sub    %rax,%rdx
ffffffff80214f52:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80214f55:	73 17                	jae    ffffffff80214f6e <caml_string_get16+0x3e>
ffffffff80214f57:	48 01 fe             	add    %rdi,%rsi
ffffffff80214f5a:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
ffffffff80214f5e:	0f b6 16             	movzbl (%rsi),%edx
ffffffff80214f61:	c1 e0 08             	shl    $0x8,%eax
ffffffff80214f64:	09 d0                	or     %edx,%eax
ffffffff80214f66:	48 98                	cltq   
ffffffff80214f68:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80214f6d:	c3                   	retq   
ffffffff80214f6e:	50                   	push   %rax
ffffffff80214f6f:	e8 cc 25 ff ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff80214f74:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214f7b:	00 00 00 00 
ffffffff80214f7f:	90                   	nop

ffffffff80214f80 <caml_bytes_get16>:
ffffffff80214f80:	eb ae                	jmp    ffffffff80214f30 <caml_string_get16>
ffffffff80214f82:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214f89:	00 00 00 00 
ffffffff80214f8d:	0f 1f 00             	nopl   (%rax)

ffffffff80214f90 <caml_string_get32>:
ffffffff80214f90:	48 d1 fe             	sar    %rsi
ffffffff80214f93:	78 48                	js     ffffffff80214fdd <caml_string_get32+0x4d>
ffffffff80214f95:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80214f99:	48 8d 4e 03          	lea    0x3(%rsi),%rcx
ffffffff80214f9d:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80214fa1:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80214fa5:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80214fa9:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff80214faf:	48 29 c2             	sub    %rax,%rdx
ffffffff80214fb2:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80214fb5:	73 26                	jae    ffffffff80214fdd <caml_string_get32+0x4d>
ffffffff80214fb7:	48 01 fe             	add    %rdi,%rsi
ffffffff80214fba:	0f b6 7e 03          	movzbl 0x3(%rsi),%edi
ffffffff80214fbe:	0f b6 46 02          	movzbl 0x2(%rsi),%eax
ffffffff80214fc2:	c1 e7 18             	shl    $0x18,%edi
ffffffff80214fc5:	c1 e0 10             	shl    $0x10,%eax
ffffffff80214fc8:	09 c7                	or     %eax,%edi
ffffffff80214fca:	0f b6 06             	movzbl (%rsi),%eax
ffffffff80214fcd:	09 c7                	or     %eax,%edi
ffffffff80214fcf:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
ffffffff80214fd3:	c1 e0 08             	shl    $0x8,%eax
ffffffff80214fd6:	09 c7                	or     %eax,%edi
ffffffff80214fd8:	e9 a3 61 ff ff       	jmpq   ffffffff8020b180 <caml_copy_int32>
ffffffff80214fdd:	50                   	push   %rax
ffffffff80214fde:	e8 5d 25 ff ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff80214fe3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214fea:	00 00 00 00 
ffffffff80214fee:	66 90                	xchg   %ax,%ax

ffffffff80214ff0 <caml_bytes_get32>:
ffffffff80214ff0:	eb 9e                	jmp    ffffffff80214f90 <caml_string_get32>
ffffffff80214ff2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80214ff9:	00 00 00 00 
ffffffff80214ffd:	0f 1f 00             	nopl   (%rax)

ffffffff80215000 <caml_string_get64>:
ffffffff80215000:	48 d1 fe             	sar    %rsi
ffffffff80215003:	78 7a                	js     ffffffff8021507f <caml_string_get64+0x7f>
ffffffff80215005:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80215009:	48 8d 4e 07          	lea    0x7(%rsi),%rcx
ffffffff8021500d:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80215011:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80215015:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
ffffffff80215019:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff8021501f:	48 29 c2             	sub    %rax,%rdx
ffffffff80215022:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80215025:	73 58                	jae    ffffffff8021507f <caml_string_get64+0x7f>
ffffffff80215027:	48 01 fe             	add    %rdi,%rsi
ffffffff8021502a:	0f b6 7e 07          	movzbl 0x7(%rsi),%edi
ffffffff8021502e:	0f b6 46 06          	movzbl 0x6(%rsi),%eax
ffffffff80215032:	48 c1 e7 38          	shl    $0x38,%rdi
ffffffff80215036:	48 c1 e0 30          	shl    $0x30,%rax
ffffffff8021503a:	48 09 c7             	or     %rax,%rdi
ffffffff8021503d:	0f b6 06             	movzbl (%rsi),%eax
ffffffff80215040:	48 09 c7             	or     %rax,%rdi
ffffffff80215043:	0f b6 46 05          	movzbl 0x5(%rsi),%eax
ffffffff80215047:	48 c1 e0 28          	shl    $0x28,%rax
ffffffff8021504b:	48 09 c7             	or     %rax,%rdi
ffffffff8021504e:	0f b6 46 04          	movzbl 0x4(%rsi),%eax
ffffffff80215052:	48 c1 e0 20          	shl    $0x20,%rax
ffffffff80215056:	48 09 c7             	or     %rax,%rdi
ffffffff80215059:	0f b6 46 03          	movzbl 0x3(%rsi),%eax
ffffffff8021505d:	48 c1 e0 18          	shl    $0x18,%rax
ffffffff80215061:	48 09 c7             	or     %rax,%rdi
ffffffff80215064:	0f b6 46 02          	movzbl 0x2(%rsi),%eax
ffffffff80215068:	48 c1 e0 10          	shl    $0x10,%rax
ffffffff8021506c:	48 09 c7             	or     %rax,%rdi
ffffffff8021506f:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
ffffffff80215073:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff80215077:	48 09 c7             	or     %rax,%rdi
ffffffff8021507a:	e9 e1 65 ff ff       	jmpq   ffffffff8020b660 <caml_copy_int64>
ffffffff8021507f:	50                   	push   %rax
ffffffff80215080:	e8 bb 24 ff ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff80215085:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021508c:	00 00 00 00 

ffffffff80215090 <caml_bytes_get64>:
ffffffff80215090:	e9 6b ff ff ff       	jmpq   ffffffff80215000 <caml_string_get64>
ffffffff80215095:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021509c:	00 00 00 00 

ffffffff802150a0 <caml_bytes_set16>:
ffffffff802150a0:	48 d1 fe             	sar    %rsi
ffffffff802150a3:	78 3a                	js     ffffffff802150df <caml_bytes_set16+0x3f>
ffffffff802150a5:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff802150a9:	4c 8d 46 01          	lea    0x1(%rsi),%r8
ffffffff802150ad:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802150b1:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff802150b5:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff802150b9:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff802150bf:	48 29 c1             	sub    %rax,%rcx
ffffffff802150c2:	49 39 c8             	cmp    %rcx,%r8
ffffffff802150c5:	73 18                	jae    ffffffff802150df <caml_bytes_set16+0x3f>
ffffffff802150c7:	48 89 d0             	mov    %rdx,%rax
ffffffff802150ca:	48 01 fe             	add    %rdi,%rsi
ffffffff802150cd:	48 c1 fa 09          	sar    $0x9,%rdx
ffffffff802150d1:	48 d1 f8             	sar    %rax
ffffffff802150d4:	88 56 01             	mov    %dl,0x1(%rsi)
ffffffff802150d7:	88 06                	mov    %al,(%rsi)
ffffffff802150d9:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802150de:	c3                   	retq   
ffffffff802150df:	50                   	push   %rax
ffffffff802150e0:	e8 5b 24 ff ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff802150e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802150ec:	00 00 00 00 

ffffffff802150f0 <caml_bytes_set32>:
ffffffff802150f0:	48 d1 fe             	sar    %rsi
ffffffff802150f3:	78 45                	js     ffffffff8021513a <caml_bytes_set32+0x4a>
ffffffff802150f5:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff802150f9:	4c 8d 46 03          	lea    0x3(%rsi),%r8
ffffffff802150fd:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80215101:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80215105:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff80215109:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff8021510f:	48 29 c1             	sub    %rax,%rcx
ffffffff80215112:	49 39 c8             	cmp    %rcx,%r8
ffffffff80215115:	73 23                	jae    ffffffff8021513a <caml_bytes_set32+0x4a>
ffffffff80215117:	48 63 42 08          	movslq 0x8(%rdx),%rax
ffffffff8021511b:	48 01 fe             	add    %rdi,%rsi
ffffffff8021511e:	48 89 c2             	mov    %rax,%rdx
ffffffff80215121:	88 06                	mov    %al,(%rsi)
ffffffff80215123:	88 66 01             	mov    %ah,0x1(%rsi)
ffffffff80215126:	48 c1 fa 10          	sar    $0x10,%rdx
ffffffff8021512a:	48 c1 f8 18          	sar    $0x18,%rax
ffffffff8021512e:	88 46 03             	mov    %al,0x3(%rsi)
ffffffff80215131:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215136:	88 56 02             	mov    %dl,0x2(%rsi)
ffffffff80215139:	c3                   	retq   
ffffffff8021513a:	50                   	push   %rax
ffffffff8021513b:	e8 00 24 ff ff       	callq  ffffffff80207540 <caml_array_bound_error>

ffffffff80215140 <caml_bytes_set64>:
ffffffff80215140:	48 d1 fe             	sar    %rsi
ffffffff80215143:	78 74                	js     ffffffff802151b9 <caml_bytes_set64+0x79>
ffffffff80215145:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80215149:	4c 8d 46 07          	lea    0x7(%rsi),%r8
ffffffff8021514d:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80215151:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80215155:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
ffffffff80215159:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff8021515f:	48 29 c1             	sub    %rax,%rcx
ffffffff80215162:	49 39 c8             	cmp    %rcx,%r8
ffffffff80215165:	73 52                	jae    ffffffff802151b9 <caml_bytes_set64+0x79>
ffffffff80215167:	48 8b 42 08          	mov    0x8(%rdx),%rax
ffffffff8021516b:	48 01 fe             	add    %rdi,%rsi
ffffffff8021516e:	48 89 c2             	mov    %rax,%rdx
ffffffff80215171:	88 06                	mov    %al,(%rsi)
ffffffff80215173:	48 c1 fa 08          	sar    $0x8,%rdx
ffffffff80215177:	88 56 01             	mov    %dl,0x1(%rsi)
ffffffff8021517a:	48 89 c2             	mov    %rax,%rdx
ffffffff8021517d:	48 c1 fa 10          	sar    $0x10,%rdx
ffffffff80215181:	88 56 02             	mov    %dl,0x2(%rsi)
ffffffff80215184:	48 89 c2             	mov    %rax,%rdx
ffffffff80215187:	48 c1 fa 18          	sar    $0x18,%rdx
ffffffff8021518b:	88 56 03             	mov    %dl,0x3(%rsi)
ffffffff8021518e:	48 89 c2             	mov    %rax,%rdx
ffffffff80215191:	48 c1 fa 20          	sar    $0x20,%rdx
ffffffff80215195:	88 56 04             	mov    %dl,0x4(%rsi)
ffffffff80215198:	48 89 c2             	mov    %rax,%rdx
ffffffff8021519b:	48 c1 fa 28          	sar    $0x28,%rdx
ffffffff8021519f:	88 56 05             	mov    %dl,0x5(%rsi)
ffffffff802151a2:	48 89 c2             	mov    %rax,%rdx
ffffffff802151a5:	48 c1 e8 38          	shr    $0x38,%rax
ffffffff802151a9:	48 c1 fa 30          	sar    $0x30,%rdx
ffffffff802151ad:	88 46 07             	mov    %al,0x7(%rsi)
ffffffff802151b0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802151b5:	88 56 06             	mov    %dl,0x6(%rsi)
ffffffff802151b8:	c3                   	retq   
ffffffff802151b9:	50                   	push   %rax
ffffffff802151ba:	e8 81 23 ff ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff802151bf:	90                   	nop

ffffffff802151c0 <caml_string_equal>:
ffffffff802151c0:	48 39 f7             	cmp    %rsi,%rdi
ffffffff802151c3:	74 4b                	je     ffffffff80215210 <caml_string_equal+0x50>
ffffffff802151c5:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff802151c9:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
ffffffff802151cd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff802151d3:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802151d7:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff802151db:	48 39 d0             	cmp    %rdx,%rax
ffffffff802151de:	75 28                	jne    ffffffff80215208 <caml_string_equal+0x48>
ffffffff802151e0:	48 85 c0             	test   %rax,%rax
ffffffff802151e3:	74 2b                	je     ffffffff80215210 <caml_string_equal+0x50>
ffffffff802151e5:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
ffffffff802151e9:	48 29 fe             	sub    %rdi,%rsi
ffffffff802151ec:	eb 0b                	jmp    ffffffff802151f9 <caml_string_equal+0x39>
ffffffff802151ee:	66 90                	xchg   %ax,%ax
ffffffff802151f0:	48 83 c7 08          	add    $0x8,%rdi
ffffffff802151f4:	48 39 c7             	cmp    %rax,%rdi
ffffffff802151f7:	74 17                	je     ffffffff80215210 <caml_string_equal+0x50>
ffffffff802151f9:	48 8b 0c 37          	mov    (%rdi,%rsi,1),%rcx
ffffffff802151fd:	48 39 0f             	cmp    %rcx,(%rdi)
ffffffff80215200:	74 ee                	je     ffffffff802151f0 <caml_string_equal+0x30>
ffffffff80215202:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff80215208:	4c 89 c0             	mov    %r8,%rax
ffffffff8021520b:	c3                   	retq   
ffffffff8021520c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80215210:	41 b8 03 00 00 00    	mov    $0x3,%r8d
ffffffff80215216:	4c 89 c0             	mov    %r8,%rax
ffffffff80215219:	c3                   	retq   
ffffffff8021521a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80215220 <caml_bytes_equal>:
ffffffff80215220:	eb 9e                	jmp    ffffffff802151c0 <caml_string_equal>
ffffffff80215222:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215229:	00 00 00 00 
ffffffff8021522d:	0f 1f 00             	nopl   (%rax)

ffffffff80215230 <caml_string_notequal>:
ffffffff80215230:	e8 8b ff ff ff       	callq  ffffffff802151c0 <caml_string_equal>
ffffffff80215235:	49 89 c0             	mov    %rax,%r8
ffffffff80215238:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8021523d:	4c 29 c0             	sub    %r8,%rax
ffffffff80215240:	c3                   	retq   
ffffffff80215241:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215248:	00 00 00 00 
ffffffff8021524c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80215250 <caml_bytes_notequal>:
ffffffff80215250:	eb de                	jmp    ffffffff80215230 <caml_string_notequal>
ffffffff80215252:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215259:	00 00 00 00 
ffffffff8021525d:	0f 1f 00             	nopl   (%rax)

ffffffff80215260 <caml_string_compare>:
ffffffff80215260:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215265:	48 39 f7             	cmp    %rsi,%rdi
ffffffff80215268:	74 6e                	je     ffffffff802152d8 <caml_string_compare+0x78>
ffffffff8021526a:	55                   	push   %rbp
ffffffff8021526b:	53                   	push   %rbx
ffffffff8021526c:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80215270:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80215274:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80215278:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff8021527c:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
ffffffff80215280:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
ffffffff80215286:	48 29 c3             	sub    %rax,%rbx
ffffffff80215289:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
ffffffff8021528d:	48 89 da             	mov    %rbx,%rdx
ffffffff80215290:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80215294:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80215298:	48 8d 68 ff          	lea    -0x1(%rax),%rbp
ffffffff8021529c:	48 0f be 44 06 ff    	movsbq -0x1(%rsi,%rax,1),%rax
ffffffff802152a2:	48 29 c5             	sub    %rax,%rbp
ffffffff802152a5:	48 39 dd             	cmp    %rbx,%rbp
ffffffff802152a8:	48 0f 46 d5          	cmovbe %rbp,%rdx
ffffffff802152ac:	e8 f6 ad fe ff       	callq  ffffffff802000a7 <memcmp>
ffffffff802152b1:	85 c0                	test   %eax,%eax
ffffffff802152b3:	78 2b                	js     ffffffff802152e0 <caml_string_compare+0x80>
ffffffff802152b5:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff802152ba:	7f 0f                	jg     ffffffff802152cb <caml_string_compare+0x6b>
ffffffff802152bc:	48 39 dd             	cmp    %rbx,%rbp
ffffffff802152bf:	77 1f                	ja     ffffffff802152e0 <caml_string_compare+0x80>
ffffffff802152c1:	48 19 c0             	sbb    %rax,%rax
ffffffff802152c4:	83 e0 02             	and    $0x2,%eax
ffffffff802152c7:	48 83 c0 01          	add    $0x1,%rax
ffffffff802152cb:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802152cf:	5b                   	pop    %rbx
ffffffff802152d0:	5d                   	pop    %rbp
ffffffff802152d1:	c3                   	retq   
ffffffff802152d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802152d8:	c3                   	retq   
ffffffff802152d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802152e0:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff802152e7:	eb e2                	jmp    ffffffff802152cb <caml_string_compare+0x6b>
ffffffff802152e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802152f0 <caml_bytes_compare>:
ffffffff802152f0:	e9 6b ff ff ff       	jmpq   ffffffff80215260 <caml_string_compare>
ffffffff802152f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802152fc:	00 00 00 00 

ffffffff80215300 <caml_string_lessthan>:
ffffffff80215300:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80215304:	e8 57 ff ff ff       	callq  ffffffff80215260 <caml_string_compare>
ffffffff80215309:	48 85 c0             	test   %rax,%rax
ffffffff8021530c:	0f 9e c0             	setle  %al
ffffffff8021530f:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80215313:	0f b6 c0             	movzbl %al,%eax
ffffffff80215316:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021531b:	c3                   	retq   
ffffffff8021531c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80215320 <caml_bytes_lessthan>:
ffffffff80215320:	eb de                	jmp    ffffffff80215300 <caml_string_lessthan>
ffffffff80215322:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215329:	00 00 00 00 
ffffffff8021532d:	0f 1f 00             	nopl   (%rax)

ffffffff80215330 <caml_string_lessequal>:
ffffffff80215330:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80215334:	e8 27 ff ff ff       	callq  ffffffff80215260 <caml_string_compare>
ffffffff80215339:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8021533d:	0f 9e c0             	setle  %al
ffffffff80215340:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80215344:	0f b6 c0             	movzbl %al,%eax
ffffffff80215347:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021534c:	c3                   	retq   
ffffffff8021534d:	0f 1f 00             	nopl   (%rax)

ffffffff80215350 <caml_bytes_lessequal>:
ffffffff80215350:	eb de                	jmp    ffffffff80215330 <caml_string_lessequal>
ffffffff80215352:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215359:	00 00 00 00 
ffffffff8021535d:	0f 1f 00             	nopl   (%rax)

ffffffff80215360 <caml_string_greaterthan>:
ffffffff80215360:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80215364:	e8 f7 fe ff ff       	callq  ffffffff80215260 <caml_string_compare>
ffffffff80215369:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8021536d:	0f 9f c0             	setg   %al
ffffffff80215370:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80215374:	0f b6 c0             	movzbl %al,%eax
ffffffff80215377:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021537c:	c3                   	retq   
ffffffff8021537d:	0f 1f 00             	nopl   (%rax)

ffffffff80215380 <caml_bytes_greaterthan>:
ffffffff80215380:	eb de                	jmp    ffffffff80215360 <caml_string_greaterthan>
ffffffff80215382:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215389:	00 00 00 00 
ffffffff8021538d:	0f 1f 00             	nopl   (%rax)

ffffffff80215390 <caml_string_greaterequal>:
ffffffff80215390:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80215394:	e8 c7 fe ff ff       	callq  ffffffff80215260 <caml_string_compare>
ffffffff80215399:	48 85 c0             	test   %rax,%rax
ffffffff8021539c:	0f 9f c0             	setg   %al
ffffffff8021539f:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802153a3:	0f b6 c0             	movzbl %al,%eax
ffffffff802153a6:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff802153ab:	c3                   	retq   
ffffffff802153ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802153b0 <caml_bytes_greaterequal>:
ffffffff802153b0:	eb de                	jmp    ffffffff80215390 <caml_string_greaterequal>
ffffffff802153b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802153b9:	00 00 00 00 
ffffffff802153bd:	0f 1f 00             	nopl   (%rax)

ffffffff802153c0 <caml_blit_bytes>:
ffffffff802153c0:	48 d1 f9             	sar    %rcx
ffffffff802153c3:	49 89 d1             	mov    %rdx,%r9
ffffffff802153c6:	48 d1 fe             	sar    %rsi
ffffffff802153c9:	4c 89 c2             	mov    %r8,%rdx
ffffffff802153cc:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802153d0:	48 01 fe             	add    %rdi,%rsi
ffffffff802153d3:	48 d1 fa             	sar    %rdx
ffffffff802153d6:	4a 8d 3c 09          	lea    (%rcx,%r9,1),%rdi
ffffffff802153da:	e8 c6 ac fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff802153df:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802153e4:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802153e8:	c3                   	retq   
ffffffff802153e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802153f0 <caml_blit_string>:
ffffffff802153f0:	eb ce                	jmp    ffffffff802153c0 <caml_blit_bytes>
ffffffff802153f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802153f9:	00 00 00 00 
ffffffff802153fd:	0f 1f 00             	nopl   (%rax)

ffffffff80215400 <caml_fill_bytes>:
ffffffff80215400:	48 d1 f9             	sar    %rcx
ffffffff80215403:	48 d1 fe             	sar    %rsi
ffffffff80215406:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021540a:	48 01 f7             	add    %rsi,%rdi
ffffffff8021540d:	48 d1 fa             	sar    %rdx
ffffffff80215410:	89 ce                	mov    %ecx,%esi
ffffffff80215412:	e8 8d ac fe ff       	callq  ffffffff802000a4 <memset>
ffffffff80215417:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021541c:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80215420:	c3                   	retq   
ffffffff80215421:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215428:	00 00 00 00 
ffffffff8021542c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80215430 <caml_fill_string>:
ffffffff80215430:	eb ce                	jmp    ffffffff80215400 <caml_fill_bytes>
ffffffff80215432:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215439:	00 00 00 00 
ffffffff8021543d:	0f 1f 00             	nopl   (%rax)

ffffffff80215440 <caml_alloc_sprintf>:
ffffffff80215440:	41 55                	push   %r13
ffffffff80215442:	41 54                	push   %r12
ffffffff80215444:	55                   	push   %rbp
ffffffff80215445:	48 89 fd             	mov    %rdi,%rbp
ffffffff80215448:	53                   	push   %rbx
ffffffff80215449:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
ffffffff80215450:	48 89 b4 24 b8 00 00 	mov    %rsi,0xb8(%rsp)
ffffffff80215457:	00 
ffffffff80215458:	48 89 94 24 c0 00 00 	mov    %rdx,0xc0(%rsp)
ffffffff8021545f:	00 
ffffffff80215460:	48 89 8c 24 c8 00 00 	mov    %rcx,0xc8(%rsp)
ffffffff80215467:	00 
ffffffff80215468:	4c 89 84 24 d0 00 00 	mov    %r8,0xd0(%rsp)
ffffffff8021546f:	00 
ffffffff80215470:	4c 89 8c 24 d8 00 00 	mov    %r9,0xd8(%rsp)
ffffffff80215477:	00 
ffffffff80215478:	84 c0                	test   %al,%al
ffffffff8021547a:	74 40                	je     ffffffff802154bc <caml_alloc_sprintf+0x7c>
ffffffff8021547c:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
ffffffff80215483:	00 
ffffffff80215484:	0f 29 8c 24 f0 00 00 	movaps %xmm1,0xf0(%rsp)
ffffffff8021548b:	00 
ffffffff8021548c:	0f 29 94 24 00 01 00 	movaps %xmm2,0x100(%rsp)
ffffffff80215493:	00 
ffffffff80215494:	0f 29 9c 24 10 01 00 	movaps %xmm3,0x110(%rsp)
ffffffff8021549b:	00 
ffffffff8021549c:	0f 29 a4 24 20 01 00 	movaps %xmm4,0x120(%rsp)
ffffffff802154a3:	00 
ffffffff802154a4:	0f 29 ac 24 30 01 00 	movaps %xmm5,0x130(%rsp)
ffffffff802154ab:	00 
ffffffff802154ac:	0f 29 b4 24 40 01 00 	movaps %xmm6,0x140(%rsp)
ffffffff802154b3:	00 
ffffffff802154b4:	0f 29 bc 24 50 01 00 	movaps %xmm7,0x150(%rsp)
ffffffff802154bb:	00 
ffffffff802154bc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802154c3:	00 00 
ffffffff802154c5:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff802154cc:	00 
ffffffff802154cd:	31 c0                	xor    %eax,%eax
ffffffff802154cf:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
ffffffff802154d4:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
ffffffff802154d9:	48 89 ea             	mov    %rbp,%rdx
ffffffff802154dc:	48 8d 84 24 90 01 00 	lea    0x190(%rsp),%rax
ffffffff802154e3:	00 
ffffffff802154e4:	4c 89 e9             	mov    %r13,%rcx
ffffffff802154e7:	be 80 00 00 00       	mov    $0x80,%esi
ffffffff802154ec:	4c 89 e7             	mov    %r12,%rdi
ffffffff802154ef:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff802154f4:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
ffffffff802154fb:	00 
ffffffff802154fc:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
ffffffff80215503:	00 
ffffffff80215504:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
ffffffff8021550b:	00 
ffffffff8021550c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff80215511:	e8 e3 ab fe ff       	callq  ffffffff802000f9 <vsnprintf>
ffffffff80215516:	89 c3                	mov    %eax,%ebx
ffffffff80215518:	83 f8 7f             	cmp    $0x7f,%eax
ffffffff8021551b:	77 33                	ja     ffffffff80215550 <caml_alloc_sprintf+0x110>
ffffffff8021551d:	4c 89 e6             	mov    %r12,%rsi
ffffffff80215520:	48 63 f8             	movslq %eax,%rdi
ffffffff80215523:	e8 18 39 00 00       	callq  ffffffff80218e40 <caml_alloc_initialized_string>
ffffffff80215528:	49 89 c4             	mov    %rax,%r12
ffffffff8021552b:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
ffffffff80215532:	00 
ffffffff80215533:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8021553a:	00 00 
ffffffff8021553c:	75 73                	jne    ffffffff802155b1 <caml_alloc_sprintf+0x171>
ffffffff8021553e:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
ffffffff80215545:	4c 89 e0             	mov    %r12,%rax
ffffffff80215548:	5b                   	pop    %rbx
ffffffff80215549:	5d                   	pop    %rbp
ffffffff8021554a:	41 5c                	pop    %r12
ffffffff8021554c:	41 5d                	pop    %r13
ffffffff8021554e:	c3                   	retq   
ffffffff8021554f:	90                   	nop
ffffffff80215550:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215553:	e8 98 bd ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80215558:	48 63 fb             	movslq %ebx,%rdi
ffffffff8021555b:	48 89 c5             	mov    %rax,%rbp
ffffffff8021555e:	e8 dd 37 00 00       	callq  ffffffff80218d40 <caml_alloc_string>
ffffffff80215563:	8d 73 01             	lea    0x1(%rbx),%esi
ffffffff80215566:	4c 89 e9             	mov    %r13,%rcx
ffffffff80215569:	48 89 ea             	mov    %rbp,%rdx
ffffffff8021556c:	49 89 c4             	mov    %rax,%r12
ffffffff8021556f:	48 8d 84 24 90 01 00 	lea    0x190(%rsp),%rax
ffffffff80215576:	00 
ffffffff80215577:	48 63 f6             	movslq %esi,%rsi
ffffffff8021557a:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
ffffffff80215581:	00 
ffffffff80215582:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80215587:	4c 89 e7             	mov    %r12,%rdi
ffffffff8021558a:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
ffffffff80215591:	00 
ffffffff80215592:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
ffffffff80215599:	00 
ffffffff8021559a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021559f:	e8 55 ab fe ff       	callq  ffffffff802000f9 <vsnprintf>
ffffffff802155a4:	48 89 ef             	mov    %rbp,%rdi
ffffffff802155a7:	e8 a4 b3 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802155ac:	e9 7a ff ff ff       	jmpq   ffffffff8021552b <caml_alloc_sprintf+0xeb>
ffffffff802155b1:	e8 ea aa fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802155b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802155bd:	00 00 00 

ffffffff802155c0 <caml_string_of_bytes>:
ffffffff802155c0:	48 89 f8             	mov    %rdi,%rax
ffffffff802155c3:	c3                   	retq   
ffffffff802155c4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802155cb:	00 00 00 00 
ffffffff802155cf:	90                   	nop

ffffffff802155d0 <caml_bytes_of_string>:
ffffffff802155d0:	48 89 f8             	mov    %rdi,%rax
ffffffff802155d3:	c3                   	retq   
ffffffff802155d4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802155db:	00 00 00 
ffffffff802155de:	66 90                	xchg   %ax,%ax

ffffffff802155e0 <caml_sys_error>:
ffffffff802155e0:	41 54                	push   %r12
ffffffff802155e2:	55                   	push   %rbp
ffffffff802155e3:	53                   	push   %rbx
ffffffff802155e4:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
ffffffff802155eb:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff802155f0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802155f7:	00 00 
ffffffff802155f9:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff80215600:	00 
ffffffff80215601:	31 c0                	xor    %eax,%eax
ffffffff80215603:	48 8b 05 6e ea 02 00 	mov    0x2ea6e(%rip),%rax        # ffffffff80244078 <caml_local_roots>
ffffffff8021560a:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff80215611:	00 00 
ffffffff80215613:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff8021561a:	00 00 
ffffffff8021561c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff80215621:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80215626:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff8021562b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80215630:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff80215635:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff8021563a:	48 89 05 37 ea 02 00 	mov    %rax,0x2ea37(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215641:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff80215646:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8021564d:	00 00 
ffffffff8021564f:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff80215656:	00 00 
ffffffff80215658:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff8021565f:	00 00 
ffffffff80215661:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff80215666:	e8 85 2e 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff8021566b:	8b 38                	mov    (%rax),%edi
ffffffff8021566d:	e8 6e 2e 03 00       	callq  ffffffff802484e0 <strerror>
ffffffff80215672:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
ffffffff80215677:	48 89 c5             	mov    %rax,%rbp
ffffffff8021567a:	49 83 f8 01          	cmp    $0x1,%r8
ffffffff8021567e:	74 68                	je     ffffffff802156e8 <caml_sys_error+0x108>
ffffffff80215680:	31 c0                	xor    %eax,%eax
ffffffff80215682:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215685:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
ffffffff80215689:	f2 ae                	repnz scas %es:(%rdi),%al
ffffffff8021568b:	4c 89 c7             	mov    %r8,%rdi
ffffffff8021568e:	48 f7 d1             	not    %rcx
ffffffff80215691:	4c 8d 61 ff          	lea    -0x1(%rcx),%r12
ffffffff80215695:	e8 16 f7 ff ff       	callq  ffffffff80214db0 <caml_string_length>
ffffffff8021569a:	49 8d 7c 04 02       	lea    0x2(%r12,%rax,1),%rdi
ffffffff8021569f:	48 89 c3             	mov    %rax,%rbx
ffffffff802156a2:	e8 99 36 00 00       	callq  ffffffff80218d40 <caml_alloc_string>
ffffffff802156a7:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
ffffffff802156ac:	48 89 da             	mov    %rbx,%rdx
ffffffff802156af:	48 89 c7             	mov    %rax,%rdi
ffffffff802156b2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff802156b7:	e8 e9 a9 fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff802156bc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff802156c1:	4c 89 e2             	mov    %r12,%rdx
ffffffff802156c4:	48 89 ee             	mov    %rbp,%rsi
ffffffff802156c7:	48 01 d8             	add    %rbx,%rax
ffffffff802156ca:	66 c7 00 3a 20       	movw   $0x203a,(%rax)
ffffffff802156cf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff802156d4:	48 8d 7c 03 02       	lea    0x2(%rbx,%rax,1),%rdi
ffffffff802156d9:	e8 c7 a9 fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff802156de:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
ffffffff802156e3:	e8 f8 1d ff ff       	callq  ffffffff802074e0 <caml_raise_sys_error>
ffffffff802156e8:	48 89 c7             	mov    %rax,%rdi
ffffffff802156eb:	e8 20 37 00 00       	callq  ffffffff80218e10 <caml_copy_string>
ffffffff802156f0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff802156f5:	eb e7                	jmp    ffffffff802156de <caml_sys_error+0xfe>
ffffffff802156f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802156fe:	00 00 

ffffffff80215700 <caml_sys_check_path>:
ffffffff80215700:	55                   	push   %rbp
ffffffff80215701:	48 89 fd             	mov    %rdi,%rbp
ffffffff80215704:	e8 f7 f6 ff ff       	callq  ffffffff80214e00 <caml_string_is_c_safe>
ffffffff80215709:	85 c0                	test   %eax,%eax
ffffffff8021570b:	74 02                	je     ffffffff8021570f <caml_sys_check_path+0xf>
ffffffff8021570d:	5d                   	pop    %rbp
ffffffff8021570e:	c3                   	retq   
ffffffff8021570f:	e8 dc 2d 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff80215714:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215717:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
ffffffff8021571d:	e8 be fe ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff80215722:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215729:	00 00 00 00 
ffffffff8021572d:	0f 1f 00             	nopl   (%rax)

ffffffff80215730 <caml_sys_io_error>:
ffffffff80215730:	55                   	push   %rbp
ffffffff80215731:	48 89 fd             	mov    %rdi,%rbp
ffffffff80215734:	e8 b7 2d 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff80215739:	83 38 0b             	cmpl   $0xb,(%rax)
ffffffff8021573c:	74 08                	je     ffffffff80215746 <caml_sys_io_error+0x16>
ffffffff8021573e:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215741:	e8 9a fe ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff80215746:	e8 e5 1d ff ff       	callq  ffffffff80207530 <caml_raise_sys_blocked_io>
ffffffff8021574b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80215750 <caml_sys_exit>:
ffffffff80215750:	41 57                	push   %r15
ffffffff80215752:	41 56                	push   %r14
ffffffff80215754:	41 55                	push   %r13
ffffffff80215756:	41 54                	push   %r12
ffffffff80215758:	55                   	push   %rbp
ffffffff80215759:	53                   	push   %rbx
ffffffff8021575a:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021575d:	48 d1 fb             	sar    %rbx
ffffffff80215760:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80215764:	f6 05 6e 68 02 00 04 	testb  $0x4,0x2686e(%rip)        # ffffffff8023bfd9 <caml_verb_gc+0x1>
ffffffff8021576b:	75 15                	jne    ffffffff80215782 <caml_sys_exit+0x32>
ffffffff8021576d:	8b 05 ad 0b 03 00    	mov    0x30bad(%rip),%eax        # ffffffff80246320 <caml_cleanup_on_exit>
ffffffff80215773:	85 c0                	test   %eax,%eax
ffffffff80215775:	0f 85 9f 01 00 00    	jne    ffffffff8021591a <caml_sys_exit+0x1ca>
ffffffff8021577b:	89 df                	mov    %ebx,%edi
ffffffff8021577d:	e8 3f a9 fe ff       	callq  ffffffff802000c1 <exit>
ffffffff80215782:	48 8b 05 1f 68 02 00 	mov    0x2681f(%rip),%rax        # ffffffff8023bfa8 <caml_young_end>
ffffffff80215789:	48 2b 05 f8 67 02 00 	sub    0x267f8(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80215790:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff80215794:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff80215798:	f2 0f 10 1d 20 2d 03 	movsd  0x32d20(%rip),%xmm3        # ffffffff802484c0 <caml_stat_promoted_words>
ffffffff8021579f:	00 
ffffffff802157a0:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff802157a5:	48 8b 05 ec 65 02 00 	mov    0x265ec(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff802157ac:	f2 0f 58 0d 14 2d 03 	addsd  0x32d14(%rip),%xmm1        # ffffffff802484c8 <caml_stat_minor_words>
ffffffff802157b3:	00 
ffffffff802157b4:	48 85 c0             	test   %rax,%rax
ffffffff802157b7:	0f 88 67 01 00 00    	js     ffffffff80215924 <caml_sys_exit+0x1d4>
ffffffff802157bd:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff802157c1:	f2 48 0f 2a d0       	cvtsi2sd %rax,%xmm2
ffffffff802157c6:	66 0f 28 c1          	movapd %xmm1,%xmm0
ffffffff802157ca:	f2 0f 58 15 e6 2c 03 	addsd  0x32ce6(%rip),%xmm2        # ffffffff802484b8 <caml_stat_major_words>
ffffffff802157d1:	00 
ffffffff802157d2:	48 8b 15 d7 2c 03 00 	mov    0x32cd7(%rip),%rdx        # ffffffff802484b0 <caml_stat_minor_collections>
ffffffff802157d9:	48 8d 35 3f cb 00 00 	lea    0xcb3f(%rip),%rsi        # ffffffff8022231f <posix_signals+0x23f>
ffffffff802157e0:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff802157e5:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802157ea:	f2 0f 11 1c 24       	movsd  %xmm3,(%rsp)
ffffffff802157ef:	48 8b 2d b2 2c 03 00 	mov    0x32cb2(%rip),%rbp        # ffffffff802484a8 <caml_stat_major_collections>
ffffffff802157f6:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
ffffffff802157fb:	4c 8b 3d 9e 2c 03 00 	mov    0x32c9e(%rip),%r15        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff80215802:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
ffffffff80215806:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
ffffffff8021580c:	4c 8b 35 75 2c 03 00 	mov    0x32c75(%rip),%r14        # ffffffff80248488 <caml_stat_heap_chunks>
ffffffff80215813:	4c 8b 2d 7e 2c 03 00 	mov    0x32c7e(%rip),%r13        # ffffffff80248498 <caml_stat_top_heap_wsz>
ffffffff8021581a:	4c 8b 25 6f 2c 03 00 	mov    0x32c6f(%rip),%r12        # ffffffff80248490 <caml_stat_compactions>
ffffffff80215821:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
ffffffff80215827:	f2 0f 5c c3          	subsd  %xmm3,%xmm0
ffffffff8021582b:	e8 c0 c9 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80215830:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
ffffffff80215836:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff8021583b:	48 8d 35 f4 ca 00 00 	lea    0xcaf4(%rip),%rsi        # ffffffff80222336 <posix_signals+0x256>
ffffffff80215842:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215847:	66 0f 28 c1          	movapd %xmm1,%xmm0
ffffffff8021584b:	e8 a0 c9 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80215850:	f2 0f 10 1c 24       	movsd  (%rsp),%xmm3
ffffffff80215855:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff8021585a:	48 8d 35 e8 ca 00 00 	lea    0xcae8(%rip),%rsi        # ffffffff80222349 <posix_signals+0x269>
ffffffff80215861:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215866:	66 0f 28 c3          	movapd %xmm3,%xmm0
ffffffff8021586a:	e8 81 c9 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021586f:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
ffffffff80215875:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff8021587a:	48 8d 35 de ca 00 00 	lea    0xcade(%rip),%rsi        # ffffffff8022235f <posix_signals+0x27f>
ffffffff80215881:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215886:	66 0f 28 c2          	movapd %xmm2,%xmm0
ffffffff8021588a:	e8 61 c9 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021588f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff80215894:	31 c0                	xor    %eax,%eax
ffffffff80215896:	48 8d 35 d5 ca 00 00 	lea    0xcad5(%rip),%rsi        # ffffffff80222372 <posix_signals+0x292>
ffffffff8021589d:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff802158a2:	e8 49 c9 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff802158a7:	48 89 ea             	mov    %rbp,%rdx
ffffffff802158aa:	31 c0                	xor    %eax,%eax
ffffffff802158ac:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff802158b1:	48 8d 35 d2 ca 00 00 	lea    0xcad2(%rip),%rsi        # ffffffff8022238a <posix_signals+0x2aa>
ffffffff802158b8:	e8 33 c9 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff802158bd:	4c 89 fa             	mov    %r15,%rdx
ffffffff802158c0:	31 c0                	xor    %eax,%eax
ffffffff802158c2:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff802158c7:	48 8d 35 ea ca 00 00 	lea    0xcaea(%rip),%rsi        # ffffffff802223b8 <posix_signals+0x2d8>
ffffffff802158ce:	e8 1d c9 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff802158d3:	4c 89 f2             	mov    %r14,%rdx
ffffffff802158d6:	31 c0                	xor    %eax,%eax
ffffffff802158d8:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff802158dd:	48 8d 35 be ca 00 00 	lea    0xcabe(%rip),%rsi        # ffffffff802223a2 <posix_signals+0x2c2>
ffffffff802158e4:	e8 07 c9 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff802158e9:	4c 89 ea             	mov    %r13,%rdx
ffffffff802158ec:	31 c0                	xor    %eax,%eax
ffffffff802158ee:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff802158f3:	48 8d 35 ba ca 00 00 	lea    0xcaba(%rip),%rsi        # ffffffff802223b4 <posix_signals+0x2d4>
ffffffff802158fa:	e8 f1 c8 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff802158ff:	4c 89 e2             	mov    %r12,%rdx
ffffffff80215902:	bf 00 04 00 00       	mov    $0x400,%edi
ffffffff80215907:	31 c0                	xor    %eax,%eax
ffffffff80215909:	48 8d 35 b9 ca 00 00 	lea    0xcab9(%rip),%rsi        # ffffffff802223c9 <posix_signals+0x2e9>
ffffffff80215910:	e8 db c8 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80215915:	e9 53 fe ff ff       	jmpq   ffffffff8021576d <caml_sys_exit+0x1d>
ffffffff8021591a:	e8 11 f1 ff ff       	callq  ffffffff80214a30 <caml_shutdown>
ffffffff8021591f:	e9 57 fe ff ff       	jmpq   ffffffff8021577b <caml_sys_exit+0x2b>
ffffffff80215924:	48 89 c2             	mov    %rax,%rdx
ffffffff80215927:	83 e0 01             	and    $0x1,%eax
ffffffff8021592a:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff8021592e:	48 d1 ea             	shr    %rdx
ffffffff80215931:	48 09 c2             	or     %rax,%rdx
ffffffff80215934:	f2 48 0f 2a d2       	cvtsi2sd %rdx,%xmm2
ffffffff80215939:	f2 0f 58 d2          	addsd  %xmm2,%xmm2
ffffffff8021593d:	e9 84 fe ff ff       	jmpq   ffffffff802157c6 <caml_sys_exit+0x76>
ffffffff80215942:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215949:	00 00 00 00 
ffffffff8021594d:	0f 1f 00             	nopl   (%rax)

ffffffff80215950 <caml_sys_open>:
ffffffff80215950:	41 55                	push   %r13
ffffffff80215952:	41 54                	push   %r12
ffffffff80215954:	55                   	push   %rbp
ffffffff80215955:	53                   	push   %rbx
ffffffff80215956:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff8021595a:	4c 8b 2d 17 e7 02 00 	mov    0x2e717(%rip),%r13        # ffffffff80244078 <caml_local_roots>
ffffffff80215961:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff80215966:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
ffffffff8021596b:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff80215970:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80215977:	00 00 
ffffffff80215979:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffff8021597e:	31 c0                	xor    %eax,%eax
ffffffff80215980:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80215985:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
ffffffff8021598a:	48 89 05 e7 e6 02 00 	mov    %rax,0x2e6e7(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215991:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff80215996:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff8021599b:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff802159a0:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffff802159a5:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff802159aa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff802159af:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff802159b6:	00 00 
ffffffff802159b8:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
ffffffff802159bf:	00 00 
ffffffff802159c1:	e8 3a fd ff ff       	callq  ffffffff80215700 <caml_sys_check_path>
ffffffff802159c6:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
ffffffff802159cb:	e8 20 b9 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff802159d0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff802159d5:	48 8d 35 c4 63 01 00 	lea    0x163c4(%rip),%rsi        # ffffffff8022bda0 <sys_open_flags>
ffffffff802159dc:	48 89 c5             	mov    %rax,%rbp
ffffffff802159df:	e8 ac 36 00 00       	callq  ffffffff80219090 <caml_convert_flag_list>
ffffffff802159e4:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
ffffffff802159e9:	89 c3                	mov    %eax,%ebx
ffffffff802159eb:	e8 10 e9 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff802159f0:	49 d1 fc             	sar    %r12
ffffffff802159f3:	89 de                	mov    %ebx,%esi
ffffffff802159f5:	48 89 ef             	mov    %rbp,%rdi
ffffffff802159f8:	81 ce 00 00 08 00    	or     $0x80000,%esi
ffffffff802159fe:	44 89 e2             	mov    %r12d,%edx
ffffffff80215a01:	31 c0                	xor    %eax,%eax
ffffffff80215a03:	e8 c8 a6 fe ff       	callq  ffffffff802000d0 <open64>
ffffffff80215a08:	48 63 d8             	movslq %eax,%rbx
ffffffff80215a0b:	e8 30 e9 ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff80215a10:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215a13:	e8 38 af ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80215a18:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80215a1b:	74 27                	je     ffffffff80215a44 <caml_sys_open+0xf4>
ffffffff80215a1d:	4c 89 2d 54 e6 02 00 	mov    %r13,0x2e654(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215a24:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
ffffffff80215a29:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
ffffffff80215a2e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80215a35:	00 00 
ffffffff80215a37:	75 15                	jne    ffffffff80215a4e <caml_sys_open+0xfe>
ffffffff80215a39:	48 83 c4 78          	add    $0x78,%rsp
ffffffff80215a3d:	5b                   	pop    %rbx
ffffffff80215a3e:	5d                   	pop    %rbp
ffffffff80215a3f:	41 5c                	pop    %r12
ffffffff80215a41:	41 5d                	pop    %r13
ffffffff80215a43:	c3                   	retq   
ffffffff80215a44:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
ffffffff80215a49:	e8 92 fb ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff80215a4e:	e8 4d a6 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80215a53:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215a5a:	00 00 00 00 
ffffffff80215a5e:	66 90                	xchg   %ax,%ax

ffffffff80215a60 <caml_sys_close>:
ffffffff80215a60:	53                   	push   %rbx
ffffffff80215a61:	48 89 fb             	mov    %rdi,%rbx
ffffffff80215a64:	48 d1 fb             	sar    %rbx
ffffffff80215a67:	e8 94 e8 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff80215a6c:	48 89 df             	mov    %rbx,%rdi
ffffffff80215a6f:	e8 3e a6 fe ff       	callq  ffffffff802000b2 <close>
ffffffff80215a74:	e8 c7 e8 ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff80215a79:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215a7e:	5b                   	pop    %rbx
ffffffff80215a7f:	c3                   	retq   

ffffffff80215a80 <caml_sys_file_exists>:
ffffffff80215a80:	55                   	push   %rbp
ffffffff80215a81:	48 89 fd             	mov    %rdi,%rbp
ffffffff80215a84:	53                   	push   %rbx
ffffffff80215a85:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
ffffffff80215a8c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80215a93:	00 00 
ffffffff80215a95:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
ffffffff80215a9c:	00 
ffffffff80215a9d:	31 c0                	xor    %eax,%eax
ffffffff80215a9f:	e8 5c f3 ff ff       	callq  ffffffff80214e00 <caml_string_is_c_safe>
ffffffff80215aa4:	85 c0                	test   %eax,%eax
ffffffff80215aa6:	75 28                	jne    ffffffff80215ad0 <caml_sys_file_exists+0x50>
ffffffff80215aa8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215aad:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
ffffffff80215ab4:	00 
ffffffff80215ab5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80215abc:	00 00 
ffffffff80215abe:	75 4a                	jne    ffffffff80215b0a <caml_sys_file_exists+0x8a>
ffffffff80215ac0:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffff80215ac7:	5b                   	pop    %rbx
ffffffff80215ac8:	5d                   	pop    %rbp
ffffffff80215ac9:	c3                   	retq   
ffffffff80215aca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80215ad0:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215ad3:	e8 18 b8 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80215ad8:	48 89 c5             	mov    %rax,%rbp
ffffffff80215adb:	e8 20 e8 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff80215ae0:	48 89 e2             	mov    %rsp,%rdx
ffffffff80215ae3:	48 89 ee             	mov    %rbp,%rsi
ffffffff80215ae6:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80215aeb:	e8 e1 a5 fe ff       	callq  ffffffff802000d1 <__xstat64>
ffffffff80215af0:	89 c3                	mov    %eax,%ebx
ffffffff80215af2:	e8 49 e8 ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff80215af7:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215afa:	e8 51 ae ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80215aff:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80215b04:	85 db                	test   %ebx,%ebx
ffffffff80215b06:	75 a0                	jne    ffffffff80215aa8 <caml_sys_file_exists+0x28>
ffffffff80215b08:	eb a3                	jmp    ffffffff80215aad <caml_sys_file_exists+0x2d>
ffffffff80215b0a:	e8 91 a5 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80215b0f:	90                   	nop

ffffffff80215b10 <caml_sys_is_directory>:
ffffffff80215b10:	41 54                	push   %r12
ffffffff80215b12:	55                   	push   %rbp
ffffffff80215b13:	53                   	push   %rbx
ffffffff80215b14:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
ffffffff80215b1b:	4c 8b 25 56 e5 02 00 	mov    0x2e556(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff80215b22:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80215b27:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80215b2e:	00 00 
ffffffff80215b30:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
ffffffff80215b37:	00 
ffffffff80215b38:	31 c0                	xor    %eax,%eax
ffffffff80215b3a:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80215b3f:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
ffffffff80215b44:	48 89 05 2d e5 02 00 	mov    %rax,0x2e52d(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215b4b:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80215b50:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80215b55:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80215b5c:	00 00 
ffffffff80215b5e:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80215b65:	00 00 
ffffffff80215b67:	e8 94 fb ff ff       	callq  ffffffff80215700 <caml_sys_check_path>
ffffffff80215b6c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80215b71:	e8 7a b7 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80215b76:	48 89 c5             	mov    %rax,%rbp
ffffffff80215b79:	e8 82 e7 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff80215b7e:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80215b83:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
ffffffff80215b88:	48 89 ee             	mov    %rbp,%rsi
ffffffff80215b8b:	e8 41 a5 fe ff       	callq  ffffffff802000d1 <__xstat64>
ffffffff80215b90:	89 c3                	mov    %eax,%ebx
ffffffff80215b92:	e8 a9 e7 ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff80215b97:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215b9a:	e8 b1 ad ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80215b9f:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80215ba2:	74 3f                	je     ffffffff80215be3 <caml_sys_is_directory+0xd3>
ffffffff80215ba4:	8b 44 24 68          	mov    0x68(%rsp),%eax
ffffffff80215ba8:	4c 89 25 c9 e4 02 00 	mov    %r12,0x2e4c9(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215baf:	25 00 f0 00 00       	and    $0xf000,%eax
ffffffff80215bb4:	3d 00 40 00 00       	cmp    $0x4000,%eax
ffffffff80215bb9:	0f 94 c0             	sete   %al
ffffffff80215bbc:	48 8b 8c 24 e8 00 00 	mov    0xe8(%rsp),%rcx
ffffffff80215bc3:	00 
ffffffff80215bc4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80215bcb:	00 00 
ffffffff80215bcd:	0f b6 c0             	movzbl %al,%eax
ffffffff80215bd0:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80215bd5:	75 16                	jne    ffffffff80215bed <caml_sys_is_directory+0xdd>
ffffffff80215bd7:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
ffffffff80215bde:	5b                   	pop    %rbx
ffffffff80215bdf:	5d                   	pop    %rbp
ffffffff80215be0:	41 5c                	pop    %r12
ffffffff80215be2:	c3                   	retq   
ffffffff80215be3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80215be8:	e8 f3 f9 ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff80215bed:	e8 ae a4 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80215bf2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215bf9:	00 00 00 00 
ffffffff80215bfd:	0f 1f 00             	nopl   (%rax)

ffffffff80215c00 <caml_sys_remove>:
ffffffff80215c00:	41 54                	push   %r12
ffffffff80215c02:	55                   	push   %rbp
ffffffff80215c03:	53                   	push   %rbx
ffffffff80215c04:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80215c08:	4c 8b 25 69 e4 02 00 	mov    0x2e469(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff80215c0f:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80215c14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80215c1b:	00 00 
ffffffff80215c1d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff80215c22:	31 c0                	xor    %eax,%eax
ffffffff80215c24:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80215c29:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
ffffffff80215c2e:	48 89 05 43 e4 02 00 	mov    %rax,0x2e443(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215c35:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80215c3a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80215c3f:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80215c46:	00 00 
ffffffff80215c48:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80215c4f:	00 00 
ffffffff80215c51:	e8 aa fa ff ff       	callq  ffffffff80215700 <caml_sys_check_path>
ffffffff80215c56:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80215c5b:	e8 90 b6 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80215c60:	48 89 c5             	mov    %rax,%rbp
ffffffff80215c63:	e8 98 e6 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff80215c68:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215c6b:	e8 50 a4 fe ff       	callq  ffffffff802000c0 <unlink>
ffffffff80215c70:	89 c3                	mov    %eax,%ebx
ffffffff80215c72:	e8 c9 e6 ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff80215c77:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215c7a:	e8 d1 ac ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80215c7f:	85 db                	test   %ebx,%ebx
ffffffff80215c81:	75 25                	jne    ffffffff80215ca8 <caml_sys_remove+0xa8>
ffffffff80215c83:	4c 89 25 ee e3 02 00 	mov    %r12,0x2e3ee(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215c8a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff80215c8f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80215c96:	00 00 
ffffffff80215c98:	75 18                	jne    ffffffff80215cb2 <caml_sys_remove+0xb2>
ffffffff80215c9a:	48 83 c4 60          	add    $0x60,%rsp
ffffffff80215c9e:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215ca3:	5b                   	pop    %rbx
ffffffff80215ca4:	5d                   	pop    %rbp
ffffffff80215ca5:	41 5c                	pop    %r12
ffffffff80215ca7:	c3                   	retq   
ffffffff80215ca8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80215cad:	e8 2e f9 ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff80215cb2:	e8 e9 a3 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80215cb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80215cbe:	00 00 

ffffffff80215cc0 <caml_sys_rename>:
ffffffff80215cc0:	41 54                	push   %r12
ffffffff80215cc2:	49 89 f4             	mov    %rsi,%r12
ffffffff80215cc5:	55                   	push   %rbp
ffffffff80215cc6:	48 89 fd             	mov    %rdi,%rbp
ffffffff80215cc9:	53                   	push   %rbx
ffffffff80215cca:	e8 31 fa ff ff       	callq  ffffffff80215700 <caml_sys_check_path>
ffffffff80215ccf:	4c 89 e7             	mov    %r12,%rdi
ffffffff80215cd2:	e8 29 fa ff ff       	callq  ffffffff80215700 <caml_sys_check_path>
ffffffff80215cd7:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215cda:	e8 11 b6 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80215cdf:	4c 89 e7             	mov    %r12,%rdi
ffffffff80215ce2:	48 89 c5             	mov    %rax,%rbp
ffffffff80215ce5:	e8 06 b6 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80215cea:	49 89 c4             	mov    %rax,%r12
ffffffff80215ced:	e8 0e e6 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff80215cf2:	4c 89 e6             	mov    %r12,%rsi
ffffffff80215cf5:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215cf8:	e8 fb a3 fe ff       	callq  ffffffff802000f8 <rename>
ffffffff80215cfd:	89 c3                	mov    %eax,%ebx
ffffffff80215cff:	e8 3c e6 ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff80215d04:	4c 89 e7             	mov    %r12,%rdi
ffffffff80215d07:	e8 44 ac ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80215d0c:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215d0f:	e8 3c ac ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80215d14:	85 db                	test   %ebx,%ebx
ffffffff80215d16:	75 0a                	jne    ffffffff80215d22 <caml_sys_rename+0x62>
ffffffff80215d18:	5b                   	pop    %rbx
ffffffff80215d19:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215d1e:	5d                   	pop    %rbp
ffffffff80215d1f:	41 5c                	pop    %r12
ffffffff80215d21:	c3                   	retq   
ffffffff80215d22:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80215d27:	e8 b4 f8 ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff80215d2c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80215d30 <caml_sys_chdir>:
ffffffff80215d30:	41 54                	push   %r12
ffffffff80215d32:	55                   	push   %rbp
ffffffff80215d33:	53                   	push   %rbx
ffffffff80215d34:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80215d38:	4c 8b 25 39 e3 02 00 	mov    0x2e339(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff80215d3f:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80215d44:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80215d4b:	00 00 
ffffffff80215d4d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff80215d52:	31 c0                	xor    %eax,%eax
ffffffff80215d54:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80215d59:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
ffffffff80215d5e:	48 89 05 13 e3 02 00 	mov    %rax,0x2e313(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215d65:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80215d6a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80215d6f:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80215d76:	00 00 
ffffffff80215d78:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80215d7f:	00 00 
ffffffff80215d81:	e8 7a f9 ff ff       	callq  ffffffff80215700 <caml_sys_check_path>
ffffffff80215d86:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80215d8b:	e8 60 b5 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80215d90:	48 89 c5             	mov    %rax,%rbp
ffffffff80215d93:	e8 68 e5 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff80215d98:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215d9b:	e8 57 a3 fe ff       	callq  ffffffff802000f7 <chdir>
ffffffff80215da0:	89 c3                	mov    %eax,%ebx
ffffffff80215da2:	e8 99 e5 ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff80215da7:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215daa:	e8 a1 ab ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80215daf:	85 db                	test   %ebx,%ebx
ffffffff80215db1:	75 25                	jne    ffffffff80215dd8 <caml_sys_chdir+0xa8>
ffffffff80215db3:	4c 89 25 be e2 02 00 	mov    %r12,0x2e2be(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215dba:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff80215dbf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80215dc6:	00 00 
ffffffff80215dc8:	75 18                	jne    ffffffff80215de2 <caml_sys_chdir+0xb2>
ffffffff80215dca:	48 83 c4 60          	add    $0x60,%rsp
ffffffff80215dce:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215dd3:	5b                   	pop    %rbx
ffffffff80215dd4:	5d                   	pop    %rbp
ffffffff80215dd5:	41 5c                	pop    %r12
ffffffff80215dd7:	c3                   	retq   
ffffffff80215dd8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80215ddd:	e8 fe f7 ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff80215de2:	e8 b9 a2 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80215de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80215dee:	00 00 

ffffffff80215df0 <caml_sys_getcwd>:
ffffffff80215df0:	55                   	push   %rbp
ffffffff80215df1:	be 00 10 00 00       	mov    $0x1000,%esi
ffffffff80215df6:	48 81 ec 10 10 00 00 	sub    $0x1010,%rsp
ffffffff80215dfd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80215e04:	00 00 
ffffffff80215e06:	48 89 84 24 08 10 00 	mov    %rax,0x1008(%rsp)
ffffffff80215e0d:	00 
ffffffff80215e0e:	31 c0                	xor    %eax,%eax
ffffffff80215e10:	48 89 e5             	mov    %rsp,%rbp
ffffffff80215e13:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215e16:	e8 db a2 fe ff       	callq  ffffffff802000f6 <getcwd>
ffffffff80215e1b:	48 85 c0             	test   %rax,%rax
ffffffff80215e1e:	74 24                	je     ffffffff80215e44 <caml_sys_getcwd+0x54>
ffffffff80215e20:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215e23:	e8 e8 2f 00 00       	callq  ffffffff80218e10 <caml_copy_string>
ffffffff80215e28:	48 8b 94 24 08 10 00 	mov    0x1008(%rsp),%rdx
ffffffff80215e2f:	00 
ffffffff80215e30:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff80215e37:	00 00 
ffffffff80215e39:	75 13                	jne    ffffffff80215e4e <caml_sys_getcwd+0x5e>
ffffffff80215e3b:	48 81 c4 10 10 00 00 	add    $0x1010,%rsp
ffffffff80215e42:	5d                   	pop    %rbp
ffffffff80215e43:	c3                   	retq   
ffffffff80215e44:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80215e49:	e8 92 f7 ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff80215e4e:	e8 4d a2 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80215e53:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215e5a:	00 00 00 00 
ffffffff80215e5e:	66 90                	xchg   %ax,%ax

ffffffff80215e60 <caml_sys_unsafe_getenv>:
ffffffff80215e60:	41 54                	push   %r12
ffffffff80215e62:	55                   	push   %rbp
ffffffff80215e63:	48 89 fd             	mov    %rdi,%rbp
ffffffff80215e66:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80215e6a:	e8 91 ef ff ff       	callq  ffffffff80214e00 <caml_string_is_c_safe>
ffffffff80215e6f:	85 c0                	test   %eax,%eax
ffffffff80215e71:	74 32                	je     ffffffff80215ea5 <caml_sys_unsafe_getenv+0x45>
ffffffff80215e73:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215e76:	e8 75 b4 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80215e7b:	48 89 c7             	mov    %rax,%rdi
ffffffff80215e7e:	49 89 c4             	mov    %rax,%r12
ffffffff80215e81:	e8 5f a2 fe ff       	callq  ffffffff802000e5 <getenv>
ffffffff80215e86:	4c 89 e7             	mov    %r12,%rdi
ffffffff80215e89:	48 89 c5             	mov    %rax,%rbp
ffffffff80215e8c:	e8 bf aa ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80215e91:	48 85 ed             	test   %rbp,%rbp
ffffffff80215e94:	74 0f                	je     ffffffff80215ea5 <caml_sys_unsafe_getenv+0x45>
ffffffff80215e96:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80215e9a:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215e9d:	5d                   	pop    %rbp
ffffffff80215e9e:	41 5c                	pop    %r12
ffffffff80215ea0:	e9 6b 2f 00 00       	jmpq   ffffffff80218e10 <caml_copy_string>
ffffffff80215ea5:	e8 76 16 ff ff       	callq  ffffffff80207520 <caml_raise_not_found>
ffffffff80215eaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80215eb0 <caml_sys_getenv>:
ffffffff80215eb0:	41 54                	push   %r12
ffffffff80215eb2:	55                   	push   %rbp
ffffffff80215eb3:	48 89 fd             	mov    %rdi,%rbp
ffffffff80215eb6:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80215eba:	e8 41 ef ff ff       	callq  ffffffff80214e00 <caml_string_is_c_safe>
ffffffff80215ebf:	85 c0                	test   %eax,%eax
ffffffff80215ec1:	74 32                	je     ffffffff80215ef5 <caml_sys_getenv+0x45>
ffffffff80215ec3:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215ec6:	e8 25 b4 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80215ecb:	48 89 c7             	mov    %rax,%rdi
ffffffff80215ece:	49 89 c4             	mov    %rax,%r12
ffffffff80215ed1:	e8 8a 0d 00 00       	callq  ffffffff80216c60 <caml_secure_getenv>
ffffffff80215ed6:	4c 89 e7             	mov    %r12,%rdi
ffffffff80215ed9:	48 89 c5             	mov    %rax,%rbp
ffffffff80215edc:	e8 6f aa ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80215ee1:	48 85 ed             	test   %rbp,%rbp
ffffffff80215ee4:	74 0f                	je     ffffffff80215ef5 <caml_sys_getenv+0x45>
ffffffff80215ee6:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80215eea:	48 89 ef             	mov    %rbp,%rdi
ffffffff80215eed:	5d                   	pop    %rbp
ffffffff80215eee:	41 5c                	pop    %r12
ffffffff80215ef0:	e9 1b 2f 00 00       	jmpq   ffffffff80218e10 <caml_copy_string>
ffffffff80215ef5:	e8 26 16 ff ff       	callq  ffffffff80207520 <caml_raise_not_found>
ffffffff80215efa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80215f00 <caml_sys_get_argv>:
ffffffff80215f00:	53                   	push   %rbx
ffffffff80215f01:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80215f05:	48 8b 1d 6c e1 02 00 	mov    0x2e16c(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff80215f0c:	48 8b 3d 3d 05 03 00 	mov    0x3053d(%rip),%rdi        # ffffffff80246450 <caml_exe_name>
ffffffff80215f13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80215f1a:	00 00 
ffffffff80215f1c:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff80215f21:	31 c0                	xor    %eax,%eax
ffffffff80215f23:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80215f28:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
ffffffff80215f2f:	00 
ffffffff80215f30:	48 89 05 41 e1 02 00 	mov    %rax,0x2e141(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215f37:	48 89 e0             	mov    %rsp,%rax
ffffffff80215f3a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80215f3f:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80215f44:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
ffffffff80215f4b:	00 00 
ffffffff80215f4d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80215f52:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80215f59:	00 00 
ffffffff80215f5b:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff80215f62:	00 00 
ffffffff80215f64:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
ffffffff80215f69:	e8 a2 2e 00 00       	callq  ffffffff80218e10 <caml_copy_string>
ffffffff80215f6e:	31 f6                	xor    %esi,%esi
ffffffff80215f70:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80215f75:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80215f79:	e8 82 2c 00 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff80215f7e:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff80215f82:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80215f87:	48 89 10             	mov    %rdx,(%rax)
ffffffff80215f8a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80215f8f:	48 8b 15 c2 04 03 00 	mov    0x304c2(%rip),%rdx        # ffffffff80246458 <main_argv>
ffffffff80215f96:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff80215f9a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80215f9f:	48 89 1d d2 e0 02 00 	mov    %rbx,0x2e0d2(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80215fa6:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
ffffffff80215fab:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80215fb2:	00 00 
ffffffff80215fb4:	75 06                	jne    ffffffff80215fbc <caml_sys_get_argv+0xbc>
ffffffff80215fb6:	48 83 c4 60          	add    $0x60,%rsp
ffffffff80215fba:	5b                   	pop    %rbx
ffffffff80215fbb:	c3                   	retq   
ffffffff80215fbc:	e8 df a0 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80215fc1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80215fc8:	00 00 00 00 
ffffffff80215fcc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80215fd0 <caml_sys_argv>:
ffffffff80215fd0:	48 8b 05 81 04 03 00 	mov    0x30481(%rip),%rax        # ffffffff80246458 <main_argv>
ffffffff80215fd7:	c3                   	retq   
ffffffff80215fd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80215fdf:	00 

ffffffff80215fe0 <caml_sys_modify_argv>:
ffffffff80215fe0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80215fe4:	48 89 fe             	mov    %rdi,%rsi
ffffffff80215fe7:	48 8d 3d 6a 04 03 00 	lea    0x3046a(%rip),%rdi        # ffffffff80246458 <main_argv>
ffffffff80215fee:	e8 1d 2c ff ff       	callq  ffffffff80208c10 <caml_modify_generational_global_root>
ffffffff80215ff3:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80215ff8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80215ffc:	c3                   	retq   
ffffffff80215ffd:	0f 1f 00             	nopl   (%rax)

ffffffff80216000 <caml_sys_executable_name>:
ffffffff80216000:	48 8b 3d 49 04 03 00 	mov    0x30449(%rip),%rdi        # ffffffff80246450 <caml_exe_name>
ffffffff80216007:	e9 04 2e 00 00       	jmpq   ffffffff80218e10 <caml_copy_string>
ffffffff8021600c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80216010 <caml_sys_init>:
ffffffff80216010:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80216014:	48 89 3d 35 04 03 00 	mov    %rdi,0x30435(%rip)        # ffffffff80246450 <caml_exe_name>
ffffffff8021601b:	48 c7 c7 10 8e 21 80 	mov    $0xffffffff80218e10,%rdi
ffffffff80216022:	e8 89 2e 00 00       	callq  ffffffff80218eb0 <caml_alloc_array>
ffffffff80216027:	48 8d 3d 2a 04 03 00 	lea    0x3042a(%rip),%rdi        # ffffffff80246458 <main_argv>
ffffffff8021602e:	48 89 05 23 04 03 00 	mov    %rax,0x30423(%rip)        # ffffffff80246458 <main_argv>
ffffffff80216035:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80216039:	e9 52 2b ff ff       	jmpq   ffffffff80208b90 <caml_register_generational_global_root>
ffffffff8021603e:	66 90                	xchg   %ax,%ax

ffffffff80216040 <caml_sys_system_command>:
ffffffff80216040:	41 54                	push   %r12
ffffffff80216042:	55                   	push   %rbp
ffffffff80216043:	53                   	push   %rbx
ffffffff80216044:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80216048:	4c 8b 25 29 e0 02 00 	mov    0x2e029(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff8021604f:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80216054:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021605b:	00 00 
ffffffff8021605d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff80216062:	31 c0                	xor    %eax,%eax
ffffffff80216064:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80216069:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
ffffffff8021606e:	48 89 05 03 e0 02 00 	mov    %rax,0x2e003(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80216075:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff8021607a:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80216081:	00 00 
ffffffff80216083:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8021608a:	00 00 
ffffffff8021608c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80216091:	e8 6a ed ff ff       	callq  ffffffff80214e00 <caml_string_is_c_safe>
ffffffff80216096:	85 c0                	test   %eax,%eax
ffffffff80216098:	74 72                	je     ffffffff8021610c <caml_sys_system_command+0xcc>
ffffffff8021609a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8021609f:	e8 4c b2 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff802160a4:	48 89 c5             	mov    %rax,%rbp
ffffffff802160a7:	e8 54 e2 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff802160ac:	48 89 ef             	mov    %rbp,%rdi
ffffffff802160af:	e8 3f a0 fe ff       	callq  ffffffff802000f3 <system>
ffffffff802160b4:	89 c3                	mov    %eax,%ebx
ffffffff802160b6:	e8 85 e2 ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff802160bb:	48 89 ef             	mov    %rbp,%rdi
ffffffff802160be:	e8 8d a8 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802160c3:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff802160c6:	74 3a                	je     ffffffff80216102 <caml_sys_system_command+0xc2>
ffffffff802160c8:	b8 ff 01 00 00       	mov    $0x1ff,%eax
ffffffff802160cd:	f6 c3 7f             	test   $0x7f,%bl
ffffffff802160d0:	74 26                	je     ffffffff802160f8 <caml_sys_system_command+0xb8>
ffffffff802160d2:	4c 89 25 9f df 02 00 	mov    %r12,0x2df9f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802160d9:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
ffffffff802160de:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff802160e5:	00 00 
ffffffff802160e7:	75 38                	jne    ffffffff80216121 <caml_sys_system_command+0xe1>
ffffffff802160e9:	48 83 c4 60          	add    $0x60,%rsp
ffffffff802160ed:	5b                   	pop    %rbx
ffffffff802160ee:	5d                   	pop    %rbp
ffffffff802160ef:	41 5c                	pop    %r12
ffffffff802160f1:	c3                   	retq   
ffffffff802160f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802160f8:	0f b6 df             	movzbl %bh,%ebx
ffffffff802160fb:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
ffffffff80216100:	eb d0                	jmp    ffffffff802160d2 <caml_sys_system_command+0x92>
ffffffff80216102:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80216107:	e8 d4 f4 ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff8021610c:	e8 df 23 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff80216111:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80216116:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
ffffffff8021611c:	e8 bf f4 ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff80216121:	e8 7a 9f fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80216126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021612d:	00 00 00 

ffffffff80216130 <caml_sys_time_include_children_unboxed>:
ffffffff80216130:	55                   	push   %rbp
ffffffff80216131:	53                   	push   %rbx
ffffffff80216132:	48 89 fb             	mov    %rdi,%rbx
ffffffff80216135:	31 ff                	xor    %edi,%edi
ffffffff80216137:	48 d1 fb             	sar    %rbx
ffffffff8021613a:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff80216141:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80216148:	00 00 
ffffffff8021614a:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff80216151:	00 
ffffffff80216152:	31 c0                	xor    %eax,%eax
ffffffff80216154:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
ffffffff80216159:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021615c:	e8 93 9f fe ff       	callq  ffffffff802000f4 <getrusage>
ffffffff80216161:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80216165:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff80216169:	f2 0f 10 15 8f bc 00 	movsd  0xbc8f(%rip),%xmm2        # ffffffff80221e00 <int32_length+0x320>
ffffffff80216170:	00 
ffffffff80216171:	f2 48 0f 2a 44 24 18 	cvtsi2sdq 0x18(%rsp),%xmm0
ffffffff80216178:	f2 48 0f 2a 4c 24 10 	cvtsi2sdq 0x10(%rsp),%xmm1
ffffffff8021617f:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
ffffffff80216183:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
ffffffff80216187:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021618b:	f2 48 0f 2a 4c 24 20 	cvtsi2sdq 0x20(%rsp),%xmm1
ffffffff80216192:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
ffffffff80216196:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021619a:	f2 48 0f 2a 4c 24 28 	cvtsi2sdq 0x28(%rsp),%xmm1
ffffffff802161a1:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
ffffffff802161a5:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
ffffffff802161a9:	f2 0f 58 05 3f c2 00 	addsd  0xc23f(%rip),%xmm0        # ffffffff802223f0 <posix_signals+0x310>
ffffffff802161b0:	00 
ffffffff802161b1:	85 db                	test   %ebx,%ebx
ffffffff802161b3:	75 23                	jne    ffffffff802161d8 <caml_sys_time_include_children_unboxed+0xa8>
ffffffff802161b5:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
ffffffff802161bc:	00 
ffffffff802161bd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff802161c4:	00 00 
ffffffff802161c6:	75 7e                	jne    ffffffff80216246 <caml_sys_time_include_children_unboxed+0x116>
ffffffff802161c8:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
ffffffff802161cf:	5b                   	pop    %rbx
ffffffff802161d0:	5d                   	pop    %rbp
ffffffff802161d1:	c3                   	retq   
ffffffff802161d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802161d8:	48 89 ee             	mov    %rbp,%rsi
ffffffff802161db:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff802161e0:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff802161e6:	e8 09 9f fe ff       	callq  ffffffff802000f4 <getrusage>
ffffffff802161eb:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff802161ef:	66 0f ef db          	pxor   %xmm3,%xmm3
ffffffff802161f3:	48 8b 05 06 bc 00 00 	mov    0xbc06(%rip),%rax        # ffffffff80221e00 <int32_length+0x320>
ffffffff802161fa:	f2 48 0f 2a 4c 24 18 	cvtsi2sdq 0x18(%rsp),%xmm1
ffffffff80216201:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
ffffffff80216207:	66 48 0f 6e d0       	movq   %rax,%xmm2
ffffffff8021620c:	f2 48 0f 2a 5c 24 10 	cvtsi2sdq 0x10(%rsp),%xmm3
ffffffff80216213:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
ffffffff80216217:	f2 0f 58 cb          	addsd  %xmm3,%xmm1
ffffffff8021621b:	66 0f ef db          	pxor   %xmm3,%xmm3
ffffffff8021621f:	f2 48 0f 2a 5c 24 20 	cvtsi2sdq 0x20(%rsp),%xmm3
ffffffff80216226:	f2 0f 58 cb          	addsd  %xmm3,%xmm1
ffffffff8021622a:	66 0f ef db          	pxor   %xmm3,%xmm3
ffffffff8021622e:	f2 48 0f 2a 5c 24 28 	cvtsi2sdq 0x28(%rsp),%xmm3
ffffffff80216235:	f2 0f 5e da          	divsd  %xmm2,%xmm3
ffffffff80216239:	f2 0f 58 cb          	addsd  %xmm3,%xmm1
ffffffff8021623d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
ffffffff80216241:	e9 6f ff ff ff       	jmpq   ffffffff802161b5 <caml_sys_time_include_children_unboxed+0x85>
ffffffff80216246:	e8 55 9e fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021624b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80216250 <caml_sys_time_include_children>:
ffffffff80216250:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80216254:	e8 d7 fe ff ff       	callq  ffffffff80216130 <caml_sys_time_include_children_unboxed>
ffffffff80216259:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021625d:	e9 ee 13 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80216262:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216269:	00 00 00 00 
ffffffff8021626d:	0f 1f 00             	nopl   (%rax)

ffffffff80216270 <caml_sys_time_unboxed>:
ffffffff80216270:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80216275:	e9 b6 fe ff ff       	jmpq   ffffffff80216130 <caml_sys_time_include_children_unboxed>
ffffffff8021627a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80216280 <caml_sys_time>:
ffffffff80216280:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80216284:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80216289:	e8 a2 fe ff ff       	callq  ffffffff80216130 <caml_sys_time_include_children_unboxed>
ffffffff8021628e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80216292:	e9 b9 13 ff ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff80216297:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021629e:	00 00 

ffffffff802162a0 <caml_sys_random_seed>:
ffffffff802162a0:	41 57                	push   %r15
ffffffff802162a2:	31 d2                	xor    %edx,%edx
ffffffff802162a4:	31 f6                	xor    %esi,%esi
ffffffff802162a6:	48 8d 3d 2e c1 00 00 	lea    0xc12e(%rip),%rdi        # ffffffff802223db <posix_signals+0x2fb>
ffffffff802162ad:	41 56                	push   %r14
ffffffff802162af:	41 55                	push   %r13
ffffffff802162b1:	41 54                	push   %r12
ffffffff802162b3:	55                   	push   %rbp
ffffffff802162b4:	53                   	push   %rbx
ffffffff802162b5:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff802162bc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802162c3:	00 00 
ffffffff802162c5:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff802162cc:	00 
ffffffff802162cd:	31 c0                	xor    %eax,%eax
ffffffff802162cf:	e8 fc 9d fe ff       	callq  ffffffff802000d0 <open64>
ffffffff802162d4:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff802162d7:	0f 84 4b 01 00 00    	je     ffffffff80216428 <caml_sys_random_seed+0x188>
ffffffff802162dd:	48 8d 9c 24 9c 00 00 	lea    0x9c(%rsp),%rbx
ffffffff802162e4:	00 
ffffffff802162e5:	89 c7                	mov    %eax,%edi
ffffffff802162e7:	ba 0c 00 00 00       	mov    $0xc,%edx
ffffffff802162ec:	41 89 c5             	mov    %eax,%r13d
ffffffff802162ef:	48 89 de             	mov    %rbx,%rsi
ffffffff802162f2:	e8 ec 9d fe ff       	callq  ffffffff802000e3 <read>
ffffffff802162f7:	44 89 ef             	mov    %r13d,%edi
ffffffff802162fa:	49 89 c4             	mov    %rax,%r12
ffffffff802162fd:	89 c5                	mov    %eax,%ebp
ffffffff802162ff:	e8 ae 9d fe ff       	callq  ffffffff802000b2 <close>
ffffffff80216304:	45 85 e4             	test   %r12d,%r12d
ffffffff80216307:	0f 8e 1b 01 00 00    	jle    ffffffff80216428 <caml_sys_random_seed+0x188>
ffffffff8021630d:	41 8d 4c 24 ff       	lea    -0x1(%r12),%ecx
ffffffff80216312:	48 63 d1             	movslq %ecx,%rdx
ffffffff80216315:	89 c9                	mov    %ecx,%ecx
ffffffff80216317:	48 01 da             	add    %rbx,%rdx
ffffffff8021631a:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
ffffffff8021631f:	48 8d 74 cc 18       	lea    0x18(%rsp,%rcx,8),%rsi
ffffffff80216324:	48 89 d8             	mov    %rbx,%rax
ffffffff80216327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021632e:	00 00 
ffffffff80216330:	0f b6 0a             	movzbl (%rdx),%ecx
ffffffff80216333:	48 83 c0 08          	add    $0x8,%rax
ffffffff80216337:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff8021633b:	48 89 48 f8          	mov    %rcx,-0x8(%rax)
ffffffff8021633f:	48 39 f0             	cmp    %rsi,%rax
ffffffff80216342:	75 ec                	jne    ffffffff80216330 <caml_sys_random_seed+0x90>
ffffffff80216344:	41 83 fc 0b          	cmp    $0xb,%r12d
ffffffff80216348:	7e 66                	jle    ffffffff802163b0 <caml_sys_random_seed+0x110>
ffffffff8021634a:	49 63 fc             	movslq %r12d,%rdi
ffffffff8021634d:	31 f6                	xor    %esi,%esi
ffffffff8021634f:	e8 ac 28 00 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff80216354:	8d 55 ff             	lea    -0x1(%rbp),%edx
ffffffff80216357:	48 29 c3             	sub    %rax,%rbx
ffffffff8021635a:	48 8d 7c d0 08       	lea    0x8(%rax,%rdx,8),%rdi
ffffffff8021635f:	48 89 de             	mov    %rbx,%rsi
ffffffff80216362:	48 89 c2             	mov    %rax,%rdx
ffffffff80216365:	0f 1f 00             	nopl   (%rax)
ffffffff80216368:	48 8b 0c 16          	mov    (%rsi,%rdx,1),%rcx
ffffffff8021636c:	48 83 c2 08          	add    $0x8,%rdx
ffffffff80216370:	48 8d 4c 09 01       	lea    0x1(%rcx,%rcx,1),%rcx
ffffffff80216375:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
ffffffff80216379:	48 39 d7             	cmp    %rdx,%rdi
ffffffff8021637c:	75 ea                	jne    ffffffff80216368 <caml_sys_random_seed+0xc8>
ffffffff8021637e:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
ffffffff80216385:	00 
ffffffff80216386:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021638d:	00 00 
ffffffff8021638f:	0f 85 b7 00 00 00    	jne    ffffffff8021644c <caml_sys_random_seed+0x1ac>
ffffffff80216395:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
ffffffff8021639c:	5b                   	pop    %rbx
ffffffff8021639d:	5d                   	pop    %rbp
ffffffff8021639e:	41 5c                	pop    %r12
ffffffff802163a0:	41 5d                	pop    %r13
ffffffff802163a2:	41 5e                	pop    %r14
ffffffff802163a4:	41 5f                	pop    %r15
ffffffff802163a6:	c3                   	retq   
ffffffff802163a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802163ae:	00 00 
ffffffff802163b0:	41 8d 6c 24 04       	lea    0x4(%r12),%ebp
ffffffff802163b5:	45 8d 7c 24 01       	lea    0x1(%r12),%r15d
ffffffff802163ba:	45 8d 6c 24 02       	lea    0x2(%r12),%r13d
ffffffff802163bf:	41 8d 5c 24 03       	lea    0x3(%r12),%ebx
ffffffff802163c4:	4c 63 f5             	movslq %ebp,%r14
ffffffff802163c7:	48 89 e7             	mov    %rsp,%rdi
ffffffff802163ca:	31 f6                	xor    %esi,%esi
ffffffff802163cc:	4d 63 e4             	movslq %r12d,%r12
ffffffff802163cf:	e8 21 9d fe ff       	callq  ffffffff802000f5 <gettimeofday>
ffffffff802163d4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff802163d9:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff802163dd:	4a 89 44 e4 10       	mov    %rax,0x10(%rsp,%r12,8)
ffffffff802163e2:	49 63 c7             	movslq %r15d,%rax
ffffffff802163e5:	48 89 54 c4 10       	mov    %rdx,0x10(%rsp,%rax,8)
ffffffff802163ea:	e8 02 9d fe ff       	callq  ffffffff802000f1 <getpid>
ffffffff802163ef:	49 63 d5             	movslq %r13d,%rdx
ffffffff802163f2:	48 98                	cltq   
ffffffff802163f4:	48 89 44 d4 10       	mov    %rax,0x10(%rsp,%rdx,8)
ffffffff802163f9:	e8 f4 9c fe ff       	callq  ffffffff802000f2 <getppid>
ffffffff802163fe:	48 63 d3             	movslq %ebx,%rdx
ffffffff80216401:	31 f6                	xor    %esi,%esi
ffffffff80216403:	4c 89 f7             	mov    %r14,%rdi
ffffffff80216406:	48 98                	cltq   
ffffffff80216408:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
ffffffff8021640d:	48 89 44 d4 10       	mov    %rax,0x10(%rsp,%rdx,8)
ffffffff80216412:	e8 e9 27 00 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff80216417:	85 ed                	test   %ebp,%ebp
ffffffff80216419:	0f 8f 35 ff ff ff    	jg     ffffffff80216354 <caml_sys_random_seed+0xb4>
ffffffff8021641f:	e9 5a ff ff ff       	jmpq   ffffffff8021637e <caml_sys_random_seed+0xde>
ffffffff80216424:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80216428:	41 be 04 00 00 00    	mov    $0x4,%r14d
ffffffff8021642e:	bd 04 00 00 00       	mov    $0x4,%ebp
ffffffff80216433:	45 31 e4             	xor    %r12d,%r12d
ffffffff80216436:	bb 03 00 00 00       	mov    $0x3,%ebx
ffffffff8021643b:	41 bd 02 00 00 00    	mov    $0x2,%r13d
ffffffff80216441:	41 bf 01 00 00 00    	mov    $0x1,%r15d
ffffffff80216447:	e9 7b ff ff ff       	jmpq   ffffffff802163c7 <caml_sys_random_seed+0x127>
ffffffff8021644c:	e8 4f 9c fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80216451:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216458:	00 00 00 00 
ffffffff8021645c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80216460 <caml_sys_const_big_endian>:
ffffffff80216460:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80216465:	c3                   	retq   
ffffffff80216466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021646d:	00 00 00 

ffffffff80216470 <caml_sys_const_word_size>:
ffffffff80216470:	b8 81 00 00 00       	mov    $0x81,%eax
ffffffff80216475:	c3                   	retq   
ffffffff80216476:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021647d:	00 00 00 

ffffffff80216480 <caml_sys_const_int_size>:
ffffffff80216480:	b8 7f 00 00 00       	mov    $0x7f,%eax
ffffffff80216485:	c3                   	retq   
ffffffff80216486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021648d:	00 00 00 

ffffffff80216490 <caml_sys_const_max_wosize>:
ffffffff80216490:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffff,%rax
ffffffff80216497:	ff 7f 00 
ffffffff8021649a:	c3                   	retq   
ffffffff8021649b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802164a0 <caml_sys_const_ostype_unix>:
ffffffff802164a0:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff802164a5:	c3                   	retq   
ffffffff802164a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802164ad:	00 00 00 

ffffffff802164b0 <caml_sys_const_ostype_win32>:
ffffffff802164b0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802164b5:	c3                   	retq   
ffffffff802164b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802164bd:	00 00 00 

ffffffff802164c0 <caml_sys_const_ostype_cygwin>:
ffffffff802164c0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802164c5:	c3                   	retq   
ffffffff802164c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802164cd:	00 00 00 

ffffffff802164d0 <caml_sys_const_backend_type>:
ffffffff802164d0:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff802164d5:	c3                   	retq   
ffffffff802164d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802164dd:	00 00 00 

ffffffff802164e0 <caml_sys_get_config>:
ffffffff802164e0:	53                   	push   %rbx
ffffffff802164e1:	48 8d 3d 00 bf 00 00 	lea    0xbf00(%rip),%rdi        # ffffffff802223e8 <posix_signals+0x308>
ffffffff802164e8:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff802164ec:	48 8b 1d 85 db 02 00 	mov    0x2db85(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff802164f3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802164fa:	00 00 
ffffffff802164fc:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff80216501:	31 c0                	xor    %eax,%eax
ffffffff80216503:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80216508:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
ffffffff8021650f:	00 
ffffffff80216510:	48 89 05 61 db 02 00 	mov    %rax,0x2db61(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80216517:	48 89 e0             	mov    %rsp,%rax
ffffffff8021651a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8021651f:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80216524:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
ffffffff8021652b:	00 00 
ffffffff8021652d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80216532:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80216539:	00 00 
ffffffff8021653b:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff80216542:	00 00 
ffffffff80216544:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
ffffffff80216549:	e8 c2 28 00 00       	callq  ffffffff80218e10 <caml_copy_string>
ffffffff8021654e:	31 f6                	xor    %esi,%esi
ffffffff80216550:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff80216555:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8021655a:	e8 a1 26 00 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff8021655f:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80216564:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80216568:	48 89 10             	mov    %rdx,(%rax)
ffffffff8021656b:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8021656f:	48 c7 40 08 81 00 00 	movq   $0x81,0x8(%rax)
ffffffff80216576:	00 
ffffffff80216577:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8021657b:	48 c7 40 10 01 00 00 	movq   $0x1,0x10(%rax)
ffffffff80216582:	00 
ffffffff80216583:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80216587:	48 89 1d ea da 02 00 	mov    %rbx,0x2daea(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021658e:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
ffffffff80216593:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8021659a:	00 00 
ffffffff8021659c:	75 06                	jne    ffffffff802165a4 <caml_sys_get_config+0xc4>
ffffffff8021659e:	48 83 c4 60          	add    $0x60,%rsp
ffffffff802165a2:	5b                   	pop    %rbx
ffffffff802165a3:	c3                   	retq   
ffffffff802165a4:	e8 f7 9a fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802165a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802165b0 <caml_sys_read_directory>:
ffffffff802165b0:	41 55                	push   %r13
ffffffff802165b2:	41 54                	push   %r12
ffffffff802165b4:	55                   	push   %rbp
ffffffff802165b5:	53                   	push   %rbx
ffffffff802165b6:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
ffffffff802165bd:	4c 8b 2d b4 da 02 00 	mov    0x2dab4(%rip),%r13        # ffffffff80244078 <caml_local_roots>
ffffffff802165c4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff802165c9:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
ffffffff802165ce:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802165d5:	00 00 
ffffffff802165d7:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
ffffffff802165de:	00 
ffffffff802165df:	31 c0                	xor    %eax,%eax
ffffffff802165e1:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff802165e6:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
ffffffff802165eb:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff802165f0:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
ffffffff802165f5:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
ffffffff802165fa:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
ffffffff802165ff:	48 89 05 72 da 02 00 	mov    %rax,0x2da72(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80216606:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff8021660b:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff80216612:	00 
ffffffff80216613:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
ffffffff8021661a:	00 00 
ffffffff8021661c:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
ffffffff80216623:	00 00 
ffffffff80216625:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8021662c:	00 00 
ffffffff8021662e:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
ffffffff80216635:	00 01 00 00 00 
ffffffff8021663a:	48 c7 44 24 78 01 00 	movq   $0x1,0x78(%rsp)
ffffffff80216641:	00 00 
ffffffff80216643:	e8 b8 f0 ff ff       	callq  ffffffff80215700 <caml_sys_check_path>
ffffffff80216648:	be 32 00 00 00       	mov    $0x32,%esi
ffffffff8021664d:	4c 89 e7             	mov    %r12,%rdi
ffffffff80216650:	e8 5b bd ff ff       	callq  ffffffff802123b0 <caml_ext_table_init>
ffffffff80216655:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8021665a:	e8 91 ac ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff8021665f:	48 89 c5             	mov    %rax,%rbp
ffffffff80216662:	e8 99 dc ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff80216667:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021666a:	4c 89 e6             	mov    %r12,%rsi
ffffffff8021666d:	e8 8e 04 00 00       	callq  ffffffff80216b00 <caml_read_directory>
ffffffff80216672:	89 c3                	mov    %eax,%ebx
ffffffff80216674:	e8 c7 dc ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff80216679:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021667c:	e8 cf a2 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80216681:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80216684:	74 53                	je     ffffffff802166d9 <caml_sys_read_directory+0x129>
ffffffff80216686:	31 f6                	xor    %esi,%esi
ffffffff80216688:	4c 89 e7             	mov    %r12,%rdi
ffffffff8021668b:	e8 50 bd ff ff       	callq  ffffffff802123e0 <caml_ext_table_add>
ffffffff80216690:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
ffffffff80216695:	e8 e6 29 00 00       	callq  ffffffff80219080 <caml_copy_string_array>
ffffffff8021669a:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021669f:	4c 89 e7             	mov    %r12,%rdi
ffffffff802166a2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff802166a7:	e8 54 be ff ff       	callq  ffffffff80212500 <caml_ext_table_free>
ffffffff802166ac:	4c 89 2d c5 d9 02 00 	mov    %r13,0x2d9c5(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff802166b3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff802166b8:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
ffffffff802166bf:	00 
ffffffff802166c0:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff802166c7:	00 00 
ffffffff802166c9:	75 25                	jne    ffffffff802166f0 <caml_sys_read_directory+0x140>
ffffffff802166cb:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
ffffffff802166d2:	5b                   	pop    %rbx
ffffffff802166d3:	5d                   	pop    %rbp
ffffffff802166d4:	41 5c                	pop    %r12
ffffffff802166d6:	41 5d                	pop    %r13
ffffffff802166d8:	c3                   	retq   
ffffffff802166d9:	4c 89 e7             	mov    %r12,%rdi
ffffffff802166dc:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff802166e1:	e8 1a be ff ff       	callq  ffffffff80212500 <caml_ext_table_free>
ffffffff802166e6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff802166eb:	e8 f0 ee ff ff       	callq  ffffffff802155e0 <caml_sys_error>
ffffffff802166f0:	e8 ab 99 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802166f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802166fc:	00 00 00 00 

ffffffff80216700 <caml_sys_isatty>:
ffffffff80216700:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80216704:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff80216708:	8b 38                	mov    (%rax),%edi
ffffffff8021670a:	e8 d3 99 fe ff       	callq  ffffffff802000e2 <isatty>
ffffffff8021670f:	83 f8 01             	cmp    $0x1,%eax
ffffffff80216712:	48 19 c0             	sbb    %rax,%rax
ffffffff80216715:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80216719:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff8021671d:	48 83 c0 03          	add    $0x3,%rax
ffffffff80216721:	c3                   	retq   
ffffffff80216722:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80216729:	00 00 00 
ffffffff8021672c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80216730 <caml_read_fd>:
ffffffff80216730:	41 55                	push   %r13
ffffffff80216732:	41 89 fd             	mov    %edi,%r13d
ffffffff80216735:	41 54                	push   %r12
ffffffff80216737:	49 89 d4             	mov    %rdx,%r12
ffffffff8021673a:	55                   	push   %rbp
ffffffff8021673b:	48 63 e9             	movslq %ecx,%rbp
ffffffff8021673e:	53                   	push   %rbx
ffffffff8021673f:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80216743:	eb 0d                	jmp    ffffffff80216752 <caml_read_fd+0x22>
ffffffff80216745:	0f 1f 00             	nopl   (%rax)
ffffffff80216748:	e8 a3 1d 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff8021674d:	83 38 04             	cmpl   $0x4,(%rax)
ffffffff80216750:	75 2d                	jne    ffffffff8021677f <caml_read_fd+0x4f>
ffffffff80216752:	e8 a9 db ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff80216757:	48 89 ea             	mov    %rbp,%rdx
ffffffff8021675a:	4c 89 e6             	mov    %r12,%rsi
ffffffff8021675d:	44 89 ef             	mov    %r13d,%edi
ffffffff80216760:	e8 7e 99 fe ff       	callq  ffffffff802000e3 <read>
ffffffff80216765:	48 89 c3             	mov    %rax,%rbx
ffffffff80216768:	e8 d3 db ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff8021676d:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80216770:	74 d6                	je     ffffffff80216748 <caml_read_fd+0x18>
ffffffff80216772:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80216776:	89 d8                	mov    %ebx,%eax
ffffffff80216778:	5b                   	pop    %rbx
ffffffff80216779:	5d                   	pop    %rbp
ffffffff8021677a:	41 5c                	pop    %r12
ffffffff8021677c:	41 5d                	pop    %r13
ffffffff8021677e:	c3                   	retq   
ffffffff8021677f:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80216784:	e8 a7 ef ff ff       	callq  ffffffff80215730 <caml_sys_io_error>
ffffffff80216789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80216790 <caml_write_fd>:
ffffffff80216790:	41 56                	push   %r14
ffffffff80216792:	41 89 fe             	mov    %edi,%r14d
ffffffff80216795:	41 55                	push   %r13
ffffffff80216797:	49 89 d5             	mov    %rdx,%r13
ffffffff8021679a:	41 54                	push   %r12
ffffffff8021679c:	4c 63 e1             	movslq %ecx,%r12
ffffffff8021679f:	55                   	push   %rbp
ffffffff802167a0:	4c 89 e5             	mov    %r12,%rbp
ffffffff802167a3:	53                   	push   %rbx
ffffffff802167a4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802167a8:	e8 53 db ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff802167ad:	4c 89 e2             	mov    %r12,%rdx
ffffffff802167b0:	4c 89 ee             	mov    %r13,%rsi
ffffffff802167b3:	44 89 f7             	mov    %r14d,%edi
ffffffff802167b6:	e8 29 99 fe ff       	callq  ffffffff802000e4 <write>
ffffffff802167bb:	48 89 c3             	mov    %rax,%rbx
ffffffff802167be:	e8 7d db ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff802167c3:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff802167c6:	75 28                	jne    ffffffff802167f0 <caml_write_fd+0x60>
ffffffff802167c8:	e8 23 1d 03 00       	callq  ffffffff802484f0 <__errno_location>
ffffffff802167cd:	8b 00                	mov    (%rax),%eax
ffffffff802167cf:	83 f8 04             	cmp    $0x4,%eax
ffffffff802167d2:	74 d4                	je     ffffffff802167a8 <caml_write_fd+0x18>
ffffffff802167d4:	83 fd 01             	cmp    $0x1,%ebp
ffffffff802167d7:	7e 22                	jle    ffffffff802167fb <caml_write_fd+0x6b>
ffffffff802167d9:	83 f8 0b             	cmp    $0xb,%eax
ffffffff802167dc:	75 1d                	jne    ffffffff802167fb <caml_write_fd+0x6b>
ffffffff802167de:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff802167e3:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff802167e9:	eb bd                	jmp    ffffffff802167a8 <caml_write_fd+0x18>
ffffffff802167eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802167f0:	89 d8                	mov    %ebx,%eax
ffffffff802167f2:	5b                   	pop    %rbx
ffffffff802167f3:	5d                   	pop    %rbp
ffffffff802167f4:	41 5c                	pop    %r12
ffffffff802167f6:	41 5d                	pop    %r13
ffffffff802167f8:	41 5e                	pop    %r14
ffffffff802167fa:	c3                   	retq   
ffffffff802167fb:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80216800:	e8 2b ef ff ff       	callq  ffffffff80215730 <caml_sys_io_error>
ffffffff80216805:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021680c:	00 00 00 00 

ffffffff80216810 <caml_decompose_path>:
ffffffff80216810:	41 54                	push   %r12
ffffffff80216812:	55                   	push   %rbp
ffffffff80216813:	53                   	push   %rbx
ffffffff80216814:	48 85 f6             	test   %rsi,%rsi
ffffffff80216817:	74 6d                	je     ffffffff80216886 <caml_decompose_path+0x76>
ffffffff80216819:	48 89 fd             	mov    %rdi,%rbp
ffffffff8021681c:	48 89 f7             	mov    %rsi,%rdi
ffffffff8021681f:	e8 cc aa ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80216824:	48 89 c6             	mov    %rax,%rsi
ffffffff80216827:	49 89 c4             	mov    %rax,%r12
ffffffff8021682a:	0f b6 06             	movzbl (%rsi),%eax
ffffffff8021682d:	84 c0                	test   %al,%al
ffffffff8021682f:	74 3d                	je     ffffffff8021686e <caml_decompose_path+0x5e>
ffffffff80216831:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80216838:	3c 3a                	cmp    $0x3a,%al
ffffffff8021683a:	74 32                	je     ffffffff8021686e <caml_decompose_path+0x5e>
ffffffff8021683c:	48 8d 46 01          	lea    0x1(%rsi),%rax
ffffffff80216840:	0f b6 10             	movzbl (%rax),%edx
ffffffff80216843:	48 89 c3             	mov    %rax,%rbx
ffffffff80216846:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021684a:	84 d2                	test   %dl,%dl
ffffffff8021684c:	74 05                	je     ffffffff80216853 <caml_decompose_path+0x43>
ffffffff8021684e:	80 fa 3a             	cmp    $0x3a,%dl
ffffffff80216851:	75 ed                	jne    ffffffff80216840 <caml_decompose_path+0x30>
ffffffff80216853:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216856:	e8 85 bb ff ff       	callq  ffffffff802123e0 <caml_ext_table_add>
ffffffff8021685b:	80 3b 00             	cmpb   $0x0,(%rbx)
ffffffff8021685e:	74 1e                	je     ffffffff8021687e <caml_decompose_path+0x6e>
ffffffff80216860:	48 8d 73 01          	lea    0x1(%rbx),%rsi
ffffffff80216864:	c6 03 00             	movb   $0x0,(%rbx)
ffffffff80216867:	0f b6 06             	movzbl (%rsi),%eax
ffffffff8021686a:	84 c0                	test   %al,%al
ffffffff8021686c:	75 ca                	jne    ffffffff80216838 <caml_decompose_path+0x28>
ffffffff8021686e:	48 89 f3             	mov    %rsi,%rbx
ffffffff80216871:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216874:	e8 67 bb ff ff       	callq  ffffffff802123e0 <caml_ext_table_add>
ffffffff80216879:	80 3b 00             	cmpb   $0x0,(%rbx)
ffffffff8021687c:	75 e2                	jne    ffffffff80216860 <caml_decompose_path+0x50>
ffffffff8021687e:	4c 89 e0             	mov    %r12,%rax
ffffffff80216881:	5b                   	pop    %rbx
ffffffff80216882:	5d                   	pop    %rbp
ffffffff80216883:	41 5c                	pop    %r12
ffffffff80216885:	c3                   	retq   
ffffffff80216886:	45 31 e4             	xor    %r12d,%r12d
ffffffff80216889:	5b                   	pop    %rbx
ffffffff8021688a:	5d                   	pop    %rbp
ffffffff8021688b:	4c 89 e0             	mov    %r12,%rax
ffffffff8021688e:	41 5c                	pop    %r12
ffffffff80216890:	c3                   	retq   
ffffffff80216891:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216898:	00 00 00 00 
ffffffff8021689c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802168a0 <caml_search_in_path>:
ffffffff802168a0:	41 57                	push   %r15
ffffffff802168a2:	41 56                	push   %r14
ffffffff802168a4:	41 55                	push   %r13
ffffffff802168a6:	49 89 f5             	mov    %rsi,%r13
ffffffff802168a9:	41 54                	push   %r12
ffffffff802168ab:	49 89 fc             	mov    %rdi,%r12
ffffffff802168ae:	55                   	push   %rbp
ffffffff802168af:	53                   	push   %rbx
ffffffff802168b0:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
ffffffff802168b7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802168be:	00 00 
ffffffff802168c0:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
ffffffff802168c7:	00 
ffffffff802168c8:	31 c0                	xor    %eax,%eax
ffffffff802168ca:	0f b6 06             	movzbl (%rsi),%eax
ffffffff802168cd:	84 c0                	test   %al,%al
ffffffff802168cf:	74 5f                	je     ffffffff80216930 <caml_search_in_path+0x90>
ffffffff802168d1:	48 89 f2             	mov    %rsi,%rdx
ffffffff802168d4:	eb 16                	jmp    ffffffff802168ec <caml_search_in_path+0x4c>
ffffffff802168d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802168dd:	00 00 00 
ffffffff802168e0:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
ffffffff802168e4:	48 83 c2 01          	add    $0x1,%rdx
ffffffff802168e8:	84 c0                	test   %al,%al
ffffffff802168ea:	74 44                	je     ffffffff80216930 <caml_search_in_path+0x90>
ffffffff802168ec:	3c 2f                	cmp    $0x2f,%al
ffffffff802168ee:	75 f0                	jne    ffffffff802168e0 <caml_search_in_path+0x40>
ffffffff802168f0:	4c 89 ef             	mov    %r13,%rdi
ffffffff802168f3:	e8 f8 a9 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff802168f8:	48 89 c5             	mov    %rax,%rbp
ffffffff802168fb:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
ffffffff80216902:	00 
ffffffff80216903:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8021690a:	00 00 
ffffffff8021690c:	0f 85 a0 00 00 00    	jne    ffffffff802169b2 <caml_search_in_path+0x112>
ffffffff80216912:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffff80216919:	48 89 e8             	mov    %rbp,%rax
ffffffff8021691c:	5b                   	pop    %rbx
ffffffff8021691d:	5d                   	pop    %rbp
ffffffff8021691e:	41 5c                	pop    %r12
ffffffff80216920:	41 5d                	pop    %r13
ffffffff80216922:	41 5e                	pop    %r14
ffffffff80216924:	41 5f                	pop    %r15
ffffffff80216926:	c3                   	retq   
ffffffff80216927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021692e:	00 00 
ffffffff80216930:	41 8b 04 24          	mov    (%r12),%eax
ffffffff80216934:	85 c0                	test   %eax,%eax
ffffffff80216936:	7e b8                	jle    ffffffff802168f0 <caml_search_in_path+0x50>
ffffffff80216938:	31 db                	xor    %ebx,%ebx
ffffffff8021693a:	49 89 e7             	mov    %rsp,%r15
ffffffff8021693d:	4c 8d 35 c0 ba 00 00 	lea    0xbac0(%rip),%r14        # ffffffff80222404 <posix_signals+0x324>
ffffffff80216944:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80216948:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
ffffffff8021694d:	48 63 c3             	movslq %ebx,%rax
ffffffff80216950:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff80216955:	4c 89 e9             	mov    %r13,%rcx
ffffffff80216958:	48 8b 34 c2          	mov    (%rdx,%rax,8),%rsi
ffffffff8021695c:	48 8d 15 95 ba 00 00 	lea    0xba95(%rip),%rdx        # ffffffff802223f8 <posix_signals+0x318>
ffffffff80216963:	80 3e 00             	cmpb   $0x0,(%rsi)
ffffffff80216966:	49 0f 44 f6          	cmove  %r14,%rsi
ffffffff8021696a:	31 c0                	xor    %eax,%eax
ffffffff8021696c:	e8 9f a9 ff ff       	callq  ffffffff80211310 <caml_stat_strconcat>
ffffffff80216971:	4c 89 fa             	mov    %r15,%rdx
ffffffff80216974:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80216979:	48 89 c6             	mov    %rax,%rsi
ffffffff8021697c:	48 89 c5             	mov    %rax,%rbp
ffffffff8021697f:	e8 4d 97 fe ff       	callq  ffffffff802000d1 <__xstat64>
ffffffff80216984:	85 c0                	test   %eax,%eax
ffffffff80216986:	75 14                	jne    ffffffff8021699c <caml_search_in_path+0xfc>
ffffffff80216988:	8b 44 24 18          	mov    0x18(%rsp),%eax
ffffffff8021698c:	25 00 f0 00 00       	and    $0xf000,%eax
ffffffff80216991:	3d 00 80 00 00       	cmp    $0x8000,%eax
ffffffff80216996:	0f 84 5f ff ff ff    	je     ffffffff802168fb <caml_search_in_path+0x5b>
ffffffff8021699c:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021699f:	83 c3 01             	add    $0x1,%ebx
ffffffff802169a2:	e8 a9 9f ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff802169a7:	41 39 1c 24          	cmp    %ebx,(%r12)
ffffffff802169ab:	7f 9b                	jg     ffffffff80216948 <caml_search_in_path+0xa8>
ffffffff802169ad:	e9 3e ff ff ff       	jmpq   ffffffff802168f0 <caml_search_in_path+0x50>
ffffffff802169b2:	e8 e9 96 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802169b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802169be:	00 00 

ffffffff802169c0 <caml_search_exe_in_path>:
ffffffff802169c0:	41 55                	push   %r13
ffffffff802169c2:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff802169c7:	49 89 fd             	mov    %rdi,%r13
ffffffff802169ca:	41 54                	push   %r12
ffffffff802169cc:	55                   	push   %rbp
ffffffff802169cd:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802169d1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802169d8:	00 00 
ffffffff802169da:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff802169df:	31 c0                	xor    %eax,%eax
ffffffff802169e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802169e4:	48 89 ef             	mov    %rbp,%rdi
ffffffff802169e7:	e8 c4 b9 ff ff       	callq  ffffffff802123b0 <caml_ext_table_init>
ffffffff802169ec:	48 8d 3d 07 ba 00 00 	lea    0xba07(%rip),%rdi        # ffffffff802223fa <posix_signals+0x31a>
ffffffff802169f3:	e8 ed 96 fe ff       	callq  ffffffff802000e5 <getenv>
ffffffff802169f8:	48 89 ef             	mov    %rbp,%rdi
ffffffff802169fb:	48 89 c6             	mov    %rax,%rsi
ffffffff802169fe:	e8 0d fe ff ff       	callq  ffffffff80216810 <caml_decompose_path>
ffffffff80216a03:	4c 89 ee             	mov    %r13,%rsi
ffffffff80216a06:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216a09:	49 89 c4             	mov    %rax,%r12
ffffffff80216a0c:	e8 8f fe ff ff       	callq  ffffffff802168a0 <caml_search_in_path>
ffffffff80216a11:	4c 89 e7             	mov    %r12,%rdi
ffffffff80216a14:	49 89 c5             	mov    %rax,%r13
ffffffff80216a17:	e8 34 9f ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80216a1c:	31 f6                	xor    %esi,%esi
ffffffff80216a1e:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216a21:	e8 da ba ff ff       	callq  ffffffff80212500 <caml_ext_table_free>
ffffffff80216a26:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80216a2b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80216a32:	00 00 
ffffffff80216a34:	75 0d                	jne    ffffffff80216a43 <caml_search_exe_in_path+0x83>
ffffffff80216a36:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80216a3a:	4c 89 e8             	mov    %r13,%rax
ffffffff80216a3d:	5d                   	pop    %rbp
ffffffff80216a3e:	41 5c                	pop    %r12
ffffffff80216a40:	41 5d                	pop    %r13
ffffffff80216a42:	c3                   	retq   
ffffffff80216a43:	e8 58 96 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80216a48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80216a4f:	00 

ffffffff80216a50 <caml_search_dll_in_path>:
ffffffff80216a50:	41 54                	push   %r12
ffffffff80216a52:	48 8d 15 a6 b9 00 00 	lea    0xb9a6(%rip),%rdx        # ffffffff802223ff <posix_signals+0x31f>
ffffffff80216a59:	49 89 fc             	mov    %rdi,%r12
ffffffff80216a5c:	31 c0                	xor    %eax,%eax
ffffffff80216a5e:	55                   	push   %rbp
ffffffff80216a5f:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80216a64:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80216a68:	e8 a3 a8 ff ff       	callq  ffffffff80211310 <caml_stat_strconcat>
ffffffff80216a6d:	4c 89 e7             	mov    %r12,%rdi
ffffffff80216a70:	48 89 c5             	mov    %rax,%rbp
ffffffff80216a73:	48 89 c6             	mov    %rax,%rsi
ffffffff80216a76:	e8 25 fe ff ff       	callq  ffffffff802168a0 <caml_search_in_path>
ffffffff80216a7b:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216a7e:	49 89 c4             	mov    %rax,%r12
ffffffff80216a81:	e8 ca 9e ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80216a86:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80216a8a:	4c 89 e0             	mov    %r12,%rax
ffffffff80216a8d:	5d                   	pop    %rbp
ffffffff80216a8e:	41 5c                	pop    %r12
ffffffff80216a90:	c3                   	retq   
ffffffff80216a91:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216a98:	00 00 00 00 
ffffffff80216a9c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80216aa0 <caml_dlopen>:
ffffffff80216aa0:	83 fa 01             	cmp    $0x1,%edx
ffffffff80216aa3:	19 f6                	sbb    %esi,%esi
ffffffff80216aa5:	40 30 f6             	xor    %sil,%sil
ffffffff80216aa8:	81 c6 02 01 00 00    	add    $0x102,%esi
ffffffff80216aae:	e9 35 96 fe ff       	jmpq   ffffffff802000e8 <dlopen>
ffffffff80216ab3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216aba:	00 00 00 00 
ffffffff80216abe:	66 90                	xchg   %ax,%ax

ffffffff80216ac0 <caml_dlclose>:
ffffffff80216ac0:	e9 f4 95 fe ff       	jmpq   ffffffff802000b9 <dlclose>
ffffffff80216ac5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216acc:	00 00 00 00 

ffffffff80216ad0 <caml_dlsym>:
ffffffff80216ad0:	e9 e3 95 fe ff       	jmpq   ffffffff802000b8 <dlsym>
ffffffff80216ad5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216adc:	00 00 00 00 

ffffffff80216ae0 <caml_globalsym>:
ffffffff80216ae0:	48 89 fe             	mov    %rdi,%rsi
ffffffff80216ae3:	31 ff                	xor    %edi,%edi
ffffffff80216ae5:	e9 ce 95 fe ff       	jmpq   ffffffff802000b8 <dlsym>
ffffffff80216aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80216af0 <caml_dlerror>:
ffffffff80216af0:	e9 fb 95 fe ff       	jmpq   ffffffff802000f0 <dlerror>
ffffffff80216af5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216afc:	00 00 00 00 

ffffffff80216b00 <caml_read_directory>:
ffffffff80216b00:	55                   	push   %rbp
ffffffff80216b01:	53                   	push   %rbx
ffffffff80216b02:	48 89 f3             	mov    %rsi,%rbx
ffffffff80216b05:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80216b09:	e8 d8 95 fe ff       	callq  ffffffff802000e6 <opendir>
ffffffff80216b0e:	48 89 c5             	mov    %rax,%rbp
ffffffff80216b11:	48 85 c0             	test   %rax,%rax
ffffffff80216b14:	74 5a                	je     ffffffff80216b70 <caml_read_directory+0x70>
ffffffff80216b16:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216b19:	e8 9e 95 fe ff       	callq  ffffffff802000bc <readdir64>
ffffffff80216b1e:	48 85 c0             	test   %rax,%rax
ffffffff80216b21:	74 30                	je     ffffffff80216b53 <caml_read_directory+0x53>
ffffffff80216b23:	66 83 78 13 2e       	cmpw   $0x2e,0x13(%rax)
ffffffff80216b28:	48 8d 78 13          	lea    0x13(%rax),%rdi
ffffffff80216b2c:	74 e8                	je     ffffffff80216b16 <caml_read_directory+0x16>
ffffffff80216b2e:	66 81 78 13 2e 2e    	cmpw   $0x2e2e,0x13(%rax)
ffffffff80216b34:	74 32                	je     ffffffff80216b68 <caml_read_directory+0x68>
ffffffff80216b36:	e8 b5 a7 ff ff       	callq  ffffffff802112f0 <caml_stat_strdup>
ffffffff80216b3b:	48 89 df             	mov    %rbx,%rdi
ffffffff80216b3e:	48 89 c6             	mov    %rax,%rsi
ffffffff80216b41:	e8 9a b8 ff ff       	callq  ffffffff802123e0 <caml_ext_table_add>
ffffffff80216b46:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216b49:	e8 6e 95 fe ff       	callq  ffffffff802000bc <readdir64>
ffffffff80216b4e:	48 85 c0             	test   %rax,%rax
ffffffff80216b51:	75 d0                	jne    ffffffff80216b23 <caml_read_directory+0x23>
ffffffff80216b53:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216b56:	e8 56 95 fe ff       	callq  ffffffff802000b1 <closedir>
ffffffff80216b5b:	31 c0                	xor    %eax,%eax
ffffffff80216b5d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80216b61:	5b                   	pop    %rbx
ffffffff80216b62:	5d                   	pop    %rbp
ffffffff80216b63:	c3                   	retq   
ffffffff80216b64:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80216b68:	80 7f 02 00          	cmpb   $0x0,0x2(%rdi)
ffffffff80216b6c:	74 a8                	je     ffffffff80216b16 <caml_read_directory+0x16>
ffffffff80216b6e:	eb c6                	jmp    ffffffff80216b36 <caml_read_directory+0x36>
ffffffff80216b70:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff80216b75:	eb e6                	jmp    ffffffff80216b5d <caml_read_directory+0x5d>
ffffffff80216b77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80216b7e:	00 00 

ffffffff80216b80 <caml_executable_name>:
ffffffff80216b80:	41 56                	push   %r14
ffffffff80216b82:	41 55                	push   %r13
ffffffff80216b84:	4c 8d 2d 7b b8 00 00 	lea    0xb87b(%rip),%r13        # ffffffff80222406 <posix_signals+0x326>
ffffffff80216b8b:	41 54                	push   %r12
ffffffff80216b8d:	41 bc 0d 00 00 00    	mov    $0xd,%r12d
ffffffff80216b93:	55                   	push   %rbp
ffffffff80216b94:	53                   	push   %rbx
ffffffff80216b95:	bb 00 01 00 00       	mov    $0x100,%ebx
ffffffff80216b9a:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
ffffffff80216ba1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80216ba8:	00 00 
ffffffff80216baa:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
ffffffff80216bb1:	00 
ffffffff80216bb2:	31 c0                	xor    %eax,%eax
ffffffff80216bb4:	eb 0c                	jmp    ffffffff80216bc2 <caml_executable_name+0x42>
ffffffff80216bb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80216bbd:	00 00 00 
ffffffff80216bc0:	01 db                	add    %ebx,%ebx
ffffffff80216bc2:	4c 63 f3             	movslq %ebx,%r14
ffffffff80216bc5:	4c 89 f7             	mov    %r14,%rdi
ffffffff80216bc8:	e8 63 9d ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff80216bcd:	4c 89 f2             	mov    %r14,%rdx
ffffffff80216bd0:	4c 89 ef             	mov    %r13,%rdi
ffffffff80216bd3:	48 89 c6             	mov    %rax,%rsi
ffffffff80216bd6:	48 89 c5             	mov    %rax,%rbp
ffffffff80216bd9:	e8 f5 94 fe ff       	callq  ffffffff802000d3 <readlink>
ffffffff80216bde:	48 63 d0             	movslq %eax,%rdx
ffffffff80216be1:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff80216be4:	74 64                	je     ffffffff80216c4a <caml_executable_name+0xca>
ffffffff80216be6:	39 c3                	cmp    %eax,%ebx
ffffffff80216be8:	7f 36                	jg     ffffffff80216c20 <caml_executable_name+0xa0>
ffffffff80216bea:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216bed:	e8 5e 9d ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80216bf2:	41 83 ec 01          	sub    $0x1,%r12d
ffffffff80216bf6:	75 c8                	jne    ffffffff80216bc0 <caml_executable_name+0x40>
ffffffff80216bf8:	31 ed                	xor    %ebp,%ebp
ffffffff80216bfa:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
ffffffff80216c01:	00 
ffffffff80216c02:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff80216c09:	00 00 
ffffffff80216c0b:	75 49                	jne    ffffffff80216c56 <caml_executable_name+0xd6>
ffffffff80216c0d:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
ffffffff80216c14:	48 89 e8             	mov    %rbp,%rax
ffffffff80216c17:	5b                   	pop    %rbx
ffffffff80216c18:	5d                   	pop    %rbp
ffffffff80216c19:	41 5c                	pop    %r12
ffffffff80216c1b:	41 5d                	pop    %r13
ffffffff80216c1d:	41 5e                	pop    %r14
ffffffff80216c1f:	c3                   	retq   
ffffffff80216c20:	c6 44 15 00 00       	movb   $0x0,0x0(%rbp,%rdx,1)
ffffffff80216c25:	48 89 ee             	mov    %rbp,%rsi
ffffffff80216c28:	48 89 e2             	mov    %rsp,%rdx
ffffffff80216c2b:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80216c30:	e8 9c 94 fe ff       	callq  ffffffff802000d1 <__xstat64>
ffffffff80216c35:	83 f8 ff             	cmp    $0xffffffff,%eax
ffffffff80216c38:	74 10                	je     ffffffff80216c4a <caml_executable_name+0xca>
ffffffff80216c3a:	8b 44 24 18          	mov    0x18(%rsp),%eax
ffffffff80216c3e:	25 00 f0 00 00       	and    $0xf000,%eax
ffffffff80216c43:	3d 00 80 00 00       	cmp    $0x8000,%eax
ffffffff80216c48:	74 b0                	je     ffffffff80216bfa <caml_executable_name+0x7a>
ffffffff80216c4a:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216c4d:	31 ed                	xor    %ebp,%ebp
ffffffff80216c4f:	e8 fc 9c ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff80216c54:	eb a4                	jmp    ffffffff80216bfa <caml_executable_name+0x7a>
ffffffff80216c56:	e8 45 94 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80216c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80216c60 <caml_secure_getenv>:
ffffffff80216c60:	e9 84 94 fe ff       	jmpq   ffffffff802000e9 <secure_getenv>
ffffffff80216c65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216c6c:	00 00 00 00 

ffffffff80216c70 <caml_num_rows_fd>:
ffffffff80216c70:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80216c74:	ba ff ff ff ff       	mov    $0xffffffff,%edx
ffffffff80216c79:	be 13 54 00 00       	mov    $0x5413,%esi
ffffffff80216c7e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80216c85:	00 00 
ffffffff80216c87:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80216c8c:	31 c0                	xor    %eax,%eax
ffffffff80216c8e:	66 89 14 24          	mov    %dx,(%rsp)
ffffffff80216c92:	48 89 e2             	mov    %rsp,%rdx
ffffffff80216c95:	e8 4d 94 fe ff       	callq  ffffffff802000e7 <ioctl>
ffffffff80216c9a:	85 c0                	test   %eax,%eax
ffffffff80216c9c:	75 22                	jne    ffffffff80216cc0 <caml_num_rows_fd+0x50>
ffffffff80216c9e:	0f b7 04 24          	movzwl (%rsp),%eax
ffffffff80216ca2:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80216ca7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80216cae:	00 00 
ffffffff80216cb0:	75 15                	jne    ffffffff80216cc7 <caml_num_rows_fd+0x57>
ffffffff80216cb2:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80216cb6:	c3                   	retq   
ffffffff80216cb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80216cbe:	00 00 
ffffffff80216cc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff80216cc5:	eb db                	jmp    ffffffff80216ca2 <caml_num_rows_fd+0x32>
ffffffff80216cc7:	e8 d4 93 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80216ccc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80216cd0 <optionalize>:
ffffffff80216cd0:	53                   	push   %rbx
ffffffff80216cd1:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80216cd5:	48 8b 1d 9c d3 02 00 	mov    0x2d39c(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff80216cdc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80216ce3:	00 00 
ffffffff80216ce5:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff80216cea:	31 c0                	xor    %eax,%eax
ffffffff80216cec:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80216cf1:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
ffffffff80216cf8:	00 
ffffffff80216cf9:	48 89 05 78 d3 02 00 	mov    %rax,0x2d378(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80216d00:	48 89 e0             	mov    %rsp,%rax
ffffffff80216d03:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80216d08:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80216d0d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
ffffffff80216d12:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80216d17:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80216d1c:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80216d23:	00 00 
ffffffff80216d25:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff80216d2c:	00 00 
ffffffff80216d2e:	85 ff                	test   %edi,%edi
ffffffff80216d30:	75 1e                	jne    ffffffff80216d50 <optionalize+0x80>
ffffffff80216d32:	48 89 1d 3f d3 02 00 	mov    %rbx,0x2d33f(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80216d39:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
ffffffff80216d3e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80216d45:	00 00 
ffffffff80216d47:	75 2d                	jne    ffffffff80216d76 <optionalize+0xa6>
ffffffff80216d49:	48 83 c4 60          	add    $0x60,%rsp
ffffffff80216d4d:	5b                   	pop    %rbx
ffffffff80216d4e:	c3                   	retq   
ffffffff80216d4f:	90                   	nop
ffffffff80216d50:	48 8b 06             	mov    (%rsi),%rax
ffffffff80216d53:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80216d58:	31 f6                	xor    %esi,%esi
ffffffff80216d5a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80216d5f:	e8 9c 1e 00 00       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff80216d64:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80216d69:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80216d6d:	48 89 10             	mov    %rdx,(%rax)
ffffffff80216d70:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80216d74:	eb bc                	jmp    ffffffff80216d32 <optionalize+0x62>
ffffffff80216d76:	e8 25 93 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80216d7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80216d80 <do_set>:
ffffffff80216d80:	48 8d 04 f7          	lea    (%rdi,%rsi,8),%rax
ffffffff80216d84:	f6 c2 01             	test   $0x1,%dl
ffffffff80216d87:	75 57                	jne    ffffffff80216de0 <do_set+0x60>
ffffffff80216d89:	48 3b 15 18 52 02 00 	cmp    0x25218(%rip),%rdx        # ffffffff8023bfa8 <caml_young_end>
ffffffff80216d90:	73 4e                	jae    ffffffff80216de0 <do_set+0x60>
ffffffff80216d92:	48 3b 15 17 52 02 00 	cmp    0x25217(%rip),%rdx        # ffffffff8023bfb0 <caml_young_start>
ffffffff80216d99:	76 45                	jbe    ffffffff80216de0 <do_set+0x60>
ffffffff80216d9b:	53                   	push   %rbx
ffffffff80216d9c:	48 89 fb             	mov    %rdi,%rbx
ffffffff80216d9f:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80216da3:	48 8b 08             	mov    (%rax),%rcx
ffffffff80216da6:	48 89 10             	mov    %rdx,(%rax)
ffffffff80216da9:	f6 c1 01             	test   $0x1,%cl
ffffffff80216dac:	75 09                	jne    ffffffff80216db7 <do_set+0x37>
ffffffff80216dae:	48 3b 0d f3 51 02 00 	cmp    0x251f3(%rip),%rcx        # ffffffff8023bfa8 <caml_young_end>
ffffffff80216db5:	72 31                	jb     ffffffff80216de8 <do_set+0x68>
ffffffff80216db7:	48 8b 05 5a 51 02 00 	mov    0x2515a(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80216dbe:	48 3b 05 5b 51 02 00 	cmp    0x2515b(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff80216dc5:	73 31                	jae    ffffffff80216df8 <do_set+0x78>
ffffffff80216dc7:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff80216dcb:	48 89 15 46 51 02 00 	mov    %rdx,0x25146(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80216dd2:	48 89 18             	mov    %rbx,(%rax)
ffffffff80216dd5:	48 89 70 08          	mov    %rsi,0x8(%rax)
ffffffff80216dd9:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80216ddd:	5b                   	pop    %rbx
ffffffff80216dde:	c3                   	retq   
ffffffff80216ddf:	90                   	nop
ffffffff80216de0:	48 89 10             	mov    %rdx,(%rax)
ffffffff80216de3:	c3                   	retq   
ffffffff80216de4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80216de8:	48 3b 0d c1 51 02 00 	cmp    0x251c1(%rip),%rcx        # ffffffff8023bfb0 <caml_young_start>
ffffffff80216def:	77 e8                	ja     ffffffff80216dd9 <do_set+0x59>
ffffffff80216df1:	eb c4                	jmp    ffffffff80216db7 <do_set+0x37>
ffffffff80216df3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80216df8:	48 8d 3d 01 51 02 00 	lea    0x25101(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80216dff:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff80216e04:	e8 a7 b3 ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff80216e09:	48 8b 05 08 51 02 00 	mov    0x25108(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80216e10:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
ffffffff80216e15:	eb b0                	jmp    ffffffff80216dc7 <do_set+0x47>
ffffffff80216e17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80216e1e:	00 00 

ffffffff80216e20 <do_check_key_clean.part.0>:
ffffffff80216e20:	41 54                	push   %r12
ffffffff80216e22:	4c 8d 24 f7          	lea    (%rdi,%rsi,8),%r12
ffffffff80216e26:	55                   	push   %rbp
ffffffff80216e27:	53                   	push   %rbx
ffffffff80216e28:	49 8b 2c 24          	mov    (%r12),%rbp
ffffffff80216e2c:	48 3b 2d 95 4f 01 00 	cmp    0x14f95(%rip),%rbp        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80216e33:	75 0b                	jne    ffffffff80216e40 <do_check_key_clean.part.0+0x20>
ffffffff80216e35:	5b                   	pop    %rbx
ffffffff80216e36:	5d                   	pop    %rbp
ffffffff80216e37:	41 5c                	pop    %r12
ffffffff80216e39:	c3                   	retq   
ffffffff80216e3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80216e40:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff80216e44:	75 ef                	jne    ffffffff80216e35 <do_check_key_clean.part.0+0x15>
ffffffff80216e46:	48 89 fb             	mov    %rdi,%rbx
ffffffff80216e49:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216e4c:	e8 cf 95 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80216e51:	a8 01                	test   $0x1,%al
ffffffff80216e53:	74 e0                	je     ffffffff80216e35 <do_check_key_clean.part.0+0x15>
ffffffff80216e55:	48 f7 45 f8 00 03 00 	testq  $0x300,-0x8(%rbp)
ffffffff80216e5c:	00 
ffffffff80216e5d:	75 d6                	jne    ffffffff80216e35 <do_check_key_clean.part.0+0x15>
ffffffff80216e5f:	48 8b 05 62 4f 01 00 	mov    0x14f62(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80216e66:	49 89 04 24          	mov    %rax,(%r12)
ffffffff80216e6a:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff80216e6e:	5b                   	pop    %rbx
ffffffff80216e6f:	5d                   	pop    %rbp
ffffffff80216e70:	41 5c                	pop    %r12
ffffffff80216e72:	c3                   	retq   
ffffffff80216e73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80216e7a:	00 00 00 00 
ffffffff80216e7e:	66 90                	xchg   %ax,%ax

ffffffff80216e80 <caml_ephemeron_blit_key.part.0>:
ffffffff80216e80:	41 57                	push   %r15
ffffffff80216e82:	48 8d 46 02          	lea    0x2(%rsi),%rax
ffffffff80216e86:	41 56                	push   %r14
ffffffff80216e88:	41 55                	push   %r13
ffffffff80216e8a:	41 54                	push   %r12
ffffffff80216e8c:	55                   	push   %rbp
ffffffff80216e8d:	48 89 d5             	mov    %rdx,%rbp
ffffffff80216e90:	53                   	push   %rbx
ffffffff80216e91:	48 8d 59 02          	lea    0x2(%rcx),%rbx
ffffffff80216e95:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff80216e99:	83 3d 00 4f 02 00 01 	cmpl   $0x1,0x24f00(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80216ea0:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80216ea5:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
ffffffff80216eaa:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
ffffffff80216eaf:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
ffffffff80216eb4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80216eb9:	0f 84 b9 00 00 00    	je     ffffffff80216f78 <caml_ephemeron_blit_key.part.0+0xf8>
ffffffff80216ebf:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80216ec4:	48 39 d8             	cmp    %rbx,%rax
ffffffff80216ec7:	76 57                	jbe    ffffffff80216f20 <caml_ephemeron_blit_key.part.0+0xa0>
ffffffff80216ec9:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
ffffffff80216ece:	48 85 c9             	test   %rcx,%rcx
ffffffff80216ed1:	74 39                	je     ffffffff80216f0c <caml_ephemeron_blit_key.part.0+0x8c>
ffffffff80216ed3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
ffffffff80216ed8:	4c 8d 24 c6          	lea    (%rsi,%rax,8),%r12
ffffffff80216edc:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
ffffffff80216ee1:	4c 8d 6c 08 02       	lea    0x2(%rax,%rcx,1),%r13
ffffffff80216ee6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80216eed:	00 00 00 
ffffffff80216ef0:	49 8b 14 24          	mov    (%r12),%rdx
ffffffff80216ef4:	48 89 de             	mov    %rbx,%rsi
ffffffff80216ef7:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216efa:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80216efe:	49 83 c4 08          	add    $0x8,%r12
ffffffff80216f02:	e8 79 fe ff ff       	callq  ffffffff80216d80 <do_set>
ffffffff80216f07:	49 39 dd             	cmp    %rbx,%r13
ffffffff80216f0a:	75 e4                	jne    ffffffff80216ef0 <caml_ephemeron_blit_key.part.0+0x70>
ffffffff80216f0c:	48 83 c4 58          	add    $0x58,%rsp
ffffffff80216f10:	5b                   	pop    %rbx
ffffffff80216f11:	5d                   	pop    %rbp
ffffffff80216f12:	41 5c                	pop    %r12
ffffffff80216f14:	41 5d                	pop    %r13
ffffffff80216f16:	41 5e                	pop    %r14
ffffffff80216f18:	41 5f                	pop    %r15
ffffffff80216f1a:	c3                   	retq   
ffffffff80216f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80216f20:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff80216f25:	49 89 c4             	mov    %rax,%r12
ffffffff80216f28:	49 83 ec 01          	sub    $0x1,%r12
ffffffff80216f2c:	78 de                	js     ffffffff80216f0c <caml_ephemeron_blit_key.part.0+0x8c>
ffffffff80216f2e:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
ffffffff80216f33:	48 8d 44 01 01       	lea    0x1(%rcx,%rax,1),%rax
ffffffff80216f38:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80216f3d:	4c 8d 2c c1          	lea    (%rcx,%rax,8),%r13
ffffffff80216f41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80216f48:	49 8b 55 00          	mov    0x0(%r13),%rdx
ffffffff80216f4c:	49 8d 34 1c          	lea    (%r12,%rbx,1),%rsi
ffffffff80216f50:	48 89 ef             	mov    %rbp,%rdi
ffffffff80216f53:	49 83 ed 08          	sub    $0x8,%r13
ffffffff80216f57:	e8 24 fe ff ff       	callq  ffffffff80216d80 <do_set>
ffffffff80216f5c:	49 83 ec 01          	sub    $0x1,%r12
ffffffff80216f60:	79 e6                	jns    ffffffff80216f48 <caml_ephemeron_blit_key.part.0+0xc8>
ffffffff80216f62:	48 83 c4 58          	add    $0x58,%rsp
ffffffff80216f66:	5b                   	pop    %rbx
ffffffff80216f67:	5d                   	pop    %rbp
ffffffff80216f68:	41 5c                	pop    %r12
ffffffff80216f6a:	41 5d                	pop    %r13
ffffffff80216f6c:	41 5e                	pop    %r14
ffffffff80216f6e:	41 5f                	pop    %r15
ffffffff80216f70:	c3                   	retq   
ffffffff80216f71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80216f78:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80216f7c:	49 89 fe             	mov    %rdi,%r14
ffffffff80216f7f:	48 89 c1             	mov    %rax,%rcx
ffffffff80216f82:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff80216f86:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
ffffffff80216f8b:	48 3d ff 0b 00 00    	cmp    $0xbff,%rax
ffffffff80216f91:	0f 86 5e 01 00 00    	jbe    ffffffff802170f5 <caml_ephemeron_blit_key.part.0+0x275>
ffffffff80216f97:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%rsp)
ffffffff80216f9e:	00 
ffffffff80216f9f:	48 8b 05 22 4e 01 00 	mov    0x14e22(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80216fa6:	41 bc 02 00 00 00    	mov    $0x2,%r12d
ffffffff80216fac:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
ffffffff80216fb1:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
ffffffff80216fb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80216fbd:	00 00 00 
ffffffff80216fc0:	4b 8d 1c e6          	lea    (%r14,%r12,8),%rbx
ffffffff80216fc4:	4c 8b 3b             	mov    (%rbx),%r15
ffffffff80216fc7:	49 39 c7             	cmp    %rax,%r15
ffffffff80216fca:	0f 84 f5 00 00 00    	je     ffffffff802170c5 <caml_ephemeron_blit_key.part.0+0x245>
ffffffff80216fd0:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80216fd4:	74 29                	je     ffffffff80216fff <caml_ephemeron_blit_key.part.0+0x17f>
ffffffff80216fd6:	e9 ea 00 00 00       	jmpq   ffffffff802170c5 <caml_ephemeron_blit_key.part.0+0x245>
ffffffff80216fdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80216fe0:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff80216fe4:	48 89 15 2d 4f 02 00 	mov    %rdx,0x24f2d(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80216feb:	4c 89 30             	mov    %r14,(%rax)
ffffffff80216fee:	4c 89 60 08          	mov    %r12,0x8(%rax)
ffffffff80216ff2:	4c 39 3d cf 4d 01 00 	cmp    %r15,0x14dcf(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80216ff9:	0f 84 99 02 00 00    	je     ffffffff80217298 <caml_ephemeron_blit_key.part.0+0x418>
ffffffff80216fff:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217002:	4d 89 fd             	mov    %r15,%r13
ffffffff80217005:	e8 16 94 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8021700a:	a8 03                	test   $0x3,%al
ffffffff8021700c:	0f 84 5e 02 00 00    	je     ffffffff80217270 <caml_ephemeron_blit_key.part.0+0x3f0>
ffffffff80217012:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
ffffffff80217017:	49 8d 6f f8          	lea    -0x8(%r15),%rbp
ffffffff8021701b:	75 73                	jne    ffffffff80217090 <caml_ephemeron_blit_key.part.0+0x210>
ffffffff8021701d:	4d 8b 3f             	mov    (%r15),%r15
ffffffff80217020:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80217024:	75 6a                	jne    ffffffff80217090 <caml_ephemeron_blit_key.part.0+0x210>
ffffffff80217026:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217029:	e8 f2 93 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8021702e:	a8 07                	test   $0x7,%al
ffffffff80217030:	74 5e                	je     ffffffff80217090 <caml_ephemeron_blit_key.part.0+0x210>
ffffffff80217032:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff80217037:	8d 50 0a             	lea    0xa(%rax),%edx
ffffffff8021703a:	81 e2 fb 00 00 00    	and    $0xfb,%edx
ffffffff80217040:	74 4e                	je     ffffffff80217090 <caml_ephemeron_blit_key.part.0+0x210>
ffffffff80217042:	3c fd                	cmp    $0xfd,%al
ffffffff80217044:	74 4a                	je     ffffffff80217090 <caml_ephemeron_blit_key.part.0+0x210>
ffffffff80217046:	4c 89 3b             	mov    %r15,(%rbx)
ffffffff80217049:	4c 3b 3d 58 4f 02 00 	cmp    0x24f58(%rip),%r15        # ffffffff8023bfa8 <caml_young_end>
ffffffff80217050:	73 a0                	jae    ffffffff80216ff2 <caml_ephemeron_blit_key.part.0+0x172>
ffffffff80217052:	4c 3b 3d 57 4f 02 00 	cmp    0x24f57(%rip),%r15        # ffffffff8023bfb0 <caml_young_start>
ffffffff80217059:	76 97                	jbe    ffffffff80216ff2 <caml_ephemeron_blit_key.part.0+0x172>
ffffffff8021705b:	48 8b 05 b6 4e 02 00 	mov    0x24eb6(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80217062:	48 3b 05 b7 4e 02 00 	cmp    0x24eb7(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff80217069:	0f 82 71 ff ff ff    	jb     ffffffff80216fe0 <caml_ephemeron_blit_key.part.0+0x160>
ffffffff8021706f:	48 8d 3d 8a 4e 02 00 	lea    0x24e8a(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80217076:	e8 35 b1 ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff8021707b:	48 8b 05 96 4e 02 00 	mov    0x24e96(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80217082:	e9 59 ff ff ff       	jmpq   ffffffff80216fe0 <caml_ephemeron_blit_key.part.0+0x160>
ffffffff80217087:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021708e:	00 00 
ffffffff80217090:	48 8b 05 31 4d 01 00 	mov    0x14d31(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217097:	48 f7 45 00 00 03 00 	testq  $0x300,0x0(%rbp)
ffffffff8021709e:	00 
ffffffff8021709f:	75 24                	jne    ffffffff802170c5 <caml_ephemeron_blit_key.part.0+0x245>
ffffffff802170a1:	4c 3b 2d 00 4f 02 00 	cmp    0x24f00(%rip),%r13        # ffffffff8023bfa8 <caml_young_end>
ffffffff802170a8:	73 09                	jae    ffffffff802170b3 <caml_ephemeron_blit_key.part.0+0x233>
ffffffff802170aa:	4c 3b 2d ff 4e 02 00 	cmp    0x24eff(%rip),%r13        # ffffffff8023bfb0 <caml_young_start>
ffffffff802170b1:	77 12                	ja     ffffffff802170c5 <caml_ephemeron_blit_key.part.0+0x245>
ffffffff802170b3:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%rsp)
ffffffff802170ba:	00 
ffffffff802170bb:	48 89 03             	mov    %rax,(%rbx)
ffffffff802170be:	48 8b 05 03 4d 01 00 	mov    0x14d03(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802170c5:	49 83 c4 01          	add    $0x1,%r12
ffffffff802170c9:	4c 39 64 24 20       	cmp    %r12,0x20(%rsp)
ffffffff802170ce:	0f 85 ec fe ff ff    	jne    ffffffff80216fc0 <caml_ephemeron_blit_key.part.0+0x140>
ffffffff802170d4:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff802170d9:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
ffffffff802170de:	48 8b 6c 24 48       	mov    0x48(%rsp),%rbp
ffffffff802170e3:	48 39 41 08          	cmp    %rax,0x8(%rcx)
ffffffff802170e7:	74 0c                	je     ffffffff802170f5 <caml_ephemeron_blit_key.part.0+0x275>
ffffffff802170e9:	8b 74 24 3c          	mov    0x3c(%rsp),%esi
ffffffff802170ed:	85 f6                	test   %esi,%esi
ffffffff802170ef:	74 04                	je     ffffffff802170f5 <caml_ephemeron_blit_key.part.0+0x275>
ffffffff802170f1:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff802170f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802170f9:	48 89 c1             	mov    %rax,%rcx
ffffffff802170fc:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff80217100:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
ffffffff80217105:	48 3d ff 0b 00 00    	cmp    $0xbff,%rax
ffffffff8021710b:	0f 86 ae fd ff ff    	jbe    ffffffff80216ebf <caml_ephemeron_blit_key.part.0+0x3f>
ffffffff80217111:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%rsp)
ffffffff80217118:	00 
ffffffff80217119:	48 8b 05 a8 4c 01 00 	mov    0x14ca8(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217120:	41 bc 02 00 00 00    	mov    $0x2,%r12d
ffffffff80217126:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
ffffffff8021712b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80217130:	4a 8d 5c e5 00       	lea    0x0(%rbp,%r12,8),%rbx
ffffffff80217135:	4c 8b 3b             	mov    (%rbx),%r15
ffffffff80217138:	49 39 c7             	cmp    %rax,%r15
ffffffff8021713b:	0f 84 f4 00 00 00    	je     ffffffff80217235 <caml_ephemeron_blit_key.part.0+0x3b5>
ffffffff80217141:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80217145:	74 28                	je     ffffffff8021716f <caml_ephemeron_blit_key.part.0+0x2ef>
ffffffff80217147:	e9 e9 00 00 00       	jmpq   ffffffff80217235 <caml_ephemeron_blit_key.part.0+0x3b5>
ffffffff8021714c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80217150:	48 8d 50 10          	lea    0x10(%rax),%rdx
ffffffff80217154:	48 89 15 bd 4d 02 00 	mov    %rdx,0x24dbd(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8021715b:	48 89 28             	mov    %rbp,(%rax)
ffffffff8021715e:	4c 89 60 08          	mov    %r12,0x8(%rax)
ffffffff80217162:	4c 39 3d 5f 4c 01 00 	cmp    %r15,0x14c5f(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217169:	0f 84 21 01 00 00    	je     ffffffff80217290 <caml_ephemeron_blit_key.part.0+0x410>
ffffffff8021716f:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217172:	4d 89 fe             	mov    %r15,%r14
ffffffff80217175:	e8 a6 92 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8021717a:	a8 03                	test   $0x3,%al
ffffffff8021717c:	0f 84 fe 00 00 00    	je     ffffffff80217280 <caml_ephemeron_blit_key.part.0+0x400>
ffffffff80217182:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
ffffffff80217187:	4d 8d 6f f8          	lea    -0x8(%r15),%r13
ffffffff8021718b:	75 73                	jne    ffffffff80217200 <caml_ephemeron_blit_key.part.0+0x380>
ffffffff8021718d:	4d 8b 3f             	mov    (%r15),%r15
ffffffff80217190:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80217194:	75 6a                	jne    ffffffff80217200 <caml_ephemeron_blit_key.part.0+0x380>
ffffffff80217196:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217199:	e8 82 92 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8021719e:	a8 07                	test   $0x7,%al
ffffffff802171a0:	74 5e                	je     ffffffff80217200 <caml_ephemeron_blit_key.part.0+0x380>
ffffffff802171a2:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff802171a7:	8d 50 0a             	lea    0xa(%rax),%edx
ffffffff802171aa:	81 e2 fb 00 00 00    	and    $0xfb,%edx
ffffffff802171b0:	74 4e                	je     ffffffff80217200 <caml_ephemeron_blit_key.part.0+0x380>
ffffffff802171b2:	3c fd                	cmp    $0xfd,%al
ffffffff802171b4:	74 4a                	je     ffffffff80217200 <caml_ephemeron_blit_key.part.0+0x380>
ffffffff802171b6:	4c 89 3b             	mov    %r15,(%rbx)
ffffffff802171b9:	4c 3b 3d e8 4d 02 00 	cmp    0x24de8(%rip),%r15        # ffffffff8023bfa8 <caml_young_end>
ffffffff802171c0:	73 a0                	jae    ffffffff80217162 <caml_ephemeron_blit_key.part.0+0x2e2>
ffffffff802171c2:	4c 3b 3d e7 4d 02 00 	cmp    0x24de7(%rip),%r15        # ffffffff8023bfb0 <caml_young_start>
ffffffff802171c9:	76 97                	jbe    ffffffff80217162 <caml_ephemeron_blit_key.part.0+0x2e2>
ffffffff802171cb:	48 8b 05 46 4d 02 00 	mov    0x24d46(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff802171d2:	48 3b 05 47 4d 02 00 	cmp    0x24d47(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff802171d9:	0f 82 71 ff ff ff    	jb     ffffffff80217150 <caml_ephemeron_blit_key.part.0+0x2d0>
ffffffff802171df:	48 8d 3d 1a 4d 02 00 	lea    0x24d1a(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff802171e6:	e8 c5 af ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff802171eb:	48 8b 05 26 4d 02 00 	mov    0x24d26(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff802171f2:	e9 59 ff ff ff       	jmpq   ffffffff80217150 <caml_ephemeron_blit_key.part.0+0x2d0>
ffffffff802171f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802171fe:	00 00 
ffffffff80217200:	48 8b 05 c1 4b 01 00 	mov    0x14bc1(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217207:	49 f7 45 00 00 03 00 	testq  $0x300,0x0(%r13)
ffffffff8021720e:	00 
ffffffff8021720f:	75 24                	jne    ffffffff80217235 <caml_ephemeron_blit_key.part.0+0x3b5>
ffffffff80217211:	4c 3b 35 90 4d 02 00 	cmp    0x24d90(%rip),%r14        # ffffffff8023bfa8 <caml_young_end>
ffffffff80217218:	73 09                	jae    ffffffff80217223 <caml_ephemeron_blit_key.part.0+0x3a3>
ffffffff8021721a:	4c 3b 35 8f 4d 02 00 	cmp    0x24d8f(%rip),%r14        # ffffffff8023bfb0 <caml_young_start>
ffffffff80217221:	77 12                	ja     ffffffff80217235 <caml_ephemeron_blit_key.part.0+0x3b5>
ffffffff80217223:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%rsp)
ffffffff8021722a:	00 
ffffffff8021722b:	48 89 03             	mov    %rax,(%rbx)
ffffffff8021722e:	48 8b 05 93 4b 01 00 	mov    0x14b93(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217235:	49 83 c4 01          	add    $0x1,%r12
ffffffff80217239:	4c 39 64 24 20       	cmp    %r12,0x20(%rsp)
ffffffff8021723e:	0f 85 ec fe ff ff    	jne    ffffffff80217130 <caml_ephemeron_blit_key.part.0+0x2b0>
ffffffff80217244:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
ffffffff80217249:	48 39 45 08          	cmp    %rax,0x8(%rbp)
ffffffff8021724d:	0f 84 6c fc ff ff    	je     ffffffff80216ebf <caml_ephemeron_blit_key.part.0+0x3f>
ffffffff80217253:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
ffffffff80217257:	85 d2                	test   %edx,%edx
ffffffff80217259:	0f 84 60 fc ff ff    	je     ffffffff80216ebf <caml_ephemeron_blit_key.part.0+0x3f>
ffffffff8021725f:	48 89 45 08          	mov    %rax,0x8(%rbp)
ffffffff80217263:	e9 57 fc ff ff       	jmpq   ffffffff80216ebf <caml_ephemeron_blit_key.part.0+0x3f>
ffffffff80217268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021726f:	00 
ffffffff80217270:	48 8b 05 51 4b 01 00 	mov    0x14b51(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217277:	e9 49 fe ff ff       	jmpq   ffffffff802170c5 <caml_ephemeron_blit_key.part.0+0x245>
ffffffff8021727c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80217280:	48 8b 05 41 4b 01 00 	mov    0x14b41(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217287:	eb ac                	jmp    ffffffff80217235 <caml_ephemeron_blit_key.part.0+0x3b5>
ffffffff80217289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80217290:	4c 89 f8             	mov    %r15,%rax
ffffffff80217293:	eb a0                	jmp    ffffffff80217235 <caml_ephemeron_blit_key.part.0+0x3b5>
ffffffff80217295:	0f 1f 00             	nopl   (%rax)
ffffffff80217298:	4c 89 f8             	mov    %r15,%rax
ffffffff8021729b:	e9 25 fe ff ff       	jmpq   ffffffff802170c5 <caml_ephemeron_blit_key.part.0+0x245>

ffffffff802172a0 <caml_ephemeron_num_keys>:
ffffffff802172a0:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff802172a4:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802172a8:	48 83 e8 02          	sub    $0x2,%rax
ffffffff802172ac:	c3                   	retq   
ffffffff802172ad:	0f 1f 00             	nopl   (%rax)

ffffffff802172b0 <caml_ephemeron_create>:
ffffffff802172b0:	48 b8 fd ff ff ff ff 	movabs $0x3ffffffffffffd,%rax
ffffffff802172b7:	ff 3f 00 
ffffffff802172ba:	55                   	push   %rbp
ffffffff802172bb:	53                   	push   %rbx
ffffffff802172bc:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802172c0:	48 39 c7             	cmp    %rax,%rdi
ffffffff802172c3:	77 57                	ja     ffffffff8021731c <caml_ephemeron_create+0x6c>
ffffffff802172c5:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
ffffffff802172c9:	48 89 fb             	mov    %rdi,%rbx
ffffffff802172cc:	be fb 00 00 00       	mov    $0xfb,%esi
ffffffff802172d1:	48 89 ef             	mov    %rbp,%rdi
ffffffff802172d4:	e8 d7 9c ff ff       	callq  ffffffff80210fb0 <caml_alloc_shr>
ffffffff802172d9:	48 83 fd 01          	cmp    $0x1,%rbp
ffffffff802172dd:	76 25                	jbe    ffffffff80217304 <caml_ephemeron_create+0x54>
ffffffff802172df:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff802172e3:	48 8d 74 d8 10       	lea    0x10(%rax,%rbx,8),%rsi
ffffffff802172e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802172ef:	00 
ffffffff802172f0:	48 8b 0d d1 4a 01 00 	mov    0x14ad1(%rip),%rcx        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802172f7:	48 83 c2 08          	add    $0x8,%rdx
ffffffff802172fb:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
ffffffff802172ff:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80217302:	75 ec                	jne    ffffffff802172f0 <caml_ephemeron_create+0x40>
ffffffff80217304:	48 8b 15 55 f1 02 00 	mov    0x2f155(%rip),%rdx        # ffffffff80246460 <caml_ephe_list_head>
ffffffff8021730b:	48 89 10             	mov    %rdx,(%rax)
ffffffff8021730e:	48 89 05 4b f1 02 00 	mov    %rax,0x2f14b(%rip)        # ffffffff80246460 <caml_ephe_list_head>
ffffffff80217315:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80217319:	5b                   	pop    %rbx
ffffffff8021731a:	5d                   	pop    %rbp
ffffffff8021731b:	c3                   	retq   
ffffffff8021731c:	48 8d 3d f2 b0 00 00 	lea    0xb0f2(%rip),%rdi        # ffffffff80222415 <posix_signals+0x335>
ffffffff80217323:	e8 58 01 ff ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff80217328:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021732f:	00 

ffffffff80217330 <caml_ephe_create>:
ffffffff80217330:	48 d1 ff             	sar    %rdi
ffffffff80217333:	e9 78 ff ff ff       	jmpq   ffffffff802172b0 <caml_ephemeron_create>
ffffffff80217338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021733f:	00 

ffffffff80217340 <caml_weak_create>:
ffffffff80217340:	eb ee                	jmp    ffffffff80217330 <caml_ephe_create>
ffffffff80217342:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80217349:	00 00 00 00 
ffffffff8021734d:	0f 1f 00             	nopl   (%rax)

ffffffff80217350 <caml_ephemeron_set_key>:
ffffffff80217350:	41 54                	push   %r12
ffffffff80217352:	4c 8d 66 02          	lea    0x2(%rsi),%r12
ffffffff80217356:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8021735a:	83 3d 3f 4a 02 00 01 	cmpl   $0x1,0x24a3f(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80217361:	75 1a                	jne    ffffffff8021737d <caml_ephemeron_set_key+0x2d>
ffffffff80217363:	4c 89 e6             	mov    %r12,%rsi
ffffffff80217366:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8021736b:	48 89 3c 24          	mov    %rdi,(%rsp)
ffffffff8021736f:	e8 ac fa ff ff       	callq  ffffffff80216e20 <do_check_key_clean.part.0>
ffffffff80217374:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80217379:	48 8b 3c 24          	mov    (%rsp),%rdi
ffffffff8021737d:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80217381:	4c 89 e6             	mov    %r12,%rsi
ffffffff80217384:	41 5c                	pop    %r12
ffffffff80217386:	e9 f5 f9 ff ff       	jmpq   ffffffff80216d80 <do_set>
ffffffff8021738b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80217390 <caml_ephe_set_key>:
ffffffff80217390:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80217394:	48 d1 fe             	sar    %rsi
ffffffff80217397:	e8 b4 ff ff ff       	callq  ffffffff80217350 <caml_ephemeron_set_key>
ffffffff8021739c:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802173a1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802173a5:	c3                   	retq   
ffffffff802173a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802173ad:	00 00 00 

ffffffff802173b0 <caml_ephemeron_unset_key>:
ffffffff802173b0:	55                   	push   %rbp
ffffffff802173b1:	48 8d 6e 02          	lea    0x2(%rsi),%rbp
ffffffff802173b5:	53                   	push   %rbx
ffffffff802173b6:	48 89 fb             	mov    %rdi,%rbx
ffffffff802173b9:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802173bd:	83 3d dc 49 02 00 01 	cmpl   $0x1,0x249dc(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff802173c4:	75 08                	jne    ffffffff802173ce <caml_ephemeron_unset_key+0x1e>
ffffffff802173c6:	48 89 ee             	mov    %rbp,%rsi
ffffffff802173c9:	e8 52 fa ff ff       	callq  ffffffff80216e20 <do_check_key_clean.part.0>
ffffffff802173ce:	48 8b 05 f3 49 01 00 	mov    0x149f3(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802173d5:	48 89 04 eb          	mov    %rax,(%rbx,%rbp,8)
ffffffff802173d9:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802173dd:	5b                   	pop    %rbx
ffffffff802173de:	5d                   	pop    %rbp
ffffffff802173df:	c3                   	retq   

ffffffff802173e0 <caml_ephe_unset_key>:
ffffffff802173e0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802173e4:	48 d1 fe             	sar    %rsi
ffffffff802173e7:	e8 c4 ff ff ff       	callq  ffffffff802173b0 <caml_ephemeron_unset_key>
ffffffff802173ec:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802173f1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802173f5:	c3                   	retq   
ffffffff802173f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802173fd:	00 00 00 

ffffffff80217400 <caml_ephe_set_key_option>:
ffffffff80217400:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80217404:	48 d1 fe             	sar    %rsi
ffffffff80217407:	f6 c2 01             	test   $0x1,%dl
ffffffff8021740a:	75 14                	jne    ffffffff80217420 <caml_ephe_set_key_option+0x20>
ffffffff8021740c:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8021740f:	e8 3c ff ff ff       	callq  ffffffff80217350 <caml_ephemeron_set_key>
ffffffff80217414:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80217419:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021741d:	c3                   	retq   
ffffffff8021741e:	66 90                	xchg   %ax,%ax
ffffffff80217420:	e8 8b ff ff ff       	callq  ffffffff802173b0 <caml_ephemeron_unset_key>
ffffffff80217425:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021742a:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021742e:	c3                   	retq   
ffffffff8021742f:	90                   	nop

ffffffff80217430 <caml_weak_set>:
ffffffff80217430:	eb ce                	jmp    ffffffff80217400 <caml_ephe_set_key_option>
ffffffff80217432:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80217439:	00 00 00 00 
ffffffff8021743d:	0f 1f 00             	nopl   (%rax)

ffffffff80217440 <caml_ephemeron_set_data>:
ffffffff80217440:	41 57                	push   %r15
ffffffff80217442:	41 56                	push   %r14
ffffffff80217444:	41 55                	push   %r13
ffffffff80217446:	41 54                	push   %r12
ffffffff80217448:	49 89 f4             	mov    %rsi,%r12
ffffffff8021744b:	55                   	push   %rbp
ffffffff8021744c:	48 89 fd             	mov    %rdi,%rbp
ffffffff8021744f:	53                   	push   %rbx
ffffffff80217450:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80217454:	83 3d 45 49 02 00 01 	cmpl   $0x1,0x24945(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8021745b:	74 23                	je     ffffffff80217480 <caml_ephemeron_set_data+0x40>
ffffffff8021745d:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80217461:	4c 89 e2             	mov    %r12,%rdx
ffffffff80217464:	48 89 ef             	mov    %rbp,%rdi
ffffffff80217467:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021746c:	5b                   	pop    %rbx
ffffffff8021746d:	5d                   	pop    %rbp
ffffffff8021746e:	41 5c                	pop    %r12
ffffffff80217470:	41 5d                	pop    %r13
ffffffff80217472:	41 5e                	pop    %r14
ffffffff80217474:	41 5f                	pop    %r15
ffffffff80217476:	e9 05 f9 ff ff       	jmpq   ffffffff80216d80 <do_set>
ffffffff8021747b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80217480:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80217484:	48 89 c2             	mov    %rax,%rdx
ffffffff80217487:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021748b:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
ffffffff80217490:	48 3d ff 0b 00 00    	cmp    $0xbff,%rax
ffffffff80217496:	76 c5                	jbe    ffffffff8021745d <caml_ephemeron_set_data+0x1d>
ffffffff80217498:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
ffffffff8021749f:	00 
ffffffff802174a0:	48 8b 05 21 49 01 00 	mov    0x14921(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802174a7:	bb 02 00 00 00       	mov    $0x2,%ebx
ffffffff802174ac:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802174b0:	4c 8d 6c dd 00       	lea    0x0(%rbp,%rbx,8),%r13
ffffffff802174b5:	4d 8b 7d 00          	mov    0x0(%r13),%r15
ffffffff802174b9:	49 39 c7             	cmp    %rax,%r15
ffffffff802174bc:	0f 84 f8 00 00 00    	je     ffffffff802175ba <caml_ephemeron_set_data+0x17a>
ffffffff802174c2:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff802174c6:	74 27                	je     ffffffff802174ef <caml_ephemeron_set_data+0xaf>
ffffffff802174c8:	e9 ed 00 00 00       	jmpq   ffffffff802175ba <caml_ephemeron_set_data+0x17a>
ffffffff802174cd:	0f 1f 00             	nopl   (%rax)
ffffffff802174d0:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff802174d4:	48 89 0d 3d 4a 02 00 	mov    %rcx,0x24a3d(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff802174db:	48 89 28             	mov    %rbp,(%rax)
ffffffff802174de:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff802174e2:	4c 39 3d df 48 01 00 	cmp    %r15,0x148df(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802174e9:	0f 84 11 01 00 00    	je     ffffffff80217600 <caml_ephemeron_set_data+0x1c0>
ffffffff802174ef:	4c 89 ff             	mov    %r15,%rdi
ffffffff802174f2:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
ffffffff802174f7:	e8 24 8f ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802174fc:	a8 03                	test   $0x3,%al
ffffffff802174fe:	0f 84 ec 00 00 00    	je     ffffffff802175f0 <caml_ephemeron_set_data+0x1b0>
ffffffff80217504:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
ffffffff80217509:	4d 8d 77 f8          	lea    -0x8(%r15),%r14
ffffffff8021750d:	75 71                	jne    ffffffff80217580 <caml_ephemeron_set_data+0x140>
ffffffff8021750f:	4d 8b 3f             	mov    (%r15),%r15
ffffffff80217512:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80217516:	75 68                	jne    ffffffff80217580 <caml_ephemeron_set_data+0x140>
ffffffff80217518:	4c 89 ff             	mov    %r15,%rdi
ffffffff8021751b:	e8 00 8f ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217520:	a8 07                	test   $0x7,%al
ffffffff80217522:	74 5c                	je     ffffffff80217580 <caml_ephemeron_set_data+0x140>
ffffffff80217524:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff80217529:	8d 70 0a             	lea    0xa(%rax),%esi
ffffffff8021752c:	81 e6 fb 00 00 00    	and    $0xfb,%esi
ffffffff80217532:	74 4c                	je     ffffffff80217580 <caml_ephemeron_set_data+0x140>
ffffffff80217534:	3c fd                	cmp    $0xfd,%al
ffffffff80217536:	74 48                	je     ffffffff80217580 <caml_ephemeron_set_data+0x140>
ffffffff80217538:	4d 89 7d 00          	mov    %r15,0x0(%r13)
ffffffff8021753c:	4c 3b 3d 65 4a 02 00 	cmp    0x24a65(%rip),%r15        # ffffffff8023bfa8 <caml_young_end>
ffffffff80217543:	73 9d                	jae    ffffffff802174e2 <caml_ephemeron_set_data+0xa2>
ffffffff80217545:	4c 3b 3d 64 4a 02 00 	cmp    0x24a64(%rip),%r15        # ffffffff8023bfb0 <caml_young_start>
ffffffff8021754c:	76 94                	jbe    ffffffff802174e2 <caml_ephemeron_set_data+0xa2>
ffffffff8021754e:	48 8b 05 c3 49 02 00 	mov    0x249c3(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80217555:	48 3b 05 c4 49 02 00 	cmp    0x249c4(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff8021755c:	0f 82 6e ff ff ff    	jb     ffffffff802174d0 <caml_ephemeron_set_data+0x90>
ffffffff80217562:	48 8d 3d 97 49 02 00 	lea    0x24997(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80217569:	e8 42 ac ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff8021756e:	48 8b 05 a3 49 02 00 	mov    0x249a3(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80217575:	e9 56 ff ff ff       	jmpq   ffffffff802174d0 <caml_ephemeron_set_data+0x90>
ffffffff8021757a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80217580:	48 8b 05 41 48 01 00 	mov    0x14841(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217587:	49 f7 06 00 03 00 00 	testq  $0x300,(%r14)
ffffffff8021758e:	75 2a                	jne    ffffffff802175ba <caml_ephemeron_set_data+0x17a>
ffffffff80217590:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80217595:	48 3b 0d 0c 4a 02 00 	cmp    0x24a0c(%rip),%rcx        # ffffffff8023bfa8 <caml_young_end>
ffffffff8021759c:	73 09                	jae    ffffffff802175a7 <caml_ephemeron_set_data+0x167>
ffffffff8021759e:	48 3b 0d 0b 4a 02 00 	cmp    0x24a0b(%rip),%rcx        # ffffffff8023bfb0 <caml_young_start>
ffffffff802175a5:	77 13                	ja     ffffffff802175ba <caml_ephemeron_set_data+0x17a>
ffffffff802175a7:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%rsp)
ffffffff802175ae:	00 
ffffffff802175af:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff802175b3:	48 8b 05 0e 48 01 00 	mov    0x1480e(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802175ba:	48 83 c3 01          	add    $0x1,%rbx
ffffffff802175be:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff802175c3:	0f 85 e7 fe ff ff    	jne    ffffffff802174b0 <caml_ephemeron_set_data+0x70>
ffffffff802175c9:	48 39 45 08          	cmp    %rax,0x8(%rbp)
ffffffff802175cd:	0f 84 8a fe ff ff    	je     ffffffff8021745d <caml_ephemeron_set_data+0x1d>
ffffffff802175d3:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
ffffffff802175d7:	85 d2                	test   %edx,%edx
ffffffff802175d9:	0f 84 7e fe ff ff    	je     ffffffff8021745d <caml_ephemeron_set_data+0x1d>
ffffffff802175df:	48 89 45 08          	mov    %rax,0x8(%rbp)
ffffffff802175e3:	e9 75 fe ff ff       	jmpq   ffffffff8021745d <caml_ephemeron_set_data+0x1d>
ffffffff802175e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802175ef:	00 
ffffffff802175f0:	48 8b 05 d1 47 01 00 	mov    0x147d1(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802175f7:	eb c1                	jmp    ffffffff802175ba <caml_ephemeron_set_data+0x17a>
ffffffff802175f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80217600:	4c 89 f8             	mov    %r15,%rax
ffffffff80217603:	eb b5                	jmp    ffffffff802175ba <caml_ephemeron_set_data+0x17a>
ffffffff80217605:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021760c:	00 00 00 00 

ffffffff80217610 <caml_ephe_set_data>:
ffffffff80217610:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80217614:	e8 27 fe ff ff       	callq  ffffffff80217440 <caml_ephemeron_set_data>
ffffffff80217619:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021761e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80217622:	c3                   	retq   
ffffffff80217623:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021762a:	00 00 00 00 
ffffffff8021762e:	66 90                	xchg   %ax,%ax

ffffffff80217630 <caml_ephemeron_unset_data>:
ffffffff80217630:	48 8b 05 91 47 01 00 	mov    0x14791(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217637:	48 89 47 08          	mov    %rax,0x8(%rdi)
ffffffff8021763b:	c3                   	retq   
ffffffff8021763c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80217640 <caml_ephe_unset_data>:
ffffffff80217640:	48 8b 05 81 47 01 00 	mov    0x14781(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217647:	48 89 47 08          	mov    %rax,0x8(%rdi)
ffffffff8021764b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80217650:	c3                   	retq   
ffffffff80217651:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80217658:	00 00 00 00 
ffffffff8021765c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80217660 <caml_ephemeron_get_key>:
ffffffff80217660:	41 56                	push   %r14
ffffffff80217662:	41 55                	push   %r13
ffffffff80217664:	4c 8d 6c f7 10       	lea    0x10(%rdi,%rsi,8),%r13
ffffffff80217669:	41 54                	push   %r12
ffffffff8021766b:	45 31 e4             	xor    %r12d,%r12d
ffffffff8021766e:	55                   	push   %rbp
ffffffff8021766f:	53                   	push   %rbx
ffffffff80217670:	49 8b 6d 00          	mov    0x0(%r13),%rbp
ffffffff80217674:	48 3b 2d 4d 47 01 00 	cmp    0x1474d(%rip),%rbp        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021767b:	74 21                	je     ffffffff8021769e <caml_ephemeron_get_key+0x3e>
ffffffff8021767d:	8b 05 1d 47 02 00    	mov    0x2471d(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80217683:	49 89 d6             	mov    %rdx,%r14
ffffffff80217686:	83 f8 01             	cmp    $0x1,%eax
ffffffff80217689:	74 25                	je     ffffffff802176b0 <caml_ephemeron_get_key+0x50>
ffffffff8021768b:	85 c0                	test   %eax,%eax
ffffffff8021768d:	75 06                	jne    ffffffff80217695 <caml_ephemeron_get_key+0x35>
ffffffff8021768f:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff80217693:	74 5b                	je     ffffffff802176f0 <caml_ephemeron_get_key+0x90>
ffffffff80217695:	49 89 2e             	mov    %rbp,(%r14)
ffffffff80217698:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff8021769e:	5b                   	pop    %rbx
ffffffff8021769f:	44 89 e0             	mov    %r12d,%eax
ffffffff802176a2:	5d                   	pop    %rbp
ffffffff802176a3:	41 5c                	pop    %r12
ffffffff802176a5:	41 5d                	pop    %r13
ffffffff802176a7:	41 5e                	pop    %r14
ffffffff802176a9:	c3                   	retq   
ffffffff802176aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802176b0:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff802176b4:	75 df                	jne    ffffffff80217695 <caml_ephemeron_get_key+0x35>
ffffffff802176b6:	48 89 fb             	mov    %rdi,%rbx
ffffffff802176b9:	48 89 ef             	mov    %rbp,%rdi
ffffffff802176bc:	e8 5f 8d ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802176c1:	a8 01                	test   $0x1,%al
ffffffff802176c3:	74 4b                	je     ffffffff80217710 <caml_ephemeron_get_key+0xb0>
ffffffff802176c5:	48 f7 45 f8 00 03 00 	testq  $0x300,-0x8(%rbp)
ffffffff802176cc:	00 
ffffffff802176cd:	75 41                	jne    ffffffff80217710 <caml_ephemeron_get_key+0xb0>
ffffffff802176cf:	48 8b 05 f2 46 01 00 	mov    0x146f2(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802176d6:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff802176da:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff802176de:	44 89 e0             	mov    %r12d,%eax
ffffffff802176e1:	5b                   	pop    %rbx
ffffffff802176e2:	5d                   	pop    %rbp
ffffffff802176e3:	41 5c                	pop    %r12
ffffffff802176e5:	41 5d                	pop    %r13
ffffffff802176e7:	41 5e                	pop    %r14
ffffffff802176e9:	c3                   	retq   
ffffffff802176ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802176f0:	48 89 ef             	mov    %rbp,%rdi
ffffffff802176f3:	e8 28 8d ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802176f8:	a8 01                	test   $0x1,%al
ffffffff802176fa:	74 99                	je     ffffffff80217695 <caml_ephemeron_get_key+0x35>
ffffffff802176fc:	31 f6                	xor    %esi,%esi
ffffffff802176fe:	48 89 ef             	mov    %rbp,%rdi
ffffffff80217701:	e8 da 72 ff ff       	callq  ffffffff8020e9e0 <caml_darken>
ffffffff80217706:	eb 8d                	jmp    ffffffff80217695 <caml_ephemeron_get_key+0x35>
ffffffff80217708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021770f:	00 
ffffffff80217710:	8b 05 8a 46 02 00    	mov    0x2468a(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80217716:	49 8b 6d 00          	mov    0x0(%r13),%rbp
ffffffff8021771a:	e9 6c ff ff ff       	jmpq   ffffffff8021768b <caml_ephemeron_get_key+0x2b>
ffffffff8021771f:	90                   	nop

ffffffff80217720 <caml_ephe_get_key>:
ffffffff80217720:	55                   	push   %rbp
ffffffff80217721:	48 d1 fe             	sar    %rsi
ffffffff80217724:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80217728:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021772f:	00 00 
ffffffff80217731:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80217736:	31 c0                	xor    %eax,%eax
ffffffff80217738:	48 89 e5             	mov    %rsp,%rbp
ffffffff8021773b:	48 89 ea             	mov    %rbp,%rdx
ffffffff8021773e:	e8 1d ff ff ff       	callq  ffffffff80217660 <caml_ephemeron_get_key>
ffffffff80217743:	48 89 ee             	mov    %rbp,%rsi
ffffffff80217746:	89 c7                	mov    %eax,%edi
ffffffff80217748:	e8 83 f5 ff ff       	callq  ffffffff80216cd0 <optionalize>
ffffffff8021774d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80217752:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80217759:	00 00 
ffffffff8021775b:	75 06                	jne    ffffffff80217763 <caml_ephe_get_key+0x43>
ffffffff8021775d:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80217761:	5d                   	pop    %rbp
ffffffff80217762:	c3                   	retq   
ffffffff80217763:	e8 38 89 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80217768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021776f:	00 

ffffffff80217770 <caml_weak_get>:
ffffffff80217770:	eb ae                	jmp    ffffffff80217720 <caml_ephe_get_key>
ffffffff80217772:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80217779:	00 00 00 00 
ffffffff8021777d:	0f 1f 00             	nopl   (%rax)

ffffffff80217780 <caml_ephemeron_get_data>:
ffffffff80217780:	41 57                	push   %r15
ffffffff80217782:	41 56                	push   %r14
ffffffff80217784:	41 55                	push   %r13
ffffffff80217786:	41 54                	push   %r12
ffffffff80217788:	55                   	push   %rbp
ffffffff80217789:	53                   	push   %rbx
ffffffff8021778a:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021778d:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80217791:	83 3d 08 46 02 00 01 	cmpl   $0x1,0x24608(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80217798:	48 8b 05 29 46 01 00 	mov    0x14629(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021779f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff802177a4:	74 4a                	je     ffffffff802177f0 <caml_ephemeron_get_data+0x70>
ffffffff802177a6:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff802177aa:	45 31 c0             	xor    %r8d,%r8d
ffffffff802177ad:	48 39 e8             	cmp    %rbp,%rax
ffffffff802177b0:	74 22                	je     ffffffff802177d4 <caml_ephemeron_get_data+0x54>
ffffffff802177b2:	8b 05 e8 45 02 00    	mov    0x245e8(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff802177b8:	85 c0                	test   %eax,%eax
ffffffff802177ba:	75 0a                	jne    ffffffff802177c6 <caml_ephemeron_get_data+0x46>
ffffffff802177bc:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff802177c0:	0f 84 ca 01 00 00    	je     ffffffff80217990 <caml_ephemeron_get_data+0x210>
ffffffff802177c6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff802177cb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff802177d1:	48 89 28             	mov    %rbp,(%rax)
ffffffff802177d4:	48 83 c4 28          	add    $0x28,%rsp
ffffffff802177d8:	44 89 c0             	mov    %r8d,%eax
ffffffff802177db:	5b                   	pop    %rbx
ffffffff802177dc:	5d                   	pop    %rbp
ffffffff802177dd:	41 5c                	pop    %r12
ffffffff802177df:	41 5d                	pop    %r13
ffffffff802177e1:	41 5e                	pop    %r14
ffffffff802177e3:	41 5f                	pop    %r15
ffffffff802177e5:	c3                   	retq   
ffffffff802177e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802177ed:	00 00 00 
ffffffff802177f0:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
ffffffff802177f4:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
ffffffff802177fb:	00 
ffffffff802177fc:	bd 02 00 00 00       	mov    $0x2,%ebp
ffffffff80217801:	48 89 d1             	mov    %rdx,%rcx
ffffffff80217804:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff80217808:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8021780d:	48 81 fa ff 0b 00 00 	cmp    $0xbff,%rdx
ffffffff80217814:	0f 86 b6 01 00 00    	jbe    ffffffff802179d0 <caml_ephemeron_get_data+0x250>
ffffffff8021781a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80217820:	4c 8d 2c eb          	lea    (%rbx,%rbp,8),%r13
ffffffff80217824:	4d 8b 7d 00          	mov    0x0(%r13),%r15
ffffffff80217828:	49 39 c7             	cmp    %rax,%r15
ffffffff8021782b:	0f 84 d7 00 00 00    	je     ffffffff80217908 <caml_ephemeron_get_data+0x188>
ffffffff80217831:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80217835:	74 28                	je     ffffffff8021785f <caml_ephemeron_get_data+0xdf>
ffffffff80217837:	e9 cc 00 00 00       	jmpq   ffffffff80217908 <caml_ephemeron_get_data+0x188>
ffffffff8021783c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80217840:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff80217844:	48 89 0d cd 46 02 00 	mov    %rcx,0x246cd(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8021784b:	48 89 18             	mov    %rbx,(%rax)
ffffffff8021784e:	48 89 68 08          	mov    %rbp,0x8(%rax)
ffffffff80217852:	4c 39 3d 6f 45 01 00 	cmp    %r15,0x1456f(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217859:	0f 84 a1 00 00 00    	je     ffffffff80217900 <caml_ephemeron_get_data+0x180>
ffffffff8021785f:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217862:	4d 89 fe             	mov    %r15,%r14
ffffffff80217865:	e8 b6 8b ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8021786a:	a8 03                	test   $0x3,%al
ffffffff8021786c:	0f 84 3e 01 00 00    	je     ffffffff802179b0 <caml_ephemeron_get_data+0x230>
ffffffff80217872:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
ffffffff80217877:	4d 8d 67 f8          	lea    -0x8(%r15),%r12
ffffffff8021787b:	0f 85 c7 00 00 00    	jne    ffffffff80217948 <caml_ephemeron_get_data+0x1c8>
ffffffff80217881:	4d 8b 3f             	mov    (%r15),%r15
ffffffff80217884:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80217888:	0f 85 ba 00 00 00    	jne    ffffffff80217948 <caml_ephemeron_get_data+0x1c8>
ffffffff8021788e:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217891:	e8 8a 8b ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217896:	a8 07                	test   $0x7,%al
ffffffff80217898:	0f 84 aa 00 00 00    	je     ffffffff80217948 <caml_ephemeron_get_data+0x1c8>
ffffffff8021789e:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff802178a3:	8d 70 0a             	lea    0xa(%rax),%esi
ffffffff802178a6:	81 e6 fb 00 00 00    	and    $0xfb,%esi
ffffffff802178ac:	0f 84 96 00 00 00    	je     ffffffff80217948 <caml_ephemeron_get_data+0x1c8>
ffffffff802178b2:	3c fd                	cmp    $0xfd,%al
ffffffff802178b4:	0f 84 8e 00 00 00    	je     ffffffff80217948 <caml_ephemeron_get_data+0x1c8>
ffffffff802178ba:	4d 89 7d 00          	mov    %r15,0x0(%r13)
ffffffff802178be:	4c 3b 3d e3 46 02 00 	cmp    0x246e3(%rip),%r15        # ffffffff8023bfa8 <caml_young_end>
ffffffff802178c5:	73 8b                	jae    ffffffff80217852 <caml_ephemeron_get_data+0xd2>
ffffffff802178c7:	4c 3b 3d e2 46 02 00 	cmp    0x246e2(%rip),%r15        # ffffffff8023bfb0 <caml_young_start>
ffffffff802178ce:	76 82                	jbe    ffffffff80217852 <caml_ephemeron_get_data+0xd2>
ffffffff802178d0:	48 8b 05 41 46 02 00 	mov    0x24641(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff802178d7:	48 3b 05 42 46 02 00 	cmp    0x24642(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff802178de:	0f 82 5c ff ff ff    	jb     ffffffff80217840 <caml_ephemeron_get_data+0xc0>
ffffffff802178e4:	48 8d 3d 15 46 02 00 	lea    0x24615(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff802178eb:	e8 c0 a8 ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff802178f0:	48 8b 05 21 46 02 00 	mov    0x24621(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff802178f7:	e9 44 ff ff ff       	jmpq   ffffffff80217840 <caml_ephemeron_get_data+0xc0>
ffffffff802178fc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80217900:	4c 89 f8             	mov    %r15,%rax
ffffffff80217903:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80217908:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8021790c:	48 39 6c 24 10       	cmp    %rbp,0x10(%rsp)
ffffffff80217911:	0f 85 09 ff ff ff    	jne    ffffffff80217820 <caml_ephemeron_get_data+0xa0>
ffffffff80217917:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
ffffffff8021791b:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
ffffffff8021791f:	85 d2                	test   %edx,%edx
ffffffff80217921:	0f 84 83 fe ff ff    	je     ffffffff802177aa <caml_ephemeron_get_data+0x2a>
ffffffff80217927:	48 39 c5             	cmp    %rax,%rbp
ffffffff8021792a:	0f 84 7a fe ff ff    	je     ffffffff802177aa <caml_ephemeron_get_data+0x2a>
ffffffff80217930:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff80217934:	48 89 c5             	mov    %rax,%rbp
ffffffff80217937:	48 8b 05 8a 44 01 00 	mov    0x1448a(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021793e:	e9 67 fe ff ff       	jmpq   ffffffff802177aa <caml_ephemeron_get_data+0x2a>
ffffffff80217943:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80217948:	48 8b 05 79 44 01 00 	mov    0x14479(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021794f:	49 f7 04 24 00 03 00 	testq  $0x300,(%r12)
ffffffff80217956:	00 
ffffffff80217957:	75 af                	jne    ffffffff80217908 <caml_ephemeron_get_data+0x188>
ffffffff80217959:	4c 3b 35 48 46 02 00 	cmp    0x24648(%rip),%r14        # ffffffff8023bfa8 <caml_young_end>
ffffffff80217960:	73 09                	jae    ffffffff8021796b <caml_ephemeron_get_data+0x1eb>
ffffffff80217962:	4c 3b 35 47 46 02 00 	cmp    0x24647(%rip),%r14        # ffffffff8023bfb0 <caml_young_start>
ffffffff80217969:	77 9d                	ja     ffffffff80217908 <caml_ephemeron_get_data+0x188>
ffffffff8021796b:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff8021796f:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80217973:	48 8b 05 4e 44 01 00 	mov    0x1444e(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021797a:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%rsp)
ffffffff80217981:	00 
ffffffff80217982:	48 39 6c 24 10       	cmp    %rbp,0x10(%rsp)
ffffffff80217987:	0f 85 93 fe ff ff    	jne    ffffffff80217820 <caml_ephemeron_get_data+0xa0>
ffffffff8021798d:	eb 88                	jmp    ffffffff80217917 <caml_ephemeron_get_data+0x197>
ffffffff8021798f:	90                   	nop
ffffffff80217990:	48 89 ef             	mov    %rbp,%rdi
ffffffff80217993:	e8 88 8a ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217998:	a8 01                	test   $0x1,%al
ffffffff8021799a:	0f 84 26 fe ff ff    	je     ffffffff802177c6 <caml_ephemeron_get_data+0x46>
ffffffff802179a0:	31 f6                	xor    %esi,%esi
ffffffff802179a2:	48 89 ef             	mov    %rbp,%rdi
ffffffff802179a5:	e8 36 70 ff ff       	callq  ffffffff8020e9e0 <caml_darken>
ffffffff802179aa:	e9 17 fe ff ff       	jmpq   ffffffff802177c6 <caml_ephemeron_get_data+0x46>
ffffffff802179af:	90                   	nop
ffffffff802179b0:	48 8b 05 11 44 01 00 	mov    0x14411(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802179b7:	48 83 c5 01          	add    $0x1,%rbp
ffffffff802179bb:	48 39 6c 24 10       	cmp    %rbp,0x10(%rsp)
ffffffff802179c0:	0f 85 5a fe ff ff    	jne    ffffffff80217820 <caml_ephemeron_get_data+0xa0>
ffffffff802179c6:	e9 4c ff ff ff       	jmpq   ffffffff80217917 <caml_ephemeron_get_data+0x197>
ffffffff802179cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802179d0:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
ffffffff802179d4:	45 31 c0             	xor    %r8d,%r8d
ffffffff802179d7:	48 39 c5             	cmp    %rax,%rbp
ffffffff802179da:	0f 85 e6 fd ff ff    	jne    ffffffff802177c6 <caml_ephemeron_get_data+0x46>
ffffffff802179e0:	e9 ef fd ff ff       	jmpq   ffffffff802177d4 <caml_ephemeron_get_data+0x54>
ffffffff802179e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802179ec:	00 00 00 00 

ffffffff802179f0 <caml_ephe_get_data>:
ffffffff802179f0:	55                   	push   %rbp
ffffffff802179f1:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802179f5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff802179fc:	00 00 
ffffffff802179fe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80217a03:	31 c0                	xor    %eax,%eax
ffffffff80217a05:	48 89 e5             	mov    %rsp,%rbp
ffffffff80217a08:	48 89 ee             	mov    %rbp,%rsi
ffffffff80217a0b:	e8 70 fd ff ff       	callq  ffffffff80217780 <caml_ephemeron_get_data>
ffffffff80217a10:	48 89 ee             	mov    %rbp,%rsi
ffffffff80217a13:	89 c7                	mov    %eax,%edi
ffffffff80217a15:	e8 b6 f2 ff ff       	callq  ffffffff80216cd0 <optionalize>
ffffffff80217a1a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80217a1f:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff80217a26:	00 00 
ffffffff80217a28:	75 06                	jne    ffffffff80217a30 <caml_ephe_get_data+0x40>
ffffffff80217a2a:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80217a2e:	5d                   	pop    %rbp
ffffffff80217a2f:	c3                   	retq   
ffffffff80217a30:	e8 6b 86 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80217a35:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80217a3c:	00 00 00 00 

ffffffff80217a40 <caml_ephemeron_get_key_copy>:
ffffffff80217a40:	41 57                	push   %r15
ffffffff80217a42:	41 56                	push   %r14
ffffffff80217a44:	41 55                	push   %r13
ffffffff80217a46:	4c 8d 2c f5 10 00 00 	lea    0x10(,%rsi,8),%r13
ffffffff80217a4d:	00 
ffffffff80217a4e:	41 54                	push   %r12
ffffffff80217a50:	4e 8d 34 2f          	lea    (%rdi,%r13,1),%r14
ffffffff80217a54:	55                   	push   %rbp
ffffffff80217a55:	53                   	push   %rbx
ffffffff80217a56:	48 83 ec 78          	sub    $0x78,%rsp
ffffffff80217a5a:	4c 8b 3d 17 c6 02 00 	mov    0x2c617(%rip),%r15        # ffffffff80244078 <caml_local_roots>
ffffffff80217a61:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff80217a66:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
ffffffff80217a6b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80217a72:	00 00 
ffffffff80217a74:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffff80217a79:	31 c0                	xor    %eax,%eax
ffffffff80217a7b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff80217a80:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
ffffffff80217a85:	48 89 05 ec c5 02 00 	mov    %rax,0x2c5ec(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80217a8c:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff80217a91:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff80217a98:	00 00 
ffffffff80217a9a:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff80217aa1:	00 00 
ffffffff80217aa3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff80217aa8:	49 8b 16             	mov    (%r14),%rdx
ffffffff80217aab:	48 3b 15 16 43 01 00 	cmp    0x14316(%rip),%rdx        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217ab2:	0f 84 eb 00 00 00    	je     ffffffff80217ba3 <caml_ephemeron_get_key_copy+0x163>
ffffffff80217ab8:	48 89 fd             	mov    %rdi,%rbp
ffffffff80217abb:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff80217ac0:	45 31 e4             	xor    %r12d,%r12d
ffffffff80217ac3:	eb 31                	jmp    ffffffff80217af6 <caml_ephemeron_get_key_copy+0xb6>
ffffffff80217ac5:	0f 1f 00             	nopl   (%rax)
ffffffff80217ac8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80217acc:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff80217ad0:	e8 fb 0f 00 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff80217ad5:	48 89 c3             	mov    %rax,%rbx
ffffffff80217ad8:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
ffffffff80217add:	49 83 c4 01          	add    $0x1,%r12
ffffffff80217ae1:	4e 8d 74 2d 00       	lea    0x0(%rbp,%r13,1),%r14
ffffffff80217ae6:	49 8b 16             	mov    (%r14),%rdx
ffffffff80217ae9:	48 3b 15 d8 42 01 00 	cmp    0x142d8(%rip),%rdx        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217af0:	0f 84 ad 00 00 00    	je     ffffffff80217ba3 <caml_ephemeron_get_key_copy+0x163>
ffffffff80217af6:	83 3d a3 42 02 00 01 	cmpl   $0x1,0x242a3(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80217afd:	74 71                	je     ffffffff80217b70 <caml_ephemeron_get_key_copy+0x130>
ffffffff80217aff:	4a 8b 6c 2d 00       	mov    0x0(%rbp,%r13,1),%rbp
ffffffff80217b04:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff80217b08:	0f 85 ba 00 00 00    	jne    ffffffff80217bc8 <caml_ephemeron_get_key_copy+0x188>
ffffffff80217b0e:	48 89 ef             	mov    %rbp,%rdi
ffffffff80217b11:	e8 0a 89 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217b16:	a8 03                	test   $0x3,%al
ffffffff80217b18:	0f 84 7a 01 00 00    	je     ffffffff80217c98 <caml_ephemeron_get_key_copy+0x258>
ffffffff80217b1e:	0f b6 75 f8          	movzbl -0x8(%rbp),%esi
ffffffff80217b22:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
ffffffff80217b26:	40 80 fe ff          	cmp    $0xff,%sil
ffffffff80217b2a:	0f 84 68 01 00 00    	je     ffffffff80217c98 <caml_ephemeron_get_key_copy+0x258>
ffffffff80217b30:	48 83 fb 01          	cmp    $0x1,%rbx
ffffffff80217b34:	74 19                	je     ffffffff80217b4f <caml_ephemeron_get_key_copy+0x10f>
ffffffff80217b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80217b3a:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
ffffffff80217b3e:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80217b42:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80217b46:	48 39 d0             	cmp    %rdx,%rax
ffffffff80217b49:	0f 84 b1 00 00 00    	je     ffffffff80217c00 <caml_ephemeron_get_key_copy+0x1c0>
ffffffff80217b4f:	49 83 fc 08          	cmp    $0x8,%r12
ffffffff80217b53:	0f 85 6f ff ff ff    	jne    ffffffff80217ac8 <caml_ephemeron_get_key_copy+0x88>
ffffffff80217b59:	e8 32 c8 ff ff       	callq  ffffffff80214390 <caml_request_minor_gc>
ffffffff80217b5e:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff80217b63:	e8 58 a4 ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff80217b68:	e9 6b ff ff ff       	jmpq   ffffffff80217ad8 <caml_ephemeron_get_key_copy+0x98>
ffffffff80217b6d:	0f 1f 00             	nopl   (%rax)
ffffffff80217b70:	f6 c2 01             	test   $0x1,%dl
ffffffff80217b73:	75 8a                	jne    ffffffff80217aff <caml_ephemeron_get_key_copy+0xbf>
ffffffff80217b75:	48 89 d7             	mov    %rdx,%rdi
ffffffff80217b78:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff80217b7d:	e8 9e 88 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217b82:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80217b87:	a8 01                	test   $0x1,%al
ffffffff80217b89:	74 25                	je     ffffffff80217bb0 <caml_ephemeron_get_key_copy+0x170>
ffffffff80217b8b:	48 f7 42 f8 00 03 00 	testq  $0x300,-0x8(%rdx)
ffffffff80217b92:	00 
ffffffff80217b93:	75 1b                	jne    ffffffff80217bb0 <caml_ephemeron_get_key_copy+0x170>
ffffffff80217b95:	48 8b 05 2c 42 01 00 	mov    0x1422c(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217b9c:	49 89 06             	mov    %rax,(%r14)
ffffffff80217b9f:	48 89 45 08          	mov    %rax,0x8(%rbp)
ffffffff80217ba3:	4c 89 3d ce c4 02 00 	mov    %r15,0x2c4ce(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80217baa:	31 c0                	xor    %eax,%eax
ffffffff80217bac:	eb 2e                	jmp    ffffffff80217bdc <caml_ephemeron_get_key_copy+0x19c>
ffffffff80217bae:	66 90                	xchg   %ax,%ax
ffffffff80217bb0:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
ffffffff80217bb5:	4a 8b 6c 2d 00       	mov    0x0(%rbp,%r13,1),%rbp
ffffffff80217bba:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff80217bbe:	0f 84 4a ff ff ff    	je     ffffffff80217b0e <caml_ephemeron_get_key_copy+0xce>
ffffffff80217bc4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80217bc8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80217bcd:	48 89 28             	mov    %rbp,(%rax)
ffffffff80217bd0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80217bd5:	4c 89 3d 9c c4 02 00 	mov    %r15,0x2c49c(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80217bdc:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
ffffffff80217be1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80217be8:	00 00 
ffffffff80217bea:	0f 85 01 01 00 00    	jne    ffffffff80217cf1 <caml_ephemeron_get_key_copy+0x2b1>
ffffffff80217bf0:	48 83 c4 78          	add    $0x78,%rsp
ffffffff80217bf4:	5b                   	pop    %rbx
ffffffff80217bf5:	5d                   	pop    %rbp
ffffffff80217bf6:	41 5c                	pop    %r12
ffffffff80217bf8:	41 5d                	pop    %r13
ffffffff80217bfa:	41 5e                	pop    %r14
ffffffff80217bfc:	41 5f                	pop    %r15
ffffffff80217bfe:	c3                   	retq   
ffffffff80217bff:	90                   	nop
ffffffff80217c00:	40 3a 73 f8          	cmp    -0x8(%rbx),%sil
ffffffff80217c04:	0f 85 45 ff ff ff    	jne    ffffffff80217b4f <caml_ephemeron_get_key_copy+0x10f>
ffffffff80217c0a:	40 80 fe fa          	cmp    $0xfa,%sil
ffffffff80217c0e:	0f 87 b1 00 00 00    	ja     ffffffff80217cc5 <caml_ephemeron_get_key_copy+0x285>
ffffffff80217c14:	49 89 dc             	mov    %rbx,%r12
ffffffff80217c17:	45 31 ed             	xor    %r13d,%r13d
ffffffff80217c1a:	49 29 ec             	sub    %rbp,%r12
ffffffff80217c1d:	48 85 c0             	test   %rax,%rax
ffffffff80217c20:	75 38                	jne    ffffffff80217c5a <caml_ephemeron_get_key_copy+0x21a>
ffffffff80217c22:	e9 b1 00 00 00       	jmpq   ffffffff80217cd8 <caml_ephemeron_get_key_copy+0x298>
ffffffff80217c27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80217c2e:	00 00 
ffffffff80217c30:	49 8d 3c 2c          	lea    (%r12,%rbp,1),%rdi
ffffffff80217c34:	4c 89 f6             	mov    %r14,%rsi
ffffffff80217c37:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
ffffffff80217c3c:	49 83 c5 01          	add    $0x1,%r13
ffffffff80217c40:	e8 1b 8a ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff80217c45:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80217c4a:	48 83 c5 08          	add    $0x8,%rbp
ffffffff80217c4e:	48 8b 01             	mov    (%rcx),%rax
ffffffff80217c51:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80217c55:	49 39 c5             	cmp    %rax,%r13
ffffffff80217c58:	73 7e                	jae    ffffffff80217cd8 <caml_ephemeron_get_key_copy+0x298>
ffffffff80217c5a:	8b 05 40 41 02 00    	mov    0x24140(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80217c60:	4c 8b 75 00          	mov    0x0(%rbp),%r14
ffffffff80217c64:	85 c0                	test   %eax,%eax
ffffffff80217c66:	75 c8                	jne    ffffffff80217c30 <caml_ephemeron_get_key_copy+0x1f0>
ffffffff80217c68:	41 f6 c6 01          	test   $0x1,%r14b
ffffffff80217c6c:	75 c2                	jne    ffffffff80217c30 <caml_ephemeron_get_key_copy+0x1f0>
ffffffff80217c6e:	4c 89 f7             	mov    %r14,%rdi
ffffffff80217c71:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
ffffffff80217c76:	e8 a5 87 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217c7b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80217c80:	a8 01                	test   $0x1,%al
ffffffff80217c82:	74 ac                	je     ffffffff80217c30 <caml_ephemeron_get_key_copy+0x1f0>
ffffffff80217c84:	31 f6                	xor    %esi,%esi
ffffffff80217c86:	4c 89 f7             	mov    %r14,%rdi
ffffffff80217c89:	e8 52 6d ff ff       	callq  ffffffff8020e9e0 <caml_darken>
ffffffff80217c8e:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80217c93:	eb 9b                	jmp    ffffffff80217c30 <caml_ephemeron_get_key_copy+0x1f0>
ffffffff80217c95:	0f 1f 00             	nopl   (%rax)
ffffffff80217c98:	8b 15 02 41 02 00    	mov    0x24102(%rip),%edx        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80217c9e:	85 d2                	test   %edx,%edx
ffffffff80217ca0:	0f 85 22 ff ff ff    	jne    ffffffff80217bc8 <caml_ephemeron_get_key_copy+0x188>
ffffffff80217ca6:	48 89 ef             	mov    %rbp,%rdi
ffffffff80217ca9:	e8 72 87 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217cae:	a8 01                	test   $0x1,%al
ffffffff80217cb0:	0f 84 12 ff ff ff    	je     ffffffff80217bc8 <caml_ephemeron_get_key_copy+0x188>
ffffffff80217cb6:	31 f6                	xor    %esi,%esi
ffffffff80217cb8:	48 89 ef             	mov    %rbp,%rdi
ffffffff80217cbb:	e8 20 6d ff ff       	callq  ffffffff8020e9e0 <caml_darken>
ffffffff80217cc0:	e9 03 ff ff ff       	jmpq   ffffffff80217bc8 <caml_ephemeron_get_key_copy+0x188>
ffffffff80217cc5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80217ccc:	00 
ffffffff80217ccd:	48 89 ee             	mov    %rbp,%rsi
ffffffff80217cd0:	48 89 df             	mov    %rbx,%rdi
ffffffff80217cd3:	e8 cd 83 fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff80217cd8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80217cdd:	48 89 18             	mov    %rbx,(%rax)
ffffffff80217ce0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80217ce5:	4c 89 3d 8c c3 02 00 	mov    %r15,0x2c38c(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80217cec:	e9 eb fe ff ff       	jmpq   ffffffff80217bdc <caml_ephemeron_get_key_copy+0x19c>
ffffffff80217cf1:	e8 aa 83 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80217cf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80217cfd:	00 00 00 

ffffffff80217d00 <caml_ephe_get_key_copy>:
ffffffff80217d00:	55                   	push   %rbp
ffffffff80217d01:	48 d1 fe             	sar    %rsi
ffffffff80217d04:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80217d08:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80217d0f:	00 00 
ffffffff80217d11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80217d16:	31 c0                	xor    %eax,%eax
ffffffff80217d18:	48 89 e5             	mov    %rsp,%rbp
ffffffff80217d1b:	48 89 ea             	mov    %rbp,%rdx
ffffffff80217d1e:	e8 1d fd ff ff       	callq  ffffffff80217a40 <caml_ephemeron_get_key_copy>
ffffffff80217d23:	48 89 ee             	mov    %rbp,%rsi
ffffffff80217d26:	89 c7                	mov    %eax,%edi
ffffffff80217d28:	e8 a3 ef ff ff       	callq  ffffffff80216cd0 <optionalize>
ffffffff80217d2d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80217d32:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff80217d39:	00 00 
ffffffff80217d3b:	75 06                	jne    ffffffff80217d43 <caml_ephe_get_key_copy+0x43>
ffffffff80217d3d:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80217d41:	5d                   	pop    %rbp
ffffffff80217d42:	c3                   	retq   
ffffffff80217d43:	e8 58 83 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80217d48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80217d4f:	00 

ffffffff80217d50 <caml_weak_get_copy>:
ffffffff80217d50:	eb ae                	jmp    ffffffff80217d00 <caml_ephe_get_key_copy>
ffffffff80217d52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80217d59:	00 00 00 00 
ffffffff80217d5d:	0f 1f 00             	nopl   (%rax)

ffffffff80217d60 <caml_ephemeron_get_data_copy>:
ffffffff80217d60:	41 57                	push   %r15
ffffffff80217d62:	41 56                	push   %r14
ffffffff80217d64:	45 31 f6             	xor    %r14d,%r14d
ffffffff80217d67:	41 55                	push   %r13
ffffffff80217d69:	41 54                	push   %r12
ffffffff80217d6b:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff80217d71:	55                   	push   %rbp
ffffffff80217d72:	53                   	push   %rbx
ffffffff80217d73:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
ffffffff80217d7a:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
ffffffff80217d7f:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
ffffffff80217d84:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80217d8b:	00 00 
ffffffff80217d8d:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff80217d94:	00 
ffffffff80217d95:	31 c0                	xor    %eax,%eax
ffffffff80217d97:	48 8b 05 da c2 02 00 	mov    0x2c2da(%rip),%rax        # ffffffff80244078 <caml_local_roots>
ffffffff80217d9e:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
ffffffff80217da5:	00 00 
ffffffff80217da7:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
ffffffff80217dae:	00 00 
ffffffff80217db0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80217db5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffff80217dba:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
ffffffff80217dbf:	48 89 05 b2 c2 02 00 	mov    %rax,0x2c2b2(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80217dc6:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
ffffffff80217dcb:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff80217dd0:	eb 1a                	jmp    ffffffff80217dec <caml_ephemeron_get_data_copy+0x8c>
ffffffff80217dd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80217dd8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80217ddc:	48 c1 ef 0a          	shr    $0xa,%rdi
ffffffff80217de0:	e8 eb 0c 00 00       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff80217de5:	49 89 c4             	mov    %rax,%r12
ffffffff80217de8:	49 83 c6 01          	add    $0x1,%r14
ffffffff80217dec:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
ffffffff80217df1:	83 3d a8 3f 02 00 01 	cmpl   $0x1,0x23fa8(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80217df8:	48 8b 05 c9 3f 01 00 	mov    0x13fc9(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217dff:	48 89 ea             	mov    %rbp,%rdx
ffffffff80217e02:	0f 84 f8 00 00 00    	je     ffffffff80217f00 <caml_ephemeron_get_data_copy+0x1a0>
ffffffff80217e08:	48 8b 6a 08          	mov    0x8(%rdx),%rbp
ffffffff80217e0c:	48 39 c5             	cmp    %rax,%rbp
ffffffff80217e0f:	0f 84 6b 02 00 00    	je     ffffffff80218080 <caml_ephemeron_get_data_copy+0x320>
ffffffff80217e15:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff80217e19:	0f 85 e1 02 00 00    	jne    ffffffff80218100 <caml_ephemeron_get_data_copy+0x3a0>
ffffffff80217e1f:	48 89 ef             	mov    %rbp,%rdi
ffffffff80217e22:	e8 f9 85 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217e27:	a8 03                	test   $0x3,%al
ffffffff80217e29:	0f 84 a9 02 00 00    	je     ffffffff802180d8 <caml_ephemeron_get_data_copy+0x378>
ffffffff80217e2f:	0f b6 75 f8          	movzbl -0x8(%rbp),%esi
ffffffff80217e33:	48 8d 5d f8          	lea    -0x8(%rbp),%rbx
ffffffff80217e37:	40 80 fe ff          	cmp    $0xff,%sil
ffffffff80217e3b:	0f 84 97 02 00 00    	je     ffffffff802180d8 <caml_ephemeron_get_data_copy+0x378>
ffffffff80217e41:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80217e45:	74 16                	je     ffffffff80217e5d <caml_ephemeron_get_data_copy+0xfd>
ffffffff80217e47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80217e4b:	49 8b 54 24 f8       	mov    -0x8(%r12),%rdx
ffffffff80217e50:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80217e54:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80217e58:	48 39 d0             	cmp    %rdx,%rax
ffffffff80217e5b:	74 23                	je     ffffffff80217e80 <caml_ephemeron_get_data_copy+0x120>
ffffffff80217e5d:	49 83 fe 08          	cmp    $0x8,%r14
ffffffff80217e61:	0f 85 71 ff ff ff    	jne    ffffffff80217dd8 <caml_ephemeron_get_data_copy+0x78>
ffffffff80217e67:	e8 24 c5 ff ff       	callq  ffffffff80214390 <caml_request_minor_gc>
ffffffff80217e6c:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff80217e72:	e8 49 a1 ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff80217e77:	e9 6c ff ff ff       	jmpq   ffffffff80217de8 <caml_ephemeron_get_data_copy+0x88>
ffffffff80217e7c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80217e80:	41 3a 74 24 f8       	cmp    -0x8(%r12),%sil
ffffffff80217e85:	75 d6                	jne    ffffffff80217e5d <caml_ephemeron_get_data_copy+0xfd>
ffffffff80217e87:	40 80 fe fa          	cmp    $0xfa,%sil
ffffffff80217e8b:	0f 87 ad 02 00 00    	ja     ffffffff8021813e <caml_ephemeron_get_data_copy+0x3de>
ffffffff80217e91:	4d 89 e5             	mov    %r12,%r13
ffffffff80217e94:	45 31 f6             	xor    %r14d,%r14d
ffffffff80217e97:	49 29 ed             	sub    %rbp,%r13
ffffffff80217e9a:	48 85 c0             	test   %rax,%rax
ffffffff80217e9d:	75 2e                	jne    ffffffff80217ecd <caml_ephemeron_get_data_copy+0x16d>
ffffffff80217e9f:	e9 ad 02 00 00       	jmpq   ffffffff80218151 <caml_ephemeron_get_data_copy+0x3f1>
ffffffff80217ea4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80217ea8:	49 8d 7c 2d 00       	lea    0x0(%r13,%rbp,1),%rdi
ffffffff80217ead:	4c 89 fe             	mov    %r15,%rsi
ffffffff80217eb0:	49 83 c6 01          	add    $0x1,%r14
ffffffff80217eb4:	48 83 c5 08          	add    $0x8,%rbp
ffffffff80217eb8:	e8 a3 87 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff80217ebd:	48 8b 03             	mov    (%rbx),%rax
ffffffff80217ec0:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80217ec4:	49 39 c6             	cmp    %rax,%r14
ffffffff80217ec7:	0f 83 84 02 00 00    	jae    ffffffff80218151 <caml_ephemeron_get_data_copy+0x3f1>
ffffffff80217ecd:	8b 05 cd 3e 02 00    	mov    0x23ecd(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80217ed3:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
ffffffff80217ed7:	85 c0                	test   %eax,%eax
ffffffff80217ed9:	75 cd                	jne    ffffffff80217ea8 <caml_ephemeron_get_data_copy+0x148>
ffffffff80217edb:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80217edf:	75 c7                	jne    ffffffff80217ea8 <caml_ephemeron_get_data_copy+0x148>
ffffffff80217ee1:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217ee4:	e8 37 85 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217ee9:	a8 01                	test   $0x1,%al
ffffffff80217eeb:	74 bb                	je     ffffffff80217ea8 <caml_ephemeron_get_data_copy+0x148>
ffffffff80217eed:	31 f6                	xor    %esi,%esi
ffffffff80217eef:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217ef2:	e8 e9 6a ff ff       	callq  ffffffff8020e9e0 <caml_darken>
ffffffff80217ef7:	eb af                	jmp    ffffffff80217ea8 <caml_ephemeron_get_data_copy+0x148>
ffffffff80217ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80217f00:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80217f04:	48 89 cb             	mov    %rcx,%rbx
ffffffff80217f07:	48 c1 eb 0a          	shr    $0xa,%rbx
ffffffff80217f0b:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff80217f10:	48 81 f9 ff 0b 00 00 	cmp    $0xbff,%rcx
ffffffff80217f17:	0f 86 eb fe ff ff    	jbe    ffffffff80217e08 <caml_ephemeron_get_data_copy+0xa8>
ffffffff80217f1d:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
ffffffff80217f24:	00 
ffffffff80217f25:	bb 02 00 00 00       	mov    $0x2,%ebx
ffffffff80217f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80217f30:	4c 8d 6c dd 00       	lea    0x0(%rbp,%rbx,8),%r13
ffffffff80217f35:	4d 8b 7d 00          	mov    0x0(%r13),%r15
ffffffff80217f39:	49 39 c7             	cmp    %rax,%r15
ffffffff80217f3c:	0f 84 00 01 00 00    	je     ffffffff80218042 <caml_ephemeron_get_data_copy+0x2e2>
ffffffff80217f42:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80217f46:	74 27                	je     ffffffff80217f6f <caml_ephemeron_get_data_copy+0x20f>
ffffffff80217f48:	e9 f5 00 00 00       	jmpq   ffffffff80218042 <caml_ephemeron_get_data_copy+0x2e2>
ffffffff80217f4d:	0f 1f 00             	nopl   (%rax)
ffffffff80217f50:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff80217f54:	48 89 0d bd 3f 02 00 	mov    %rcx,0x23fbd(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80217f5b:	48 89 28             	mov    %rbp,(%rax)
ffffffff80217f5e:	48 89 58 08          	mov    %rbx,0x8(%rax)
ffffffff80217f62:	4c 39 3d 5f 3e 01 00 	cmp    %r15,0x13e5f(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80217f69:	0f 84 41 01 00 00    	je     ffffffff802180b0 <caml_ephemeron_get_data_copy+0x350>
ffffffff80217f6f:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217f72:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
ffffffff80217f77:	e8 a4 84 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217f7c:	a8 03                	test   $0x3,%al
ffffffff80217f7e:	0f 84 14 01 00 00    	je     ffffffff80218098 <caml_ephemeron_get_data_copy+0x338>
ffffffff80217f84:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
ffffffff80217f89:	49 8d 4f f8          	lea    -0x8(%r15),%rcx
ffffffff80217f8d:	75 79                	jne    ffffffff80218008 <caml_ephemeron_get_data_copy+0x2a8>
ffffffff80217f8f:	4d 8b 3f             	mov    (%r15),%r15
ffffffff80217f92:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff80217f96:	75 70                	jne    ffffffff80218008 <caml_ephemeron_get_data_copy+0x2a8>
ffffffff80217f98:	4c 89 ff             	mov    %r15,%rdi
ffffffff80217f9b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
ffffffff80217fa0:	e8 7b 84 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80217fa5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80217faa:	a8 07                	test   $0x7,%al
ffffffff80217fac:	74 5a                	je     ffffffff80218008 <caml_ephemeron_get_data_copy+0x2a8>
ffffffff80217fae:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff80217fb3:	8d 70 0a             	lea    0xa(%rax),%esi
ffffffff80217fb6:	81 e6 fb 00 00 00    	and    $0xfb,%esi
ffffffff80217fbc:	74 4a                	je     ffffffff80218008 <caml_ephemeron_get_data_copy+0x2a8>
ffffffff80217fbe:	3c fd                	cmp    $0xfd,%al
ffffffff80217fc0:	74 46                	je     ffffffff80218008 <caml_ephemeron_get_data_copy+0x2a8>
ffffffff80217fc2:	4d 89 7d 00          	mov    %r15,0x0(%r13)
ffffffff80217fc6:	4c 3b 3d db 3f 02 00 	cmp    0x23fdb(%rip),%r15        # ffffffff8023bfa8 <caml_young_end>
ffffffff80217fcd:	73 93                	jae    ffffffff80217f62 <caml_ephemeron_get_data_copy+0x202>
ffffffff80217fcf:	4c 3b 3d da 3f 02 00 	cmp    0x23fda(%rip),%r15        # ffffffff8023bfb0 <caml_young_start>
ffffffff80217fd6:	76 8a                	jbe    ffffffff80217f62 <caml_ephemeron_get_data_copy+0x202>
ffffffff80217fd8:	48 8b 05 39 3f 02 00 	mov    0x23f39(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80217fdf:	48 3b 05 3a 3f 02 00 	cmp    0x23f3a(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff80217fe6:	0f 82 64 ff ff ff    	jb     ffffffff80217f50 <caml_ephemeron_get_data_copy+0x1f0>
ffffffff80217fec:	48 8d 3d 0d 3f 02 00 	lea    0x23f0d(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80217ff3:	e8 b8 a1 ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff80217ff8:	48 8b 05 19 3f 02 00 	mov    0x23f19(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80217fff:	e9 4c ff ff ff       	jmpq   ffffffff80217f50 <caml_ephemeron_get_data_copy+0x1f0>
ffffffff80218004:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218008:	48 8b 05 b9 3d 01 00 	mov    0x13db9(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021800f:	48 f7 01 00 03 00 00 	testq  $0x300,(%rcx)
ffffffff80218016:	75 2a                	jne    ffffffff80218042 <caml_ephemeron_get_data_copy+0x2e2>
ffffffff80218018:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
ffffffff8021801d:	48 3b 0d 84 3f 02 00 	cmp    0x23f84(%rip),%rcx        # ffffffff8023bfa8 <caml_young_end>
ffffffff80218024:	73 09                	jae    ffffffff8021802f <caml_ephemeron_get_data_copy+0x2cf>
ffffffff80218026:	48 3b 0d 83 3f 02 00 	cmp    0x23f83(%rip),%rcx        # ffffffff8023bfb0 <caml_young_start>
ffffffff8021802d:	77 13                	ja     ffffffff80218042 <caml_ephemeron_get_data_copy+0x2e2>
ffffffff8021802f:	c7 44 24 24 01 00 00 	movl   $0x1,0x24(%rsp)
ffffffff80218036:	00 
ffffffff80218037:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff8021803b:	48 8b 05 86 3d 01 00 	mov    0x13d86(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218042:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80218046:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff8021804b:	0f 85 df fe ff ff    	jne    ffffffff80217f30 <caml_ephemeron_get_data_copy+0x1d0>
ffffffff80218051:	48 39 45 08          	cmp    %rax,0x8(%rbp)
ffffffff80218055:	74 71                	je     ffffffff802180c8 <caml_ephemeron_get_data_copy+0x368>
ffffffff80218057:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
ffffffff8021805b:	85 c9                	test   %ecx,%ecx
ffffffff8021805d:	74 69                	je     ffffffff802180c8 <caml_ephemeron_get_data_copy+0x368>
ffffffff8021805f:	48 89 45 08          	mov    %rax,0x8(%rbp)
ffffffff80218063:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
ffffffff80218068:	48 8b 05 59 3d 01 00 	mov    0x13d59(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021806f:	48 8b 6a 08          	mov    0x8(%rdx),%rbp
ffffffff80218073:	48 39 c5             	cmp    %rax,%rbp
ffffffff80218076:	0f 85 99 fd ff ff    	jne    ffffffff80217e15 <caml_ephemeron_get_data_copy+0xb5>
ffffffff8021807c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218080:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff80218085:	48 89 05 ec bf 02 00 	mov    %rax,0x2bfec(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021808c:	31 c0                	xor    %eax,%eax
ffffffff8021808e:	e9 86 00 00 00       	jmpq   ffffffff80218119 <caml_ephemeron_get_data_copy+0x3b9>
ffffffff80218093:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80218098:	48 8b 05 29 3d 01 00 	mov    0x13d29(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021809f:	48 83 c3 01          	add    $0x1,%rbx
ffffffff802180a3:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff802180a8:	0f 85 82 fe ff ff    	jne    ffffffff80217f30 <caml_ephemeron_get_data_copy+0x1d0>
ffffffff802180ae:	eb a1                	jmp    ffffffff80218051 <caml_ephemeron_get_data_copy+0x2f1>
ffffffff802180b0:	4c 89 f8             	mov    %r15,%rax
ffffffff802180b3:	48 83 c3 01          	add    $0x1,%rbx
ffffffff802180b7:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff802180bc:	0f 85 6e fe ff ff    	jne    ffffffff80217f30 <caml_ephemeron_get_data_copy+0x1d0>
ffffffff802180c2:	eb 8d                	jmp    ffffffff80218051 <caml_ephemeron_get_data_copy+0x2f1>
ffffffff802180c4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802180c8:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
ffffffff802180cd:	e9 36 fd ff ff       	jmpq   ffffffff80217e08 <caml_ephemeron_get_data_copy+0xa8>
ffffffff802180d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802180d8:	8b 15 c2 3c 02 00    	mov    0x23cc2(%rip),%edx        # ffffffff8023bda0 <caml_gc_phase>
ffffffff802180de:	85 d2                	test   %edx,%edx
ffffffff802180e0:	75 1e                	jne    ffffffff80218100 <caml_ephemeron_get_data_copy+0x3a0>
ffffffff802180e2:	48 89 ef             	mov    %rbp,%rdi
ffffffff802180e5:	e8 36 83 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802180ea:	a8 01                	test   $0x1,%al
ffffffff802180ec:	74 12                	je     ffffffff80218100 <caml_ephemeron_get_data_copy+0x3a0>
ffffffff802180ee:	31 f6                	xor    %esi,%esi
ffffffff802180f0:	48 89 ef             	mov    %rbp,%rdi
ffffffff802180f3:	e8 e8 68 ff ff       	callq  ffffffff8020e9e0 <caml_darken>
ffffffff802180f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802180ff:	00 
ffffffff80218100:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
ffffffff80218105:	48 89 28             	mov    %rbp,(%rax)
ffffffff80218108:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021810d:	48 89 05 64 bf 02 00 	mov    %rax,0x2bf64(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80218114:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80218119:	48 8b 9c 24 88 00 00 	mov    0x88(%rsp),%rbx
ffffffff80218120:	00 
ffffffff80218121:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff80218128:	00 00 
ffffffff8021812a:	75 40                	jne    ffffffff8021816c <caml_ephemeron_get_data_copy+0x40c>
ffffffff8021812c:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
ffffffff80218133:	5b                   	pop    %rbx
ffffffff80218134:	5d                   	pop    %rbp
ffffffff80218135:	41 5c                	pop    %r12
ffffffff80218137:	41 5d                	pop    %r13
ffffffff80218139:	41 5e                	pop    %r14
ffffffff8021813b:	41 5f                	pop    %r15
ffffffff8021813d:	c3                   	retq   
ffffffff8021813e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
ffffffff80218145:	00 
ffffffff80218146:	48 89 ee             	mov    %rbp,%rsi
ffffffff80218149:	4c 89 e7             	mov    %r12,%rdi
ffffffff8021814c:	e8 54 7f fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff80218151:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
ffffffff80218156:	4c 89 20             	mov    %r12,(%rax)
ffffffff80218159:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021815e:	48 89 05 13 bf 02 00 	mov    %rax,0x2bf13(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80218165:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021816a:	eb ad                	jmp    ffffffff80218119 <caml_ephemeron_get_data_copy+0x3b9>
ffffffff8021816c:	e8 2f 7f fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80218171:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80218178:	00 00 00 00 
ffffffff8021817c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80218180 <caml_ephe_get_data_copy>:
ffffffff80218180:	55                   	push   %rbp
ffffffff80218181:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80218185:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021818c:	00 00 
ffffffff8021818e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80218193:	31 c0                	xor    %eax,%eax
ffffffff80218195:	48 89 e5             	mov    %rsp,%rbp
ffffffff80218198:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021819b:	e8 c0 fb ff ff       	callq  ffffffff80217d60 <caml_ephemeron_get_data_copy>
ffffffff802181a0:	48 89 ee             	mov    %rbp,%rsi
ffffffff802181a3:	89 c7                	mov    %eax,%edi
ffffffff802181a5:	e8 26 eb ff ff       	callq  ffffffff80216cd0 <optionalize>
ffffffff802181aa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff802181af:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff802181b6:	00 00 
ffffffff802181b8:	75 06                	jne    ffffffff802181c0 <caml_ephe_get_data_copy+0x40>
ffffffff802181ba:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802181be:	5d                   	pop    %rbp
ffffffff802181bf:	c3                   	retq   
ffffffff802181c0:	e8 db 7e fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802181c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802181cc:	00 00 00 00 

ffffffff802181d0 <caml_ephemeron_key_is_set>:
ffffffff802181d0:	41 55                	push   %r13
ffffffff802181d2:	4c 8d 6c f7 10       	lea    0x10(%rdi,%rsi,8),%r13
ffffffff802181d7:	41 54                	push   %r12
ffffffff802181d9:	45 31 e4             	xor    %r12d,%r12d
ffffffff802181dc:	55                   	push   %rbp
ffffffff802181dd:	53                   	push   %rbx
ffffffff802181de:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802181e2:	49 8b 6d 00          	mov    0x0(%r13),%rbp
ffffffff802181e6:	48 3b 2d db 3b 01 00 	cmp    0x13bdb(%rip),%rbp        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802181ed:	74 0f                	je     ffffffff802181fe <caml_ephemeron_key_is_set+0x2e>
ffffffff802181ef:	83 3d aa 3b 02 00 01 	cmpl   $0x1,0x23baa(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff802181f6:	74 18                	je     ffffffff80218210 <caml_ephemeron_key_is_set+0x40>
ffffffff802181f8:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff802181fe:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80218202:	44 89 e0             	mov    %r12d,%eax
ffffffff80218205:	5b                   	pop    %rbx
ffffffff80218206:	5d                   	pop    %rbp
ffffffff80218207:	41 5c                	pop    %r12
ffffffff80218209:	41 5d                	pop    %r13
ffffffff8021820b:	c3                   	retq   
ffffffff8021820c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218210:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff80218214:	75 e2                	jne    ffffffff802181f8 <caml_ephemeron_key_is_set+0x28>
ffffffff80218216:	48 89 fb             	mov    %rdi,%rbx
ffffffff80218219:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021821c:	e8 ff 81 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80218221:	a8 01                	test   $0x1,%al
ffffffff80218223:	74 d3                	je     ffffffff802181f8 <caml_ephemeron_key_is_set+0x28>
ffffffff80218225:	48 f7 45 f8 00 03 00 	testq  $0x300,-0x8(%rbp)
ffffffff8021822c:	00 
ffffffff8021822d:	75 c9                	jne    ffffffff802181f8 <caml_ephemeron_key_is_set+0x28>
ffffffff8021822f:	48 8b 05 92 3b 01 00 	mov    0x13b92(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218236:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff8021823a:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff8021823e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80218242:	44 89 e0             	mov    %r12d,%eax
ffffffff80218245:	5b                   	pop    %rbx
ffffffff80218246:	5d                   	pop    %rbp
ffffffff80218247:	41 5c                	pop    %r12
ffffffff80218249:	41 5d                	pop    %r13
ffffffff8021824b:	c3                   	retq   
ffffffff8021824c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80218250 <caml_ephe_check_key>:
ffffffff80218250:	41 55                	push   %r13
ffffffff80218252:	48 d1 fe             	sar    %rsi
ffffffff80218255:	41 54                	push   %r12
ffffffff80218257:	4c 8d 6c f7 10       	lea    0x10(%rdi,%rsi,8),%r13
ffffffff8021825c:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff80218262:	55                   	push   %rbp
ffffffff80218263:	53                   	push   %rbx
ffffffff80218264:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80218268:	49 8b 6d 00          	mov    0x0(%r13),%rbp
ffffffff8021826c:	48 3b 2d 55 3b 01 00 	cmp    0x13b55(%rip),%rbp        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218273:	74 0f                	je     ffffffff80218284 <caml_ephe_check_key+0x34>
ffffffff80218275:	83 3d 24 3b 02 00 01 	cmpl   $0x1,0x23b24(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8021827c:	74 1a                	je     ffffffff80218298 <caml_ephe_check_key+0x48>
ffffffff8021827e:	41 bc 03 00 00 00    	mov    $0x3,%r12d
ffffffff80218284:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80218288:	4c 89 e0             	mov    %r12,%rax
ffffffff8021828b:	5b                   	pop    %rbx
ffffffff8021828c:	5d                   	pop    %rbp
ffffffff8021828d:	41 5c                	pop    %r12
ffffffff8021828f:	41 5d                	pop    %r13
ffffffff80218291:	c3                   	retq   
ffffffff80218292:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80218298:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff8021829c:	75 e0                	jne    ffffffff8021827e <caml_ephe_check_key+0x2e>
ffffffff8021829e:	48 89 fb             	mov    %rdi,%rbx
ffffffff802182a1:	48 89 ef             	mov    %rbp,%rdi
ffffffff802182a4:	e8 77 81 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802182a9:	a8 01                	test   $0x1,%al
ffffffff802182ab:	74 d1                	je     ffffffff8021827e <caml_ephe_check_key+0x2e>
ffffffff802182ad:	48 f7 45 f8 00 03 00 	testq  $0x300,-0x8(%rbp)
ffffffff802182b4:	00 
ffffffff802182b5:	75 c7                	jne    ffffffff8021827e <caml_ephe_check_key+0x2e>
ffffffff802182b7:	48 8b 05 0a 3b 01 00 	mov    0x13b0a(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802182be:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff802182c2:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff802182c6:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802182ca:	4c 89 e0             	mov    %r12,%rax
ffffffff802182cd:	5b                   	pop    %rbx
ffffffff802182ce:	5d                   	pop    %rbp
ffffffff802182cf:	41 5c                	pop    %r12
ffffffff802182d1:	41 5d                	pop    %r13
ffffffff802182d3:	c3                   	retq   
ffffffff802182d4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802182db:	00 00 00 00 
ffffffff802182df:	90                   	nop

ffffffff802182e0 <caml_weak_check>:
ffffffff802182e0:	e9 6b ff ff ff       	jmpq   ffffffff80218250 <caml_ephe_check_key>
ffffffff802182e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802182ec:	00 00 00 00 

ffffffff802182f0 <caml_ephemeron_data_is_set>:
ffffffff802182f0:	41 57                	push   %r15
ffffffff802182f2:	41 56                	push   %r14
ffffffff802182f4:	41 55                	push   %r13
ffffffff802182f6:	41 54                	push   %r12
ffffffff802182f8:	55                   	push   %rbp
ffffffff802182f9:	53                   	push   %rbx
ffffffff802182fa:	48 89 fb             	mov    %rdi,%rbx
ffffffff802182fd:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80218301:	83 3d 98 3a 02 00 01 	cmpl   $0x1,0x23a98(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80218308:	48 8b 0d b9 3a 01 00 	mov    0x13ab9(%rip),%rcx        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021830f:	74 1f                	je     ffffffff80218330 <caml_ephemeron_data_is_set+0x40>
ffffffff80218311:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
ffffffff80218315:	0f 95 c0             	setne  %al
ffffffff80218318:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021831c:	0f b6 c0             	movzbl %al,%eax
ffffffff8021831f:	5b                   	pop    %rbx
ffffffff80218320:	5d                   	pop    %rbp
ffffffff80218321:	41 5c                	pop    %r12
ffffffff80218323:	41 5d                	pop    %r13
ffffffff80218325:	41 5e                	pop    %r14
ffffffff80218327:	41 5f                	pop    %r15
ffffffff80218329:	c3                   	retq   
ffffffff8021832a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80218330:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff80218334:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
ffffffff8021833b:	00 
ffffffff8021833c:	bd 02 00 00 00       	mov    $0x2,%ebp
ffffffff80218341:	48 89 c2             	mov    %rax,%rdx
ffffffff80218344:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80218348:	48 89 14 24          	mov    %rdx,(%rsp)
ffffffff8021834c:	48 3d ff 0b 00 00    	cmp    $0xbff,%rax
ffffffff80218352:	76 bd                	jbe    ffffffff80218311 <caml_ephemeron_data_is_set+0x21>
ffffffff80218354:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218358:	4c 8d 24 eb          	lea    (%rbx,%rbp,8),%r12
ffffffff8021835c:	4d 8b 34 24          	mov    (%r12),%r14
ffffffff80218360:	49 39 ce             	cmp    %rcx,%r14
ffffffff80218363:	0f 84 d7 00 00 00    	je     ffffffff80218440 <caml_ephemeron_data_is_set+0x150>
ffffffff80218369:	41 f6 c6 01          	test   $0x1,%r14b
ffffffff8021836d:	74 28                	je     ffffffff80218397 <caml_ephemeron_data_is_set+0xa7>
ffffffff8021836f:	e9 cc 00 00 00       	jmpq   ffffffff80218440 <caml_ephemeron_data_is_set+0x150>
ffffffff80218374:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218378:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff8021837c:	48 89 0d 95 3b 02 00 	mov    %rcx,0x23b95(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80218383:	48 89 18             	mov    %rbx,(%rax)
ffffffff80218386:	48 89 68 08          	mov    %rbp,0x8(%rax)
ffffffff8021838a:	4c 39 35 37 3a 01 00 	cmp    %r14,0x13a37(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218391:	0f 84 a1 00 00 00    	je     ffffffff80218438 <caml_ephemeron_data_is_set+0x148>
ffffffff80218397:	4c 89 f7             	mov    %r14,%rdi
ffffffff8021839a:	4d 89 f5             	mov    %r14,%r13
ffffffff8021839d:	e8 7e 80 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802183a2:	a8 03                	test   $0x3,%al
ffffffff802183a4:	0f 84 1e 01 00 00    	je     ffffffff802184c8 <caml_ephemeron_data_is_set+0x1d8>
ffffffff802183aa:	41 80 7e f8 fa       	cmpb   $0xfa,-0x8(%r14)
ffffffff802183af:	4d 8d 7e f8          	lea    -0x8(%r14),%r15
ffffffff802183b3:	0f 85 c7 00 00 00    	jne    ffffffff80218480 <caml_ephemeron_data_is_set+0x190>
ffffffff802183b9:	4d 8b 36             	mov    (%r14),%r14
ffffffff802183bc:	41 f6 c6 01          	test   $0x1,%r14b
ffffffff802183c0:	0f 85 ba 00 00 00    	jne    ffffffff80218480 <caml_ephemeron_data_is_set+0x190>
ffffffff802183c6:	4c 89 f7             	mov    %r14,%rdi
ffffffff802183c9:	e8 52 80 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802183ce:	a8 07                	test   $0x7,%al
ffffffff802183d0:	0f 84 aa 00 00 00    	je     ffffffff80218480 <caml_ephemeron_data_is_set+0x190>
ffffffff802183d6:	41 0f b6 46 f8       	movzbl -0x8(%r14),%eax
ffffffff802183db:	8d 48 0a             	lea    0xa(%rax),%ecx
ffffffff802183de:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
ffffffff802183e4:	0f 84 96 00 00 00    	je     ffffffff80218480 <caml_ephemeron_data_is_set+0x190>
ffffffff802183ea:	3c fd                	cmp    $0xfd,%al
ffffffff802183ec:	0f 84 8e 00 00 00    	je     ffffffff80218480 <caml_ephemeron_data_is_set+0x190>
ffffffff802183f2:	4d 89 34 24          	mov    %r14,(%r12)
ffffffff802183f6:	4c 3b 35 ab 3b 02 00 	cmp    0x23bab(%rip),%r14        # ffffffff8023bfa8 <caml_young_end>
ffffffff802183fd:	73 8b                	jae    ffffffff8021838a <caml_ephemeron_data_is_set+0x9a>
ffffffff802183ff:	4c 3b 35 aa 3b 02 00 	cmp    0x23baa(%rip),%r14        # ffffffff8023bfb0 <caml_young_start>
ffffffff80218406:	76 82                	jbe    ffffffff8021838a <caml_ephemeron_data_is_set+0x9a>
ffffffff80218408:	48 8b 05 09 3b 02 00 	mov    0x23b09(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8021840f:	48 3b 05 0a 3b 02 00 	cmp    0x23b0a(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff80218416:	0f 82 5c ff ff ff    	jb     ffffffff80218378 <caml_ephemeron_data_is_set+0x88>
ffffffff8021841c:	48 8d 3d dd 3a 02 00 	lea    0x23add(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80218423:	e8 88 9d ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff80218428:	48 8b 05 e9 3a 02 00 	mov    0x23ae9(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8021842f:	e9 44 ff ff ff       	jmpq   ffffffff80218378 <caml_ephemeron_data_is_set+0x88>
ffffffff80218434:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218438:	4c 89 f1             	mov    %r14,%rcx
ffffffff8021843b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80218440:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80218444:	48 39 2c 24          	cmp    %rbp,(%rsp)
ffffffff80218448:	0f 85 0a ff ff ff    	jne    ffffffff80218358 <caml_ephemeron_data_is_set+0x68>
ffffffff8021844e:	8b 54 24 0c          	mov    0xc(%rsp),%edx
ffffffff80218452:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
ffffffff80218456:	0f 95 c0             	setne  %al
ffffffff80218459:	85 d2                	test   %edx,%edx
ffffffff8021845b:	0f 84 b7 fe ff ff    	je     ffffffff80218318 <caml_ephemeron_data_is_set+0x28>
ffffffff80218461:	84 c0                	test   %al,%al
ffffffff80218463:	0f 84 af fe ff ff    	je     ffffffff80218318 <caml_ephemeron_data_is_set+0x28>
ffffffff80218469:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
ffffffff8021846d:	48 39 0d 54 39 01 00 	cmp    %rcx,0x13954(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218474:	0f 95 c0             	setne  %al
ffffffff80218477:	e9 9c fe ff ff       	jmpq   ffffffff80218318 <caml_ephemeron_data_is_set+0x28>
ffffffff8021847c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218480:	48 8b 0d 41 39 01 00 	mov    0x13941(%rip),%rcx        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218487:	49 f7 07 00 03 00 00 	testq  $0x300,(%r15)
ffffffff8021848e:	75 b0                	jne    ffffffff80218440 <caml_ephemeron_data_is_set+0x150>
ffffffff80218490:	4c 3b 2d 11 3b 02 00 	cmp    0x23b11(%rip),%r13        # ffffffff8023bfa8 <caml_young_end>
ffffffff80218497:	73 09                	jae    ffffffff802184a2 <caml_ephemeron_data_is_set+0x1b2>
ffffffff80218499:	4c 3b 2d 10 3b 02 00 	cmp    0x23b10(%rip),%r13        # ffffffff8023bfb0 <caml_young_start>
ffffffff802184a0:	77 9e                	ja     ffffffff80218440 <caml_ephemeron_data_is_set+0x150>
ffffffff802184a2:	49 89 0c 24          	mov    %rcx,(%r12)
ffffffff802184a6:	48 83 c5 01          	add    $0x1,%rbp
ffffffff802184aa:	48 8b 0d 17 39 01 00 	mov    0x13917(%rip),%rcx        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802184b1:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
ffffffff802184b8:	00 
ffffffff802184b9:	48 39 2c 24          	cmp    %rbp,(%rsp)
ffffffff802184bd:	0f 85 95 fe ff ff    	jne    ffffffff80218358 <caml_ephemeron_data_is_set+0x68>
ffffffff802184c3:	eb 89                	jmp    ffffffff8021844e <caml_ephemeron_data_is_set+0x15e>
ffffffff802184c5:	0f 1f 00             	nopl   (%rax)
ffffffff802184c8:	48 8b 0d f9 38 01 00 	mov    0x138f9(%rip),%rcx        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802184cf:	48 83 c5 01          	add    $0x1,%rbp
ffffffff802184d3:	48 39 2c 24          	cmp    %rbp,(%rsp)
ffffffff802184d7:	0f 85 7b fe ff ff    	jne    ffffffff80218358 <caml_ephemeron_data_is_set+0x68>
ffffffff802184dd:	e9 6c ff ff ff       	jmpq   ffffffff8021844e <caml_ephemeron_data_is_set+0x15e>
ffffffff802184e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802184e9:	00 00 00 00 
ffffffff802184ed:	0f 1f 00             	nopl   (%rax)

ffffffff802184f0 <caml_ephe_check_data>:
ffffffff802184f0:	41 57                	push   %r15
ffffffff802184f2:	41 56                	push   %r14
ffffffff802184f4:	41 55                	push   %r13
ffffffff802184f6:	41 54                	push   %r12
ffffffff802184f8:	55                   	push   %rbp
ffffffff802184f9:	53                   	push   %rbx
ffffffff802184fa:	48 89 fb             	mov    %rdi,%rbx
ffffffff802184fd:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80218501:	83 3d 98 38 02 00 01 	cmpl   $0x1,0x23898(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff80218508:	48 8b 05 b9 38 01 00 	mov    0x138b9(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021850f:	74 27                	je     ffffffff80218538 <caml_ephe_check_data+0x48>
ffffffff80218511:	48 8b 53 08          	mov    0x8(%rbx),%rdx
ffffffff80218515:	48 39 c2             	cmp    %rax,%rdx
ffffffff80218518:	0f 95 c0             	setne  %al
ffffffff8021851b:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021851f:	0f b6 c0             	movzbl %al,%eax
ffffffff80218522:	5b                   	pop    %rbx
ffffffff80218523:	5d                   	pop    %rbp
ffffffff80218524:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80218529:	41 5c                	pop    %r12
ffffffff8021852b:	41 5d                	pop    %r13
ffffffff8021852d:	41 5e                	pop    %r14
ffffffff8021852f:	41 5f                	pop    %r15
ffffffff80218531:	c3                   	retq   
ffffffff80218532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80218538:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
ffffffff8021853c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
ffffffff80218543:	00 
ffffffff80218544:	bd 02 00 00 00       	mov    $0x2,%ebp
ffffffff80218549:	48 89 d6             	mov    %rdx,%rsi
ffffffff8021854c:	48 c1 ee 0a          	shr    $0xa,%rsi
ffffffff80218550:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff80218554:	48 81 fa ff 0b 00 00 	cmp    $0xbff,%rdx
ffffffff8021855b:	76 b4                	jbe    ffffffff80218511 <caml_ephe_check_data+0x21>
ffffffff8021855d:	0f 1f 00             	nopl   (%rax)
ffffffff80218560:	4c 8d 24 eb          	lea    (%rbx,%rbp,8),%r12
ffffffff80218564:	4d 8b 34 24          	mov    (%r12),%r14
ffffffff80218568:	49 39 c6             	cmp    %rax,%r14
ffffffff8021856b:	0f 84 d7 00 00 00    	je     ffffffff80218648 <caml_ephe_check_data+0x158>
ffffffff80218571:	41 f6 c6 01          	test   $0x1,%r14b
ffffffff80218575:	74 28                	je     ffffffff8021859f <caml_ephe_check_data+0xaf>
ffffffff80218577:	e9 cc 00 00 00       	jmpq   ffffffff80218648 <caml_ephe_check_data+0x158>
ffffffff8021857c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218580:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff80218584:	48 89 0d 8d 39 02 00 	mov    %rcx,0x2398d(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8021858b:	48 89 18             	mov    %rbx,(%rax)
ffffffff8021858e:	48 89 68 08          	mov    %rbp,0x8(%rax)
ffffffff80218592:	4c 39 35 2f 38 01 00 	cmp    %r14,0x1382f(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218599:	0f 84 a1 00 00 00    	je     ffffffff80218640 <caml_ephe_check_data+0x150>
ffffffff8021859f:	4c 89 f7             	mov    %r14,%rdi
ffffffff802185a2:	4d 89 f5             	mov    %r14,%r13
ffffffff802185a5:	e8 76 7e ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802185aa:	a8 03                	test   $0x3,%al
ffffffff802185ac:	0f 84 1e 01 00 00    	je     ffffffff802186d0 <caml_ephe_check_data+0x1e0>
ffffffff802185b2:	41 80 7e f8 fa       	cmpb   $0xfa,-0x8(%r14)
ffffffff802185b7:	4d 8d 7e f8          	lea    -0x8(%r14),%r15
ffffffff802185bb:	0f 85 c7 00 00 00    	jne    ffffffff80218688 <caml_ephe_check_data+0x198>
ffffffff802185c1:	4d 8b 36             	mov    (%r14),%r14
ffffffff802185c4:	41 f6 c6 01          	test   $0x1,%r14b
ffffffff802185c8:	0f 85 ba 00 00 00    	jne    ffffffff80218688 <caml_ephe_check_data+0x198>
ffffffff802185ce:	4c 89 f7             	mov    %r14,%rdi
ffffffff802185d1:	e8 4a 7e ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802185d6:	a8 07                	test   $0x7,%al
ffffffff802185d8:	0f 84 aa 00 00 00    	je     ffffffff80218688 <caml_ephe_check_data+0x198>
ffffffff802185de:	41 0f b6 46 f8       	movzbl -0x8(%r14),%eax
ffffffff802185e3:	8d 70 0a             	lea    0xa(%rax),%esi
ffffffff802185e6:	81 e6 fb 00 00 00    	and    $0xfb,%esi
ffffffff802185ec:	0f 84 96 00 00 00    	je     ffffffff80218688 <caml_ephe_check_data+0x198>
ffffffff802185f2:	3c fd                	cmp    $0xfd,%al
ffffffff802185f4:	0f 84 8e 00 00 00    	je     ffffffff80218688 <caml_ephe_check_data+0x198>
ffffffff802185fa:	4d 89 34 24          	mov    %r14,(%r12)
ffffffff802185fe:	4c 3b 35 a3 39 02 00 	cmp    0x239a3(%rip),%r14        # ffffffff8023bfa8 <caml_young_end>
ffffffff80218605:	73 8b                	jae    ffffffff80218592 <caml_ephe_check_data+0xa2>
ffffffff80218607:	4c 3b 35 a2 39 02 00 	cmp    0x239a2(%rip),%r14        # ffffffff8023bfb0 <caml_young_start>
ffffffff8021860e:	76 82                	jbe    ffffffff80218592 <caml_ephe_check_data+0xa2>
ffffffff80218610:	48 8b 05 01 39 02 00 	mov    0x23901(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80218617:	48 3b 05 02 39 02 00 	cmp    0x23902(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff8021861e:	0f 82 5c ff ff ff    	jb     ffffffff80218580 <caml_ephe_check_data+0x90>
ffffffff80218624:	48 8d 3d d5 38 02 00 	lea    0x238d5(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff8021862b:	e8 80 9b ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff80218630:	48 8b 05 e1 38 02 00 	mov    0x238e1(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80218637:	e9 44 ff ff ff       	jmpq   ffffffff80218580 <caml_ephe_check_data+0x90>
ffffffff8021863c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218640:	4c 89 f0             	mov    %r14,%rax
ffffffff80218643:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80218648:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8021864c:	48 39 2c 24          	cmp    %rbp,(%rsp)
ffffffff80218650:	0f 85 0a ff ff ff    	jne    ffffffff80218560 <caml_ephe_check_data+0x70>
ffffffff80218656:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
ffffffff8021865a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
ffffffff8021865e:	85 c9                	test   %ecx,%ecx
ffffffff80218660:	0f 84 af fe ff ff    	je     ffffffff80218515 <caml_ephe_check_data+0x25>
ffffffff80218666:	48 39 c2             	cmp    %rax,%rdx
ffffffff80218669:	0f 84 a6 fe ff ff    	je     ffffffff80218515 <caml_ephe_check_data+0x25>
ffffffff8021866f:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff80218673:	48 89 c2             	mov    %rax,%rdx
ffffffff80218676:	48 8b 05 4b 37 01 00 	mov    0x1374b(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021867d:	e9 93 fe ff ff       	jmpq   ffffffff80218515 <caml_ephe_check_data+0x25>
ffffffff80218682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80218688:	48 8b 05 39 37 01 00 	mov    0x13739(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021868f:	49 f7 07 00 03 00 00 	testq  $0x300,(%r15)
ffffffff80218696:	75 b0                	jne    ffffffff80218648 <caml_ephe_check_data+0x158>
ffffffff80218698:	4c 3b 2d 09 39 02 00 	cmp    0x23909(%rip),%r13        # ffffffff8023bfa8 <caml_young_end>
ffffffff8021869f:	73 09                	jae    ffffffff802186aa <caml_ephe_check_data+0x1ba>
ffffffff802186a1:	4c 3b 2d 08 39 02 00 	cmp    0x23908(%rip),%r13        # ffffffff8023bfb0 <caml_young_start>
ffffffff802186a8:	77 9e                	ja     ffffffff80218648 <caml_ephe_check_data+0x158>
ffffffff802186aa:	49 89 04 24          	mov    %rax,(%r12)
ffffffff802186ae:	48 83 c5 01          	add    $0x1,%rbp
ffffffff802186b2:	48 8b 05 0f 37 01 00 	mov    0x1370f(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802186b9:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
ffffffff802186c0:	00 
ffffffff802186c1:	48 39 2c 24          	cmp    %rbp,(%rsp)
ffffffff802186c5:	0f 85 95 fe ff ff    	jne    ffffffff80218560 <caml_ephe_check_data+0x70>
ffffffff802186cb:	eb 89                	jmp    ffffffff80218656 <caml_ephe_check_data+0x166>
ffffffff802186cd:	0f 1f 00             	nopl   (%rax)
ffffffff802186d0:	48 8b 05 f1 36 01 00 	mov    0x136f1(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802186d7:	48 83 c5 01          	add    $0x1,%rbp
ffffffff802186db:	48 39 2c 24          	cmp    %rbp,(%rsp)
ffffffff802186df:	0f 85 7b fe ff ff    	jne    ffffffff80218560 <caml_ephe_check_data+0x70>
ffffffff802186e5:	e9 6c ff ff ff       	jmpq   ffffffff80218656 <caml_ephe_check_data+0x166>
ffffffff802186ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802186f0 <caml_ephemeron_blit_key>:
ffffffff802186f0:	4d 85 c0             	test   %r8,%r8
ffffffff802186f3:	74 0b                	je     ffffffff80218700 <caml_ephemeron_blit_key+0x10>
ffffffff802186f5:	e9 86 e7 ff ff       	jmpq   ffffffff80216e80 <caml_ephemeron_blit_key.part.0>
ffffffff802186fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80218700:	c3                   	retq   
ffffffff80218701:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80218708:	00 00 00 00 
ffffffff8021870c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80218710 <caml_ephe_blit_key>:
ffffffff80218710:	49 d1 f8             	sar    %r8
ffffffff80218713:	74 1b                	je     ffffffff80218730 <caml_ephe_blit_key+0x20>
ffffffff80218715:	48 d1 f9             	sar    %rcx
ffffffff80218718:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021871c:	48 d1 fe             	sar    %rsi
ffffffff8021871f:	e8 5c e7 ff ff       	callq  ffffffff80216e80 <caml_ephemeron_blit_key.part.0>
ffffffff80218724:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80218729:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021872d:	c3                   	retq   
ffffffff8021872e:	66 90                	xchg   %ax,%ax
ffffffff80218730:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80218735:	c3                   	retq   
ffffffff80218736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021873d:	00 00 00 

ffffffff80218740 <caml_weak_blit>:
ffffffff80218740:	49 d1 f8             	sar    %r8
ffffffff80218743:	74 1b                	je     ffffffff80218760 <caml_weak_blit+0x20>
ffffffff80218745:	48 d1 f9             	sar    %rcx
ffffffff80218748:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021874c:	48 d1 fe             	sar    %rsi
ffffffff8021874f:	e8 2c e7 ff ff       	callq  ffffffff80216e80 <caml_ephemeron_blit_key.part.0>
ffffffff80218754:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80218759:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021875d:	c3                   	retq   
ffffffff8021875e:	66 90                	xchg   %ax,%ax
ffffffff80218760:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80218765:	c3                   	retq   
ffffffff80218766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021876d:	00 00 00 

ffffffff80218770 <caml_ephemeron_blit_data>:
ffffffff80218770:	41 57                	push   %r15
ffffffff80218772:	41 56                	push   %r14
ffffffff80218774:	41 55                	push   %r13
ffffffff80218776:	41 54                	push   %r12
ffffffff80218778:	55                   	push   %rbp
ffffffff80218779:	48 89 f5             	mov    %rsi,%rbp
ffffffff8021877c:	53                   	push   %rbx
ffffffff8021877d:	48 89 fb             	mov    %rdi,%rbx
ffffffff80218780:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80218784:	83 3d 15 36 02 00 01 	cmpl   $0x1,0x23615(%rip)        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8021878b:	74 23                	je     ffffffff802187b0 <caml_ephemeron_blit_data+0x40>
ffffffff8021878d:	48 8b 53 08          	mov    0x8(%rbx),%rdx
ffffffff80218791:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80218795:	48 89 ef             	mov    %rbp,%rdi
ffffffff80218798:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021879d:	5b                   	pop    %rbx
ffffffff8021879e:	5d                   	pop    %rbp
ffffffff8021879f:	41 5c                	pop    %r12
ffffffff802187a1:	41 5d                	pop    %r13
ffffffff802187a3:	41 5e                	pop    %r14
ffffffff802187a5:	41 5f                	pop    %r15
ffffffff802187a7:	e9 d4 e5 ff ff       	jmpq   ffffffff80216d80 <do_set>
ffffffff802187ac:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802187b0:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff802187b4:	48 89 c1             	mov    %rax,%rcx
ffffffff802187b7:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff802187bb:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff802187c0:	48 3d ff 0b 00 00    	cmp    $0xbff,%rax
ffffffff802187c6:	0f 86 47 01 00 00    	jbe    ffffffff80218913 <caml_ephemeron_blit_data+0x1a3>
ffffffff802187cc:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
ffffffff802187d3:	00 
ffffffff802187d4:	48 8b 05 ed 35 01 00 	mov    0x135ed(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802187db:	41 bc 02 00 00 00    	mov    $0x2,%r12d
ffffffff802187e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802187e8:	4e 8d 2c e3          	lea    (%rbx,%r12,8),%r13
ffffffff802187ec:	4d 8b 7d 00          	mov    0x0(%r13),%r15
ffffffff802187f0:	49 39 c7             	cmp    %rax,%r15
ffffffff802187f3:	0f 84 f9 00 00 00    	je     ffffffff802188f2 <caml_ephemeron_blit_data+0x182>
ffffffff802187f9:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff802187fd:	74 28                	je     ffffffff80218827 <caml_ephemeron_blit_data+0xb7>
ffffffff802187ff:	e9 ee 00 00 00       	jmpq   ffffffff802188f2 <caml_ephemeron_blit_data+0x182>
ffffffff80218804:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218808:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff8021880c:	48 89 0d 05 37 02 00 	mov    %rcx,0x23705(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80218813:	48 89 18             	mov    %rbx,(%rax)
ffffffff80218816:	4c 89 60 08          	mov    %r12,0x8(%rax)
ffffffff8021881a:	4c 39 3d a7 35 01 00 	cmp    %r15,0x135a7(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218821:	0f 84 81 02 00 00    	je     ffffffff80218aa8 <caml_ephemeron_blit_data+0x338>
ffffffff80218827:	4c 89 ff             	mov    %r15,%rdi
ffffffff8021882a:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
ffffffff8021882f:	e8 ec 7b ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80218834:	a8 03                	test   $0x3,%al
ffffffff80218836:	0f 84 54 02 00 00    	je     ffffffff80218a90 <caml_ephemeron_blit_data+0x320>
ffffffff8021883c:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
ffffffff80218841:	4d 8d 77 f8          	lea    -0x8(%r15),%r14
ffffffff80218845:	75 71                	jne    ffffffff802188b8 <caml_ephemeron_blit_data+0x148>
ffffffff80218847:	4d 8b 3f             	mov    (%r15),%r15
ffffffff8021884a:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff8021884e:	75 68                	jne    ffffffff802188b8 <caml_ephemeron_blit_data+0x148>
ffffffff80218850:	4c 89 ff             	mov    %r15,%rdi
ffffffff80218853:	e8 c8 7b ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80218858:	a8 07                	test   $0x7,%al
ffffffff8021885a:	74 5c                	je     ffffffff802188b8 <caml_ephemeron_blit_data+0x148>
ffffffff8021885c:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff80218861:	8d 70 0a             	lea    0xa(%rax),%esi
ffffffff80218864:	81 e6 fb 00 00 00    	and    $0xfb,%esi
ffffffff8021886a:	74 4c                	je     ffffffff802188b8 <caml_ephemeron_blit_data+0x148>
ffffffff8021886c:	3c fd                	cmp    $0xfd,%al
ffffffff8021886e:	74 48                	je     ffffffff802188b8 <caml_ephemeron_blit_data+0x148>
ffffffff80218870:	4d 89 7d 00          	mov    %r15,0x0(%r13)
ffffffff80218874:	4c 3b 3d 2d 37 02 00 	cmp    0x2372d(%rip),%r15        # ffffffff8023bfa8 <caml_young_end>
ffffffff8021887b:	73 9d                	jae    ffffffff8021881a <caml_ephemeron_blit_data+0xaa>
ffffffff8021887d:	4c 3b 3d 2c 37 02 00 	cmp    0x2372c(%rip),%r15        # ffffffff8023bfb0 <caml_young_start>
ffffffff80218884:	76 94                	jbe    ffffffff8021881a <caml_ephemeron_blit_data+0xaa>
ffffffff80218886:	48 8b 05 8b 36 02 00 	mov    0x2368b(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff8021888d:	48 3b 05 8c 36 02 00 	cmp    0x2368c(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff80218894:	0f 82 6e ff ff ff    	jb     ffffffff80218808 <caml_ephemeron_blit_data+0x98>
ffffffff8021889a:	48 8d 3d 5f 36 02 00 	lea    0x2365f(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff802188a1:	e8 0a 99 ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff802188a6:	48 8b 05 6b 36 02 00 	mov    0x2366b(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff802188ad:	e9 56 ff ff ff       	jmpq   ffffffff80218808 <caml_ephemeron_blit_data+0x98>
ffffffff802188b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802188b8:	48 8b 05 09 35 01 00 	mov    0x13509(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802188bf:	49 f7 06 00 03 00 00 	testq  $0x300,(%r14)
ffffffff802188c6:	75 2a                	jne    ffffffff802188f2 <caml_ephemeron_blit_data+0x182>
ffffffff802188c8:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff802188cd:	48 3b 0d d4 36 02 00 	cmp    0x236d4(%rip),%rcx        # ffffffff8023bfa8 <caml_young_end>
ffffffff802188d4:	73 09                	jae    ffffffff802188df <caml_ephemeron_blit_data+0x16f>
ffffffff802188d6:	48 3b 0d d3 36 02 00 	cmp    0x236d3(%rip),%rcx        # ffffffff8023bfb0 <caml_young_start>
ffffffff802188dd:	77 13                	ja     ffffffff802188f2 <caml_ephemeron_blit_data+0x182>
ffffffff802188df:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%rsp)
ffffffff802188e6:	00 
ffffffff802188e7:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff802188eb:	48 8b 05 d6 34 01 00 	mov    0x134d6(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff802188f2:	49 83 c4 01          	add    $0x1,%r12
ffffffff802188f6:	4c 39 64 24 10       	cmp    %r12,0x10(%rsp)
ffffffff802188fb:	0f 85 e7 fe ff ff    	jne    ffffffff802187e8 <caml_ephemeron_blit_data+0x78>
ffffffff80218901:	48 39 43 08          	cmp    %rax,0x8(%rbx)
ffffffff80218905:	74 0c                	je     ffffffff80218913 <caml_ephemeron_blit_data+0x1a3>
ffffffff80218907:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
ffffffff8021890b:	85 c9                	test   %ecx,%ecx
ffffffff8021890d:	74 04                	je     ffffffff80218913 <caml_ephemeron_blit_data+0x1a3>
ffffffff8021890f:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff80218913:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80218917:	48 89 c1             	mov    %rax,%rcx
ffffffff8021891a:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff8021891e:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80218923:	48 3d ff 0b 00 00    	cmp    $0xbff,%rax
ffffffff80218929:	0f 86 5e fe ff ff    	jbe    ffffffff8021878d <caml_ephemeron_blit_data+0x1d>
ffffffff8021892f:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
ffffffff80218936:	00 
ffffffff80218937:	48 8b 05 8a 34 01 00 	mov    0x1348a(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff8021893e:	41 bc 02 00 00 00    	mov    $0x2,%r12d
ffffffff80218944:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218948:	4e 8d 6c e5 00       	lea    0x0(%rbp,%r12,8),%r13
ffffffff8021894d:	4d 8b 7d 00          	mov    0x0(%r13),%r15
ffffffff80218951:	49 39 c7             	cmp    %rax,%r15
ffffffff80218954:	0f 84 f8 00 00 00    	je     ffffffff80218a52 <caml_ephemeron_blit_data+0x2e2>
ffffffff8021895a:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff8021895e:	74 27                	je     ffffffff80218987 <caml_ephemeron_blit_data+0x217>
ffffffff80218960:	e9 ed 00 00 00       	jmpq   ffffffff80218a52 <caml_ephemeron_blit_data+0x2e2>
ffffffff80218965:	0f 1f 00             	nopl   (%rax)
ffffffff80218968:	48 8d 48 10          	lea    0x10(%rax),%rcx
ffffffff8021896c:	48 89 0d a5 35 02 00 	mov    %rcx,0x235a5(%rip)        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80218973:	48 89 28             	mov    %rbp,(%rax)
ffffffff80218976:	4c 89 60 08          	mov    %r12,0x8(%rax)
ffffffff8021897a:	4c 39 3d 47 34 01 00 	cmp    %r15,0x13447(%rip)        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218981:	0f 84 19 01 00 00    	je     ffffffff80218aa0 <caml_ephemeron_blit_data+0x330>
ffffffff80218987:	4c 89 ff             	mov    %r15,%rdi
ffffffff8021898a:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
ffffffff8021898f:	e8 8c 7a ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff80218994:	a8 03                	test   $0x3,%al
ffffffff80218996:	0f 84 e4 00 00 00    	je     ffffffff80218a80 <caml_ephemeron_blit_data+0x310>
ffffffff8021899c:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
ffffffff802189a1:	4d 8d 77 f8          	lea    -0x8(%r15),%r14
ffffffff802189a5:	75 71                	jne    ffffffff80218a18 <caml_ephemeron_blit_data+0x2a8>
ffffffff802189a7:	4d 8b 3f             	mov    (%r15),%r15
ffffffff802189aa:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff802189ae:	75 68                	jne    ffffffff80218a18 <caml_ephemeron_blit_data+0x2a8>
ffffffff802189b0:	4c 89 ff             	mov    %r15,%rdi
ffffffff802189b3:	e8 68 7a ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802189b8:	a8 07                	test   $0x7,%al
ffffffff802189ba:	74 5c                	je     ffffffff80218a18 <caml_ephemeron_blit_data+0x2a8>
ffffffff802189bc:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff802189c1:	8d 70 0a             	lea    0xa(%rax),%esi
ffffffff802189c4:	81 e6 fb 00 00 00    	and    $0xfb,%esi
ffffffff802189ca:	74 4c                	je     ffffffff80218a18 <caml_ephemeron_blit_data+0x2a8>
ffffffff802189cc:	3c fd                	cmp    $0xfd,%al
ffffffff802189ce:	74 48                	je     ffffffff80218a18 <caml_ephemeron_blit_data+0x2a8>
ffffffff802189d0:	4d 89 7d 00          	mov    %r15,0x0(%r13)
ffffffff802189d4:	4c 3b 3d cd 35 02 00 	cmp    0x235cd(%rip),%r15        # ffffffff8023bfa8 <caml_young_end>
ffffffff802189db:	73 9d                	jae    ffffffff8021897a <caml_ephemeron_blit_data+0x20a>
ffffffff802189dd:	4c 3b 3d cc 35 02 00 	cmp    0x235cc(%rip),%r15        # ffffffff8023bfb0 <caml_young_start>
ffffffff802189e4:	76 94                	jbe    ffffffff8021897a <caml_ephemeron_blit_data+0x20a>
ffffffff802189e6:	48 8b 05 2b 35 02 00 	mov    0x2352b(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff802189ed:	48 3b 05 2c 35 02 00 	cmp    0x2352c(%rip),%rax        # ffffffff8023bf20 <caml_ephe_ref_table+0x20>
ffffffff802189f4:	0f 82 6e ff ff ff    	jb     ffffffff80218968 <caml_ephemeron_blit_data+0x1f8>
ffffffff802189fa:	48 8d 3d ff 34 02 00 	lea    0x234ff(%rip),%rdi        # ffffffff8023bf00 <caml_ephe_ref_table>
ffffffff80218a01:	e8 aa 97 ff ff       	callq  ffffffff802121b0 <caml_realloc_ephe_ref_table>
ffffffff80218a06:	48 8b 05 0b 35 02 00 	mov    0x2350b(%rip),%rax        # ffffffff8023bf18 <caml_ephe_ref_table+0x18>
ffffffff80218a0d:	e9 56 ff ff ff       	jmpq   ffffffff80218968 <caml_ephemeron_blit_data+0x1f8>
ffffffff80218a12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80218a18:	48 8b 05 a9 33 01 00 	mov    0x133a9(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218a1f:	49 f7 06 00 03 00 00 	testq  $0x300,(%r14)
ffffffff80218a26:	75 2a                	jne    ffffffff80218a52 <caml_ephemeron_blit_data+0x2e2>
ffffffff80218a28:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80218a2d:	48 3b 15 74 35 02 00 	cmp    0x23574(%rip),%rdx        # ffffffff8023bfa8 <caml_young_end>
ffffffff80218a34:	73 09                	jae    ffffffff80218a3f <caml_ephemeron_blit_data+0x2cf>
ffffffff80218a36:	48 3b 15 73 35 02 00 	cmp    0x23573(%rip),%rdx        # ffffffff8023bfb0 <caml_young_start>
ffffffff80218a3d:	77 13                	ja     ffffffff80218a52 <caml_ephemeron_blit_data+0x2e2>
ffffffff80218a3f:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%rsp)
ffffffff80218a46:	00 
ffffffff80218a47:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff80218a4b:	48 8b 05 76 33 01 00 	mov    0x13376(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218a52:	49 83 c4 01          	add    $0x1,%r12
ffffffff80218a56:	4c 39 64 24 10       	cmp    %r12,0x10(%rsp)
ffffffff80218a5b:	0f 85 e7 fe ff ff    	jne    ffffffff80218948 <caml_ephemeron_blit_data+0x1d8>
ffffffff80218a61:	48 39 45 08          	cmp    %rax,0x8(%rbp)
ffffffff80218a65:	0f 84 22 fd ff ff    	je     ffffffff8021878d <caml_ephemeron_blit_data+0x1d>
ffffffff80218a6b:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
ffffffff80218a6f:	85 d2                	test   %edx,%edx
ffffffff80218a71:	0f 84 16 fd ff ff    	je     ffffffff8021878d <caml_ephemeron_blit_data+0x1d>
ffffffff80218a77:	48 89 45 08          	mov    %rax,0x8(%rbp)
ffffffff80218a7b:	e9 0d fd ff ff       	jmpq   ffffffff8021878d <caml_ephemeron_blit_data+0x1d>
ffffffff80218a80:	48 8b 05 41 33 01 00 	mov    0x13341(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218a87:	eb c9                	jmp    ffffffff80218a52 <caml_ephemeron_blit_data+0x2e2>
ffffffff80218a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80218a90:	48 8b 05 31 33 01 00 	mov    0x13331(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80218a97:	e9 56 fe ff ff       	jmpq   ffffffff802188f2 <caml_ephemeron_blit_data+0x182>
ffffffff80218a9c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218aa0:	4c 89 f8             	mov    %r15,%rax
ffffffff80218aa3:	eb ad                	jmp    ffffffff80218a52 <caml_ephemeron_blit_data+0x2e2>
ffffffff80218aa5:	0f 1f 00             	nopl   (%rax)
ffffffff80218aa8:	4c 89 f8             	mov    %r15,%rax
ffffffff80218aab:	e9 42 fe ff ff       	jmpq   ffffffff802188f2 <caml_ephemeron_blit_data+0x182>

ffffffff80218ab0 <caml_ephe_blit_data>:
ffffffff80218ab0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80218ab4:	e8 b7 fc ff ff       	callq  ffffffff80218770 <caml_ephemeron_blit_data>
ffffffff80218ab9:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80218abe:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80218ac2:	c3                   	retq   
ffffffff80218ac3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80218aca:	00 00 00 
ffffffff80218acd:	0f 1f 00             	nopl   (%rax)

ffffffff80218ad0 <caml_alloc>:
ffffffff80218ad0:	41 56                	push   %r14
ffffffff80218ad2:	41 55                	push   %r13
ffffffff80218ad4:	41 54                	push   %r12
ffffffff80218ad6:	55                   	push   %rbp
ffffffff80218ad7:	89 f5                	mov    %esi,%ebp
ffffffff80218ad9:	53                   	push   %rbx
ffffffff80218ada:	48 89 fb             	mov    %rdi,%rbx
ffffffff80218add:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
ffffffff80218ae4:	0f 87 a6 00 00 00    	ja     ffffffff80218b90 <caml_alloc+0xc0>
ffffffff80218aea:	41 89 f6             	mov    %esi,%r14d
ffffffff80218aed:	48 85 ff             	test   %rdi,%rdi
ffffffff80218af0:	75 1e                	jne    ffffffff80218b10 <caml_alloc+0x40>
ffffffff80218af2:	48 8b 05 37 d8 02 00 	mov    0x2d837(%rip),%rax        # ffffffff80246330 <caml_atom_table>
ffffffff80218af9:	4e 8d 44 f0 08       	lea    0x8(%rax,%r14,8),%r8
ffffffff80218afe:	5b                   	pop    %rbx
ffffffff80218aff:	4c 89 c0             	mov    %r8,%rax
ffffffff80218b02:	5d                   	pop    %rbp
ffffffff80218b03:	41 5c                	pop    %r12
ffffffff80218b05:	41 5d                	pop    %r13
ffffffff80218b07:	41 5e                	pop    %r14
ffffffff80218b09:	c3                   	retq   
ffffffff80218b0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80218b10:	48 8b 15 71 34 02 00 	mov    0x23471(%rip),%rdx        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218b17:	4c 8d 24 fd 00 00 00 	lea    0x0(,%rdi,8),%r12
ffffffff80218b1e:	00 
ffffffff80218b1f:	49 c7 c5 f8 ff ff ff 	mov    $0xfffffffffffffff8,%r13
ffffffff80218b26:	4d 29 e5             	sub    %r12,%r13
ffffffff80218b29:	4a 8d 04 2a          	lea    (%rdx,%r13,1),%rax
ffffffff80218b2d:	48 3b 05 44 34 02 00 	cmp    0x23444(%rip),%rax        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80218b34:	48 89 05 4d 34 02 00 	mov    %rax,0x2344d(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218b3b:	0f 82 8f 00 00 00    	jb     ffffffff80218bd0 <caml_alloc+0x100>
ffffffff80218b41:	48 c1 e3 0a          	shl    $0xa,%rbx
ffffffff80218b45:	49 8d 94 1e 00 03 00 	lea    0x300(%r14,%rbx,1),%rdx
ffffffff80218b4c:	00 
ffffffff80218b4d:	48 89 10             	mov    %rdx,(%rax)
ffffffff80218b50:	48 8b 05 31 34 02 00 	mov    0x23431(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218b57:	4c 8d 40 08          	lea    0x8(%rax),%r8
ffffffff80218b5b:	81 fd fa 00 00 00    	cmp    $0xfa,%ebp
ffffffff80218b61:	77 9b                	ja     ffffffff80218afe <caml_alloc+0x2e>
ffffffff80218b63:	4c 89 c0             	mov    %r8,%rax
ffffffff80218b66:	4b 8d 14 20          	lea    (%r8,%r12,1),%rdx
ffffffff80218b6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80218b70:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
ffffffff80218b77:	48 83 c0 08          	add    $0x8,%rax
ffffffff80218b7b:	48 39 d0             	cmp    %rdx,%rax
ffffffff80218b7e:	75 f0                	jne    ffffffff80218b70 <caml_alloc+0xa0>
ffffffff80218b80:	5b                   	pop    %rbx
ffffffff80218b81:	4c 89 c0             	mov    %r8,%rax
ffffffff80218b84:	5d                   	pop    %rbp
ffffffff80218b85:	41 5c                	pop    %r12
ffffffff80218b87:	41 5d                	pop    %r13
ffffffff80218b89:	41 5e                	pop    %r14
ffffffff80218b8b:	c3                   	retq   
ffffffff80218b8c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218b90:	e8 1b 84 ff ff       	callq  ffffffff80210fb0 <caml_alloc_shr>
ffffffff80218b95:	48 89 c7             	mov    %rax,%rdi
ffffffff80218b98:	81 fd fa 00 00 00    	cmp    $0xfa,%ebp
ffffffff80218b9e:	77 1c                	ja     ffffffff80218bbc <caml_alloc+0xec>
ffffffff80218ba0:	48 89 c1             	mov    %rax,%rcx
ffffffff80218ba3:	31 d2                	xor    %edx,%edx
ffffffff80218ba5:	0f 1f 00             	nopl   (%rax)
ffffffff80218ba8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80218bac:	48 c7 01 01 00 00 00 	movq   $0x1,(%rcx)
ffffffff80218bb3:	48 83 c1 08          	add    $0x8,%rcx
ffffffff80218bb7:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80218bba:	75 ec                	jne    ffffffff80218ba8 <caml_alloc+0xd8>
ffffffff80218bbc:	5b                   	pop    %rbx
ffffffff80218bbd:	5d                   	pop    %rbp
ffffffff80218bbe:	41 5c                	pop    %r12
ffffffff80218bc0:	41 5d                	pop    %r13
ffffffff80218bc2:	41 5e                	pop    %r14
ffffffff80218bc4:	e9 27 95 ff ff       	jmpq   ffffffff802120f0 <caml_check_urgent_gc>
ffffffff80218bc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80218bd0:	48 89 15 b1 33 02 00 	mov    %rdx,0x233b1(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218bd7:	e8 e4 93 ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff80218bdc:	48 8b 05 a5 33 02 00 	mov    0x233a5(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218be3:	4c 01 e8             	add    %r13,%rax
ffffffff80218be6:	48 89 05 9b 33 02 00 	mov    %rax,0x2339b(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218bed:	e9 4f ff ff ff       	jmpq   ffffffff80218b41 <caml_alloc+0x71>
ffffffff80218bf2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80218bf9:	00 00 00 00 
ffffffff80218bfd:	0f 1f 00             	nopl   (%rax)

ffffffff80218c00 <caml_alloc_small>:
ffffffff80218c00:	41 54                	push   %r12
ffffffff80218c02:	48 8b 15 7f 33 02 00 	mov    0x2337f(%rip),%rdx        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218c09:	48 8d 04 fd 00 00 00 	lea    0x0(,%rdi,8),%rax
ffffffff80218c10:	00 
ffffffff80218c11:	49 c7 c4 f8 ff ff ff 	mov    $0xfffffffffffffff8,%r12
ffffffff80218c18:	49 29 c4             	sub    %rax,%r12
ffffffff80218c1b:	55                   	push   %rbp
ffffffff80218c1c:	89 f5                	mov    %esi,%ebp
ffffffff80218c1e:	4a 8d 04 22          	lea    (%rdx,%r12,1),%rax
ffffffff80218c22:	48 3b 05 4f 33 02 00 	cmp    0x2334f(%rip),%rax        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80218c29:	53                   	push   %rbx
ffffffff80218c2a:	48 89 fb             	mov    %rdi,%rbx
ffffffff80218c2d:	48 89 05 54 33 02 00 	mov    %rax,0x23354(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218c34:	72 2a                	jb     ffffffff80218c60 <caml_alloc_small+0x60>
ffffffff80218c36:	48 c1 e3 0a          	shl    $0xa,%rbx
ffffffff80218c3a:	89 ee                	mov    %ebp,%esi
ffffffff80218c3c:	48 8d 94 33 00 03 00 	lea    0x300(%rbx,%rsi,1),%rdx
ffffffff80218c43:	00 
ffffffff80218c44:	48 89 10             	mov    %rdx,(%rax)
ffffffff80218c47:	48 8b 05 3a 33 02 00 	mov    0x2333a(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218c4e:	5b                   	pop    %rbx
ffffffff80218c4f:	5d                   	pop    %rbp
ffffffff80218c50:	48 83 c0 08          	add    $0x8,%rax
ffffffff80218c54:	41 5c                	pop    %r12
ffffffff80218c56:	c3                   	retq   
ffffffff80218c57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80218c5e:	00 00 
ffffffff80218c60:	48 89 15 21 33 02 00 	mov    %rdx,0x23321(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218c67:	e8 54 93 ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff80218c6c:	48 8b 05 15 33 02 00 	mov    0x23315(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218c73:	4c 01 e0             	add    %r12,%rax
ffffffff80218c76:	48 89 05 0b 33 02 00 	mov    %rax,0x2330b(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218c7d:	eb b7                	jmp    ffffffff80218c36 <caml_alloc_small+0x36>
ffffffff80218c7f:	90                   	nop

ffffffff80218c80 <caml_alloc_small_with_my_or_given_profinfo>:
ffffffff80218c80:	41 54                	push   %r12
ffffffff80218c82:	55                   	push   %rbp
ffffffff80218c83:	48 89 fd             	mov    %rdi,%rbp
ffffffff80218c86:	53                   	push   %rbx
ffffffff80218c87:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80218c8b:	48 85 d2             	test   %rdx,%rdx
ffffffff80218c8e:	0f 84 8c 00 00 00    	je     ffffffff80218d20 <caml_alloc_small_with_my_or_given_profinfo+0xa0>
ffffffff80218c94:	48 8b 15 ed 32 02 00 	mov    0x232ed(%rip),%rdx        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218c9b:	48 8d 04 fd 00 00 00 	lea    0x0(,%rdi,8),%rax
ffffffff80218ca2:	00 
ffffffff80218ca3:	48 c7 c3 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rbx
ffffffff80218caa:	48 29 c3             	sub    %rax,%rbx
ffffffff80218cad:	48 8d 04 1a          	lea    (%rdx,%rbx,1),%rax
ffffffff80218cb1:	48 3b 05 c0 32 02 00 	cmp    0x232c0(%rip),%rax        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80218cb8:	48 89 05 c9 32 02 00 	mov    %rax,0x232c9(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218cbf:	72 2f                	jb     ffffffff80218cf0 <caml_alloc_small_with_my_or_given_profinfo+0x70>
ffffffff80218cc1:	48 c1 e5 0a          	shl    $0xa,%rbp
ffffffff80218cc5:	41 89 f4             	mov    %esi,%r12d
ffffffff80218cc8:	4a 8d 94 25 00 03 00 	lea    0x300(%rbp,%r12,1),%rdx
ffffffff80218ccf:	00 
ffffffff80218cd0:	48 89 10             	mov    %rdx,(%rax)
ffffffff80218cd3:	48 8b 05 ae 32 02 00 	mov    0x232ae(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218cda:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80218cde:	5b                   	pop    %rbx
ffffffff80218cdf:	5d                   	pop    %rbp
ffffffff80218ce0:	48 83 c0 08          	add    $0x8,%rax
ffffffff80218ce4:	41 5c                	pop    %r12
ffffffff80218ce6:	c3                   	retq   
ffffffff80218ce7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80218cee:	00 00 
ffffffff80218cf0:	89 74 24 0c          	mov    %esi,0xc(%rsp)
ffffffff80218cf4:	48 89 15 8d 32 02 00 	mov    %rdx,0x2328d(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218cfb:	e8 c0 92 ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff80218d00:	48 8b 05 81 32 02 00 	mov    0x23281(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218d07:	8b 74 24 0c          	mov    0xc(%rsp),%esi
ffffffff80218d0b:	48 01 d8             	add    %rbx,%rax
ffffffff80218d0e:	48 89 05 73 32 02 00 	mov    %rax,0x23273(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218d15:	eb aa                	jmp    ffffffff80218cc1 <caml_alloc_small_with_my_or_given_profinfo+0x41>
ffffffff80218d17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80218d1e:	00 00 
ffffffff80218d20:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80218d24:	5b                   	pop    %rbx
ffffffff80218d25:	5d                   	pop    %rbp
ffffffff80218d26:	41 5c                	pop    %r12
ffffffff80218d28:	e9 d3 fe ff ff       	jmpq   ffffffff80218c00 <caml_alloc_small>
ffffffff80218d2d:	0f 1f 00             	nopl   (%rax)

ffffffff80218d30 <caml_alloc_tuple>:
ffffffff80218d30:	31 f6                	xor    %esi,%esi
ffffffff80218d32:	e9 99 fd ff ff       	jmpq   ffffffff80218ad0 <caml_alloc>
ffffffff80218d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80218d3e:	00 00 

ffffffff80218d40 <caml_alloc_string>:
ffffffff80218d40:	41 55                	push   %r13
ffffffff80218d42:	41 54                	push   %r12
ffffffff80218d44:	55                   	push   %rbp
ffffffff80218d45:	48 89 fd             	mov    %rdi,%rbp
ffffffff80218d48:	53                   	push   %rbx
ffffffff80218d49:	48 8d 5f 08          	lea    0x8(%rdi),%rbx
ffffffff80218d4d:	49 89 dc             	mov    %rbx,%r12
ffffffff80218d50:	49 c1 ec 03          	shr    $0x3,%r12
ffffffff80218d54:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80218d58:	48 81 fb 07 08 00 00 	cmp    $0x807,%rbx
ffffffff80218d5f:	0f 87 8b 00 00 00    	ja     ffffffff80218df0 <caml_alloc_string+0xb0>
ffffffff80218d65:	49 89 dd             	mov    %rbx,%r13
ffffffff80218d68:	48 8b 05 19 32 02 00 	mov    0x23219(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218d6f:	49 f7 d5             	not    %r13
ffffffff80218d72:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
ffffffff80218d76:	4c 01 e8             	add    %r13,%rax
ffffffff80218d79:	48 3b 05 f8 31 02 00 	cmp    0x231f8(%rip),%rax        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80218d80:	48 89 05 01 32 02 00 	mov    %rax,0x23201(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218d87:	72 3f                	jb     ffffffff80218dc8 <caml_alloc_string+0x88>
ffffffff80218d89:	49 c1 e4 0a          	shl    $0xa,%r12
ffffffff80218d8d:	49 81 c4 fc 03 00 00 	add    $0x3fc,%r12
ffffffff80218d94:	4c 89 20             	mov    %r12,(%rax)
ffffffff80218d97:	48 8b 05 ea 31 02 00 	mov    0x231ea(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218d9e:	48 83 c0 08          	add    $0x8,%rax
ffffffff80218da2:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
ffffffff80218da6:	48 c7 44 03 f8 00 00 	movq   $0x0,-0x8(%rbx,%rax,1)
ffffffff80218dad:	00 00 
ffffffff80218daf:	48 8d 53 ff          	lea    -0x1(%rbx),%rdx
ffffffff80218db3:	29 ea                	sub    %ebp,%edx
ffffffff80218db5:	88 54 03 ff          	mov    %dl,-0x1(%rbx,%rax,1)
ffffffff80218db9:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80218dbd:	5b                   	pop    %rbx
ffffffff80218dbe:	5d                   	pop    %rbp
ffffffff80218dbf:	41 5c                	pop    %r12
ffffffff80218dc1:	41 5d                	pop    %r13
ffffffff80218dc3:	c3                   	retq   
ffffffff80218dc4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218dc8:	4a 8d 44 e0 08       	lea    0x8(%rax,%r12,8),%rax
ffffffff80218dcd:	48 89 05 b4 31 02 00 	mov    %rax,0x231b4(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218dd4:	e8 e7 91 ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff80218dd9:	48 8b 05 a8 31 02 00 	mov    0x231a8(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218de0:	4c 01 e8             	add    %r13,%rax
ffffffff80218de3:	48 89 05 9e 31 02 00 	mov    %rax,0x2319e(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218dea:	eb 9d                	jmp    ffffffff80218d89 <caml_alloc_string+0x49>
ffffffff80218dec:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218df0:	4c 89 e7             	mov    %r12,%rdi
ffffffff80218df3:	be fc 00 00 00       	mov    $0xfc,%esi
ffffffff80218df8:	e8 b3 81 ff ff       	callq  ffffffff80210fb0 <caml_alloc_shr>
ffffffff80218dfd:	48 89 c7             	mov    %rax,%rdi
ffffffff80218e00:	e8 eb 92 ff ff       	callq  ffffffff802120f0 <caml_check_urgent_gc>
ffffffff80218e05:	eb 9b                	jmp    ffffffff80218da2 <caml_alloc_string+0x62>
ffffffff80218e07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80218e0e:	00 00 

ffffffff80218e10 <caml_copy_string>:
ffffffff80218e10:	41 54                	push   %r12
ffffffff80218e12:	55                   	push   %rbp
ffffffff80218e13:	48 89 fd             	mov    %rdi,%rbp
ffffffff80218e16:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80218e1a:	e8 89 72 fe ff       	callq  ffffffff802000a8 <strlen>
ffffffff80218e1f:	48 89 c7             	mov    %rax,%rdi
ffffffff80218e22:	49 89 c4             	mov    %rax,%r12
ffffffff80218e25:	e8 16 ff ff ff       	callq  ffffffff80218d40 <caml_alloc_string>
ffffffff80218e2a:	4c 89 e2             	mov    %r12,%rdx
ffffffff80218e2d:	48 89 ee             	mov    %rbp,%rsi
ffffffff80218e30:	48 89 c7             	mov    %rax,%rdi
ffffffff80218e33:	e8 6b 72 fe ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80218e38:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80218e3c:	5d                   	pop    %rbp
ffffffff80218e3d:	41 5c                	pop    %r12
ffffffff80218e3f:	c3                   	retq   

ffffffff80218e40 <caml_alloc_initialized_string>:
ffffffff80218e40:	41 54                	push   %r12
ffffffff80218e42:	49 89 fc             	mov    %rdi,%r12
ffffffff80218e45:	55                   	push   %rbp
ffffffff80218e46:	48 89 f5             	mov    %rsi,%rbp
ffffffff80218e49:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80218e4d:	e8 ee fe ff ff       	callq  ffffffff80218d40 <caml_alloc_string>
ffffffff80218e52:	4c 89 e2             	mov    %r12,%rdx
ffffffff80218e55:	48 89 ee             	mov    %rbp,%rsi
ffffffff80218e58:	48 89 c7             	mov    %rax,%rdi
ffffffff80218e5b:	e8 43 72 fe ff       	callq  ffffffff802000a3 <memcpy>
ffffffff80218e60:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80218e64:	5d                   	pop    %rbp
ffffffff80218e65:	41 5c                	pop    %r12
ffffffff80218e67:	c3                   	retq   
ffffffff80218e68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80218e6f:	00 

ffffffff80218e70 <caml_alloc_final>:
ffffffff80218e70:	41 55                	push   %r13
ffffffff80218e72:	49 89 cd             	mov    %rcx,%r13
ffffffff80218e75:	41 54                	push   %r12
ffffffff80218e77:	49 89 d4             	mov    %rdx,%r12
ffffffff80218e7a:	53                   	push   %rbx
ffffffff80218e7b:	48 89 fb             	mov    %rdi,%rbx
ffffffff80218e7e:	48 89 f7             	mov    %rsi,%rdi
ffffffff80218e81:	e8 2a 13 00 00       	callq  ffffffff8021a1b0 <caml_final_custom_operations>
ffffffff80218e86:	48 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%rsi
ffffffff80218e8d:	00 
ffffffff80218e8e:	4c 89 e9             	mov    %r13,%rcx
ffffffff80218e91:	5b                   	pop    %rbx
ffffffff80218e92:	4c 89 e2             	mov    %r12,%rdx
ffffffff80218e95:	48 89 c7             	mov    %rax,%rdi
ffffffff80218e98:	41 5c                	pop    %r12
ffffffff80218e9a:	41 5d                	pop    %r13
ffffffff80218e9c:	e9 ff 11 00 00       	jmpq   ffffffff8021a0a0 <caml_alloc_custom>
ffffffff80218ea1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80218ea8:	00 00 00 00 
ffffffff80218eac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80218eb0 <caml_alloc_array>:
ffffffff80218eb0:	41 56                	push   %r14
ffffffff80218eb2:	41 55                	push   %r13
ffffffff80218eb4:	41 54                	push   %r12
ffffffff80218eb6:	55                   	push   %rbp
ffffffff80218eb7:	53                   	push   %rbx
ffffffff80218eb8:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80218ebc:	4c 8b 25 b5 b1 02 00 	mov    0x2b1b5(%rip),%r12        # ffffffff80244078 <caml_local_roots>
ffffffff80218ec3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80218eca:	00 00 
ffffffff80218ecc:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff80218ed1:	31 c0                	xor    %eax,%eax
ffffffff80218ed3:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80218ed8:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
ffffffff80218edf:	00 
ffffffff80218ee0:	48 89 05 91 b1 02 00 	mov    %rax,0x2b191(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80218ee7:	48 89 e0             	mov    %rsp,%rax
ffffffff80218eea:	48 83 3e 00          	cmpq   $0x0,(%rsi)
ffffffff80218eee:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80218ef3:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80218ef8:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
ffffffff80218eff:	00 00 
ffffffff80218f01:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
ffffffff80218f06:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80218f0d:	00 00 
ffffffff80218f0f:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff80218f16:	00 00 
ffffffff80218f18:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
ffffffff80218f1d:	0f 84 85 00 00 00    	je     ffffffff80218fa8 <caml_alloc_array+0xf8>
ffffffff80218f23:	48 89 fd             	mov    %rdi,%rbp
ffffffff80218f26:	49 89 f6             	mov    %rsi,%r14
ffffffff80218f29:	45 31 ed             	xor    %r13d,%r13d
ffffffff80218f2c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218f30:	49 83 c5 01          	add    $0x1,%r13
ffffffff80218f34:	4b 83 3c ee 00       	cmpq   $0x0,(%r14,%r13,8)
ffffffff80218f39:	75 f5                	jne    ffffffff80218f30 <caml_alloc_array+0x80>
ffffffff80218f3b:	31 f6                	xor    %esi,%esi
ffffffff80218f3d:	4c 89 ef             	mov    %r13,%rdi
ffffffff80218f40:	e8 8b fb ff ff       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff80218f45:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80218f4a:	4d 85 ed             	test   %r13,%r13
ffffffff80218f4d:	74 31                	je     ffffffff80218f80 <caml_alloc_array+0xd0>
ffffffff80218f4f:	49 c1 e5 03          	shl    $0x3,%r13
ffffffff80218f53:	31 db                	xor    %ebx,%ebx
ffffffff80218f55:	0f 1f 00             	nopl   (%rax)
ffffffff80218f58:	49 8b 3c 1e          	mov    (%r14,%rbx,1),%rdi
ffffffff80218f5c:	ff d5                	callq  *%rbp
ffffffff80218f5e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80218f63:	48 89 c6             	mov    %rax,%rsi
ffffffff80218f66:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80218f6a:	48 01 df             	add    %rbx,%rdi
ffffffff80218f6d:	48 83 c3 08          	add    $0x8,%rbx
ffffffff80218f71:	e8 ea 76 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff80218f76:	49 39 dd             	cmp    %rbx,%r13
ffffffff80218f79:	75 dd                	jne    ffffffff80218f58 <caml_alloc_array+0xa8>
ffffffff80218f7b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80218f80:	4c 89 25 f1 b0 02 00 	mov    %r12,0x2b0f1(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80218f87:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
ffffffff80218f8c:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff80218f93:	00 00 
ffffffff80218f95:	75 1c                	jne    ffffffff80218fb3 <caml_alloc_array+0x103>
ffffffff80218f97:	48 83 c4 60          	add    $0x60,%rsp
ffffffff80218f9b:	5b                   	pop    %rbx
ffffffff80218f9c:	5d                   	pop    %rbp
ffffffff80218f9d:	41 5c                	pop    %r12
ffffffff80218f9f:	41 5d                	pop    %r13
ffffffff80218fa1:	41 5e                	pop    %r14
ffffffff80218fa3:	c3                   	retq   
ffffffff80218fa4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80218fa8:	31 f6                	xor    %esi,%esi
ffffffff80218faa:	31 ff                	xor    %edi,%edi
ffffffff80218fac:	e8 1f fb ff ff       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff80218fb1:	eb cd                	jmp    ffffffff80218f80 <caml_alloc_array+0xd0>
ffffffff80218fb3:	e8 e8 70 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff80218fb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80218fbf:	00 

ffffffff80218fc0 <caml_alloc_float_array>:
ffffffff80218fc0:	55                   	push   %rbp
ffffffff80218fc1:	53                   	push   %rbx
ffffffff80218fc2:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80218fc6:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
ffffffff80218fcd:	77 61                	ja     ffffffff80219030 <caml_alloc_float_array+0x70>
ffffffff80218fcf:	48 8b 05 5a d3 02 00 	mov    0x2d35a(%rip),%rax        # ffffffff80246330 <caml_atom_table>
ffffffff80218fd6:	48 83 c0 08          	add    $0x8,%rax
ffffffff80218fda:	48 85 ff             	test   %rdi,%rdi
ffffffff80218fdd:	74 49                	je     ffffffff80219028 <caml_alloc_float_array+0x68>
ffffffff80218fdf:	48 8b 15 a2 2f 02 00 	mov    0x22fa2(%rip),%rdx        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80218fe6:	48 8d 04 fd 00 00 00 	lea    0x0(,%rdi,8),%rax
ffffffff80218fed:	00 
ffffffff80218fee:	48 c7 c3 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rbx
ffffffff80218ff5:	48 29 c3             	sub    %rax,%rbx
ffffffff80218ff8:	48 8d 04 1a          	lea    (%rdx,%rbx,1),%rax
ffffffff80218ffc:	48 3b 05 75 2f 02 00 	cmp    0x22f75(%rip),%rax        # ffffffff8023bf78 <caml_young_trigger>
ffffffff80219003:	48 89 05 7e 2f 02 00 	mov    %rax,0x22f7e(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8021900a:	72 44                	jb     ffffffff80219050 <caml_alloc_float_array+0x90>
ffffffff8021900c:	48 c1 e7 0a          	shl    $0xa,%rdi
ffffffff80219010:	48 89 fd             	mov    %rdi,%rbp
ffffffff80219013:	48 81 c5 fe 03 00 00 	add    $0x3fe,%rbp
ffffffff8021901a:	48 89 28             	mov    %rbp,(%rax)
ffffffff8021901d:	48 8b 05 64 2f 02 00 	mov    0x22f64(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80219024:	48 83 c0 08          	add    $0x8,%rax
ffffffff80219028:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021902c:	5b                   	pop    %rbx
ffffffff8021902d:	5d                   	pop    %rbp
ffffffff8021902e:	c3                   	retq   
ffffffff8021902f:	90                   	nop
ffffffff80219030:	be fe 00 00 00       	mov    $0xfe,%esi
ffffffff80219035:	e8 76 7f ff ff       	callq  ffffffff80210fb0 <caml_alloc_shr>
ffffffff8021903a:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021903e:	5b                   	pop    %rbx
ffffffff8021903f:	48 89 c7             	mov    %rax,%rdi
ffffffff80219042:	5d                   	pop    %rbp
ffffffff80219043:	e9 a8 90 ff ff       	jmpq   ffffffff802120f0 <caml_check_urgent_gc>
ffffffff80219048:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021904f:	00 
ffffffff80219050:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80219055:	48 89 15 2c 2f 02 00 	mov    %rdx,0x22f2c(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8021905c:	e8 5f 8f ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff80219061:	48 8b 05 20 2f 02 00 	mov    0x22f20(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80219068:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8021906d:	48 01 d8             	add    %rbx,%rax
ffffffff80219070:	48 89 05 11 2f 02 00 	mov    %rax,0x22f11(%rip)        # ffffffff8023bf88 <caml_young_ptr>
ffffffff80219077:	eb 93                	jmp    ffffffff8021900c <caml_alloc_float_array+0x4c>
ffffffff80219079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80219080 <caml_copy_string_array>:
ffffffff80219080:	48 89 fe             	mov    %rdi,%rsi
ffffffff80219083:	48 8d 3d 86 fd ff ff 	lea    -0x27a(%rip),%rdi        # ffffffff80218e10 <caml_copy_string>
ffffffff8021908a:	e9 21 fe ff ff       	jmpq   ffffffff80218eb0 <caml_alloc_array>
ffffffff8021908f:	90                   	nop

ffffffff80219090 <caml_convert_flag_list>:
ffffffff80219090:	45 31 c0             	xor    %r8d,%r8d
ffffffff80219093:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80219097:	74 1d                	je     ffffffff802190b6 <caml_convert_flag_list+0x26>
ffffffff80219099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802190a0:	48 8b 07             	mov    (%rdi),%rax
ffffffff802190a3:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff802190a7:	48 d1 f8             	sar    %rax
ffffffff802190aa:	48 98                	cltq   
ffffffff802190ac:	44 0b 04 86          	or     (%rsi,%rax,4),%r8d
ffffffff802190b0:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff802190b4:	75 ea                	jne    ffffffff802190a0 <caml_convert_flag_list+0x10>
ffffffff802190b6:	44 89 c0             	mov    %r8d,%eax
ffffffff802190b9:	c3                   	retq   
ffffffff802190ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802190c0 <caml_alloc_dummy>:
ffffffff802190c0:	48 d1 ff             	sar    %rdi
ffffffff802190c3:	31 f6                	xor    %esi,%esi
ffffffff802190c5:	e9 06 fa ff ff       	jmpq   ffffffff80218ad0 <caml_alloc>
ffffffff802190ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802190d0 <caml_alloc_dummy_function>:
ffffffff802190d0:	48 d1 ff             	sar    %rdi
ffffffff802190d3:	31 f6                	xor    %esi,%esi
ffffffff802190d5:	e9 f6 f9 ff ff       	jmpq   ffffffff80218ad0 <caml_alloc>
ffffffff802190da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802190e0 <caml_alloc_dummy_float>:
ffffffff802190e0:	eb de                	jmp    ffffffff802190c0 <caml_alloc_dummy>
ffffffff802190e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802190e9:	00 00 00 00 
ffffffff802190ed:	0f 1f 00             	nopl   (%rax)

ffffffff802190f0 <caml_alloc_dummy_infix>:
ffffffff802190f0:	53                   	push   %rbx
ffffffff802190f1:	48 d1 fe             	sar    %rsi
ffffffff802190f4:	48 d1 ff             	sar    %rdi
ffffffff802190f7:	48 89 f3             	mov    %rsi,%rbx
ffffffff802190fa:	be f7 00 00 00       	mov    $0xf7,%esi
ffffffff802190ff:	e8 cc f9 ff ff       	callq  ffffffff80218ad0 <caml_alloc>
ffffffff80219104:	48 85 db             	test   %rbx,%rbx
ffffffff80219107:	74 13                	je     ffffffff8021911c <caml_alloc_dummy_infix+0x2c>
ffffffff80219109:	48 8d 04 d8          	lea    (%rax,%rbx,8),%rax
ffffffff8021910d:	48 c1 e3 0a          	shl    $0xa,%rbx
ffffffff80219111:	48 81 c3 f9 00 00 00 	add    $0xf9,%rbx
ffffffff80219118:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
ffffffff8021911c:	5b                   	pop    %rbx
ffffffff8021911d:	c3                   	retq   
ffffffff8021911e:	66 90                	xchg   %ax,%ax

ffffffff80219120 <caml_update_dummy>:
ffffffff80219120:	41 54                	push   %r12
ffffffff80219122:	55                   	push   %rbp
ffffffff80219123:	53                   	push   %rbx
ffffffff80219124:	0f b6 56 f8          	movzbl -0x8(%rsi),%edx
ffffffff80219128:	48 89 f3             	mov    %rsi,%rbx
ffffffff8021912b:	80 fa fe             	cmp    $0xfe,%dl
ffffffff8021912e:	0f 84 ac 00 00 00    	je     ffffffff802191e0 <caml_update_dummy+0xc0>
ffffffff80219134:	81 fa f9 00 00 00    	cmp    $0xf9,%edx
ffffffff8021913a:	74 44                	je     ffffffff80219180 <caml_update_dummy+0x60>
ffffffff8021913c:	88 57 f8             	mov    %dl,-0x8(%rdi)
ffffffff8021913f:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
ffffffff80219143:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80219147:	74 25                	je     ffffffff8021916e <caml_update_dummy+0x4e>
ffffffff80219149:	48 29 f7             	sub    %rsi,%rdi
ffffffff8021914c:	4c 8d 24 c6          	lea    (%rsi,%rax,8),%r12
ffffffff80219150:	48 89 fd             	mov    %rdi,%rbp
ffffffff80219153:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80219158:	48 8b 33             	mov    (%rbx),%rsi
ffffffff8021915b:	48 8d 7c 1d 00       	lea    0x0(%rbp,%rbx,1),%rdi
ffffffff80219160:	48 83 c3 08          	add    $0x8,%rbx
ffffffff80219164:	e8 f7 74 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff80219169:	49 39 dc             	cmp    %rbx,%r12
ffffffff8021916c:	75 ea                	jne    ffffffff80219158 <caml_update_dummy+0x38>
ffffffff8021916e:	5b                   	pop    %rbx
ffffffff8021916f:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80219174:	5d                   	pop    %rbp
ffffffff80219175:	41 5c                	pop    %r12
ffffffff80219177:	c3                   	retq   
ffffffff80219178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021917f:	00 
ffffffff80219180:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
ffffffff80219184:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
ffffffff80219188:	48 89 f5             	mov    %rsi,%rbp
ffffffff8021918b:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021918f:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80219193:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80219197:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8021919b:	48 29 c5             	sub    %rax,%rbp
ffffffff8021919e:	48 29 d7             	sub    %rdx,%rdi
ffffffff802191a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff802191a5:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff802191a9:	74 c3                	je     ffffffff8021916e <caml_update_dummy+0x4e>
ffffffff802191ab:	48 29 f0             	sub    %rsi,%rax
ffffffff802191ae:	4c 8d 64 d5 00       	lea    0x0(%rbp,%rdx,8),%r12
ffffffff802191b3:	48 8d 1c 38          	lea    (%rax,%rdi,1),%rbx
ffffffff802191b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802191be:	00 00 
ffffffff802191c0:	48 8b 75 00          	mov    0x0(%rbp),%rsi
ffffffff802191c4:	48 8d 3c 2b          	lea    (%rbx,%rbp,1),%rdi
ffffffff802191c8:	48 83 c5 08          	add    $0x8,%rbp
ffffffff802191cc:	e8 8f 74 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff802191d1:	4c 39 e5             	cmp    %r12,%rbp
ffffffff802191d4:	75 ea                	jne    ffffffff802191c0 <caml_update_dummy+0xa0>
ffffffff802191d6:	5b                   	pop    %rbx
ffffffff802191d7:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802191dc:	5d                   	pop    %rbp
ffffffff802191dd:	41 5c                	pop    %r12
ffffffff802191df:	c3                   	retq   
ffffffff802191e0:	c6 47 f8 fe          	movb   $0xfe,-0x8(%rdi)
ffffffff802191e4:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
ffffffff802191e8:	48 29 f7             	sub    %rsi,%rdi
ffffffff802191eb:	48 89 fd             	mov    %rdi,%rbp
ffffffff802191ee:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff802191f2:	48 8d 04 d6          	lea    (%rsi,%rdx,8),%rax
ffffffff802191f6:	48 85 d2             	test   %rdx,%rdx
ffffffff802191f9:	0f 84 6f ff ff ff    	je     ffffffff8021916e <caml_update_dummy+0x4e>
ffffffff802191ff:	90                   	nop
ffffffff80219200:	f2 0f 10 03          	movsd  (%rbx),%xmm0
ffffffff80219204:	f2 0f 11 44 1d 00    	movsd  %xmm0,0x0(%rbp,%rbx,1)
ffffffff8021920a:	48 83 c3 08          	add    $0x8,%rbx
ffffffff8021920e:	48 39 d8             	cmp    %rbx,%rax
ffffffff80219211:	75 ed                	jne    ffffffff80219200 <caml_update_dummy+0xe0>
ffffffff80219213:	5b                   	pop    %rbx
ffffffff80219214:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80219219:	5d                   	pop    %rbp
ffffffff8021921a:	41 5c                	pop    %r12
ffffffff8021921c:	c3                   	retq   
ffffffff8021921d:	0f 1f 00             	nopl   (%rax)

ffffffff80219220 <compact_allocate>:
ffffffff80219220:	48 8b 15 51 d2 02 00 	mov    0x2d251(%rip),%rdx        # ffffffff80246478 <compact_fl>
ffffffff80219227:	31 f6                	xor    %esi,%esi
ffffffff80219229:	48 8b 4a e8          	mov    -0x18(%rdx),%rcx
ffffffff8021922d:	4c 8b 42 f0          	mov    -0x10(%rdx),%r8
ffffffff80219231:	48 89 d0             	mov    %rdx,%rax
ffffffff80219234:	49 29 c8             	sub    %rcx,%r8
ffffffff80219237:	49 83 f8 20          	cmp    $0x20,%r8
ffffffff8021923b:	76 08                	jbe    ffffffff80219245 <compact_allocate+0x25>
ffffffff8021923d:	eb 32                	jmp    ffffffff80219271 <compact_allocate+0x51>
ffffffff8021923f:	90                   	nop
ffffffff80219240:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80219245:	48 89 d0             	mov    %rdx,%rax
ffffffff80219248:	48 8b 52 f8          	mov    -0x8(%rdx),%rdx
ffffffff8021924c:	48 8b 4a f0          	mov    -0x10(%rdx),%rcx
ffffffff80219250:	48 2b 4a e8          	sub    -0x18(%rdx),%rcx
ffffffff80219254:	48 83 f9 20          	cmp    $0x20,%rcx
ffffffff80219258:	76 e6                	jbe    ffffffff80219240 <compact_allocate+0x20>
ffffffff8021925a:	40 84 f6             	test   %sil,%sil
ffffffff8021925d:	74 07                	je     ffffffff80219266 <compact_allocate+0x46>
ffffffff8021925f:	48 89 05 12 d2 02 00 	mov    %rax,0x2d212(%rip)        # ffffffff80246478 <compact_fl>
ffffffff80219266:	48 8b 48 e8          	mov    -0x18(%rax),%rcx
ffffffff8021926a:	4c 8b 40 f0          	mov    -0x10(%rax),%r8
ffffffff8021926e:	49 29 c8             	sub    %rcx,%r8
ffffffff80219271:	4c 39 c7             	cmp    %r8,%rdi
ffffffff80219274:	76 1e                	jbe    ffffffff80219294 <compact_allocate+0x74>
ffffffff80219276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021927d:	00 00 00 
ffffffff80219280:	48 8b 40 f8          	mov    -0x8(%rax),%rax
ffffffff80219284:	48 8b 48 e8          	mov    -0x18(%rax),%rcx
ffffffff80219288:	48 8b 50 f0          	mov    -0x10(%rax),%rdx
ffffffff8021928c:	48 29 ca             	sub    %rcx,%rdx
ffffffff8021928f:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80219292:	72 ec                	jb     ffffffff80219280 <compact_allocate+0x60>
ffffffff80219294:	48 01 cf             	add    %rcx,%rdi
ffffffff80219297:	48 89 78 e8          	mov    %rdi,-0x18(%rax)
ffffffff8021929b:	48 01 c8             	add    %rcx,%rax
ffffffff8021929e:	c3                   	retq   
ffffffff8021929f:	90                   	nop

ffffffff802192a0 <invert_pointer_at>:
ffffffff802192a0:	55                   	push   %rbp
ffffffff802192a1:	53                   	push   %rbx
ffffffff802192a2:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff802192a6:	48 8b 2f             	mov    (%rdi),%rbp
ffffffff802192a9:	40 f6 c5 03          	test   $0x3,%bpl
ffffffff802192ad:	74 11                	je     ffffffff802192c0 <invert_pointer_at+0x20>
ffffffff802192af:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802192b3:	5b                   	pop    %rbx
ffffffff802192b4:	5d                   	pop    %rbp
ffffffff802192b5:	c3                   	retq   
ffffffff802192b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802192bd:	00 00 00 
ffffffff802192c0:	48 89 fb             	mov    %rdi,%rbx
ffffffff802192c3:	48 89 ef             	mov    %rbp,%rdi
ffffffff802192c6:	e8 55 71 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802192cb:	a8 01                	test   $0x1,%al
ffffffff802192cd:	74 e0                	je     ffffffff802192af <invert_pointer_at+0xf>
ffffffff802192cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802192d3:	48 89 c2             	mov    %rax,%rdx
ffffffff802192d6:	83 e2 03             	and    $0x3,%edx
ffffffff802192d9:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffff802192dd:	0f 84 8d 00 00 00    	je     ffffffff80219370 <invert_pointer_at+0xd0>
ffffffff802192e3:	0f 87 97 00 00 00    	ja     ffffffff80219380 <invert_pointer_at+0xe0>
ffffffff802192e9:	48 85 d2             	test   %rdx,%rdx
ffffffff802192ec:	0f 84 8e 00 00 00    	je     ffffffff80219380 <invert_pointer_at+0xe0>
ffffffff802192f2:	48 83 fa 01          	cmp    $0x1,%rdx
ffffffff802192f6:	75 b7                	jne    ffffffff802192af <invert_pointer_at+0xf>
ffffffff802192f8:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff802192fc:	48 89 ee             	mov    %rbp,%rsi
ffffffff802192ff:	48 89 c2             	mov    %rax,%rdx
ffffffff80219302:	48 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%rax
ffffffff80219309:	00 
ffffffff8021930a:	48 29 c6             	sub    %rax,%rsi
ffffffff8021930d:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
ffffffff80219311:	48 8d 4e f8          	lea    -0x8(%rsi),%rcx
ffffffff80219315:	a8 03                	test   $0x3,%al
ffffffff80219317:	75 11                	jne    ffffffff8021932a <invert_pointer_at+0x8a>
ffffffff80219319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80219320:	48 89 c1             	mov    %rax,%rcx
ffffffff80219323:	48 8b 00             	mov    (%rax),%rax
ffffffff80219326:	a8 03                	test   $0x3,%al
ffffffff80219328:	74 f6                	je     ffffffff80219320 <invert_pointer_at+0x80>
ffffffff8021932a:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff8021932e:	49 89 c0             	mov    %rax,%r8
ffffffff80219331:	48 89 df             	mov    %rbx,%rdi
ffffffff80219334:	48 c1 e2 0a          	shl    $0xa,%rdx
ffffffff80219338:	49 c1 e8 02          	shr    $0x2,%r8
ffffffff8021933c:	48 83 cf 02          	or     $0x2,%rdi
ffffffff80219340:	48 81 ca e7 03 00 00 	or     $0x3e7,%rdx
ffffffff80219347:	41 80 f8 f7          	cmp    $0xf7,%r8b
ffffffff8021934b:	74 0c                	je     ffffffff80219359 <invert_pointer_at+0xb9>
ffffffff8021934d:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80219351:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
ffffffff80219355:	48 83 c8 01          	or     $0x1,%rax
ffffffff80219359:	48 89 03             	mov    %rax,(%rbx)
ffffffff8021935c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80219360:	48 89 11             	mov    %rdx,(%rcx)
ffffffff80219363:	e9 47 ff ff ff       	jmpq   ffffffff802192af <invert_pointer_at+0xf>
ffffffff80219368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021936f:	00 
ffffffff80219370:	48 89 03             	mov    %rax,(%rbx)
ffffffff80219373:	48 83 cb 02          	or     $0x2,%rbx
ffffffff80219377:	48 89 5d f8          	mov    %rbx,-0x8(%rbp)
ffffffff8021937b:	e9 2f ff ff ff       	jmpq   ffffffff802192af <invert_pointer_at+0xf>
ffffffff80219380:	48 89 03             	mov    %rax,(%rbx)
ffffffff80219383:	48 89 5d f8          	mov    %rbx,-0x8(%rbp)
ffffffff80219387:	e9 23 ff ff ff       	jmpq   ffffffff802192af <invert_pointer_at+0xf>
ffffffff8021938c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80219390 <caml_invert_root>:
ffffffff80219390:	48 89 f7             	mov    %rsi,%rdi
ffffffff80219393:	e9 08 ff ff ff       	jmpq   ffffffff802192a0 <invert_pointer_at>
ffffffff80219398:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021939f:	00 

ffffffff802193a0 <do_compaction>:
ffffffff802193a0:	41 56                	push   %r14
ffffffff802193a2:	48 8d 35 78 90 00 00 	lea    0x9078(%rip),%rsi        # ffffffff80222421 <posix_signals+0x341>
ffffffff802193a9:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff802193ae:	31 c0                	xor    %eax,%eax
ffffffff802193b0:	41 55                	push   %r13
ffffffff802193b2:	41 54                	push   %r12
ffffffff802193b4:	55                   	push   %rbp
ffffffff802193b5:	53                   	push   %rbx
ffffffff802193b6:	e8 35 8e ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff802193bb:	4c 8b 0d ee 29 02 00 	mov    0x229ee(%rip),%r9        # ffffffff8023bdb0 <caml_heap_start>
ffffffff802193c2:	4d 85 c9             	test   %r9,%r9
ffffffff802193c5:	74 7a                	je     ffffffff80219441 <do_compaction+0xa1>
ffffffff802193c7:	4d 8b 41 f0          	mov    -0x10(%r9),%r8
ffffffff802193cb:	4c 89 ca             	mov    %r9,%rdx
ffffffff802193ce:	4d 01 c8             	add    %r9,%r8
ffffffff802193d1:	4d 39 c8             	cmp    %r9,%r8
ffffffff802193d4:	77 26                	ja     ffffffff802193fc <do_compaction+0x5c>
ffffffff802193d6:	eb 60                	jmp    ffffffff80219438 <do_compaction+0x98>
ffffffff802193d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802193df:	00 
ffffffff802193e0:	c1 e0 02             	shl    $0x2,%eax
ffffffff802193e3:	25 fc 03 00 00       	and    $0x3fc,%eax
ffffffff802193e8:	48 09 f0             	or     %rsi,%rax
ffffffff802193eb:	48 83 c8 03          	or     $0x3,%rax
ffffffff802193ef:	48 89 02             	mov    %rax,(%rdx)
ffffffff802193f2:	48 8d 54 ca 08       	lea    0x8(%rdx,%rcx,8),%rdx
ffffffff802193f7:	49 39 d0             	cmp    %rdx,%r8
ffffffff802193fa:	76 3c                	jbe    ffffffff80219438 <do_compaction+0x98>
ffffffff802193fc:	48 8b 02             	mov    (%rdx),%rax
ffffffff802193ff:	48 89 c7             	mov    %rax,%rdi
ffffffff80219402:	48 89 c1             	mov    %rax,%rcx
ffffffff80219405:	48 89 c6             	mov    %rax,%rsi
ffffffff80219408:	81 e7 00 03 00 00    	and    $0x300,%edi
ffffffff8021940e:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff80219412:	48 81 e6 00 fc ff ff 	and    $0xfffffffffffffc00,%rsi
ffffffff80219419:	48 81 ff 00 02 00 00 	cmp    $0x200,%rdi
ffffffff80219420:	75 be                	jne    ffffffff802193e0 <do_compaction+0x40>
ffffffff80219422:	48 89 f0             	mov    %rsi,%rax
ffffffff80219425:	48 0d f3 03 00 00    	or     $0x3f3,%rax
ffffffff8021942b:	48 89 02             	mov    %rax,(%rdx)
ffffffff8021942e:	48 8d 54 ca 08       	lea    0x8(%rdx,%rcx,8),%rdx
ffffffff80219433:	49 39 d0             	cmp    %rdx,%r8
ffffffff80219436:	77 c4                	ja     ffffffff802193fc <do_compaction+0x5c>
ffffffff80219438:	4d 8b 49 f8          	mov    -0x8(%r9),%r9
ffffffff8021943c:	4d 85 c9             	test   %r9,%r9
ffffffff8021943f:	75 86                	jne    ffffffff802193c7 <do_compaction+0x27>
ffffffff80219441:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80219446:	48 8d 3d 43 ff ff ff 	lea    -0xbd(%rip),%rdi        # ffffffff80219390 <caml_invert_root>
ffffffff8021944d:	e8 3e a7 ff ff       	callq  ffffffff80213b90 <caml_do_roots>
ffffffff80219452:	e8 89 14 00 00       	callq  ffffffff8021a8e0 <caml_final_invert_finalisable_values>
ffffffff80219457:	48 8b 2d 52 29 02 00 	mov    0x22952(%rip),%rbp        # ffffffff8023bdb0 <caml_heap_start>
ffffffff8021945e:	48 85 ed             	test   %rbp,%rbp
ffffffff80219461:	0f 84 03 05 00 00    	je     ffffffff8021996a <do_compaction+0x5ca>
ffffffff80219467:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
ffffffff8021946b:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021946e:	48 01 eb             	add    %rbp,%rbx
ffffffff80219471:	48 39 eb             	cmp    %rbp,%rbx
ffffffff80219474:	0f 86 7c 00 00 00    	jbe    ffffffff802194f6 <do_compaction+0x156>
ffffffff8021947a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80219480:	48 8b 06             	mov    (%rsi),%rax
ffffffff80219483:	a8 03                	test   $0x3,%al
ffffffff80219485:	75 10                	jne    ffffffff80219497 <do_compaction+0xf7>
ffffffff80219487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021948e:	00 00 
ffffffff80219490:	48 8b 00             	mov    (%rax),%rax
ffffffff80219493:	a8 03                	test   $0x3,%al
ffffffff80219495:	74 f9                	je     ffffffff80219490 <do_compaction+0xf0>
ffffffff80219497:	48 89 c1             	mov    %rax,%rcx
ffffffff8021949a:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff8021949e:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff802194a2:	0f b6 d0             	movzbl %al,%edx
ffffffff802194a5:	48 83 c1 01          	add    $0x1,%rcx
ffffffff802194a9:	4c 8d 2c ce          	lea    (%rsi,%rcx,8),%r13
ffffffff802194ad:	3c f9                	cmp    $0xf9,%al
ffffffff802194af:	0f 84 3b 02 00 00    	je     ffffffff802196f0 <do_compaction+0x350>
ffffffff802194b5:	81 fa fa 00 00 00    	cmp    $0xfa,%edx
ffffffff802194bb:	76 13                	jbe    ffffffff802194d0 <do_compaction+0x130>
ffffffff802194bd:	4c 39 eb             	cmp    %r13,%rbx
ffffffff802194c0:	76 34                	jbe    ffffffff802194f6 <do_compaction+0x156>
ffffffff802194c2:	4c 89 ee             	mov    %r13,%rsi
ffffffff802194c5:	eb b9                	jmp    ffffffff80219480 <do_compaction+0xe0>
ffffffff802194c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802194ce:	00 00 
ffffffff802194d0:	48 83 f9 01          	cmp    $0x1,%rcx
ffffffff802194d4:	76 e7                	jbe    ffffffff802194bd <do_compaction+0x11d>
ffffffff802194d6:	4c 8d 66 08          	lea    0x8(%rsi),%r12
ffffffff802194da:	4c 8d 34 ce          	lea    (%rsi,%rcx,8),%r14
ffffffff802194de:	66 90                	xchg   %ax,%ax
ffffffff802194e0:	4c 89 e7             	mov    %r12,%rdi
ffffffff802194e3:	49 83 c4 08          	add    $0x8,%r12
ffffffff802194e7:	e8 b4 fd ff ff       	callq  ffffffff802192a0 <invert_pointer_at>
ffffffff802194ec:	4d 39 f4             	cmp    %r14,%r12
ffffffff802194ef:	75 ef                	jne    ffffffff802194e0 <do_compaction+0x140>
ffffffff802194f1:	4c 39 eb             	cmp    %r13,%rbx
ffffffff802194f4:	77 cc                	ja     ffffffff802194c2 <do_compaction+0x122>
ffffffff802194f6:	48 8b 6d f8          	mov    -0x8(%rbp),%rbp
ffffffff802194fa:	48 85 ed             	test   %rbp,%rbp
ffffffff802194fd:	0f 85 64 ff ff ff    	jne    ffffffff80219467 <do_compaction+0xc7>
ffffffff80219503:	4c 8b 25 56 cf 02 00 	mov    0x2cf56(%rip),%r12        # ffffffff80246460 <caml_ephe_list_head>
ffffffff8021950a:	4d 85 e4             	test   %r12,%r12
ffffffff8021950d:	74 62                	je     ffffffff80219571 <do_compaction+0x1d1>
ffffffff8021950f:	4c 8d 2d 4a cf 02 00 	lea    0x2cf4a(%rip),%r13        # ffffffff80246460 <caml_ephe_list_head>
ffffffff80219516:	49 8b 44 24 f8       	mov    -0x8(%r12),%rax
ffffffff8021951b:	a8 03                	test   $0x3,%al
ffffffff8021951d:	75 08                	jne    ffffffff80219527 <do_compaction+0x187>
ffffffff8021951f:	90                   	nop
ffffffff80219520:	48 8b 00             	mov    (%rax),%rax
ffffffff80219523:	a8 03                	test   $0x3,%al
ffffffff80219525:	74 f9                	je     ffffffff80219520 <do_compaction+0x180>
ffffffff80219527:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021952b:	49 8d 5c 24 08       	lea    0x8(%r12),%rbx
ffffffff80219530:	49 8d 2c c4          	lea    (%r12,%rax,8),%rbp
ffffffff80219534:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80219538:	76 23                	jbe    ffffffff8021955d <do_compaction+0x1bd>
ffffffff8021953a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80219540:	48 8b 05 81 28 01 00 	mov    0x12881(%rip),%rax        # ffffffff8022bdc8 <caml_ephe_none>
ffffffff80219547:	48 39 03             	cmp    %rax,(%rbx)
ffffffff8021954a:	74 08                	je     ffffffff80219554 <do_compaction+0x1b4>
ffffffff8021954c:	48 89 df             	mov    %rbx,%rdi
ffffffff8021954f:	e8 4c fd ff ff       	callq  ffffffff802192a0 <invert_pointer_at>
ffffffff80219554:	48 83 c3 08          	add    $0x8,%rbx
ffffffff80219558:	48 39 dd             	cmp    %rbx,%rbp
ffffffff8021955b:	75 e3                	jne    ffffffff80219540 <do_compaction+0x1a0>
ffffffff8021955d:	4c 89 ef             	mov    %r13,%rdi
ffffffff80219560:	4d 89 e5             	mov    %r12,%r13
ffffffff80219563:	e8 38 fd ff ff       	callq  ffffffff802192a0 <invert_pointer_at>
ffffffff80219568:	4d 8b 24 24          	mov    (%r12),%r12
ffffffff8021956c:	4d 85 e4             	test   %r12,%r12
ffffffff8021956f:	75 a5                	jne    ffffffff80219516 <do_compaction+0x176>
ffffffff80219571:	48 8b 05 38 28 02 00 	mov    0x22838(%rip),%rax        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80219578:	48 85 c0             	test   %rax,%rax
ffffffff8021957b:	0f 84 f9 03 00 00    	je     ffffffff8021997a <do_compaction+0x5da>
ffffffff80219581:	48 c7 40 e8 00 00 00 	movq   $0x0,-0x18(%rax)
ffffffff80219588:	00 
ffffffff80219589:	48 8b 40 f8          	mov    -0x8(%rax),%rax
ffffffff8021958d:	48 85 c0             	test   %rax,%rax
ffffffff80219590:	75 ef                	jne    ffffffff80219581 <do_compaction+0x1e1>
ffffffff80219592:	48 8b 1d 17 28 02 00 	mov    0x22817(%rip),%rbx        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80219599:	48 89 1d d8 ce 02 00 	mov    %rbx,0x2ced8(%rip)        # ffffffff80246478 <compact_fl>
ffffffff802195a0:	48 85 db             	test   %rbx,%rbx
ffffffff802195a3:	0f 84 d1 03 00 00    	je     ffffffff8021997a <do_compaction+0x5da>
ffffffff802195a9:	4c 8b 5b f0          	mov    -0x10(%rbx),%r11
ffffffff802195ad:	49 89 d9             	mov    %rbx,%r9
ffffffff802195b0:	49 01 db             	add    %rbx,%r11
ffffffff802195b3:	49 39 db             	cmp    %rbx,%r11
ffffffff802195b6:	77 48                	ja     ffffffff80219600 <do_compaction+0x260>
ffffffff802195b8:	e9 71 01 00 00       	jmpq   ffffffff8021972e <do_compaction+0x38e>
ffffffff802195bd:	0f 1f 00             	nopl   (%rax)
ffffffff802195c0:	48 89 c5             	mov    %rax,%rbp
ffffffff802195c3:	48 89 c2             	mov    %rax,%rdx
ffffffff802195c6:	48 c1 ed 0a          	shr    $0xa,%rbp
ffffffff802195ca:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff802195ce:	48 8d 3c ed 08 00 00 	lea    0x8(,%rbp,8),%rdi
ffffffff802195d5:	00 
ffffffff802195d6:	0f b6 ca             	movzbl %dl,%ecx
ffffffff802195d9:	4d 8d 14 39          	lea    (%r9,%rdi,1),%r10
ffffffff802195dd:	80 fa f9             	cmp    $0xf9,%dl
ffffffff802195e0:	74 4f                	je     ffffffff80219631 <do_compaction+0x291>
ffffffff802195e2:	48 25 00 fc ff ff    	and    $0xfffffffffffffc00,%rax
ffffffff802195e8:	48 09 c8             	or     %rcx,%rax
ffffffff802195eb:	48 05 00 02 00 00    	add    $0x200,%rax
ffffffff802195f1:	49 89 01             	mov    %rax,(%r9)
ffffffff802195f4:	4d 89 d1             	mov    %r10,%r9
ffffffff802195f7:	4d 39 da             	cmp    %r11,%r10
ffffffff802195fa:	0f 83 2e 01 00 00    	jae    ffffffff8021972e <do_compaction+0x38e>
ffffffff80219600:	49 8b 01             	mov    (%r9),%rax
ffffffff80219603:	a8 03                	test   $0x3,%al
ffffffff80219605:	75 b9                	jne    ffffffff802195c0 <do_compaction+0x220>
ffffffff80219607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021960e:	00 00 
ffffffff80219610:	48 8b 00             	mov    (%rax),%rax
ffffffff80219613:	a8 03                	test   $0x3,%al
ffffffff80219615:	74 f9                	je     ffffffff80219610 <do_compaction+0x270>
ffffffff80219617:	48 89 c2             	mov    %rax,%rdx
ffffffff8021961a:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021961e:	48 8d 3c c5 08 00 00 	lea    0x8(,%rax,8),%rdi
ffffffff80219625:	00 
ffffffff80219626:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff8021962a:	48 89 c5             	mov    %rax,%rbp
ffffffff8021962d:	4d 8d 14 39          	lea    (%r9,%rdi,1),%r10
ffffffff80219631:	44 0f b6 ea          	movzbl %dl,%r13d
ffffffff80219635:	80 fa f9             	cmp    $0xf9,%dl
ffffffff80219638:	0f 84 9e 02 00 00    	je     ffffffff802198dc <do_compaction+0x53c>
ffffffff8021963e:	e8 dd fb ff ff       	callq  ffffffff80219220 <compact_allocate>
ffffffff80219643:	31 d2                	xor    %edx,%edx
ffffffff80219645:	49 8b 09             	mov    (%r9),%rcx
ffffffff80219648:	f6 c1 03             	test   $0x3,%cl
ffffffff8021964b:	0f 85 e9 02 00 00    	jne    ffffffff8021993a <do_compaction+0x59a>
ffffffff80219651:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff80219655:	0f 1f 00             	nopl   (%rax)
ffffffff80219658:	48 89 ce             	mov    %rcx,%rsi
ffffffff8021965b:	48 8b 09             	mov    (%rcx),%rcx
ffffffff8021965e:	48 89 3e             	mov    %rdi,(%rsi)
ffffffff80219661:	f6 c1 03             	test   $0x3,%cl
ffffffff80219664:	74 f2                	je     ffffffff80219658 <do_compaction+0x2b8>
ffffffff80219666:	48 c1 e5 0a          	shl    $0xa,%rbp
ffffffff8021966a:	4c 01 ed             	add    %r13,%rbp
ffffffff8021966d:	49 89 29             	mov    %rbp,(%r9)
ffffffff80219670:	48 85 d2             	test   %rdx,%rdx
ffffffff80219673:	0f 84 7b ff ff ff    	je     ffffffff802195f4 <do_compaction+0x254>
ffffffff80219679:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021967c:	83 e1 03             	and    $0x3,%ecx
ffffffff8021967f:	48 83 f9 03          	cmp    $0x3,%rcx
ffffffff80219683:	0f 84 6b ff ff ff    	je     ffffffff802195f4 <do_compaction+0x254>
ffffffff80219689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80219690:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
ffffffff80219694:	49 89 d0             	mov    %rdx,%r8
ffffffff80219697:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8021969a:	4c 89 c7             	mov    %r8,%rdi
ffffffff8021969d:	48 89 d1             	mov    %rdx,%rcx
ffffffff802196a0:	4c 29 cf             	sub    %r9,%rdi
ffffffff802196a3:	83 e1 03             	and    $0x3,%ecx
ffffffff802196a6:	48 83 f9 02          	cmp    $0x2,%rcx
ffffffff802196aa:	75 25                	jne    ffffffff802196d1 <do_compaction+0x331>
ffffffff802196ac:	48 8d 74 38 08       	lea    0x8(%rax,%rdi,1),%rsi
ffffffff802196b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff802196b8:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
ffffffff802196bc:	48 89 d1             	mov    %rdx,%rcx
ffffffff802196bf:	48 8b 12             	mov    (%rdx),%rdx
ffffffff802196c2:	48 89 31             	mov    %rsi,(%rcx)
ffffffff802196c5:	48 89 d1             	mov    %rdx,%rcx
ffffffff802196c8:	83 e1 03             	and    $0x3,%ecx
ffffffff802196cb:	48 83 f9 02          	cmp    $0x2,%rcx
ffffffff802196cf:	74 e7                	je     ffffffff802196b8 <do_compaction+0x318>
ffffffff802196d1:	48 c1 ff 03          	sar    $0x3,%rdi
ffffffff802196d5:	48 c1 e7 0a          	shl    $0xa,%rdi
ffffffff802196d9:	48 81 c7 f9 00 00 00 	add    $0xf9,%rdi
ffffffff802196e0:	49 89 38             	mov    %rdi,(%r8)
ffffffff802196e3:	48 83 f9 03          	cmp    $0x3,%rcx
ffffffff802196e7:	75 a7                	jne    ffffffff80219690 <do_compaction+0x2f0>
ffffffff802196e9:	e9 06 ff ff ff       	jmpq   ffffffff802195f4 <do_compaction+0x254>
ffffffff802196ee:	66 90                	xchg   %ax,%ax
ffffffff802196f0:	49 8b 45 00          	mov    0x0(%r13),%rax
ffffffff802196f4:	48 89 c2             	mov    %rax,%rdx
ffffffff802196f7:	83 e2 03             	and    $0x3,%edx
ffffffff802196fa:	48 83 fa 03          	cmp    $0x3,%rdx
ffffffff802196fe:	74 13                	je     ffffffff80219713 <do_compaction+0x373>
ffffffff80219700:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffff80219704:	48 8b 00             	mov    (%rax),%rax
ffffffff80219707:	48 89 c2             	mov    %rax,%rdx
ffffffff8021970a:	83 e2 03             	and    $0x3,%edx
ffffffff8021970d:	48 83 fa 03          	cmp    $0x3,%rdx
ffffffff80219711:	75 ed                	jne    ffffffff80219700 <do_compaction+0x360>
ffffffff80219713:	48 89 c1             	mov    %rax,%rcx
ffffffff80219716:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff8021971a:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff8021971e:	0f b6 d0             	movzbl %al,%edx
ffffffff80219721:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80219725:	4c 8d 2c ce          	lea    (%rsi,%rcx,8),%r13
ffffffff80219729:	e9 87 fd ff ff       	jmpq   ffffffff802194b5 <do_compaction+0x115>
ffffffff8021972e:	48 8b 5b f8          	mov    -0x8(%rbx),%rbx
ffffffff80219732:	48 85 db             	test   %rbx,%rbx
ffffffff80219735:	0f 85 6e fe ff ff    	jne    ffffffff802195a9 <do_compaction+0x209>
ffffffff8021973b:	48 8b 05 6e 26 02 00 	mov    0x2266e(%rip),%rax        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80219742:	48 85 c0             	test   %rax,%rax
ffffffff80219745:	0f 84 2f 02 00 00    	je     ffffffff8021997a <do_compaction+0x5da>
ffffffff8021974b:	48 c7 40 e8 00 00 00 	movq   $0x0,-0x18(%rax)
ffffffff80219752:	00 
ffffffff80219753:	48 8b 40 f8          	mov    -0x8(%rax),%rax
ffffffff80219757:	48 85 c0             	test   %rax,%rax
ffffffff8021975a:	75 ef                	jne    ffffffff8021974b <do_compaction+0x3ab>
ffffffff8021975c:	4c 8b 25 4d 26 02 00 	mov    0x2264d(%rip),%r12        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80219763:	4c 89 25 0e cd 02 00 	mov    %r12,0x2cd0e(%rip)        # ffffffff80246478 <compact_fl>
ffffffff8021976a:	4d 85 e4             	test   %r12,%r12
ffffffff8021976d:	0f 84 12 02 00 00    	je     ffffffff80219985 <do_compaction+0x5e5>
ffffffff80219773:	49 8b 6c 24 f0       	mov    -0x10(%r12),%rbp
ffffffff80219778:	4c 89 e3             	mov    %r12,%rbx
ffffffff8021977b:	4c 01 e5             	add    %r12,%rbp
ffffffff8021977e:	4c 39 e5             	cmp    %r12,%rbp
ffffffff80219781:	77 0a                	ja     ffffffff8021978d <do_compaction+0x3ed>
ffffffff80219783:	eb 40                	jmp    ffffffff802197c5 <do_compaction+0x425>
ffffffff80219785:	0f 1f 00             	nopl   (%rax)
ffffffff80219788:	48 39 dd             	cmp    %rbx,%rbp
ffffffff8021978b:	76 38                	jbe    ffffffff802197c5 <do_compaction+0x425>
ffffffff8021978d:	48 8b 03             	mov    (%rbx),%rax
ffffffff80219790:	49 89 da             	mov    %rbx,%r10
ffffffff80219793:	48 89 c2             	mov    %rax,%rdx
ffffffff80219796:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021979a:	4c 8d 0c d5 08 00 00 	lea    0x8(,%rdx,8),%r9
ffffffff802197a1:	00 
ffffffff802197a2:	4c 01 cb             	add    %r9,%rbx
ffffffff802197a5:	f6 c4 03             	test   $0x3,%ah
ffffffff802197a8:	75 de                	jne    ffffffff80219788 <do_compaction+0x3e8>
ffffffff802197aa:	4c 89 cf             	mov    %r9,%rdi
ffffffff802197ad:	e8 6e fa ff ff       	callq  ffffffff80219220 <compact_allocate>
ffffffff802197b2:	48 89 c7             	mov    %rax,%rdi
ffffffff802197b5:	4c 89 ca             	mov    %r9,%rdx
ffffffff802197b8:	4c 89 d6             	mov    %r10,%rsi
ffffffff802197bb:	e8 e5 68 fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff802197c0:	48 39 dd             	cmp    %rbx,%rbp
ffffffff802197c3:	77 c8                	ja     ffffffff8021978d <do_compaction+0x3ed>
ffffffff802197c5:	4d 8b 64 24 f8       	mov    -0x8(%r12),%r12
ffffffff802197ca:	4d 85 e4             	test   %r12,%r12
ffffffff802197cd:	75 a4                	jne    ffffffff80219773 <do_compaction+0x3d3>
ffffffff802197cf:	48 8b 1d da 25 02 00 	mov    0x225da(%rip),%rbx        # ffffffff8023bdb0 <caml_heap_start>
ffffffff802197d6:	48 85 db             	test   %rbx,%rbx
ffffffff802197d9:	0f 84 a6 01 00 00    	je     ffffffff80219985 <do_compaction+0x5e5>
ffffffff802197df:	48 89 d8             	mov    %rbx,%rax
ffffffff802197e2:	45 31 e4             	xor    %r12d,%r12d
ffffffff802197e5:	31 c9                	xor    %ecx,%ecx
ffffffff802197e7:	48 8b 50 e8          	mov    -0x18(%rax),%rdx
ffffffff802197eb:	48 85 d2             	test   %rdx,%rdx
ffffffff802197ee:	74 1b                	je     ffffffff8021980b <do_compaction+0x46b>
ffffffff802197f0:	48 89 d6             	mov    %rdx,%rsi
ffffffff802197f3:	48 c1 ee 03          	shr    $0x3,%rsi
ffffffff802197f7:	48 01 f1             	add    %rsi,%rcx
ffffffff802197fa:	48 8b 70 f0          	mov    -0x10(%rax),%rsi
ffffffff802197fe:	48 29 d6             	sub    %rdx,%rsi
ffffffff80219801:	48 89 f2             	mov    %rsi,%rdx
ffffffff80219804:	48 c1 ea 03          	shr    $0x3,%rdx
ffffffff80219808:	49 01 d4             	add    %rdx,%r12
ffffffff8021980b:	48 8b 40 f8          	mov    -0x8(%rax),%rax
ffffffff8021980f:	48 85 c0             	test   %rax,%rax
ffffffff80219812:	75 d3                	jne    ffffffff802197e7 <do_compaction+0x447>
ffffffff80219814:	48 89 ca             	mov    %rcx,%rdx
ffffffff80219817:	48 b9 c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rcx
ffffffff8021981e:	c2 f5 28 
ffffffff80219821:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff80219825:	48 89 d0             	mov    %rdx,%rax
ffffffff80219828:	48 f7 e1             	mul    %rcx
ffffffff8021982b:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff8021982f:	48 89 d5             	mov    %rdx,%rbp
ffffffff80219832:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80219836:	48 0f af 2d 82 25 02 	imul   0x22582(%rip),%rbp        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8021983d:	00 
ffffffff8021983e:	eb 10                	jmp    ffffffff80219850 <do_compaction+0x4b0>
ffffffff80219840:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
ffffffff80219844:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff80219848:	49 01 c4             	add    %rax,%r12
ffffffff8021984b:	48 85 db             	test   %rbx,%rbx
ffffffff8021984e:	74 1d                	je     ffffffff8021986d <do_compaction+0x4cd>
ffffffff80219850:	48 89 df             	mov    %rbx,%rdi
ffffffff80219853:	48 8b 5b f8          	mov    -0x8(%rbx),%rbx
ffffffff80219857:	48 83 7f e8 00       	cmpq   $0x0,-0x18(%rdi)
ffffffff8021985c:	75 ed                	jne    ffffffff8021984b <do_compaction+0x4ab>
ffffffff8021985e:	4c 39 e5             	cmp    %r12,%rbp
ffffffff80219861:	77 dd                	ja     ffffffff80219840 <do_compaction+0x4a0>
ffffffff80219863:	e8 98 79 ff ff       	callq  ffffffff80211200 <caml_shrink_heap>
ffffffff80219868:	48 85 db             	test   %rbx,%rbx
ffffffff8021986b:	75 e3                	jne    ffffffff80219850 <do_compaction+0x4b0>
ffffffff8021986d:	48 8b 1d 3c 25 02 00 	mov    0x2253c(%rip),%rbx        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80219874:	e8 d7 1b 00 00       	callq  ffffffff8021b450 <caml_fl_reset>
ffffffff80219879:	48 85 db             	test   %rbx,%rbx
ffffffff8021987c:	75 0b                	jne    ffffffff80219889 <do_compaction+0x4e9>
ffffffff8021987e:	eb 39                	jmp    ffffffff802198b9 <do_compaction+0x519>
ffffffff80219880:	48 8b 5b f8          	mov    -0x8(%rbx),%rbx
ffffffff80219884:	48 85 db             	test   %rbx,%rbx
ffffffff80219887:	74 30                	je     ffffffff802198b9 <do_compaction+0x519>
ffffffff80219889:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
ffffffff8021988d:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
ffffffff80219891:	48 39 d0             	cmp    %rdx,%rax
ffffffff80219894:	76 ea                	jbe    ffffffff80219880 <do_compaction+0x4e0>
ffffffff80219896:	48 29 d0             	sub    %rdx,%rax
ffffffff80219899:	48 8d 3c 13          	lea    (%rbx,%rdx,1),%rdi
ffffffff8021989d:	31 c9                	xor    %ecx,%ecx
ffffffff8021989f:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff802198a4:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff802198a8:	48 89 c6             	mov    %rax,%rsi
ffffffff802198ab:	e8 e0 1e 00 00       	callq  ffffffff8021b790 <caml_make_free_blocks>
ffffffff802198b0:	48 8b 5b f8          	mov    -0x8(%rbx),%rbx
ffffffff802198b4:	48 85 db             	test   %rbx,%rbx
ffffffff802198b7:	75 d0                	jne    ffffffff80219889 <do_compaction+0x4e9>
ffffffff802198b9:	48 83 05 cf eb 02 00 	addq   $0x1,0x2ebcf(%rip)        # ffffffff80248490 <caml_stat_compactions>
ffffffff802198c0:	01 
ffffffff802198c1:	5b                   	pop    %rbx
ffffffff802198c2:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff802198c7:	31 c0                	xor    %eax,%eax
ffffffff802198c9:	5d                   	pop    %rbp
ffffffff802198ca:	48 8d 35 64 8b 00 00 	lea    0x8b64(%rip),%rsi        # ffffffff80222435 <posix_signals+0x355>
ffffffff802198d1:	41 5c                	pop    %r12
ffffffff802198d3:	41 5d                	pop    %r13
ffffffff802198d5:	41 5e                	pop    %r14
ffffffff802198d7:	e9 14 89 ff ff       	jmpq   ffffffff802121f0 <caml_gc_message>
ffffffff802198dc:	4d 8b 22             	mov    (%r10),%r12
ffffffff802198df:	4c 89 e0             	mov    %r12,%rax
ffffffff802198e2:	83 e0 03             	and    $0x3,%eax
ffffffff802198e5:	48 83 f8 03          	cmp    $0x3,%rax
ffffffff802198e9:	74 19                	je     ffffffff80219904 <do_compaction+0x564>
ffffffff802198eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802198f0:	49 83 e4 fc          	and    $0xfffffffffffffffc,%r12
ffffffff802198f4:	4d 8b 24 24          	mov    (%r12),%r12
ffffffff802198f8:	4c 89 e0             	mov    %r12,%rax
ffffffff802198fb:	83 e0 03             	and    $0x3,%eax
ffffffff802198fe:	48 83 f8 03          	cmp    $0x3,%rax
ffffffff80219902:	75 ec                	jne    ffffffff802198f0 <do_compaction+0x550>
ffffffff80219904:	4c 89 e5             	mov    %r12,%rbp
ffffffff80219907:	4d 89 e5             	mov    %r12,%r13
ffffffff8021990a:	48 c1 ed 0a          	shr    $0xa,%rbp
ffffffff8021990e:	49 c1 ed 02          	shr    $0x2,%r13
ffffffff80219912:	48 8d 3c ed 08 00 00 	lea    0x8(,%rbp,8),%rdi
ffffffff80219919:	00 
ffffffff8021991a:	45 0f b6 ed          	movzbl %r13b,%r13d
ffffffff8021991e:	4d 8d 34 39          	lea    (%r9,%rdi,1),%r14
ffffffff80219922:	e8 f9 f8 ff ff       	callq  ffffffff80219220 <compact_allocate>
ffffffff80219927:	49 8b 09             	mov    (%r9),%rcx
ffffffff8021992a:	f6 c1 03             	test   $0x3,%cl
ffffffff8021992d:	75 20                	jne    ffffffff8021994f <do_compaction+0x5af>
ffffffff8021992f:	4c 89 d2             	mov    %r10,%rdx
ffffffff80219932:	4d 89 f2             	mov    %r14,%r10
ffffffff80219935:	e9 17 fd ff ff       	jmpq   ffffffff80219651 <do_compaction+0x2b1>
ffffffff8021993a:	48 c1 e5 0a          	shl    $0xa,%rbp
ffffffff8021993e:	44 89 e8             	mov    %r13d,%eax
ffffffff80219941:	48 01 e8             	add    %rbp,%rax
ffffffff80219944:	49 89 01             	mov    %rax,(%r9)
ffffffff80219947:	4d 89 d1             	mov    %r10,%r9
ffffffff8021994a:	e9 a8 fc ff ff       	jmpq   ffffffff802195f7 <do_compaction+0x257>
ffffffff8021994f:	4c 89 e2             	mov    %r12,%rdx
ffffffff80219952:	48 81 e2 00 fc ff ff 	and    $0xfffffffffffffc00,%rdx
ffffffff80219959:	4c 01 ea             	add    %r13,%rdx
ffffffff8021995c:	49 89 11             	mov    %rdx,(%r9)
ffffffff8021995f:	4c 89 d2             	mov    %r10,%rdx
ffffffff80219962:	4d 89 f2             	mov    %r14,%r10
ffffffff80219965:	e9 0f fd ff ff       	jmpq   ffffffff80219679 <do_compaction+0x2d9>
ffffffff8021996a:	4c 8b 25 ef ca 02 00 	mov    0x2caef(%rip),%r12        # ffffffff80246460 <caml_ephe_list_head>
ffffffff80219971:	4d 85 e4             	test   %r12,%r12
ffffffff80219974:	0f 85 95 fb ff ff    	jne    ffffffff8021950f <do_compaction+0x16f>
ffffffff8021997a:	48 c7 05 f3 ca 02 00 	movq   $0x0,0x2caf3(%rip)        # ffffffff80246478 <compact_fl>
ffffffff80219981:	00 00 00 00 
ffffffff80219985:	e8 c6 1a 00 00       	callq  ffffffff8021b450 <caml_fl_reset>
ffffffff8021998a:	e9 2a ff ff ff       	jmpq   ffffffff802198b9 <do_compaction+0x519>
ffffffff8021998f:	90                   	nop

ffffffff80219990 <caml_compact_heap>:
ffffffff80219990:	55                   	push   %rbp
ffffffff80219991:	53                   	push   %rbx
ffffffff80219992:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80219996:	e8 05 fa ff ff       	callq  ffffffff802193a0 <do_compaction>
ffffffff8021999b:	48 8b 0d fe ea 02 00 	mov    0x2eafe(%rip),%rcx        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff802199a2:	48 2b 0d 5f cb 02 00 	sub    0x2cb5f(%rip),%rcx        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff802199a9:	48 be c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rsi
ffffffff802199b0:	c2 f5 28 
ffffffff802199b3:	48 89 ca             	mov    %rcx,%rdx
ffffffff802199b6:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff802199ba:	48 89 d0             	mov    %rdx,%rax
ffffffff802199bd:	48 f7 e6             	mul    %rsi
ffffffff802199c0:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff802199c4:	48 83 c2 01          	add    $0x1,%rdx
ffffffff802199c8:	48 0f af 15 f0 23 02 	imul   0x223f0(%rip),%rdx        # ffffffff8023bdc0 <caml_percent_free>
ffffffff802199cf:	00 
ffffffff802199d0:	48 8d bc 11 00 02 00 	lea    0x200(%rcx,%rdx,1),%rdi
ffffffff802199d7:	00 
ffffffff802199d8:	e8 a3 59 ff ff       	callq  ffffffff8020f380 <caml_clip_heap_chunk_wsz>
ffffffff802199dd:	48 83 3d 5b 24 02 00 	cmpq   $0x0,0x2245b(%rip)        # ffffffff8023be40 <caml_use_huge_pages>
ffffffff802199e4:	00 
ffffffff802199e5:	48 8b 15 b4 ea 02 00 	mov    0x2eab4(%rip),%rdx        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff802199ec:	48 89 c3             	mov    %rax,%rbx
ffffffff802199ef:	74 10                	je     ffffffff80219a01 <caml_compact_heap+0x71>
ffffffff802199f1:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
ffffffff802199f8:	00 
ffffffff802199f9:	48 3d 00 00 40 00    	cmp    $0x400000,%rax
ffffffff802199ff:	76 12                	jbe    ffffffff80219a13 <caml_compact_heap+0x83>
ffffffff80219a01:	48 89 d0             	mov    %rdx,%rax
ffffffff80219a04:	48 c1 e8 3f          	shr    $0x3f,%rax
ffffffff80219a08:	48 01 d0             	add    %rdx,%rax
ffffffff80219a0b:	48 d1 f8             	sar    %rax
ffffffff80219a0e:	48 39 d8             	cmp    %rbx,%rax
ffffffff80219a11:	77 0d                	ja     ffffffff80219a20 <caml_compact_heap+0x90>
ffffffff80219a13:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80219a17:	5b                   	pop    %rbx
ffffffff80219a18:	5d                   	pop    %rbp
ffffffff80219a19:	c3                   	retq   
ffffffff80219a1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80219a20:	48 89 da             	mov    %rbx,%rdx
ffffffff80219a23:	48 8d 35 66 8a 00 00 	lea    0x8a66(%rip),%rsi        # ffffffff80222490 <posix_signals+0x3b0>
ffffffff80219a2a:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff80219a2f:	31 c0                	xor    %eax,%eax
ffffffff80219a31:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80219a35:	e8 b6 87 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80219a3a:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
ffffffff80219a41:	00 
ffffffff80219a42:	e8 e9 6d ff ff       	callq  ffffffff80210830 <caml_alloc_for_heap>
ffffffff80219a47:	48 89 c5             	mov    %rax,%rbp
ffffffff80219a4a:	48 85 c0             	test   %rax,%rax
ffffffff80219a4d:	74 c4                	je     ffffffff80219a13 <caml_compact_heap+0x83>
ffffffff80219a4f:	48 8b 70 f0          	mov    -0x10(%rax),%rsi
ffffffff80219a53:	31 d2                	xor    %edx,%edx
ffffffff80219a55:	48 89 c7             	mov    %rax,%rdi
ffffffff80219a58:	b9 00 02 00 00       	mov    $0x200,%ecx
ffffffff80219a5d:	48 c1 ee 03          	shr    $0x3,%rsi
ffffffff80219a61:	e8 2a 1d 00 00       	callq  ffffffff8021b790 <caml_make_free_blocks>
ffffffff80219a66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80219a6a:	48 89 ee             	mov    %rbp,%rsi
ffffffff80219a6d:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80219a72:	48 01 ea             	add    %rbp,%rdx
ffffffff80219a75:	e8 a6 72 ff ff       	callq  ffffffff80210d20 <caml_page_table_add>
ffffffff80219a7a:	85 c0                	test   %eax,%eax
ffffffff80219a7c:	75 52                	jne    ffffffff80219ad0 <caml_compact_heap+0x140>
ffffffff80219a7e:	48 8b 05 2b 23 02 00 	mov    0x2232b(%rip),%rax        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80219a85:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80219a89:	48 89 2d 20 23 02 00 	mov    %rbp,0x22320(%rip)        # ffffffff8023bdb0 <caml_heap_start>
ffffffff80219a90:	48 83 05 f0 e9 02 00 	addq   $0x1,0x2e9f0(%rip)        # ffffffff80248488 <caml_stat_heap_chunks>
ffffffff80219a97:	01 
ffffffff80219a98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80219a9c:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff80219aa0:	48 03 05 f9 e9 02 00 	add    0x2e9f9(%rip),%rax        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff80219aa7:	48 3b 05 ea e9 02 00 	cmp    0x2e9ea(%rip),%rax        # ffffffff80248498 <caml_stat_top_heap_wsz>
ffffffff80219aae:	48 89 05 eb e9 02 00 	mov    %rax,0x2e9eb(%rip)        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff80219ab5:	7e 07                	jle    ffffffff80219abe <caml_compact_heap+0x12e>
ffffffff80219ab7:	48 89 05 da e9 02 00 	mov    %rax,0x2e9da(%rip)        # ffffffff80248498 <caml_stat_top_heap_wsz>
ffffffff80219abe:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80219ac2:	5b                   	pop    %rbx
ffffffff80219ac3:	5d                   	pop    %rbp
ffffffff80219ac4:	e9 d7 f8 ff ff       	jmpq   ffffffff802193a0 <do_compaction>
ffffffff80219ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80219ad0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80219ad4:	48 89 ef             	mov    %rbp,%rdi
ffffffff80219ad7:	5b                   	pop    %rbx
ffffffff80219ad8:	5d                   	pop    %rbp
ffffffff80219ad9:	e9 b2 6e ff ff       	jmpq   ffffffff80210990 <caml_free_for_heap>
ffffffff80219ade:	66 90                	xchg   %ax,%ax

ffffffff80219ae0 <caml_compact_heap_maybe>:
ffffffff80219ae0:	48 81 3d 85 c9 02 00 	cmpq   $0xf423f,0x2c985(%rip)        # ffffffff80246470 <caml_percent_max>
ffffffff80219ae7:	3f 42 0f 00 
ffffffff80219aeb:	77 0a                	ja     ffffffff80219af7 <caml_compact_heap_maybe+0x17>
ffffffff80219aed:	48 83 3d b3 e9 02 00 	cmpq   $0x2,0x2e9b3(%rip)        # ffffffff802484a8 <caml_stat_major_collections>
ffffffff80219af4:	02 
ffffffff80219af5:	7f 09                	jg     ffffffff80219b00 <caml_compact_heap_maybe+0x20>
ffffffff80219af7:	c3                   	retq   
ffffffff80219af8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80219aff:	00 
ffffffff80219b00:	41 54                	push   %r12
ffffffff80219b02:	31 ff                	xor    %edi,%edi
ffffffff80219b04:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80219b08:	e8 73 58 ff ff       	callq  ffffffff8020f380 <caml_clip_heap_chunk_wsz>
ffffffff80219b0d:	48 8b 15 8c e9 02 00 	mov    0x2e98c(%rip),%rdx        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff80219b14:	48 01 c0             	add    %rax,%rax
ffffffff80219b17:	48 39 d0             	cmp    %rdx,%rax
ffffffff80219b1a:	0f 83 d4 00 00 00    	jae    ffffffff80219bf4 <caml_compact_heap_maybe+0x114>
ffffffff80219b20:	48 83 3d 18 23 02 00 	cmpq   $0x0,0x22318(%rip)        # ffffffff8023be40 <caml_use_huge_pages>
ffffffff80219b27:	00 
ffffffff80219b28:	0f 85 b2 00 00 00    	jne    ffffffff80219be0 <caml_compact_heap_maybe+0x100>
ffffffff80219b2e:	48 8b 05 d3 c9 02 00 	mov    0x2c9d3(%rip),%rax        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff80219b35:	48 85 c0             	test   %rax,%rax
ffffffff80219b38:	0f 88 2a 02 00 00    	js     ffffffff80219d68 <caml_compact_heap_maybe+0x288>
ffffffff80219b3e:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff80219b42:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff80219b47:	f2 0f 10 05 a1 82 00 	movsd  0x82a1(%rip),%xmm0        # ffffffff80221df0 <int32_length+0x310>
ffffffff80219b4e:	00 
ffffffff80219b4f:	4c 8b 05 22 22 02 00 	mov    0x22222(%rip),%r8        # ffffffff8023bd78 <caml_fl_wsz_at_phase_change>
ffffffff80219b56:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
ffffffff80219b5a:	4d 85 c0             	test   %r8,%r8
ffffffff80219b5d:	0f 88 dd 01 00 00    	js     ffffffff80219d40 <caml_compact_heap_maybe+0x260>
ffffffff80219b63:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff80219b67:	f2 49 0f 2a d0       	cvtsi2sd %r8,%xmm2
ffffffff80219b6c:	f2 0f 58 d2          	addsd  %xmm2,%xmm2
ffffffff80219b70:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
ffffffff80219b74:	66 0f 28 d0          	movapd %xmm0,%xmm2
ffffffff80219b78:	f2 0f c2 15 6f 88 00 	cmpnltsd 0x886f(%rip),%xmm2        # ffffffff802223f0 <posix_signals+0x310>
ffffffff80219b7f:	00 05 
ffffffff80219b81:	66 0f 54 c2          	andpd  %xmm2,%xmm0
ffffffff80219b85:	66 0f 55 d1          	andnpd %xmm1,%xmm2
ffffffff80219b89:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff80219b8d:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff80219b92:	66 0f 56 c2          	orpd   %xmm2,%xmm0
ffffffff80219b96:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff80219b9a:	73 64                	jae    ffffffff80219c00 <caml_compact_heap_maybe+0x120>
ffffffff80219b9c:	f2 0f 10 15 84 89 00 	movsd  0x8984(%rip),%xmm2        # ffffffff80222528 <posix_signals+0x448>
ffffffff80219ba3:	00 
ffffffff80219ba4:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
ffffffff80219ba8:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
ffffffff80219bac:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
ffffffff80219bb0:	66 0f 2f 15 48 82 00 	comisd 0x8248(%rip),%xmm2        # ffffffff80221e00 <int32_length+0x320>
ffffffff80219bb7:	00 
ffffffff80219bb8:	0f 87 f2 01 00 00    	ja     ffffffff80219db0 <caml_compact_heap_maybe+0x2d0>
ffffffff80219bbe:	f2 0f 10 05 42 82 00 	movsd  0x8242(%rip),%xmm0        # ffffffff80221e08 <int32_length+0x328>
ffffffff80219bc5:	00 
ffffffff80219bc6:	66 0f 2f d0          	comisd %xmm0,%xmm2
ffffffff80219bca:	0f 83 80 02 00 00    	jae    ffffffff80219e50 <caml_compact_heap_maybe+0x370>
ffffffff80219bd0:	f2 4c 0f 2c e2       	cvttsd2si %xmm2,%r12
ffffffff80219bd5:	eb 37                	jmp    ffffffff80219c0e <caml_compact_heap_maybe+0x12e>
ffffffff80219bd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80219bde:	00 00 
ffffffff80219be0:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
ffffffff80219be7:	00 
ffffffff80219be8:	48 3d 00 00 40 00    	cmp    $0x400000,%rax
ffffffff80219bee:	0f 87 3a ff ff ff    	ja     ffffffff80219b2e <caml_compact_heap_maybe+0x4e>
ffffffff80219bf4:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80219bf8:	41 5c                	pop    %r12
ffffffff80219bfa:	c3                   	retq   
ffffffff80219bfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80219c00:	f2 0f 10 15 f8 81 00 	movsd  0x81f8(%rip),%xmm2        # ffffffff80221e00 <int32_length+0x320>
ffffffff80219c07:	00 
ffffffff80219c08:	41 bc 40 42 0f 00    	mov    $0xf4240,%r12d
ffffffff80219c0e:	4c 89 c2             	mov    %r8,%rdx
ffffffff80219c11:	31 c0                	xor    %eax,%eax
ffffffff80219c13:	bf 00 02 00 00       	mov    $0x200,%edi
ffffffff80219c18:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
ffffffff80219c1e:	48 8d 35 93 88 00 00 	lea    0x8893(%rip),%rsi        # ffffffff802224b8 <posix_signals+0x3d8>
ffffffff80219c25:	e8 c6 85 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80219c2a:	48 8b 15 d7 c8 02 00 	mov    0x2c8d7(%rip),%rdx        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff80219c31:	31 c0                	xor    %eax,%eax
ffffffff80219c33:	48 8d 35 02 88 00 00 	lea    0x8802(%rip),%rsi        # ffffffff8022243c <posix_signals+0x35c>
ffffffff80219c3a:	bf 00 02 00 00       	mov    $0x200,%edi
ffffffff80219c3f:	e8 ac 85 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80219c44:	31 c0                	xor    %eax,%eax
ffffffff80219c46:	4c 89 e2             	mov    %r12,%rdx
ffffffff80219c49:	bf 00 02 00 00       	mov    $0x200,%edi
ffffffff80219c4e:	48 8d 35 04 88 00 00 	lea    0x8804(%rip),%rsi        # ffffffff80222459 <posix_signals+0x379>
ffffffff80219c55:	e8 96 85 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80219c5a:	48 8b 05 0f c8 02 00 	mov    0x2c80f(%rip),%rax        # ffffffff80246470 <caml_percent_max>
ffffffff80219c61:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
ffffffff80219c67:	48 85 c0             	test   %rax,%rax
ffffffff80219c6a:	0f 88 20 01 00 00    	js     ffffffff80219d90 <caml_compact_heap_maybe+0x2b0>
ffffffff80219c70:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80219c74:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff80219c79:	66 0f 2f d0          	comisd %xmm0,%xmm2
ffffffff80219c7d:	0f 82 71 ff ff ff    	jb     ffffffff80219bf4 <caml_compact_heap_maybe+0x114>
ffffffff80219c83:	31 c0                	xor    %eax,%eax
ffffffff80219c85:	48 8d 35 54 88 00 00 	lea    0x8854(%rip),%rsi        # ffffffff802224e0 <posix_signals+0x400>
ffffffff80219c8c:	bf 00 02 00 00       	mov    $0x200,%edi
ffffffff80219c91:	e8 5a 85 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80219c96:	e8 d5 7d ff ff       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff80219c9b:	e8 e0 55 ff ff       	callq  ffffffff8020f280 <caml_finish_major_cycle>
ffffffff80219ca0:	48 8b 05 61 c8 02 00 	mov    0x2c861(%rip),%rax        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff80219ca7:	48 85 c0             	test   %rax,%rax
ffffffff80219caa:	0f 88 20 01 00 00    	js     ffffffff80219dd0 <caml_compact_heap_maybe+0x2f0>
ffffffff80219cb0:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80219cb4:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff80219cb9:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff80219cbd:	f2 0f 10 0d 63 88 00 	movsd  0x8863(%rip),%xmm1        # ffffffff80222528 <posix_signals+0x448>
ffffffff80219cc4:	00 
ffffffff80219cc5:	f2 48 0f 2a 15 d2 e7 	cvtsi2sdq 0x2e7d2(%rip),%xmm2        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff80219ccc:	02 00 
ffffffff80219cce:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
ffffffff80219cd2:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
ffffffff80219cd6:	f2 0f 10 05 2a 81 00 	movsd  0x812a(%rip),%xmm0        # ffffffff80221e08 <int32_length+0x328>
ffffffff80219cdd:	00 
ffffffff80219cde:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
ffffffff80219ce2:	66 0f 2f c8          	comisd %xmm0,%xmm1
ffffffff80219ce6:	0f 83 24 01 00 00    	jae    ffffffff80219e10 <caml_compact_heap_maybe+0x330>
ffffffff80219cec:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
ffffffff80219cf1:	31 c0                	xor    %eax,%eax
ffffffff80219cf3:	48 8d 35 7b 87 00 00 	lea    0x877b(%rip),%rsi        # ffffffff80222475 <posix_signals+0x395>
ffffffff80219cfa:	bf 00 02 00 00       	mov    $0x200,%edi
ffffffff80219cff:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
ffffffff80219d05:	e8 e6 84 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff80219d0a:	48 8b 05 5f c7 02 00 	mov    0x2c75f(%rip),%rax        # ffffffff80246470 <caml_percent_max>
ffffffff80219d11:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
ffffffff80219d17:	48 85 c0             	test   %rax,%rax
ffffffff80219d1a:	0f 88 10 01 00 00    	js     ffffffff80219e30 <caml_compact_heap_maybe+0x350>
ffffffff80219d20:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80219d24:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff80219d29:	66 0f 2f c8          	comisd %xmm0,%xmm1
ffffffff80219d2d:	0f 82 bd 00 00 00    	jb     ffffffff80219df0 <caml_compact_heap_maybe+0x310>
ffffffff80219d33:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80219d37:	41 5c                	pop    %r12
ffffffff80219d39:	e9 52 fc ff ff       	jmpq   ffffffff80219990 <caml_compact_heap>
ffffffff80219d3e:	66 90                	xchg   %ax,%ax
ffffffff80219d40:	4c 89 c0             	mov    %r8,%rax
ffffffff80219d43:	4c 89 c1             	mov    %r8,%rcx
ffffffff80219d46:	66 0f ef d2          	pxor   %xmm2,%xmm2
ffffffff80219d4a:	48 d1 e8             	shr    %rax
ffffffff80219d4d:	83 e1 01             	and    $0x1,%ecx
ffffffff80219d50:	48 09 c8             	or     %rcx,%rax
ffffffff80219d53:	f2 48 0f 2a d0       	cvtsi2sd %rax,%xmm2
ffffffff80219d58:	f2 0f 58 d2          	addsd  %xmm2,%xmm2
ffffffff80219d5c:	e9 0b fe ff ff       	jmpq   ffffffff80219b6c <caml_compact_heap_maybe+0x8c>
ffffffff80219d61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80219d68:	48 89 c1             	mov    %rax,%rcx
ffffffff80219d6b:	83 e0 01             	and    $0x1,%eax
ffffffff80219d6e:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff80219d72:	48 d1 e9             	shr    %rcx
ffffffff80219d75:	48 09 c1             	or     %rax,%rcx
ffffffff80219d78:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
ffffffff80219d7d:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff80219d81:	e9 c1 fd ff ff       	jmpq   ffffffff80219b47 <caml_compact_heap_maybe+0x67>
ffffffff80219d86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80219d8d:	00 00 00 
ffffffff80219d90:	48 89 c2             	mov    %rax,%rdx
ffffffff80219d93:	83 e0 01             	and    $0x1,%eax
ffffffff80219d96:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80219d9a:	48 d1 ea             	shr    %rdx
ffffffff80219d9d:	48 09 c2             	or     %rax,%rdx
ffffffff80219da0:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
ffffffff80219da5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff80219da9:	e9 cb fe ff ff       	jmpq   ffffffff80219c79 <caml_compact_heap_maybe+0x199>
ffffffff80219dae:	66 90                	xchg   %ax,%ax
ffffffff80219db0:	48 8b 05 49 80 00 00 	mov    0x8049(%rip),%rax        # ffffffff80221e00 <int32_length+0x320>
ffffffff80219db7:	41 bc 40 42 0f 00    	mov    $0xf4240,%r12d
ffffffff80219dbd:	66 48 0f 6e d0       	movq   %rax,%xmm2
ffffffff80219dc2:	e9 47 fe ff ff       	jmpq   ffffffff80219c0e <caml_compact_heap_maybe+0x12e>
ffffffff80219dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80219dce:	00 00 
ffffffff80219dd0:	48 89 c2             	mov    %rax,%rdx
ffffffff80219dd3:	83 e0 01             	and    $0x1,%eax
ffffffff80219dd6:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80219dda:	48 d1 ea             	shr    %rdx
ffffffff80219ddd:	48 09 c2             	or     %rax,%rdx
ffffffff80219de0:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
ffffffff80219de5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff80219de9:	e9 cb fe ff ff       	jmpq   ffffffff80219cb9 <caml_compact_heap_maybe+0x1d9>
ffffffff80219dee:	66 90                	xchg   %ax,%ax
ffffffff80219df0:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80219df4:	48 8d 35 0d 87 00 00 	lea    0x870d(%rip),%rsi        # ffffffff80222508 <posix_signals+0x428>
ffffffff80219dfb:	bf 00 02 00 00       	mov    $0x200,%edi
ffffffff80219e00:	31 c0                	xor    %eax,%eax
ffffffff80219e02:	41 5c                	pop    %r12
ffffffff80219e04:	e9 e7 83 ff ff       	jmpq   ffffffff802121f0 <caml_gc_message>
ffffffff80219e09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80219e10:	66 0f 28 d9          	movapd %xmm1,%xmm3
ffffffff80219e14:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
ffffffff80219e18:	f2 48 0f 2c d3       	cvttsd2si %xmm3,%rdx
ffffffff80219e1d:	48 0f ba fa 3f       	btc    $0x3f,%rdx
ffffffff80219e22:	e9 ca fe ff ff       	jmpq   ffffffff80219cf1 <caml_compact_heap_maybe+0x211>
ffffffff80219e27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80219e2e:	00 00 
ffffffff80219e30:	48 89 c2             	mov    %rax,%rdx
ffffffff80219e33:	83 e0 01             	and    $0x1,%eax
ffffffff80219e36:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80219e3a:	48 d1 ea             	shr    %rdx
ffffffff80219e3d:	48 09 c2             	or     %rax,%rdx
ffffffff80219e40:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
ffffffff80219e45:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff80219e49:	e9 db fe ff ff       	jmpq   ffffffff80219d29 <caml_compact_heap_maybe+0x249>
ffffffff80219e4e:	66 90                	xchg   %ax,%ax
ffffffff80219e50:	66 0f 28 e2          	movapd %xmm2,%xmm4
ffffffff80219e54:	f2 0f 5c e0          	subsd  %xmm0,%xmm4
ffffffff80219e58:	f2 4c 0f 2c e4       	cvttsd2si %xmm4,%r12
ffffffff80219e5d:	49 0f ba fc 3f       	btc    $0x3f,%r12
ffffffff80219e62:	e9 a7 fd ff ff       	jmpq   ffffffff80219c0e <caml_compact_heap_maybe+0x12e>
ffffffff80219e67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80219e6e:	00 00 

ffffffff80219e70 <alloc_custom_gen>:
ffffffff80219e70:	41 57                	push   %r15
ffffffff80219e72:	41 56                	push   %r14
ffffffff80219e74:	49 89 d6             	mov    %rdx,%r14
ffffffff80219e77:	41 55                	push   %r13
ffffffff80219e79:	49 89 fd             	mov    %rdi,%r13
ffffffff80219e7c:	48 8d 7e 07          	lea    0x7(%rsi),%rdi
ffffffff80219e80:	41 54                	push   %r12
ffffffff80219e82:	48 89 fe             	mov    %rdi,%rsi
ffffffff80219e85:	55                   	push   %rbp
ffffffff80219e86:	48 c1 ee 03          	shr    $0x3,%rsi
ffffffff80219e8a:	48 89 cd             	mov    %rcx,%rbp
ffffffff80219e8d:	53                   	push   %rbx
ffffffff80219e8e:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
ffffffff80219e92:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80219e96:	4c 8b 3d db a1 02 00 	mov    0x2a1db(%rip),%r15        # ffffffff80244078 <caml_local_roots>
ffffffff80219e9d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80219ea4:	00 00 
ffffffff80219ea6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff80219eab:	31 c0                	xor    %eax,%eax
ffffffff80219ead:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff80219eb2:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
ffffffff80219eb9:	00 00 
ffffffff80219ebb:	48 89 05 b6 a1 02 00 	mov    %rax,0x2a1b6(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80219ec2:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff80219ec7:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
ffffffff80219ecc:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff80219ed3:	00 00 
ffffffff80219ed5:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff80219edc:	00 00 
ffffffff80219ede:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff80219ee3:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
ffffffff80219eea:	0f 87 d0 00 00 00    	ja     ffffffff80219fc0 <alloc_custom_gen+0x150>
ffffffff80219ef0:	be ff 00 00 00       	mov    $0xff,%esi
ffffffff80219ef5:	4d 89 c4             	mov    %r8,%r12
ffffffff80219ef8:	4c 89 cb             	mov    %r9,%rbx
ffffffff80219efb:	e8 00 ed ff ff       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff80219f00:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80219f05:	4c 89 28             	mov    %r13,(%rax)
ffffffff80219f08:	4c 89 f0             	mov    %r14,%rax
ffffffff80219f0b:	49 0b 45 08          	or     0x8(%r13),%rax
ffffffff80219f0f:	0f 84 9b 00 00 00    	je     ffffffff80219fb0 <alloc_custom_gen+0x140>
ffffffff80219f15:	4d 39 e6             	cmp    %r12,%r14
ffffffff80219f18:	0f 87 22 01 00 00    	ja     ffffffff8021a040 <alloc_custom_gen+0x1d0>
ffffffff80219f1e:	48 8b 05 b3 1f 02 00 	mov    0x21fb3(%rip),%rax        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80219f25:	48 3b 05 b4 1f 02 00 	cmp    0x21fb4(%rip),%rax        # ffffffff8023bee0 <caml_custom_table+0x20>
ffffffff80219f2c:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
ffffffff80219f31:	0f 83 21 01 00 00    	jae    ffffffff8021a058 <alloc_custom_gen+0x1e8>
ffffffff80219f37:	48 8d 50 18          	lea    0x18(%rax),%rdx
ffffffff80219f3b:	48 89 15 96 1f 02 00 	mov    %rdx,0x21f96(%rip)        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff80219f42:	4c 89 28             	mov    %r13,(%rax)
ffffffff80219f45:	4c 89 60 08          	mov    %r12,0x8(%rax)
ffffffff80219f49:	48 89 68 10          	mov    %rbp,0x10(%rax)
ffffffff80219f4d:	4d 85 e4             	test   %r12,%r12
ffffffff80219f50:	74 5e                	je     ffffffff80219fb0 <alloc_custom_gen+0x140>
ffffffff80219f52:	0f 88 c0 00 00 00    	js     ffffffff8021a018 <alloc_custom_gen+0x1a8>
ffffffff80219f58:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff80219f5c:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
ffffffff80219f61:	48 85 db             	test   %rbx,%rbx
ffffffff80219f64:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff80219f6a:	49 0f 44 d9          	cmove  %r9,%rbx
ffffffff80219f6e:	48 85 db             	test   %rbx,%rbx
ffffffff80219f71:	0f 88 f9 00 00 00    	js     ffffffff8021a070 <alloc_custom_gen+0x200>
ffffffff80219f77:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff80219f7b:	f2 48 0f 2a cb       	cvtsi2sd %rbx,%xmm1
ffffffff80219f80:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
ffffffff80219f84:	f2 0f 58 05 14 1f 02 	addsd  0x21f14(%rip),%xmm0        # ffffffff8023bea0 <caml_extra_heap_resources_minor>
ffffffff80219f8b:	00 
ffffffff80219f8c:	66 0f 2f 05 2c 77 00 	comisd 0x772c(%rip),%xmm0        # ffffffff802216c0 <caml_absf_mask+0x510>
ffffffff80219f93:	00 
ffffffff80219f94:	f2 0f 11 05 04 1f 02 	movsd  %xmm0,0x21f04(%rip)        # ffffffff8023bea0 <caml_extra_heap_resources_minor>
ffffffff80219f9b:	00 
ffffffff80219f9c:	76 12                	jbe    ffffffff80219fb0 <alloc_custom_gen+0x140>
ffffffff80219f9e:	e8 ed a3 ff ff       	callq  ffffffff80214390 <caml_request_minor_gc>
ffffffff80219fa3:	e8 18 80 ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff80219fa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80219faf:	00 
ffffffff80219fb0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80219fb5:	eb 30                	jmp    ffffffff80219fe7 <alloc_custom_gen+0x177>
ffffffff80219fb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80219fbe:	00 00 
ffffffff80219fc0:	be ff 00 00 00       	mov    $0xff,%esi
ffffffff80219fc5:	e8 e6 6f ff ff       	callq  ffffffff80210fb0 <caml_alloc_shr>
ffffffff80219fca:	4c 89 f7             	mov    %r14,%rdi
ffffffff80219fcd:	48 89 ee             	mov    %rbp,%rsi
ffffffff80219fd0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80219fd5:	4c 89 28             	mov    %r13,(%rax)
ffffffff80219fd8:	e8 63 65 ff ff       	callq  ffffffff80210540 <caml_adjust_gc_speed>
ffffffff80219fdd:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff80219fe2:	e8 09 81 ff ff       	callq  ffffffff802120f0 <caml_check_urgent_gc>
ffffffff80219fe7:	4c 89 3d 8a a0 02 00 	mov    %r15,0x2a08a(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff80219fee:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
ffffffff80219ff3:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff80219ffa:	00 00 
ffffffff80219ffc:	0f 85 8c 00 00 00    	jne    ffffffff8021a08e <alloc_custom_gen+0x21e>
ffffffff8021a002:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8021a006:	5b                   	pop    %rbx
ffffffff8021a007:	5d                   	pop    %rbp
ffffffff8021a008:	41 5c                	pop    %r12
ffffffff8021a00a:	41 5d                	pop    %r13
ffffffff8021a00c:	41 5e                	pop    %r14
ffffffff8021a00e:	41 5f                	pop    %r15
ffffffff8021a010:	c3                   	retq   
ffffffff8021a011:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021a018:	4c 89 e0             	mov    %r12,%rax
ffffffff8021a01b:	41 83 e4 01          	and    $0x1,%r12d
ffffffff8021a01f:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021a023:	48 d1 e8             	shr    %rax
ffffffff8021a026:	4c 09 e0             	or     %r12,%rax
ffffffff8021a029:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8021a02e:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff8021a032:	e9 2a ff ff ff       	jmpq   ffffffff80219f61 <alloc_custom_gen+0xf1>
ffffffff8021a037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021a03e:	00 00 
ffffffff8021a040:	4c 89 f7             	mov    %r14,%rdi
ffffffff8021a043:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021a046:	4c 29 e7             	sub    %r12,%rdi
ffffffff8021a049:	e8 f2 64 ff ff       	callq  ffffffff80210540 <caml_adjust_gc_speed>
ffffffff8021a04e:	e9 cb fe ff ff       	jmpq   ffffffff80219f1e <alloc_custom_gen+0xae>
ffffffff8021a053:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021a058:	48 8d 3d 61 1e 02 00 	lea    0x21e61(%rip),%rdi        # ffffffff8023bec0 <caml_custom_table>
ffffffff8021a05f:	e8 6c 81 ff ff       	callq  ffffffff802121d0 <caml_realloc_custom_table>
ffffffff8021a064:	48 8b 05 6d 1e 02 00 	mov    0x21e6d(%rip),%rax        # ffffffff8023bed8 <caml_custom_table+0x18>
ffffffff8021a06b:	e9 c7 fe ff ff       	jmpq   ffffffff80219f37 <alloc_custom_gen+0xc7>
ffffffff8021a070:	48 89 d8             	mov    %rbx,%rax
ffffffff8021a073:	83 e3 01             	and    $0x1,%ebx
ffffffff8021a076:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021a07a:	48 d1 e8             	shr    %rax
ffffffff8021a07d:	48 09 d8             	or     %rbx,%rax
ffffffff8021a080:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8021a085:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8021a089:	e9 f2 fe ff ff       	jmpq   ffffffff80219f80 <alloc_custom_gen+0x110>
ffffffff8021a08e:	e8 0d 60 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021a093:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021a09a:	00 00 00 00 
ffffffff8021a09e:	66 90                	xchg   %ax,%ax

ffffffff8021a0a0 <caml_alloc_custom>:
ffffffff8021a0a0:	49 89 c9             	mov    %rcx,%r9
ffffffff8021a0a3:	49 89 d0             	mov    %rdx,%r8
ffffffff8021a0a6:	e9 c5 fd ff ff       	jmpq   ffffffff80219e70 <alloc_custom_gen>
ffffffff8021a0ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8021a0b0 <caml_alloc_custom_mem>:
ffffffff8021a0b0:	48 8b 05 01 1f 02 00 	mov    0x21f01(%rip),%rax        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff8021a0b7:	49 89 d2             	mov    %rdx,%r10
ffffffff8021a0ba:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
ffffffff8021a0c1:	c2 f5 28 
ffffffff8021a0c4:	4d 89 d0             	mov    %r10,%r8
ffffffff8021a0c7:	4c 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%r9
ffffffff8021a0ce:	00 
ffffffff8021a0cf:	49 c1 e9 02          	shr    $0x2,%r9
ffffffff8021a0d3:	4c 89 c8             	mov    %r9,%rax
ffffffff8021a0d6:	48 f7 e2             	mul    %rdx
ffffffff8021a0d9:	48 8b 05 c0 e3 02 00 	mov    0x2e3c0(%rip),%rax        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8021a0e0:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
ffffffff8021a0e7:	00 
ffffffff8021a0e8:	49 89 d1             	mov    %rdx,%r9
ffffffff8021a0eb:	48 89 c8             	mov    %rcx,%rax
ffffffff8021a0ee:	48 ba 07 3a 6d a0 d3 	movabs $0x6d3a06d3a06d3a07,%rdx
ffffffff8021a0f5:	06 3a 6d 
ffffffff8021a0f8:	49 c1 e9 02          	shr    $0x2,%r9
ffffffff8021a0fc:	4c 39 15 cd 1c 01 00 	cmp    %r10,0x11ccd(%rip)        # ffffffff8022bdd0 <caml_custom_minor_max_bsz>
ffffffff8021a103:	4c 0f 46 05 c5 1c 01 	cmovbe 0x11cc5(%rip),%r8        # ffffffff8022bdd0 <caml_custom_minor_max_bsz>
ffffffff8021a10a:	00 
ffffffff8021a10b:	48 f7 e2             	mul    %rdx
ffffffff8021a10e:	4c 0f af 0d c2 1c 01 	imul   0x11cc2(%rip),%r9        # ffffffff8022bdd8 <caml_custom_minor_ratio>
ffffffff8021a115:	00 
ffffffff8021a116:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021a119:	4c 89 d2             	mov    %r10,%rdx
ffffffff8021a11c:	48 c1 e9 06          	shr    $0x6,%rcx
ffffffff8021a120:	48 0f af 0d b8 1c 01 	imul   0x11cb8(%rip),%rcx        # ffffffff8022bde0 <caml_custom_major_ratio>
ffffffff8021a127:	00 
ffffffff8021a128:	e9 43 fd ff ff       	jmpq   ffffffff80219e70 <alloc_custom_gen>
ffffffff8021a12d:	0f 1f 00             	nopl   (%rax)

ffffffff8021a130 <caml_register_custom_operations>:
ffffffff8021a130:	53                   	push   %rbx
ffffffff8021a131:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021a134:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021a139:	e8 f2 67 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021a13e:	48 8b 15 43 c3 02 00 	mov    0x2c343(%rip),%rdx        # ffffffff80246488 <custom_ops_table>
ffffffff8021a145:	48 89 18             	mov    %rbx,(%rax)
ffffffff8021a148:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8021a14c:	5b                   	pop    %rbx
ffffffff8021a14d:	48 89 05 34 c3 02 00 	mov    %rax,0x2c334(%rip)        # ffffffff80246488 <custom_ops_table>
ffffffff8021a154:	c3                   	retq   
ffffffff8021a155:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021a15c:	00 00 00 00 

ffffffff8021a160 <caml_find_custom_operations>:
ffffffff8021a160:	41 54                	push   %r12
ffffffff8021a162:	55                   	push   %rbp
ffffffff8021a163:	53                   	push   %rbx
ffffffff8021a164:	48 8b 1d 1d c3 02 00 	mov    0x2c31d(%rip),%rbx        # ffffffff80246488 <custom_ops_table>
ffffffff8021a16b:	48 85 db             	test   %rbx,%rbx
ffffffff8021a16e:	74 30                	je     ffffffff8021a1a0 <caml_find_custom_operations+0x40>
ffffffff8021a170:	48 89 fd             	mov    %rdi,%rbp
ffffffff8021a173:	eb 0c                	jmp    ffffffff8021a181 <caml_find_custom_operations+0x21>
ffffffff8021a175:	0f 1f 00             	nopl   (%rax)
ffffffff8021a178:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff8021a17c:	48 85 db             	test   %rbx,%rbx
ffffffff8021a17f:	74 1f                	je     ffffffff8021a1a0 <caml_find_custom_operations+0x40>
ffffffff8021a181:	4c 8b 23             	mov    (%rbx),%r12
ffffffff8021a184:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021a187:	49 8b 3c 24          	mov    (%r12),%rdi
ffffffff8021a18b:	e8 16 5f fe ff       	callq  ffffffff802000a6 <strcmp>
ffffffff8021a190:	85 c0                	test   %eax,%eax
ffffffff8021a192:	75 e4                	jne    ffffffff8021a178 <caml_find_custom_operations+0x18>
ffffffff8021a194:	4c 89 e0             	mov    %r12,%rax
ffffffff8021a197:	5b                   	pop    %rbx
ffffffff8021a198:	5d                   	pop    %rbp
ffffffff8021a199:	41 5c                	pop    %r12
ffffffff8021a19b:	c3                   	retq   
ffffffff8021a19c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021a1a0:	45 31 e4             	xor    %r12d,%r12d
ffffffff8021a1a3:	5b                   	pop    %rbx
ffffffff8021a1a4:	5d                   	pop    %rbp
ffffffff8021a1a5:	4c 89 e0             	mov    %r12,%rax
ffffffff8021a1a8:	41 5c                	pop    %r12
ffffffff8021a1aa:	c3                   	retq   
ffffffff8021a1ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8021a1b0 <caml_final_custom_operations>:
ffffffff8021a1b0:	41 54                	push   %r12
ffffffff8021a1b2:	53                   	push   %rbx
ffffffff8021a1b3:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021a1b6:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021a1ba:	48 8b 05 bf c2 02 00 	mov    0x2c2bf(%rip),%rax        # ffffffff80246480 <custom_ops_final_table>
ffffffff8021a1c1:	48 85 c0             	test   %rax,%rax
ffffffff8021a1c4:	75 13                	jne    ffffffff8021a1d9 <caml_final_custom_operations+0x29>
ffffffff8021a1c6:	eb 28                	jmp    ffffffff8021a1f0 <caml_final_custom_operations+0x40>
ffffffff8021a1c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021a1cf:	00 
ffffffff8021a1d0:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8021a1d4:	48 85 c0             	test   %rax,%rax
ffffffff8021a1d7:	74 17                	je     ffffffff8021a1f0 <caml_final_custom_operations+0x40>
ffffffff8021a1d9:	4c 8b 20             	mov    (%rax),%r12
ffffffff8021a1dc:	49 39 5c 24 08       	cmp    %rbx,0x8(%r12)
ffffffff8021a1e1:	75 ed                	jne    ffffffff8021a1d0 <caml_final_custom_operations+0x20>
ffffffff8021a1e3:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021a1e7:	4c 89 e0             	mov    %r12,%rax
ffffffff8021a1ea:	5b                   	pop    %rbx
ffffffff8021a1eb:	41 5c                	pop    %r12
ffffffff8021a1ed:	c3                   	retq   
ffffffff8021a1ee:	66 90                	xchg   %ax,%ax
ffffffff8021a1f0:	bf 40 00 00 00       	mov    $0x40,%edi
ffffffff8021a1f5:	e8 36 67 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021a1fa:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021a1ff:	49 89 c4             	mov    %rax,%r12
ffffffff8021a202:	48 8d 05 27 83 00 00 	lea    0x8327(%rip),%rax        # ffffffff80222530 <posix_signals+0x450>
ffffffff8021a209:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
ffffffff8021a20e:	49 89 04 24          	mov    %rax,(%r12)
ffffffff8021a212:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
ffffffff8021a219:	00 00 
ffffffff8021a21b:	49 c7 44 24 18 00 00 	movq   $0x0,0x18(%r12)
ffffffff8021a222:	00 00 
ffffffff8021a224:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
ffffffff8021a22b:	00 00 
ffffffff8021a22d:	49 c7 44 24 28 00 00 	movq   $0x0,0x28(%r12)
ffffffff8021a234:	00 00 
ffffffff8021a236:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
ffffffff8021a23d:	00 00 
ffffffff8021a23f:	49 c7 44 24 38 00 00 	movq   $0x0,0x38(%r12)
ffffffff8021a246:	00 00 
ffffffff8021a248:	e8 e3 66 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021a24d:	48 8b 15 2c c2 02 00 	mov    0x2c22c(%rip),%rdx        # ffffffff80246480 <custom_ops_final_table>
ffffffff8021a254:	4c 89 20             	mov    %r12,(%rax)
ffffffff8021a257:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8021a25b:	48 89 05 1e c2 02 00 	mov    %rax,0x2c21e(%rip)        # ffffffff80246480 <custom_ops_final_table>
ffffffff8021a262:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021a266:	4c 89 e0             	mov    %r12,%rax
ffffffff8021a269:	5b                   	pop    %rbx
ffffffff8021a26a:	41 5c                	pop    %r12
ffffffff8021a26c:	c3                   	retq   
ffffffff8021a26d:	0f 1f 00             	nopl   (%rax)

ffffffff8021a270 <caml_init_custom_operations>:
ffffffff8021a270:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021a274:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021a279:	e8 b2 66 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021a27e:	48 8b 15 03 c2 02 00 	mov    0x2c203(%rip),%rdx        # ffffffff80246488 <custom_ops_table>
ffffffff8021a285:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021a28a:	48 8d 0d ef 19 01 00 	lea    0x119ef(%rip),%rcx        # ffffffff8022bc80 <caml_int32_ops>
ffffffff8021a291:	48 89 08             	mov    %rcx,(%rax)
ffffffff8021a294:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8021a298:	48 89 05 e9 c1 02 00 	mov    %rax,0x2c1e9(%rip)        # ffffffff80246488 <custom_ops_table>
ffffffff8021a29f:	e8 8c 66 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021a2a4:	48 8b 15 dd c1 02 00 	mov    0x2c1dd(%rip),%rdx        # ffffffff80246488 <custom_ops_table>
ffffffff8021a2ab:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021a2b0:	48 8d 35 49 19 01 00 	lea    0x11949(%rip),%rsi        # ffffffff8022bc00 <caml_nativeint_ops>
ffffffff8021a2b7:	48 89 30             	mov    %rsi,(%rax)
ffffffff8021a2ba:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8021a2be:	48 89 05 c3 c1 02 00 	mov    %rax,0x2c1c3(%rip)        # ffffffff80246488 <custom_ops_table>
ffffffff8021a2c5:	e8 66 66 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021a2ca:	48 8b 15 b7 c1 02 00 	mov    0x2c1b7(%rip),%rdx        # ffffffff80246488 <custom_ops_table>
ffffffff8021a2d1:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021a2d6:	48 8d 0d 63 19 01 00 	lea    0x11963(%rip),%rcx        # ffffffff8022bc40 <caml_int64_ops>
ffffffff8021a2dd:	48 89 08             	mov    %rcx,(%rax)
ffffffff8021a2e0:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8021a2e4:	48 89 05 9d c1 02 00 	mov    %rax,0x2c19d(%rip)        # ffffffff80246488 <custom_ops_table>
ffffffff8021a2eb:	e8 40 66 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021a2f0:	48 8b 15 91 c1 02 00 	mov    0x2c191(%rip),%rdx        # ffffffff80246488 <custom_ops_table>
ffffffff8021a2f7:	48 8d 35 82 1b 01 00 	lea    0x11b82(%rip),%rsi        # ffffffff8022be80 <caml_ba_ops>
ffffffff8021a2fe:	48 89 30             	mov    %rsi,(%rax)
ffffffff8021a301:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8021a305:	48 89 05 7c c1 02 00 	mov    %rax,0x2c17c(%rip)        # ffffffff80246488 <custom_ops_table>
ffffffff8021a30c:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021a310:	c3                   	retq   
ffffffff8021a311:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021a318:	00 00 00 
ffffffff8021a31b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8021a320 <caml_debugger_init>:
ffffffff8021a320:	c3                   	retq   
ffffffff8021a321:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021a328:	00 00 00 00 
ffffffff8021a32c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8021a330 <caml_debugger>:
ffffffff8021a330:	c3                   	retq   
ffffffff8021a331:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021a338:	00 00 00 00 
ffffffff8021a33c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8021a340 <caml_debugger_cleanup_fork>:
ffffffff8021a340:	c3                   	retq   
ffffffff8021a341:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021a348:	00 00 00 
ffffffff8021a34b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8021a350 <alloc_to_do>:
ffffffff8021a350:	48 63 c7             	movslq %edi,%rax
ffffffff8021a353:	53                   	push   %rbx
ffffffff8021a354:	48 89 c3             	mov    %rax,%rbx
ffffffff8021a357:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
ffffffff8021a35b:	48 8d 3c c5 28 00 00 	lea    0x28(,%rax,8),%rdi
ffffffff8021a362:	00 
ffffffff8021a363:	e8 48 64 ff ff       	callq  ffffffff802107b0 <caml_stat_alloc_noexc>
ffffffff8021a368:	48 85 c0             	test   %rax,%rax
ffffffff8021a36b:	74 33                	je     ffffffff8021a3a0 <alloc_to_do+0x50>
ffffffff8021a36d:	48 8b 15 34 c1 02 00 	mov    0x2c134(%rip),%rdx        # ffffffff802464a8 <to_do_tl>
ffffffff8021a374:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8021a37b:	89 58 08             	mov    %ebx,0x8(%rax)
ffffffff8021a37e:	48 85 d2             	test   %rdx,%rdx
ffffffff8021a381:	74 0d                	je     ffffffff8021a390 <alloc_to_do+0x40>
ffffffff8021a383:	48 89 02             	mov    %rax,(%rdx)
ffffffff8021a386:	5b                   	pop    %rbx
ffffffff8021a387:	48 89 05 1a c1 02 00 	mov    %rax,0x2c11a(%rip)        # ffffffff802464a8 <to_do_tl>
ffffffff8021a38e:	c3                   	retq   
ffffffff8021a38f:	90                   	nop
ffffffff8021a390:	48 89 05 19 c1 02 00 	mov    %rax,0x2c119(%rip)        # ffffffff802464b0 <to_do_hd>
ffffffff8021a397:	5b                   	pop    %rbx
ffffffff8021a398:	48 89 05 09 c1 02 00 	mov    %rax,0x2c109(%rip)        # ffffffff802464a8 <to_do_tl>
ffffffff8021a39f:	c3                   	retq   
ffffffff8021a3a0:	48 8d 3d 79 7a 00 00 	lea    0x7a79(%rip),%rdi        # ffffffff80221e20 <int32_length+0x340>
ffffffff8021a3a7:	e8 24 7f ff ff       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff8021a3ac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8021a3b0 <generic_final_register>:
ffffffff8021a3b0:	41 55                	push   %r13
ffffffff8021a3b2:	41 54                	push   %r12
ffffffff8021a3b4:	55                   	push   %rbp
ffffffff8021a3b5:	53                   	push   %rbx
ffffffff8021a3b6:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021a3ba:	f6 c2 01             	test   $0x1,%dl
ffffffff8021a3bd:	0f 85 1e 01 00 00    	jne    ffffffff8021a4e1 <generic_final_register+0x131>
ffffffff8021a3c3:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021a3c6:	48 89 d7             	mov    %rdx,%rdi
ffffffff8021a3c9:	49 89 f4             	mov    %rsi,%r12
ffffffff8021a3cc:	48 89 d5             	mov    %rdx,%rbp
ffffffff8021a3cf:	e8 4c 60 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8021a3d4:	a8 03                	test   $0x3,%al
ffffffff8021a3d6:	0f 84 05 01 00 00    	je     ffffffff8021a4e1 <generic_final_register+0x131>
ffffffff8021a3dc:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
ffffffff8021a3e0:	8d 50 0a             	lea    0xa(%rax),%edx
ffffffff8021a3e3:	81 e2 fb 00 00 00    	and    $0xfb,%edx
ffffffff8021a3e9:	0f 84 f2 00 00 00    	je     ffffffff8021a4e1 <generic_final_register+0x131>
ffffffff8021a3ef:	3c fd                	cmp    $0xfd,%al
ffffffff8021a3f1:	0f 84 ea 00 00 00    	je     ffffffff8021a4e1 <generic_final_register+0x131>
ffffffff8021a3f7:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8021a3fb:	48 8b 73 18          	mov    0x18(%rbx),%rsi
ffffffff8021a3ff:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff8021a402:	48 39 f0             	cmp    %rsi,%rax
ffffffff8021a405:	73 49                	jae    ffffffff8021a450 <generic_final_register+0xa0>
ffffffff8021a407:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
ffffffff8021a40b:	4c 89 24 c7          	mov    %r12,(%rdi,%rax,8)
ffffffff8021a40f:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8021a413:	80 7d f8 f9          	cmpb   $0xf9,-0x8(%rbp)
ffffffff8021a417:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
ffffffff8021a41b:	74 5b                	je     ffffffff8021a478 <generic_final_register+0xc8>
ffffffff8021a41d:	48 8b 13             	mov    (%rbx),%rdx
ffffffff8021a420:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
ffffffff8021a424:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
ffffffff8021a42b:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8021a42f:	48 8b 0b             	mov    (%rbx),%rcx
ffffffff8021a432:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
ffffffff8021a436:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
ffffffff8021a43a:	48 89 68 08          	mov    %rbp,0x8(%rax)
ffffffff8021a43e:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
ffffffff8021a443:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021a447:	5b                   	pop    %rbx
ffffffff8021a448:	5d                   	pop    %rbp
ffffffff8021a449:	41 5c                	pop    %r12
ffffffff8021a44b:	41 5d                	pop    %r13
ffffffff8021a44d:	c3                   	retq   
ffffffff8021a44e:	66 90                	xchg   %ax,%ax
ffffffff8021a450:	48 85 ff             	test   %rdi,%rdi
ffffffff8021a453:	74 6b                	je     ffffffff8021a4c0 <generic_final_register+0x110>
ffffffff8021a455:	4c 8d 2c 36          	lea    (%rsi,%rsi,1),%r13
ffffffff8021a459:	4c 01 ee             	add    %r13,%rsi
ffffffff8021a45c:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff8021a460:	e8 ab 65 ff ff       	callq  ffffffff80210a10 <caml_stat_resize>
ffffffff8021a465:	4c 89 6b 18          	mov    %r13,0x18(%rbx)
ffffffff8021a469:	48 89 03             	mov    %rax,(%rbx)
ffffffff8021a46c:	48 89 c7             	mov    %rax,%rdi
ffffffff8021a46f:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8021a473:	eb 92                	jmp    ffffffff8021a407 <generic_final_register+0x57>
ffffffff8021a475:	0f 1f 00             	nopl   (%rax)
ffffffff8021a478:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8021a47c:	48 8b 33             	mov    (%rbx),%rsi
ffffffff8021a47f:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021a483:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
ffffffff8021a487:	c1 e2 03             	shl    $0x3,%edx
ffffffff8021a48a:	89 50 10             	mov    %edx,0x10(%rax)
ffffffff8021a48d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8021a491:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8021a495:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff8021a498:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021a49c:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
ffffffff8021a4a0:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8021a4a4:	48 29 d5             	sub    %rdx,%rbp
ffffffff8021a4a7:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
ffffffff8021a4ab:	48 89 68 08          	mov    %rbp,0x8(%rax)
ffffffff8021a4af:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
ffffffff8021a4b4:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021a4b8:	5b                   	pop    %rbx
ffffffff8021a4b9:	5d                   	pop    %rbp
ffffffff8021a4ba:	41 5c                	pop    %r12
ffffffff8021a4bc:	41 5d                	pop    %r13
ffffffff8021a4be:	c3                   	retq   
ffffffff8021a4bf:	90                   	nop
ffffffff8021a4c0:	bf d0 02 00 00       	mov    $0x2d0,%edi
ffffffff8021a4c5:	e8 66 64 ff ff       	callq  ffffffff80210930 <caml_stat_alloc>
ffffffff8021a4ca:	48 c7 43 18 1e 00 00 	movq   $0x1e,0x18(%rbx)
ffffffff8021a4d1:	00 
ffffffff8021a4d2:	48 89 03             	mov    %rax,(%rbx)
ffffffff8021a4d5:	48 89 c7             	mov    %rax,%rdi
ffffffff8021a4d8:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8021a4dc:	e9 26 ff ff ff       	jmpq   ffffffff8021a407 <generic_final_register+0x57>
ffffffff8021a4e1:	48 8d 3d 4f 80 00 00 	lea    0x804f(%rip),%rdi        # ffffffff80222537 <posix_signals+0x457>
ffffffff8021a4e8:	e8 93 cf fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021a4ed:	0f 1f 00             	nopl   (%rax)

ffffffff8021a4f0 <generic_final_update>:
ffffffff8021a4f0:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021a4f4:	48 85 d2             	test   %rdx,%rdx
ffffffff8021a4f7:	0f 84 a3 01 00 00    	je     ffffffff8021a6a0 <generic_final_update+0x1b0>
ffffffff8021a4fd:	41 54                	push   %r12
ffffffff8021a4ff:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff8021a503:	55                   	push   %rbp
ffffffff8021a504:	89 f5                	mov    %esi,%ebp
ffffffff8021a506:	53                   	push   %rbx
ffffffff8021a507:	48 8b 0f             	mov    (%rdi),%rcx
ffffffff8021a50a:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021a50d:	31 ff                	xor    %edi,%edi
ffffffff8021a50f:	48 8d 41 08          	lea    0x8(%rcx),%rax
ffffffff8021a513:	48 8d 4c d1 08       	lea    0x8(%rcx,%rdx,8),%rcx
ffffffff8021a518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021a51f:	00 
ffffffff8021a520:	48 8b 10             	mov    (%rax),%rdx
ffffffff8021a523:	48 8b 52 f8          	mov    -0x8(%rdx),%rdx
ffffffff8021a527:	81 e2 00 03 00 00    	and    $0x300,%edx
ffffffff8021a52d:	48 83 fa 01          	cmp    $0x1,%rdx
ffffffff8021a531:	48 83 d7 00          	adc    $0x0,%rdi
ffffffff8021a535:	48 83 c0 18          	add    $0x18,%rax
ffffffff8021a539:	48 39 c1             	cmp    %rax,%rcx
ffffffff8021a53c:	75 e2                	jne    ffffffff8021a520 <generic_final_update+0x30>
ffffffff8021a53e:	48 85 ff             	test   %rdi,%rdi
ffffffff8021a541:	75 0d                	jne    ffffffff8021a550 <generic_final_update+0x60>
ffffffff8021a543:	5b                   	pop    %rbx
ffffffff8021a544:	5d                   	pop    %rbp
ffffffff8021a545:	41 5c                	pop    %r12
ffffffff8021a547:	c3                   	retq   
ffffffff8021a548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021a54f:	00 
ffffffff8021a550:	e8 fb fd ff ff       	callq  ffffffff8021a350 <alloc_to_do>
ffffffff8021a555:	48 8b 43 08          	mov    0x8(%rbx),%rax
ffffffff8021a559:	4c 8b 05 48 bf 02 00 	mov    0x2bf48(%rip),%r8        # ffffffff802464a8 <to_do_tl>
ffffffff8021a560:	48 85 c0             	test   %rax,%rax
ffffffff8021a563:	0f 84 3d 01 00 00    	je     ffffffff8021a6a6 <generic_final_update+0x1b6>
ffffffff8021a569:	31 f6                	xor    %esi,%esi
ffffffff8021a56b:	31 c9                	xor    %ecx,%ecx
ffffffff8021a56d:	45 31 e4             	xor    %r12d,%r12d
ffffffff8021a570:	31 c0                	xor    %eax,%eax
ffffffff8021a572:	eb 41                	jmp    ffffffff8021a5b5 <generic_final_update+0xc5>
ffffffff8021a574:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021a578:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
ffffffff8021a57c:	4b 8d 3c 64          	lea    (%r12,%r12,2),%rdi
ffffffff8021a580:	49 8d 3c f8          	lea    (%r8,%rdi,8),%rdi
ffffffff8021a584:	0f 11 4f 10          	movups %xmm1,0x10(%rdi)
ffffffff8021a588:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8021a58c:	48 89 57 20          	mov    %rdx,0x20(%rdi)
ffffffff8021a590:	85 ed                	test   %ebp,%ebp
ffffffff8021a592:	75 0f                	jne    ffffffff8021a5a3 <generic_final_update+0xb3>
ffffffff8021a594:	48 c7 47 18 01 00 00 	movq   $0x1,0x18(%rdi)
ffffffff8021a59b:	00 
ffffffff8021a59c:	c7 47 20 00 00 00 00 	movl   $0x0,0x20(%rdi)
ffffffff8021a5a3:	49 83 c4 01          	add    $0x1,%r12
ffffffff8021a5a7:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021a5ab:	48 83 c6 18          	add    $0x18,%rsi
ffffffff8021a5af:	48 3b 43 08          	cmp    0x8(%rbx),%rax
ffffffff8021a5b3:	73 3e                	jae    ffffffff8021a5f3 <generic_final_update+0x103>
ffffffff8021a5b5:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff8021a5b8:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
ffffffff8021a5bc:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
ffffffff8021a5c0:	49 f7 41 f8 00 03 00 	testq  $0x300,-0x8(%r9)
ffffffff8021a5c7:	00 
ffffffff8021a5c8:	74 ae                	je     ffffffff8021a578 <generic_final_update+0x88>
ffffffff8021a5ca:	f3 0f 6f 12          	movdqu (%rdx),%xmm2
ffffffff8021a5ce:	4c 8d 0c 49          	lea    (%rcx,%rcx,2),%r9
ffffffff8021a5d2:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021a5d6:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8021a5da:	4a 8d 3c cf          	lea    (%rdi,%r9,8),%rdi
ffffffff8021a5de:	48 83 c6 18          	add    $0x18,%rsi
ffffffff8021a5e2:	0f 11 17             	movups %xmm2,(%rdi)
ffffffff8021a5e5:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8021a5e9:	48 89 57 10          	mov    %rdx,0x10(%rdi)
ffffffff8021a5ed:	48 3b 43 08          	cmp    0x8(%rbx),%rax
ffffffff8021a5f1:	72 c2                	jb     ffffffff8021a5b5 <generic_final_update+0xc5>
ffffffff8021a5f3:	45 89 e2             	mov    %r12d,%r10d
ffffffff8021a5f6:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
ffffffff8021a5fa:	48 39 43 10          	cmp    %rax,0x10(%rbx)
ffffffff8021a5fe:	0f 86 9d 00 00 00    	jbe    ffffffff8021a6a1 <generic_final_update+0x1b1>
ffffffff8021a604:	48 89 ca             	mov    %rcx,%rdx
ffffffff8021a607:	48 8d 3c 40          	lea    (%rax,%rax,2),%rdi
ffffffff8021a60b:	4c 8d 59 01          	lea    0x1(%rcx),%r11
ffffffff8021a60f:	48 29 c2             	sub    %rax,%rdx
ffffffff8021a612:	48 c1 e7 03          	shl    $0x3,%rdi
ffffffff8021a616:	49 29 c3             	sub    %rax,%r11
ffffffff8021a619:	4c 8d 0c 52          	lea    (%rdx,%rdx,2),%r9
ffffffff8021a61d:	49 c1 e1 03          	shl    $0x3,%r9
ffffffff8021a621:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021a628:	48 8b 0b             	mov    (%rbx),%rcx
ffffffff8021a62b:	49 8d 34 03          	lea    (%r11,%rax,1),%rsi
ffffffff8021a62f:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021a633:	f3 0f 6f 04 39       	movdqu (%rcx,%rdi,1),%xmm0
ffffffff8021a638:	4a 8d 14 09          	lea    (%rcx,%r9,1),%rdx
ffffffff8021a63c:	48 01 fa             	add    %rdi,%rdx
ffffffff8021a63f:	0f 11 02             	movups %xmm0,(%rdx)
ffffffff8021a642:	48 8b 4c 39 10       	mov    0x10(%rcx,%rdi,1),%rcx
ffffffff8021a647:	48 83 c7 18          	add    $0x18,%rdi
ffffffff8021a64b:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
ffffffff8021a64f:	48 3b 43 10          	cmp    0x10(%rbx),%rax
ffffffff8021a653:	72 d3                	jb     ffffffff8021a628 <generic_final_update+0x138>
ffffffff8021a655:	48 89 73 10          	mov    %rsi,0x10(%rbx)
ffffffff8021a659:	45 89 50 08          	mov    %r10d,0x8(%r8)
ffffffff8021a65d:	85 ed                	test   %ebp,%ebp
ffffffff8021a65f:	0f 84 de fe ff ff    	je     ffffffff8021a543 <generic_final_update+0x53>
ffffffff8021a665:	4d 85 e4             	test   %r12,%r12
ffffffff8021a668:	0f 84 d5 fe ff ff    	je     ffffffff8021a543 <generic_final_update+0x53>
ffffffff8021a66e:	31 db                	xor    %ebx,%ebx
ffffffff8021a670:	eb 0d                	jmp    ffffffff8021a67f <generic_final_update+0x18f>
ffffffff8021a672:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021a678:	4c 8b 05 29 be 02 00 	mov    0x2be29(%rip),%r8        # ffffffff802464a8 <to_do_tl>
ffffffff8021a67f:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
ffffffff8021a683:	31 f6                	xor    %esi,%esi
ffffffff8021a685:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021a689:	49 8b 7c c0 18       	mov    0x18(%r8,%rax,8),%rdi
ffffffff8021a68e:	e8 4d 43 ff ff       	callq  ffffffff8020e9e0 <caml_darken>
ffffffff8021a693:	4c 39 e3             	cmp    %r12,%rbx
ffffffff8021a696:	75 e0                	jne    ffffffff8021a678 <generic_final_update+0x188>
ffffffff8021a698:	5b                   	pop    %rbx
ffffffff8021a699:	5d                   	pop    %rbp
ffffffff8021a69a:	41 5c                	pop    %r12
ffffffff8021a69c:	c3                   	retq   
ffffffff8021a69d:	0f 1f 00             	nopl   (%rax)
ffffffff8021a6a0:	c3                   	retq   
ffffffff8021a6a1:	48 89 ce             	mov    %rcx,%rsi
ffffffff8021a6a4:	eb af                	jmp    ffffffff8021a655 <generic_final_update+0x165>
ffffffff8021a6a6:	31 c9                	xor    %ecx,%ecx
ffffffff8021a6a8:	45 31 e4             	xor    %r12d,%r12d
ffffffff8021a6ab:	45 31 d2             	xor    %r10d,%r10d
ffffffff8021a6ae:	e9 43 ff ff ff       	jmpq   ffffffff8021a5f6 <generic_final_update+0x106>
ffffffff8021a6b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021a6ba:	00 00 00 00 
ffffffff8021a6be:	66 90                	xchg   %ax,%ax

ffffffff8021a6c0 <caml_final_update_mark_phase>:
ffffffff8021a6c0:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021a6c5:	48 8d 3d 14 be 02 00 	lea    0x2be14(%rip),%rdi        # ffffffff802464e0 <finalisable_first>
ffffffff8021a6cc:	e9 1f fe ff ff       	jmpq   ffffffff8021a4f0 <generic_final_update>
ffffffff8021a6d1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021a6d8:	00 00 00 00 
ffffffff8021a6dc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8021a6e0 <caml_final_update_clean_phase>:
ffffffff8021a6e0:	31 f6                	xor    %esi,%esi
ffffffff8021a6e2:	48 8d 3d d7 bd 02 00 	lea    0x2bdd7(%rip),%rdi        # ffffffff802464c0 <finalisable_last>
ffffffff8021a6e9:	e9 02 fe ff ff       	jmpq   ffffffff8021a4f0 <generic_final_update>
ffffffff8021a6ee:	66 90                	xchg   %ax,%ax

ffffffff8021a6f0 <caml_final_do_calls>:
ffffffff8021a6f0:	8b 05 aa bd 02 00    	mov    0x2bdaa(%rip),%eax        # ffffffff802464a0 <running_finalisation_function>
ffffffff8021a6f6:	85 c0                	test   %eax,%eax
ffffffff8021a6f8:	0f 85 b2 00 00 00    	jne    ffffffff8021a7b0 <caml_final_do_calls+0xc0>
ffffffff8021a6fe:	48 83 3d aa bd 02 00 	cmpq   $0x0,0x2bdaa(%rip)        # ffffffff802464b0 <to_do_hd>
ffffffff8021a705:	00 
ffffffff8021a706:	0f 84 a4 00 00 00    	je     ffffffff8021a7b0 <caml_final_do_calls+0xc0>
ffffffff8021a70c:	48 8b 05 d5 18 02 00 	mov    0x218d5(%rip),%rax        # ffffffff8023bfe8 <caml_finalise_begin_hook>
ffffffff8021a713:	53                   	push   %rbx
ffffffff8021a714:	48 85 c0             	test   %rax,%rax
ffffffff8021a717:	74 02                	je     ffffffff8021a71b <caml_final_do_calls+0x2b>
ffffffff8021a719:	ff d0                	callq  *%rax
ffffffff8021a71b:	bf 80 00 00 00       	mov    $0x80,%edi
ffffffff8021a720:	48 8d 35 21 7e 00 00 	lea    0x7e21(%rip),%rsi        # ffffffff80222548 <posix_signals+0x468>
ffffffff8021a727:	31 c0                	xor    %eax,%eax
ffffffff8021a729:	e8 c2 7a ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021a72e:	48 8b 3d 7b bd 02 00 	mov    0x2bd7b(%rip),%rdi        # ffffffff802464b0 <to_do_hd>
ffffffff8021a735:	48 85 ff             	test   %rdi,%rdi
ffffffff8021a738:	74 54                	je     ffffffff8021a78e <caml_final_do_calls+0x9e>
ffffffff8021a73a:	8b 47 08             	mov    0x8(%rdi),%eax
ffffffff8021a73d:	85 c0                	test   %eax,%eax
ffffffff8021a73f:	74 77                	je     ffffffff8021a7b8 <caml_final_do_calls+0xc8>
ffffffff8021a741:	c7 05 55 bd 02 00 01 	movl   $0x1,0x2bd55(%rip)        # ffffffff802464a0 <running_finalisation_function>
ffffffff8021a748:	00 00 00 
ffffffff8021a74b:	83 e8 01             	sub    $0x1,%eax
ffffffff8021a74e:	89 47 08             	mov    %eax,0x8(%rdi)
ffffffff8021a751:	48 98                	cltq   
ffffffff8021a753:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
ffffffff8021a757:	48 8d 44 c7 10       	lea    0x10(%rdi,%rax,8),%rax
ffffffff8021a75c:	48 8b 38             	mov    (%rax),%rdi
ffffffff8021a75f:	48 63 70 10          	movslq 0x10(%rax),%rsi
ffffffff8021a763:	48 03 70 08          	add    0x8(%rax),%rsi
ffffffff8021a767:	e8 04 97 fe ff       	callq  ffffffff80203e70 <caml_callback_exn>
ffffffff8021a76c:	c7 05 2a bd 02 00 00 	movl   $0x0,0x2bd2a(%rip)        # ffffffff802464a0 <running_finalisation_function>
ffffffff8021a773:	00 00 00 
ffffffff8021a776:	48 89 c2             	mov    %rax,%rdx
ffffffff8021a779:	83 e2 03             	and    $0x3,%edx
ffffffff8021a77c:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffff8021a780:	74 68                	je     ffffffff8021a7ea <caml_final_do_calls+0xfa>
ffffffff8021a782:	48 8b 3d 27 bd 02 00 	mov    0x2bd27(%rip),%rdi        # ffffffff802464b0 <to_do_hd>
ffffffff8021a789:	48 85 ff             	test   %rdi,%rdi
ffffffff8021a78c:	75 ac                	jne    ffffffff8021a73a <caml_final_do_calls+0x4a>
ffffffff8021a78e:	31 c0                	xor    %eax,%eax
ffffffff8021a790:	48 8d 35 d9 7d 00 00 	lea    0x7dd9(%rip),%rsi        # ffffffff80222570 <posix_signals+0x490>
ffffffff8021a797:	bf 80 00 00 00       	mov    $0x80,%edi
ffffffff8021a79c:	e8 4f 7a ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021a7a1:	48 8b 05 38 18 02 00 	mov    0x21838(%rip),%rax        # ffffffff8023bfe0 <caml_finalise_end_hook>
ffffffff8021a7a8:	48 85 c0             	test   %rax,%rax
ffffffff8021a7ab:	74 3b                	je     ffffffff8021a7e8 <caml_final_do_calls+0xf8>
ffffffff8021a7ad:	5b                   	pop    %rbx
ffffffff8021a7ae:	ff e0                	jmpq   *%rax
ffffffff8021a7b0:	c3                   	retq   
ffffffff8021a7b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021a7b8:	48 8b 1f             	mov    (%rdi),%rbx
ffffffff8021a7bb:	e8 90 61 ff ff       	callq  ffffffff80210950 <caml_stat_free>
ffffffff8021a7c0:	48 89 1d e9 bc 02 00 	mov    %rbx,0x2bce9(%rip)        # ffffffff802464b0 <to_do_hd>
ffffffff8021a7c7:	48 85 db             	test   %rbx,%rbx
ffffffff8021a7ca:	74 0c                	je     ffffffff8021a7d8 <caml_final_do_calls+0xe8>
ffffffff8021a7cc:	48 89 df             	mov    %rbx,%rdi
ffffffff8021a7cf:	e9 61 ff ff ff       	jmpq   ffffffff8021a735 <caml_final_do_calls+0x45>
ffffffff8021a7d4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021a7d8:	48 c7 05 c5 bc 02 00 	movq   $0x0,0x2bcc5(%rip)        # ffffffff802464a8 <to_do_tl>
ffffffff8021a7df:	00 00 00 00 
ffffffff8021a7e3:	eb a9                	jmp    ffffffff8021a78e <caml_final_do_calls+0x9e>
ffffffff8021a7e5:	0f 1f 00             	nopl   (%rax)
ffffffff8021a7e8:	5b                   	pop    %rbx
ffffffff8021a7e9:	c3                   	retq   
ffffffff8021a7ea:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffff8021a7ee:	48 89 c7             	mov    %rax,%rdi
ffffffff8021a7f1:	e8 da c9 fe ff       	callq  ffffffff802071d0 <caml_raise>
ffffffff8021a7f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021a7fd:	00 00 00 

ffffffff8021a800 <caml_final_do_roots>:
ffffffff8021a800:	41 55                	push   %r13
ffffffff8021a802:	41 54                	push   %r12
ffffffff8021a804:	49 89 fc             	mov    %rdi,%r12
ffffffff8021a807:	55                   	push   %rbp
ffffffff8021a808:	48 8d 2d d1 bc 02 00 	lea    0x2bcd1(%rip),%rbp        # ffffffff802464e0 <finalisable_first>
ffffffff8021a80f:	53                   	push   %rbx
ffffffff8021a810:	31 db                	xor    %ebx,%ebx
ffffffff8021a812:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021a816:	48 83 3d d2 bc 02 00 	cmpq   $0x0,0x2bcd2(%rip)        # ffffffff802464f0 <finalisable_first+0x10>
ffffffff8021a81d:	00 
ffffffff8021a81e:	74 22                	je     ffffffff8021a842 <caml_final_do_roots+0x42>
ffffffff8021a820:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff8021a824:	48 8d 14 5b          	lea    (%rbx,%rbx,2),%rdx
ffffffff8021a828:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021a82c:	48 8d 04 d0          	lea    (%rax,%rdx,8),%rax
ffffffff8021a830:	48 8b 38             	mov    (%rax),%rdi
ffffffff8021a833:	48 89 c6             	mov    %rax,%rsi
ffffffff8021a836:	41 ff d4             	callq  *%r12
ffffffff8021a839:	48 39 1d b0 bc 02 00 	cmp    %rbx,0x2bcb0(%rip)        # ffffffff802464f0 <finalisable_first+0x10>
ffffffff8021a840:	77 de                	ja     ffffffff8021a820 <caml_final_do_roots+0x20>
ffffffff8021a842:	31 db                	xor    %ebx,%ebx
ffffffff8021a844:	48 83 3d 84 bc 02 00 	cmpq   $0x0,0x2bc84(%rip)        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021a84b:	00 
ffffffff8021a84c:	48 8d 2d 6d bc 02 00 	lea    0x2bc6d(%rip),%rbp        # ffffffff802464c0 <finalisable_last>
ffffffff8021a853:	74 25                	je     ffffffff8021a87a <caml_final_do_roots+0x7a>
ffffffff8021a855:	0f 1f 00             	nopl   (%rax)
ffffffff8021a858:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff8021a85c:	48 8d 14 5b          	lea    (%rbx,%rbx,2),%rdx
ffffffff8021a860:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021a864:	48 8d 04 d0          	lea    (%rax,%rdx,8),%rax
ffffffff8021a868:	48 8b 38             	mov    (%rax),%rdi
ffffffff8021a86b:	48 89 c6             	mov    %rax,%rsi
ffffffff8021a86e:	41 ff d4             	callq  *%r12
ffffffff8021a871:	48 39 1d 58 bc 02 00 	cmp    %rbx,0x2bc58(%rip)        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021a878:	77 de                	ja     ffffffff8021a858 <caml_final_do_roots+0x58>
ffffffff8021a87a:	4c 8b 2d 2f bc 02 00 	mov    0x2bc2f(%rip),%r13        # ffffffff802464b0 <to_do_hd>
ffffffff8021a881:	4d 85 ed             	test   %r13,%r13
ffffffff8021a884:	74 48                	je     ffffffff8021a8ce <caml_final_do_roots+0xce>
ffffffff8021a886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021a88d:	00 00 00 
ffffffff8021a890:	41 8b 45 08          	mov    0x8(%r13),%eax
ffffffff8021a894:	49 8d 5d 10          	lea    0x10(%r13),%rbx
ffffffff8021a898:	31 ed                	xor    %ebp,%ebp
ffffffff8021a89a:	85 c0                	test   %eax,%eax
ffffffff8021a89c:	74 27                	je     ffffffff8021a8c5 <caml_final_do_roots+0xc5>
ffffffff8021a89e:	66 90                	xchg   %ax,%ax
ffffffff8021a8a0:	48 8b 3b             	mov    (%rbx),%rdi
ffffffff8021a8a3:	48 89 de             	mov    %rbx,%rsi
ffffffff8021a8a6:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8021a8aa:	41 ff d4             	callq  *%r12
ffffffff8021a8ad:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
ffffffff8021a8b1:	48 8d 73 08          	lea    0x8(%rbx),%rsi
ffffffff8021a8b5:	48 83 c3 18          	add    $0x18,%rbx
ffffffff8021a8b9:	41 ff d4             	callq  *%r12
ffffffff8021a8bc:	49 63 45 08          	movslq 0x8(%r13),%rax
ffffffff8021a8c0:	48 39 e8             	cmp    %rbp,%rax
ffffffff8021a8c3:	77 db                	ja     ffffffff8021a8a0 <caml_final_do_roots+0xa0>
ffffffff8021a8c5:	4d 8b 6d 00          	mov    0x0(%r13),%r13
ffffffff8021a8c9:	4d 85 ed             	test   %r13,%r13
ffffffff8021a8cc:	75 c2                	jne    ffffffff8021a890 <caml_final_do_roots+0x90>
ffffffff8021a8ce:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021a8d2:	5b                   	pop    %rbx
ffffffff8021a8d3:	5d                   	pop    %rbp
ffffffff8021a8d4:	41 5c                	pop    %r12
ffffffff8021a8d6:	41 5d                	pop    %r13
ffffffff8021a8d8:	c3                   	retq   
ffffffff8021a8d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021a8e0 <caml_final_invert_finalisable_values>:
ffffffff8021a8e0:	48 83 3d 08 bc 02 00 	cmpq   $0x0,0x2bc08(%rip)        # ffffffff802464f0 <finalisable_first+0x10>
ffffffff8021a8e7:	00 
ffffffff8021a8e8:	41 54                	push   %r12
ffffffff8021a8ea:	55                   	push   %rbp
ffffffff8021a8eb:	53                   	push   %rbx
ffffffff8021a8ec:	74 37                	je     ffffffff8021a925 <caml_final_invert_finalisable_values+0x45>
ffffffff8021a8ee:	31 ed                	xor    %ebp,%ebp
ffffffff8021a8f0:	31 db                	xor    %ebx,%ebx
ffffffff8021a8f2:	4c 8d 25 e7 bb 02 00 	lea    0x2bbe7(%rip),%r12        # ffffffff802464e0 <finalisable_first>
ffffffff8021a8f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021a900:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8021a904:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021a908:	48 01 e8             	add    %rbp,%rax
ffffffff8021a90b:	48 83 c5 18          	add    $0x18,%rbp
ffffffff8021a90f:	48 8b 78 08          	mov    0x8(%rax),%rdi
ffffffff8021a913:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021a917:	e8 74 ea ff ff       	callq  ffffffff80219390 <caml_invert_root>
ffffffff8021a91c:	48 39 1d cd bb 02 00 	cmp    %rbx,0x2bbcd(%rip)        # ffffffff802464f0 <finalisable_first+0x10>
ffffffff8021a923:	77 db                	ja     ffffffff8021a900 <caml_final_invert_finalisable_values+0x20>
ffffffff8021a925:	48 83 3d a3 bb 02 00 	cmpq   $0x0,0x2bba3(%rip)        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021a92c:	00 
ffffffff8021a92d:	74 36                	je     ffffffff8021a965 <caml_final_invert_finalisable_values+0x85>
ffffffff8021a92f:	31 ed                	xor    %ebp,%ebp
ffffffff8021a931:	31 db                	xor    %ebx,%ebx
ffffffff8021a933:	4c 8d 25 86 bb 02 00 	lea    0x2bb86(%rip),%r12        # ffffffff802464c0 <finalisable_last>
ffffffff8021a93a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021a940:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8021a944:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021a948:	48 01 e8             	add    %rbp,%rax
ffffffff8021a94b:	48 83 c5 18          	add    $0x18,%rbp
ffffffff8021a94f:	48 8b 78 08          	mov    0x8(%rax),%rdi
ffffffff8021a953:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021a957:	e8 34 ea ff ff       	callq  ffffffff80219390 <caml_invert_root>
ffffffff8021a95c:	48 39 1d 6d bb 02 00 	cmp    %rbx,0x2bb6d(%rip)        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021a963:	77 db                	ja     ffffffff8021a940 <caml_final_invert_finalisable_values+0x60>
ffffffff8021a965:	5b                   	pop    %rbx
ffffffff8021a966:	5d                   	pop    %rbp
ffffffff8021a967:	41 5c                	pop    %r12
ffffffff8021a969:	c3                   	retq   
ffffffff8021a96a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8021a970 <caml_final_oldify_young_roots>:
ffffffff8021a970:	41 54                	push   %r12
ffffffff8021a972:	55                   	push   %rbp
ffffffff8021a973:	48 8b 2d 6e bb 02 00 	mov    0x2bb6e(%rip),%rbp        # ffffffff802464e8 <finalisable_first+0x8>
ffffffff8021a97a:	48 3b 2d 6f bb 02 00 	cmp    0x2bb6f(%rip),%rbp        # ffffffff802464f0 <finalisable_first+0x10>
ffffffff8021a981:	53                   	push   %rbx
ffffffff8021a982:	73 4b                	jae    ffffffff8021a9cf <caml_final_oldify_young_roots+0x5f>
ffffffff8021a984:	48 8d 5c 6d 00       	lea    0x0(%rbp,%rbp,2),%rbx
ffffffff8021a989:	4c 8d 25 50 bb 02 00 	lea    0x2bb50(%rip),%r12        # ffffffff802464e0 <finalisable_first>
ffffffff8021a990:	48 c1 e3 03          	shl    $0x3,%rbx
ffffffff8021a994:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021a998:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8021a99c:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8021a9a0:	48 01 d8             	add    %rbx,%rax
ffffffff8021a9a3:	48 8b 38             	mov    (%rax),%rdi
ffffffff8021a9a6:	48 89 c6             	mov    %rax,%rsi
ffffffff8021a9a9:	e8 d2 6c ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff8021a9ae:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8021a9b2:	48 01 d8             	add    %rbx,%rax
ffffffff8021a9b5:	48 83 c3 18          	add    $0x18,%rbx
ffffffff8021a9b9:	48 8b 78 08          	mov    0x8(%rax),%rdi
ffffffff8021a9bd:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021a9c1:	e8 ba 6c ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff8021a9c6:	48 39 2d 23 bb 02 00 	cmp    %rbp,0x2bb23(%rip)        # ffffffff802464f0 <finalisable_first+0x10>
ffffffff8021a9cd:	77 c9                	ja     ffffffff8021a998 <caml_final_oldify_young_roots+0x28>
ffffffff8021a9cf:	48 8b 1d f2 ba 02 00 	mov    0x2baf2(%rip),%rbx        # ffffffff802464c8 <finalisable_last+0x8>
ffffffff8021a9d6:	48 3b 1d f3 ba 02 00 	cmp    0x2baf3(%rip),%rbx        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021a9dd:	73 34                	jae    ffffffff8021aa13 <caml_final_oldify_young_roots+0xa3>
ffffffff8021a9df:	48 8d 2c 5b          	lea    (%rbx,%rbx,2),%rbp
ffffffff8021a9e3:	4c 8d 25 d6 ba 02 00 	lea    0x2bad6(%rip),%r12        # ffffffff802464c0 <finalisable_last>
ffffffff8021a9ea:	48 c1 e5 03          	shl    $0x3,%rbp
ffffffff8021a9ee:	66 90                	xchg   %ax,%ax
ffffffff8021a9f0:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8021a9f4:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021a9f8:	48 01 e8             	add    %rbp,%rax
ffffffff8021a9fb:	48 83 c5 18          	add    $0x18,%rbp
ffffffff8021a9ff:	48 8b 38             	mov    (%rax),%rdi
ffffffff8021aa02:	48 89 c6             	mov    %rax,%rsi
ffffffff8021aa05:	e8 76 6c ff ff       	callq  ffffffff80211680 <caml_oldify_one>
ffffffff8021aa0a:	48 39 1d bf ba 02 00 	cmp    %rbx,0x2babf(%rip)        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021aa11:	77 dd                	ja     ffffffff8021a9f0 <caml_final_oldify_young_roots+0x80>
ffffffff8021aa13:	5b                   	pop    %rbx
ffffffff8021aa14:	5d                   	pop    %rbp
ffffffff8021aa15:	41 5c                	pop    %r12
ffffffff8021aa17:	c3                   	retq   
ffffffff8021aa18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021aa1f:	00 

ffffffff8021aa20 <caml_final_update_minor_roots>:
ffffffff8021aa20:	48 8b 05 a1 ba 02 00 	mov    0x2baa1(%rip),%rax        # ffffffff802464c8 <finalisable_last+0x8>
ffffffff8021aa27:	48 8b 0d a2 ba 02 00 	mov    0x2baa2(%rip),%rcx        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021aa2e:	48 39 c8             	cmp    %rcx,%rax
ffffffff8021aa31:	0f 83 91 01 00 00    	jae    ffffffff8021abc8 <caml_final_update_minor_roots+0x1a8>
ffffffff8021aa37:	48 8b 35 82 ba 02 00 	mov    0x2ba82(%rip),%rsi        # ffffffff802464c0 <finalisable_last>
ffffffff8021aa3e:	53                   	push   %rbx
ffffffff8021aa3f:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
ffffffff8021aa43:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff8021aa47:	4c 8b 05 5a 15 02 00 	mov    0x2155a(%rip),%r8        # ffffffff8023bfa8 <caml_young_end>
ffffffff8021aa4e:	4c 8b 0d 5b 15 02 00 	mov    0x2155b(%rip),%r9        # ffffffff8023bfb0 <caml_young_start>
ffffffff8021aa55:	31 ff                	xor    %edi,%edi
ffffffff8021aa57:	48 8d 54 d6 08       	lea    0x8(%rsi,%rdx,8),%rdx
ffffffff8021aa5c:	4c 8d 54 ce 08       	lea    0x8(%rsi,%rcx,8),%r10
ffffffff8021aa61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021aa68:	48 8b 0a             	mov    (%rdx),%rcx
ffffffff8021aa6b:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8021aa6e:	73 0e                	jae    ffffffff8021aa7e <caml_final_update_minor_roots+0x5e>
ffffffff8021aa70:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8021aa73:	76 09                	jbe    ffffffff8021aa7e <caml_final_update_minor_roots+0x5e>
ffffffff8021aa75:	48 83 79 f8 01       	cmpq   $0x1,-0x8(%rcx)
ffffffff8021aa7a:	48 83 df ff          	sbb    $0xffffffffffffffff,%rdi
ffffffff8021aa7e:	48 83 c2 18          	add    $0x18,%rdx
ffffffff8021aa82:	49 39 d2             	cmp    %rdx,%r10
ffffffff8021aa85:	75 e1                	jne    ffffffff8021aa68 <caml_final_update_minor_roots+0x48>
ffffffff8021aa87:	48 85 ff             	test   %rdi,%rdi
ffffffff8021aa8a:	75 34                	jne    ffffffff8021aac0 <caml_final_update_minor_roots+0xa0>
ffffffff8021aa8c:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
ffffffff8021aa90:	48 8d 54 d6 08       	lea    0x8(%rsi,%rdx,8),%rdx
ffffffff8021aa95:	0f 1f 00             	nopl   (%rax)
ffffffff8021aa98:	48 8b 0a             	mov    (%rdx),%rcx
ffffffff8021aa9b:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8021aa9e:	73 0b                	jae    ffffffff8021aaab <caml_final_update_minor_roots+0x8b>
ffffffff8021aaa0:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8021aaa3:	76 06                	jbe    ffffffff8021aaab <caml_final_update_minor_roots+0x8b>
ffffffff8021aaa5:	48 8b 09             	mov    (%rcx),%rcx
ffffffff8021aaa8:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff8021aaab:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021aaaf:	48 83 c2 18          	add    $0x18,%rdx
ffffffff8021aab3:	48 3b 05 16 ba 02 00 	cmp    0x2ba16(%rip),%rax        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021aaba:	72 dc                	jb     ffffffff8021aa98 <caml_final_update_minor_roots+0x78>
ffffffff8021aabc:	5b                   	pop    %rbx
ffffffff8021aabd:	c3                   	retq   
ffffffff8021aabe:	66 90                	xchg   %ax,%ax
ffffffff8021aac0:	89 fb                	mov    %edi,%ebx
ffffffff8021aac2:	e8 89 f8 ff ff       	callq  ffffffff8021a350 <alloc_to_do>
ffffffff8021aac7:	48 8b 05 fa b9 02 00 	mov    0x2b9fa(%rip),%rax        # ffffffff802464c8 <finalisable_last+0x8>
ffffffff8021aace:	48 3b 05 fb b9 02 00 	cmp    0x2b9fb(%rip),%rax        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021aad5:	4c 8b 1d cc b9 02 00 	mov    0x2b9cc(%rip),%r11        # ffffffff802464a8 <to_do_tl>
ffffffff8021aadc:	0f 83 a6 00 00 00    	jae    ffffffff8021ab88 <caml_final_update_minor_roots+0x168>
ffffffff8021aae2:	48 8d 0c 40          	lea    (%rax,%rax,2),%rcx
ffffffff8021aae6:	48 89 c7             	mov    %rax,%rdi
ffffffff8021aae9:	45 31 c9             	xor    %r9d,%r9d
ffffffff8021aaec:	48 c1 e1 03          	shl    $0x3,%rcx
ffffffff8021aaf0:	4c 8d 15 c9 b9 02 00 	lea    0x2b9c9(%rip),%r10        # ffffffff802464c0 <finalisable_last>
ffffffff8021aaf7:	eb 58                	jmp    ffffffff8021ab51 <caml_final_update_minor_roots+0x131>
ffffffff8021aaf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021ab00:	48 3b 35 a9 14 02 00 	cmp    0x214a9(%rip),%rsi        # ffffffff8023bfb0 <caml_young_start>
ffffffff8021ab07:	76 5c                	jbe    ffffffff8021ab65 <caml_final_update_minor_roots+0x145>
ffffffff8021ab09:	48 83 7e f8 00       	cmpq   $0x0,-0x8(%rsi)
ffffffff8021ab0e:	74 55                	je     ffffffff8021ab65 <caml_final_update_minor_roots+0x145>
ffffffff8021ab10:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
ffffffff8021ab14:	4b 8d 34 49          	lea    (%r9,%r9,2),%rsi
ffffffff8021ab18:	49 83 c1 01          	add    $0x1,%r9
ffffffff8021ab1c:	49 8d 34 f3          	lea    (%r11,%rsi,8),%rsi
ffffffff8021ab20:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
ffffffff8021ab24:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8021ab28:	48 c7 46 18 01 00 00 	movq   $0x1,0x18(%rsi)
ffffffff8021ab2f:	00 
ffffffff8021ab30:	48 89 56 20          	mov    %rdx,0x20(%rsi)
ffffffff8021ab34:	c7 46 20 00 00 00 00 	movl   $0x0,0x20(%rsi)
ffffffff8021ab3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021ab40:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8021ab44:	48 83 c1 18          	add    $0x18,%rcx
ffffffff8021ab48:	48 3b 3d 81 b9 02 00 	cmp    0x2b981(%rip),%rdi        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021ab4f:	73 37                	jae    ffffffff8021ab88 <caml_final_update_minor_roots+0x168>
ffffffff8021ab51:	4d 8b 02             	mov    (%r10),%r8
ffffffff8021ab54:	49 8d 14 08          	lea    (%r8,%rcx,1),%rdx
ffffffff8021ab58:	48 8b 72 08          	mov    0x8(%rdx),%rsi
ffffffff8021ab5c:	48 3b 35 45 14 02 00 	cmp    0x21445(%rip),%rsi        # ffffffff8023bfa8 <caml_young_end>
ffffffff8021ab63:	72 9b                	jb     ffffffff8021ab00 <caml_final_update_minor_roots+0xe0>
ffffffff8021ab65:	f3 0f 6f 02          	movdqu (%rdx),%xmm0
ffffffff8021ab69:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
ffffffff8021ab6d:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021ab71:	49 8d 34 f0          	lea    (%r8,%rsi,8),%rsi
ffffffff8021ab75:	0f 11 06             	movups %xmm0,(%rsi)
ffffffff8021ab78:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8021ab7c:	48 89 56 10          	mov    %rdx,0x10(%rsi)
ffffffff8021ab80:	eb be                	jmp    ffffffff8021ab40 <caml_final_update_minor_roots+0x120>
ffffffff8021ab82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021ab88:	48 89 05 41 b9 02 00 	mov    %rax,0x2b941(%rip)        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021ab8f:	41 89 5b 08          	mov    %ebx,0x8(%r11)
ffffffff8021ab93:	48 8b 05 2e b9 02 00 	mov    0x2b92e(%rip),%rax        # ffffffff802464c8 <finalisable_last+0x8>
ffffffff8021ab9a:	48 3b 05 2f b9 02 00 	cmp    0x2b92f(%rip),%rax        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021aba1:	0f 83 15 ff ff ff    	jae    ffffffff8021aabc <caml_final_update_minor_roots+0x9c>
ffffffff8021aba7:	48 8b 35 12 b9 02 00 	mov    0x2b912(%rip),%rsi        # ffffffff802464c0 <finalisable_last>
ffffffff8021abae:	4c 8b 05 f3 13 02 00 	mov    0x213f3(%rip),%r8        # ffffffff8023bfa8 <caml_young_end>
ffffffff8021abb5:	4c 8b 0d f4 13 02 00 	mov    0x213f4(%rip),%r9        # ffffffff8023bfb0 <caml_young_start>
ffffffff8021abbc:	e9 cb fe ff ff       	jmpq   ffffffff8021aa8c <caml_final_update_minor_roots+0x6c>
ffffffff8021abc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021abc8:	c3                   	retq   
ffffffff8021abc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021abd0 <caml_final_empty_young>:
ffffffff8021abd0:	48 8b 05 19 b9 02 00 	mov    0x2b919(%rip),%rax        # ffffffff802464f0 <finalisable_first+0x10>
ffffffff8021abd7:	48 89 05 0a b9 02 00 	mov    %rax,0x2b90a(%rip)        # ffffffff802464e8 <finalisable_first+0x8>
ffffffff8021abde:	48 8b 05 eb b8 02 00 	mov    0x2b8eb(%rip),%rax        # ffffffff802464d0 <finalisable_last+0x10>
ffffffff8021abe5:	48 89 05 dc b8 02 00 	mov    %rax,0x2b8dc(%rip)        # ffffffff802464c8 <finalisable_last+0x8>
ffffffff8021abec:	c3                   	retq   
ffffffff8021abed:	0f 1f 00             	nopl   (%rax)

ffffffff8021abf0 <caml_final_register>:
ffffffff8021abf0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021abf4:	48 89 f2             	mov    %rsi,%rdx
ffffffff8021abf7:	48 89 fe             	mov    %rdi,%rsi
ffffffff8021abfa:	48 8d 3d df b8 02 00 	lea    0x2b8df(%rip),%rdi        # ffffffff802464e0 <finalisable_first>
ffffffff8021ac01:	e8 aa f7 ff ff       	callq  ffffffff8021a3b0 <generic_final_register>
ffffffff8021ac06:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021ac0b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021ac0f:	c3                   	retq   

ffffffff8021ac10 <caml_final_register_called_without_value>:
ffffffff8021ac10:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021ac14:	48 89 f2             	mov    %rsi,%rdx
ffffffff8021ac17:	48 89 fe             	mov    %rdi,%rsi
ffffffff8021ac1a:	48 8d 3d 9f b8 02 00 	lea    0x2b89f(%rip),%rdi        # ffffffff802464c0 <finalisable_last>
ffffffff8021ac21:	e8 8a f7 ff ff       	callq  ffffffff8021a3b0 <generic_final_register>
ffffffff8021ac26:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021ac2b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021ac2f:	c3                   	retq   

ffffffff8021ac30 <caml_final_release>:
ffffffff8021ac30:	c7 05 66 b8 02 00 00 	movl   $0x0,0x2b866(%rip)        # ffffffff802464a0 <running_finalisation_function>
ffffffff8021ac37:	00 00 00 
ffffffff8021ac3a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021ac3f:	c3                   	retq   

ffffffff8021ac40 <caml_final_invariant_check>:
ffffffff8021ac40:	c3                   	retq   
ffffffff8021ac41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021ac48:	00 00 00 
ffffffff8021ac4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8021ac50 <allocate_block>:
ffffffff8021ac50:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
ffffffff8021ac54:	4c 8d 57 01          	lea    0x1(%rdi),%r10
ffffffff8021ac58:	4c 8b 05 a9 b8 02 00 	mov    0x2b8a9(%rip),%r8        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021ac5f:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021ac63:	49 89 c1             	mov    %rax,%r9
ffffffff8021ac66:	49 29 f9             	sub    %rdi,%r9
ffffffff8021ac69:	4c 39 d0             	cmp    %r10,%rax
ffffffff8021ac6c:	73 4a                	jae    ffffffff8021acb8 <allocate_block+0x68>
ffffffff8021ac6e:	49 83 e8 01          	sub    $0x1,%r8
ffffffff8021ac72:	49 29 c0             	sub    %rax,%r8
ffffffff8021ac75:	4c 89 05 8c b8 02 00 	mov    %r8,0x2b88c(%rip)        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021ac7c:	48 8b 01             	mov    (%rcx),%rax
ffffffff8021ac7f:	48 89 02             	mov    %rax,(%rdx)
ffffffff8021ac82:	48 39 0d 97 11 01 00 	cmp    %rcx,0x11197(%rip)        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021ac89:	0f 84 a1 00 00 00    	je     ffffffff8021ad30 <allocate_block+0xe0>
ffffffff8021ac8f:	48 c7 41 f8 00 00 00 	movq   $0x0,-0x8(%rcx)
ffffffff8021ac96:	00 
ffffffff8021ac97:	48 8b 05 62 b8 02 00 	mov    0x2b862(%rip),%rax        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021ac9e:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8021aca2:	74 3c                	je     ffffffff8021ace0 <allocate_block+0x90>
ffffffff8021aca4:	48 85 c0             	test   %rax,%rax
ffffffff8021aca7:	75 07                	jne    ffffffff8021acb0 <allocate_block+0x60>
ffffffff8021aca9:	48 89 15 78 11 01 00 	mov    %rdx,0x11178(%rip)        # ffffffff8022be28 <fl_prev>
ffffffff8021acb0:	4a 8d 04 c9          	lea    (%rcx,%r9,8),%rax
ffffffff8021acb4:	c3                   	retq   
ffffffff8021acb5:	0f 1f 00             	nopl   (%rax)
ffffffff8021acb8:	4c 89 c8             	mov    %r9,%rax
ffffffff8021acbb:	49 29 f8             	sub    %rdi,%r8
ffffffff8021acbe:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff8021acc2:	4c 89 05 3f b8 02 00 	mov    %r8,0x2b83f(%rip)        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021acc9:	48 05 00 02 00 00    	add    $0x200,%rax
ffffffff8021accf:	48 89 41 f8          	mov    %rax,-0x8(%rcx)
ffffffff8021acd3:	48 8b 05 26 b8 02 00 	mov    0x2b826(%rip),%rax        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021acda:	eb c8                	jmp    ffffffff8021aca4 <allocate_block+0x54>
ffffffff8021acdc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021ace0:	8b 05 3a b8 02 00    	mov    0x2b83a(%rip),%eax        # ffffffff80246520 <flp_size>
ffffffff8021ace6:	8d 7e 01             	lea    0x1(%rsi),%edi
ffffffff8021ace9:	39 c7                	cmp    %eax,%edi
ffffffff8021aceb:	7d 10                	jge    ffffffff8021acfd <allocate_block+0xad>
ffffffff8021aced:	4c 8d 05 4c b8 02 00 	lea    0x2b84c(%rip),%r8        # ffffffff80246540 <flp>
ffffffff8021acf4:	48 63 ff             	movslq %edi,%rdi
ffffffff8021acf7:	49 39 0c f8          	cmp    %rcx,(%r8,%rdi,8)
ffffffff8021acfb:	74 43                	je     ffffffff8021ad40 <allocate_block+0xf0>
ffffffff8021acfd:	83 e8 01             	sub    $0x1,%eax
ffffffff8021ad00:	39 f0                	cmp    %esi,%eax
ffffffff8021ad02:	75 ac                	jne    ffffffff8021acb0 <allocate_block+0x60>
ffffffff8021ad04:	48 8d 05 05 11 01 00 	lea    0x11105(%rip),%rax        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021ad0b:	89 35 0f b8 02 00    	mov    %esi,0x2b80f(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021ad11:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021ad14:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8021ad19:	48 0f 44 d0          	cmove  %rax,%rdx
ffffffff8021ad1d:	48 89 15 f4 b7 02 00 	mov    %rdx,0x2b7f4(%rip)        # ffffffff80246518 <beyond>
ffffffff8021ad24:	eb 8a                	jmp    ffffffff8021acb0 <allocate_block+0x60>
ffffffff8021ad26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021ad2d:	00 00 00 
ffffffff8021ad30:	48 89 15 e9 10 01 00 	mov    %rdx,0x110e9(%rip)        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021ad37:	e9 53 ff ff ff       	jmpq   ffffffff8021ac8f <allocate_block+0x3f>
ffffffff8021ad3c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021ad40:	49 89 14 f8          	mov    %rdx,(%r8,%rdi,8)
ffffffff8021ad44:	e9 67 ff ff ff       	jmpq   ffffffff8021acb0 <allocate_block+0x60>
ffffffff8021ad49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021ad50 <truncate_flp>:
ffffffff8021ad50:	48 8d 05 b9 10 01 00 	lea    0x110b9(%rip),%rax        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021ad57:	48 39 c7             	cmp    %rax,%rdi
ffffffff8021ad5a:	74 64                	je     ffffffff8021adc0 <truncate_flp+0x70>
ffffffff8021ad5c:	8b 0d be b7 02 00    	mov    0x2b7be(%rip),%ecx        # ffffffff80246520 <flp_size>
ffffffff8021ad62:	85 c9                	test   %ecx,%ecx
ffffffff8021ad64:	7e 44                	jle    ffffffff8021adaa <truncate_flp+0x5a>
ffffffff8021ad66:	8d 41 ff             	lea    -0x1(%rcx),%eax
ffffffff8021ad69:	48 8d 15 d0 b7 02 00 	lea    0x2b7d0(%rip),%rdx        # ffffffff80246540 <flp>
ffffffff8021ad70:	45 31 c0             	xor    %r8d,%r8d
ffffffff8021ad73:	48 63 f0             	movslq %eax,%rsi
ffffffff8021ad76:	48 8d 14 f2          	lea    (%rdx,%rsi,8),%rdx
ffffffff8021ad7a:	eb 15                	jmp    ffffffff8021ad91 <truncate_flp+0x41>
ffffffff8021ad7c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021ad80:	48 83 ea 08          	sub    $0x8,%rdx
ffffffff8021ad84:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8021ad8a:	85 c0                	test   %eax,%eax
ffffffff8021ad8c:	74 52                	je     ffffffff8021ade0 <truncate_flp+0x90>
ffffffff8021ad8e:	83 e8 01             	sub    $0x1,%eax
ffffffff8021ad91:	48 8b 32             	mov    (%rdx),%rsi
ffffffff8021ad94:	41 89 c9             	mov    %ecx,%r9d
ffffffff8021ad97:	89 c1                	mov    %eax,%ecx
ffffffff8021ad99:	48 3b 3e             	cmp    (%rsi),%rdi
ffffffff8021ad9c:	76 e2                	jbe    ffffffff8021ad80 <truncate_flp+0x30>
ffffffff8021ad9e:	45 84 c0             	test   %r8b,%r8b
ffffffff8021ada1:	74 07                	je     ffffffff8021adaa <truncate_flp+0x5a>
ffffffff8021ada3:	44 89 0d 76 b7 02 00 	mov    %r9d,0x2b776(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021adaa:	48 3b 3d 67 b7 02 00 	cmp    0x2b767(%rip),%rdi        # ffffffff80246518 <beyond>
ffffffff8021adb1:	77 0b                	ja     ffffffff8021adbe <truncate_flp+0x6e>
ffffffff8021adb3:	48 c7 05 5a b7 02 00 	movq   $0x0,0x2b75a(%rip)        # ffffffff80246518 <beyond>
ffffffff8021adba:	00 00 00 00 
ffffffff8021adbe:	c3                   	retq   
ffffffff8021adbf:	90                   	nop
ffffffff8021adc0:	c7 05 56 b7 02 00 00 	movl   $0x0,0x2b756(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021adc7:	00 00 00 
ffffffff8021adca:	48 c7 05 43 b7 02 00 	movq   $0x0,0x2b743(%rip)        # ffffffff80246518 <beyond>
ffffffff8021add1:	00 00 00 00 
ffffffff8021add5:	c3                   	retq   
ffffffff8021add6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021addd:	00 00 00 
ffffffff8021ade0:	48 3b 3d 31 b7 02 00 	cmp    0x2b731(%rip),%rdi        # ffffffff80246518 <beyond>
ffffffff8021ade7:	c7 05 2f b7 02 00 00 	movl   $0x0,0x2b72f(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021adee:	00 00 00 
ffffffff8021adf1:	77 cb                	ja     ffffffff8021adbe <truncate_flp+0x6e>
ffffffff8021adf3:	eb be                	jmp    ffffffff8021adb3 <truncate_flp+0x63>
ffffffff8021adf5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021adfc:	00 00 00 00 

ffffffff8021ae00 <caml_fl_allocate>:
ffffffff8021ae00:	41 57                	push   %r15
ffffffff8021ae02:	41 56                	push   %r14
ffffffff8021ae04:	41 55                	push   %r13
ffffffff8021ae06:	41 54                	push   %r12
ffffffff8021ae08:	55                   	push   %rbp
ffffffff8021ae09:	53                   	push   %rbx
ffffffff8021ae0a:	48 81 ec 68 1f 00 00 	sub    $0x1f68,%rsp
ffffffff8021ae11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021ae18:	00 00 
ffffffff8021ae1a:	48 89 84 24 58 1f 00 	mov    %rax,0x1f58(%rsp)
ffffffff8021ae21:	00 
ffffffff8021ae22:	31 c0                	xor    %eax,%eax
ffffffff8021ae24:	48 8b 05 d5 b6 02 00 	mov    0x2b6d5(%rip),%rax        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021ae2b:	48 85 c0             	test   %rax,%rax
ffffffff8021ae2e:	0f 84 3c 02 00 00    	je     ffffffff8021b070 <caml_fl_allocate+0x270>
ffffffff8021ae34:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8021ae38:	0f 85 fa 01 00 00    	jne    ffffffff8021b038 <caml_fl_allocate+0x238>
ffffffff8021ae3e:	44 8b 05 db b6 02 00 	mov    0x2b6db(%rip),%r8d        # ffffffff80246520 <flp_size>
ffffffff8021ae45:	31 f6                	xor    %esi,%esi
ffffffff8021ae47:	48 8d 2d f2 b6 02 00 	lea    0x2b6f2(%rip),%rbp        # ffffffff80246540 <flp>
ffffffff8021ae4e:	45 8d 48 ff          	lea    -0x1(%r8),%r9d
ffffffff8021ae52:	4d 89 ca             	mov    %r9,%r10
ffffffff8021ae55:	45 85 c0             	test   %r8d,%r8d
ffffffff8021ae58:	0f 8f b2 00 00 00    	jg     ffffffff8021af10 <caml_fl_allocate+0x110>
ffffffff8021ae5e:	0f 85 77 03 00 00    	jne    ffffffff8021b1db <caml_fl_allocate+0x3db>
ffffffff8021ae64:	48 8d 15 a5 0f 01 00 	lea    0x10fa5(%rip),%rdx        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021ae6b:	31 db                	xor    %ebx,%ebx
ffffffff8021ae6d:	31 c0                	xor    %eax,%eax
ffffffff8021ae6f:	31 f6                	xor    %esi,%esi
ffffffff8021ae71:	48 8d 0d c8 b6 02 00 	lea    0x2b6c8(%rip),%rcx        # ffffffff80246540 <flp>
ffffffff8021ae78:	eb 42                	jmp    ffffffff8021aebc <caml_fl_allocate+0xbc>
ffffffff8021ae7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021ae80:	4c 8b 5a f8          	mov    -0x8(%rdx),%r11
ffffffff8021ae84:	49 c1 eb 0a          	shr    $0xa,%r11
ffffffff8021ae88:	49 39 c3             	cmp    %rax,%r11
ffffffff8021ae8b:	76 1f                	jbe    ffffffff8021aeac <caml_fl_allocate+0xac>
ffffffff8021ae8d:	48 63 c3             	movslq %ebx,%rax
ffffffff8021ae90:	48 89 cd             	mov    %rcx,%rbp
ffffffff8021ae93:	44 8d 43 01          	lea    0x1(%rbx),%r8d
ffffffff8021ae97:	4c 89 0c c1          	mov    %r9,(%rcx,%rax,8)
ffffffff8021ae9b:	4c 39 df             	cmp    %r11,%rdi
ffffffff8021ae9e:	0f 86 fc 03 00 00    	jbe    ffffffff8021b2a0 <caml_fl_allocate+0x4a0>
ffffffff8021aea4:	4c 89 d8             	mov    %r11,%rax
ffffffff8021aea7:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021aeac:	41 81 f8 e7 03 00 00 	cmp    $0x3e7,%r8d
ffffffff8021aeb3:	0f 8f af 02 00 00    	jg     ffffffff8021b168 <caml_fl_allocate+0x368>
ffffffff8021aeb9:	44 89 c3             	mov    %r8d,%ebx
ffffffff8021aebc:	49 89 d1             	mov    %rdx,%r9
ffffffff8021aebf:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8021aec2:	48 85 d2             	test   %rdx,%rdx
ffffffff8021aec5:	75 b9                	jne    ffffffff8021ae80 <caml_fl_allocate+0x80>
ffffffff8021aec7:	40 84 f6             	test   %sil,%sil
ffffffff8021aeca:	74 07                	je     ffffffff8021aed3 <caml_fl_allocate+0xd3>
ffffffff8021aecc:	44 89 05 4d b6 02 00 	mov    %r8d,0x2b64d(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021aed3:	48 8d 05 36 0f 01 00 	lea    0x10f36(%rip),%rax        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021aeda:	4c 89 0d 9f d5 02 00 	mov    %r9,0x2d59f(%rip)        # ffffffff80248480 <fl_last>
ffffffff8021aee1:	4c 39 c8             	cmp    %r9,%rax
ffffffff8021aee4:	b8 00 00 00 00       	mov    $0x0,%eax
ffffffff8021aee9:	4c 0f 44 c8          	cmove  %rax,%r9
ffffffff8021aeed:	45 31 ed             	xor    %r13d,%r13d
ffffffff8021aef0:	4c 89 0d 21 b6 02 00 	mov    %r9,0x2b621(%rip)        # ffffffff80246518 <beyond>
ffffffff8021aef7:	e9 3f 01 00 00       	jmpq   ffffffff8021b03b <caml_fl_allocate+0x23b>
ffffffff8021aefc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021af00:	48 8d 46 01          	lea    0x1(%rsi),%rax
ffffffff8021af04:	49 39 f1             	cmp    %rsi,%r9
ffffffff8021af07:	0f 84 1b 02 00 00    	je     ffffffff8021b128 <caml_fl_allocate+0x328>
ffffffff8021af0d:	48 89 c6             	mov    %rax,%rsi
ffffffff8021af10:	48 8b 54 f5 00       	mov    0x0(%rbp,%rsi,8),%rdx
ffffffff8021af15:	89 f3                	mov    %esi,%ebx
ffffffff8021af17:	48 8b 0a             	mov    (%rdx),%rcx
ffffffff8021af1a:	4c 8b 59 f8          	mov    -0x8(%rcx),%r11
ffffffff8021af1e:	49 c1 eb 0a          	shr    $0xa,%r11
ffffffff8021af22:	4c 39 df             	cmp    %r11,%rdi
ffffffff8021af25:	77 d9                	ja     ffffffff8021af00 <caml_fl_allocate+0x100>
ffffffff8021af27:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8021af2b:	e8 20 fd ff ff       	callq  ffffffff8021ac50 <allocate_block>
ffffffff8021af30:	49 89 c5             	mov    %rax,%r13
ffffffff8021af33:	44 8b 35 e6 b5 02 00 	mov    0x2b5e6(%rip),%r14d        # ffffffff80246520 <flp_size>
ffffffff8021af3a:	41 39 de             	cmp    %ebx,%r14d
ffffffff8021af3d:	0f 8e f8 00 00 00    	jle    ffffffff8021b03b <caml_fl_allocate+0x23b>
ffffffff8021af43:	31 c9                	xor    %ecx,%ecx
ffffffff8021af45:	85 db                	test   %ebx,%ebx
ffffffff8021af47:	7e 15                	jle    ffffffff8021af5e <caml_fl_allocate+0x15e>
ffffffff8021af49:	8d 43 ff             	lea    -0x1(%rbx),%eax
ffffffff8021af4c:	48 98                	cltq   
ffffffff8021af4e:	48 8b 44 c5 00       	mov    0x0(%rbp,%rax,8),%rax
ffffffff8021af53:	48 8b 00             	mov    (%rax),%rax
ffffffff8021af56:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
ffffffff8021af5a:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff8021af5e:	4c 63 fb             	movslq %ebx,%r15
ffffffff8021af61:	41 83 ee 01          	sub    $0x1,%r14d
ffffffff8021af65:	4a 8b 44 fd 00       	mov    0x0(%rbp,%r15,8),%rax
ffffffff8021af6a:	41 39 de             	cmp    %ebx,%r14d
ffffffff8021af6d:	0f 84 05 03 00 00    	je     ffffffff8021b278 <caml_fl_allocate+0x478>
ffffffff8021af73:	44 8d 4b 01          	lea    0x1(%rbx),%r9d
ffffffff8021af77:	4d 63 c9             	movslq %r9d,%r9
ffffffff8021af7a:	4e 8b 44 cd 00       	mov    0x0(%rbp,%r9,8),%r8
ffffffff8021af7f:	49 39 c0             	cmp    %rax,%r8
ffffffff8021af82:	0f 84 28 04 00 00    	je     ffffffff8021b3b0 <caml_fl_allocate+0x5b0>
ffffffff8021af88:	bf e8 03 00 00       	mov    $0x3e8,%edi
ffffffff8021af8d:	29 df                	sub    %ebx,%edi
ffffffff8021af8f:	85 ff                	test   %edi,%edi
ffffffff8021af91:	0f 8e 19 04 00 00    	jle    ffffffff8021b3b0 <caml_fl_allocate+0x5b0>
ffffffff8021af97:	45 31 e4             	xor    %r12d,%r12d
ffffffff8021af9a:	eb 09                	jmp    ffffffff8021afa5 <caml_fl_allocate+0x1a5>
ffffffff8021af9c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021afa0:	41 39 fc             	cmp    %edi,%r12d
ffffffff8021afa3:	7d 31                	jge    ffffffff8021afd6 <caml_fl_allocate+0x1d6>
ffffffff8021afa5:	48 89 c6             	mov    %rax,%rsi
ffffffff8021afa8:	48 8b 00             	mov    (%rax),%rax
ffffffff8021afab:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
ffffffff8021afaf:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021afb3:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8021afb6:	76 19                	jbe    ffffffff8021afd1 <caml_fl_allocate+0x1d1>
ffffffff8021afb8:	4a 89 74 e4 10       	mov    %rsi,0x10(%rsp,%r12,8)
ffffffff8021afbd:	41 8d 4c 24 01       	lea    0x1(%r12),%ecx
ffffffff8021afc2:	49 39 d3             	cmp    %rdx,%r11
ffffffff8021afc5:	0f 86 ab 03 00 00    	jbe    ffffffff8021b376 <caml_fl_allocate+0x576>
ffffffff8021afcb:	4c 63 e1             	movslq %ecx,%r12
ffffffff8021afce:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021afd1:	4c 39 c0             	cmp    %r8,%rax
ffffffff8021afd4:	75 ca                	jne    ffffffff8021afa0 <caml_fl_allocate+0x1a0>
ffffffff8021afd6:	43 8d 0c 26          	lea    (%r14,%r12,1),%ecx
ffffffff8021afda:	81 f9 e8 03 00 00    	cmp    $0x3e8,%ecx
ffffffff8021afe0:	0f 8e 3d 02 00 00    	jle    ffffffff8021b223 <caml_fl_allocate+0x423>
ffffffff8021afe6:	42 8d 04 23          	lea    (%rbx,%r12,1),%eax
ffffffff8021afea:	3d e7 03 00 00       	cmp    $0x3e7,%eax
ffffffff8021afef:	0f 8f 53 03 00 00    	jg     ffffffff8021b348 <caml_fl_allocate+0x548>
ffffffff8021aff5:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff8021aff9:	0f 85 7f 03 00 00    	jne    ffffffff8021b37e <caml_fl_allocate+0x57e>
ffffffff8021afff:	49 63 d4             	movslq %r12d,%rdx
ffffffff8021b002:	4a 8d 7c fd 00       	lea    0x0(%rbp,%r15,8),%rdi
ffffffff8021b007:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
ffffffff8021b00c:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8021b010:	e8 8e 50 fe ff       	callq  ffffffff802000a3 <memcpy>
ffffffff8021b015:	48 8b 05 5c d4 02 00 	mov    0x2d45c(%rip),%rax        # ffffffff80248478 <flp+0x1f38>
ffffffff8021b01c:	c7 05 fa b4 02 00 e7 	movl   $0x3e7,0x2b4fa(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021b023:	03 00 00 
ffffffff8021b026:	48 8b 00             	mov    (%rax),%rax
ffffffff8021b029:	48 89 05 e8 b4 02 00 	mov    %rax,0x2b4e8(%rip)        # ffffffff80246518 <beyond>
ffffffff8021b030:	eb 09                	jmp    ffffffff8021b03b <caml_fl_allocate+0x23b>
ffffffff8021b032:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021b038:	45 31 ed             	xor    %r13d,%r13d
ffffffff8021b03b:	48 8b 84 24 58 1f 00 	mov    0x1f58(%rsp),%rax
ffffffff8021b042:	00 
ffffffff8021b043:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8021b04a:	00 00 
ffffffff8021b04c:	0f 85 d0 03 00 00    	jne    ffffffff8021b422 <caml_fl_allocate+0x622>
ffffffff8021b052:	48 81 c4 68 1f 00 00 	add    $0x1f68,%rsp
ffffffff8021b059:	4c 89 e8             	mov    %r13,%rax
ffffffff8021b05c:	5b                   	pop    %rbx
ffffffff8021b05d:	5d                   	pop    %rbp
ffffffff8021b05e:	41 5c                	pop    %r12
ffffffff8021b060:	41 5d                	pop    %r13
ffffffff8021b062:	41 5e                	pop    %r14
ffffffff8021b064:	41 5f                	pop    %r15
ffffffff8021b066:	c3                   	retq   
ffffffff8021b067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021b06e:	00 00 
ffffffff8021b070:	48 8b 35 b1 0d 01 00 	mov    0x10db1(%rip),%rsi        # ffffffff8022be28 <fl_prev>
ffffffff8021b077:	48 8b 0e             	mov    (%rsi),%rcx
ffffffff8021b07a:	48 85 c9             	test   %rcx,%rcx
ffffffff8021b07d:	74 57                	je     ffffffff8021b0d6 <caml_fl_allocate+0x2d6>
ffffffff8021b07f:	48 89 f2             	mov    %rsi,%rdx
ffffffff8021b082:	eb 12                	jmp    ffffffff8021b096 <caml_fl_allocate+0x296>
ffffffff8021b084:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021b088:	48 8b 01             	mov    (%rcx),%rax
ffffffff8021b08b:	48 89 ca             	mov    %rcx,%rdx
ffffffff8021b08e:	48 85 c0             	test   %rax,%rax
ffffffff8021b091:	74 4d                	je     ffffffff8021b0e0 <caml_fl_allocate+0x2e0>
ffffffff8021b093:	48 89 c1             	mov    %rax,%rcx
ffffffff8021b096:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
ffffffff8021b09a:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021b09e:	48 39 f8             	cmp    %rdi,%rax
ffffffff8021b0a1:	72 e5                	jb     ffffffff8021b088 <caml_fl_allocate+0x288>
ffffffff8021b0a3:	48 8b 84 24 58 1f 00 	mov    0x1f58(%rsp),%rax
ffffffff8021b0aa:	00 
ffffffff8021b0ab:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8021b0b2:	00 00 
ffffffff8021b0b4:	0f 85 68 03 00 00    	jne    ffffffff8021b422 <caml_fl_allocate+0x622>
ffffffff8021b0ba:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8021b0be:	31 f6                	xor    %esi,%esi
ffffffff8021b0c0:	48 81 c4 68 1f 00 00 	add    $0x1f68,%rsp
ffffffff8021b0c7:	5b                   	pop    %rbx
ffffffff8021b0c8:	5d                   	pop    %rbp
ffffffff8021b0c9:	41 5c                	pop    %r12
ffffffff8021b0cb:	41 5d                	pop    %r13
ffffffff8021b0cd:	41 5e                	pop    %r14
ffffffff8021b0cf:	41 5f                	pop    %r15
ffffffff8021b0d1:	e9 7a fb ff ff       	jmpq   ffffffff8021ac50 <allocate_block>
ffffffff8021b0d6:	48 89 f1             	mov    %rsi,%rcx
ffffffff8021b0d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021b0e0:	48 8d 15 29 0d 01 00 	lea    0x10d29(%rip),%rdx        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021b0e7:	48 89 0d 92 d3 02 00 	mov    %rcx,0x2d392(%rip)        # ffffffff80248480 <fl_last>
ffffffff8021b0ee:	48 8b 0d 1b 0d 01 00 	mov    0x10d1b(%rip),%rcx        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021b0f5:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8021b0f8:	75 18                	jne    ffffffff8021b112 <caml_fl_allocate+0x312>
ffffffff8021b0fa:	e9 39 ff ff ff       	jmpq   ffffffff8021b038 <caml_fl_allocate+0x238>
ffffffff8021b0ff:	90                   	nop
ffffffff8021b100:	48 8b 01             	mov    (%rcx),%rax
ffffffff8021b103:	48 89 ca             	mov    %rcx,%rdx
ffffffff8021b106:	48 39 ce             	cmp    %rcx,%rsi
ffffffff8021b109:	0f 84 29 ff ff ff    	je     ffffffff8021b038 <caml_fl_allocate+0x238>
ffffffff8021b10f:	48 89 c1             	mov    %rax,%rcx
ffffffff8021b112:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
ffffffff8021b116:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021b11a:	48 39 f8             	cmp    %rdi,%rax
ffffffff8021b11d:	72 e1                	jb     ffffffff8021b100 <caml_fl_allocate+0x300>
ffffffff8021b11f:	eb 82                	jmp    ffffffff8021b0a3 <caml_fl_allocate+0x2a3>
ffffffff8021b121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021b128:	4d 63 d2             	movslq %r10d,%r10
ffffffff8021b12b:	48 8b 0d e6 b3 02 00 	mov    0x2b3e6(%rip),%rcx        # ffffffff80246518 <beyond>
ffffffff8021b132:	4a 8b 74 d5 00       	mov    0x0(%rbp,%r10,8),%rsi
ffffffff8021b137:	48 8b 16             	mov    (%rsi),%rdx
ffffffff8021b13a:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff8021b13e:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021b142:	48 85 c9             	test   %rcx,%rcx
ffffffff8021b145:	0f 84 bd 00 00 00    	je     ffffffff8021b208 <caml_fl_allocate+0x408>
ffffffff8021b14b:	41 81 f8 e7 03 00 00 	cmp    $0x3e7,%r8d
ffffffff8021b152:	0f 8f ba 02 00 00    	jg     ffffffff8021b412 <caml_fl_allocate+0x612>
ffffffff8021b158:	44 89 c3             	mov    %r8d,%ebx
ffffffff8021b15b:	48 89 ca             	mov    %rcx,%rdx
ffffffff8021b15e:	e9 0c fd ff ff       	jmpq   ffffffff8021ae6f <caml_fl_allocate+0x6f>
ffffffff8021b163:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021b168:	40 84 f6             	test   %sil,%sil
ffffffff8021b16b:	74 07                	je     ffffffff8021b174 <caml_fl_allocate+0x374>
ffffffff8021b16d:	44 89 05 ac b3 02 00 	mov    %r8d,0x2b3ac(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021b174:	48 89 15 9d b3 02 00 	mov    %rdx,0x2b39d(%rip)        # ffffffff80246518 <beyond>
ffffffff8021b17b:	48 8b 0a             	mov    (%rdx),%rcx
ffffffff8021b17e:	48 8b 05 f3 d2 02 00 	mov    0x2d2f3(%rip),%rax        # ffffffff80248478 <flp+0x1f38>
ffffffff8021b185:	48 8b 00             	mov    (%rax),%rax
ffffffff8021b188:	48 8b 70 f8          	mov    -0x8(%rax),%rsi
ffffffff8021b18c:	48 c1 ee 0a          	shr    $0xa,%rsi
ffffffff8021b190:	48 85 c9             	test   %rcx,%rcx
ffffffff8021b193:	0f 84 43 02 00 00    	je     ffffffff8021b3dc <caml_fl_allocate+0x5dc>
ffffffff8021b199:	4c 8b 15 78 b3 02 00 	mov    0x2b378(%rip),%r10        # ffffffff80246518 <beyond>
ffffffff8021b1a0:	45 31 c9             	xor    %r9d,%r9d
ffffffff8021b1a3:	eb 1e                	jmp    ffffffff8021b1c3 <caml_fl_allocate+0x3c3>
ffffffff8021b1a5:	0f 1f 00             	nopl   (%rax)
ffffffff8021b1a8:	48 39 f8             	cmp    %rdi,%rax
ffffffff8021b1ab:	0f 83 16 01 00 00    	jae    ffffffff8021b2c7 <caml_fl_allocate+0x4c7>
ffffffff8021b1b1:	48 8b 01             	mov    (%rcx),%rax
ffffffff8021b1b4:	48 89 ca             	mov    %rcx,%rdx
ffffffff8021b1b7:	48 85 c0             	test   %rax,%rax
ffffffff8021b1ba:	0f 84 98 00 00 00    	je     ffffffff8021b258 <caml_fl_allocate+0x458>
ffffffff8021b1c0:	48 89 c1             	mov    %rax,%rcx
ffffffff8021b1c3:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
ffffffff8021b1c7:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021b1cb:	48 39 c6             	cmp    %rax,%rsi
ffffffff8021b1ce:	76 d8                	jbe    ffffffff8021b1a8 <caml_fl_allocate+0x3a8>
ffffffff8021b1d0:	49 89 ca             	mov    %rcx,%r10
ffffffff8021b1d3:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff8021b1d9:	eb d6                	jmp    ffffffff8021b1b1 <caml_fl_allocate+0x3b1>
ffffffff8021b1db:	4d 63 d1             	movslq %r9d,%r10
ffffffff8021b1de:	48 8b 15 33 b3 02 00 	mov    0x2b333(%rip),%rdx        # ffffffff80246518 <beyond>
ffffffff8021b1e5:	4a 8b 74 d5 00       	mov    0x0(%rbp,%r10,8),%rsi
ffffffff8021b1ea:	48 8b 0e             	mov    (%rsi),%rcx
ffffffff8021b1ed:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
ffffffff8021b1f1:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021b1f5:	48 85 d2             	test   %rdx,%rdx
ffffffff8021b1f8:	0f 85 29 02 00 00    	jne    ffffffff8021b427 <caml_fl_allocate+0x627>
ffffffff8021b1fe:	48 89 ca             	mov    %rcx,%rdx
ffffffff8021b201:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021b208:	44 89 c3             	mov    %r8d,%ebx
ffffffff8021b20b:	41 81 f8 e7 03 00 00 	cmp    $0x3e7,%r8d
ffffffff8021b212:	0f 8e 57 fc ff ff    	jle    ffffffff8021ae6f <caml_fl_allocate+0x6f>
ffffffff8021b218:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021b21b:	48 89 f2             	mov    %rsi,%rdx
ffffffff8021b21e:	e9 5b ff ff ff       	jmpq   ffffffff8021b17e <caml_fl_allocate+0x37e>
ffffffff8021b223:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff8021b228:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff8021b22c:	0f 85 c4 00 00 00    	jne    ffffffff8021b2f6 <caml_fl_allocate+0x4f6>
ffffffff8021b232:	4a 8d 7c fd 00       	lea    0x0(%rbp,%r15,8),%rdi
ffffffff8021b237:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
ffffffff8021b23c:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
ffffffff8021b240:	e8 5e 4e fe ff       	callq  ffffffff802000a3 <memcpy>
ffffffff8021b245:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
ffffffff8021b249:	89 0d d1 b2 02 00    	mov    %ecx,0x2b2d1(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021b24f:	e9 e7 fd ff ff       	jmpq   ffffffff8021b03b <caml_fl_allocate+0x23b>
ffffffff8021b254:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021b258:	45 84 c9             	test   %r9b,%r9b
ffffffff8021b25b:	74 07                	je     ffffffff8021b264 <caml_fl_allocate+0x464>
ffffffff8021b25d:	4c 89 15 b4 b2 02 00 	mov    %r10,0x2b2b4(%rip)        # ffffffff80246518 <beyond>
ffffffff8021b264:	48 89 0d 15 d2 02 00 	mov    %rcx,0x2d215(%rip)        # ffffffff80248480 <fl_last>
ffffffff8021b26b:	45 31 ed             	xor    %r13d,%r13d
ffffffff8021b26e:	e9 c8 fd ff ff       	jmpq   ffffffff8021b03b <caml_fl_allocate+0x23b>
ffffffff8021b273:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021b278:	48 8b 10             	mov    (%rax),%rdx
ffffffff8021b27b:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff8021b27f:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021b283:	48 39 c8             	cmp    %rcx,%rax
ffffffff8021b286:	0f 87 ac 00 00 00    	ja     ffffffff8021b338 <caml_fl_allocate+0x538>
ffffffff8021b28c:	48 89 15 85 b2 02 00 	mov    %rdx,0x2b285(%rip)        # ffffffff80246518 <beyond>
ffffffff8021b293:	89 1d 87 b2 02 00    	mov    %ebx,0x2b287(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021b299:	e9 9d fd ff ff       	jmpq   ffffffff8021b03b <caml_fl_allocate+0x23b>
ffffffff8021b29e:	66 90                	xchg   %ax,%ax
ffffffff8021b2a0:	48 89 15 71 b2 02 00 	mov    %rdx,0x2b271(%rip)        # ffffffff80246518 <beyond>
ffffffff8021b2a7:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021b2aa:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8021b2ae:	89 de                	mov    %ebx,%esi
ffffffff8021b2b0:	4c 89 ca             	mov    %r9,%rdx
ffffffff8021b2b3:	44 89 05 66 b2 02 00 	mov    %r8d,0x2b266(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021b2ba:	e8 91 f9 ff ff       	callq  ffffffff8021ac50 <allocate_block>
ffffffff8021b2bf:	49 89 c5             	mov    %rax,%r13
ffffffff8021b2c2:	e9 6c fc ff ff       	jmpq   ffffffff8021af33 <caml_fl_allocate+0x133>
ffffffff8021b2c7:	45 84 c9             	test   %r9b,%r9b
ffffffff8021b2ca:	74 07                	je     ffffffff8021b2d3 <caml_fl_allocate+0x4d3>
ffffffff8021b2cc:	4c 89 15 45 b2 02 00 	mov    %r10,0x2b245(%rip)        # ffffffff80246518 <beyond>
ffffffff8021b2d3:	48 8b 84 24 58 1f 00 	mov    0x1f58(%rsp),%rax
ffffffff8021b2da:	00 
ffffffff8021b2db:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8021b2e2:	00 00 
ffffffff8021b2e4:	0f 85 38 01 00 00    	jne    ffffffff8021b422 <caml_fl_allocate+0x622>
ffffffff8021b2ea:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8021b2ee:	44 89 c6             	mov    %r8d,%esi
ffffffff8021b2f1:	e9 ca fd ff ff       	jmpq   ffffffff8021b0c0 <caml_fl_allocate+0x2c0>
ffffffff8021b2f6:	41 29 de             	sub    %ebx,%r14d
ffffffff8021b2f9:	42 8d 04 23          	lea    (%rbx,%r12,1),%eax
ffffffff8021b2fd:	4a 8d 74 cd 00       	lea    0x0(%rbp,%r9,8),%rsi
ffffffff8021b302:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
ffffffff8021b306:	48 98                	cltq   
ffffffff8021b308:	49 63 d6             	movslq %r14d,%rdx
ffffffff8021b30b:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8021b30f:	48 8d 7c c5 00       	lea    0x0(%rbp,%rax,8),%rdi
ffffffff8021b314:	e8 8c 4d fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff8021b319:	45 85 e4             	test   %r12d,%r12d
ffffffff8021b31c:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
ffffffff8021b320:	0f 8e 23 ff ff ff    	jle    ffffffff8021b249 <caml_fl_allocate+0x449>
ffffffff8021b326:	49 63 d4             	movslq %r12d,%rdx
ffffffff8021b329:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8021b32d:	e9 00 ff ff ff       	jmpq   ffffffff8021b232 <caml_fl_allocate+0x432>
ffffffff8021b332:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021b338:	48 c7 05 d5 b1 02 00 	movq   $0x0,0x2b1d5(%rip)        # ffffffff80246518 <beyond>
ffffffff8021b33f:	00 00 00 00 
ffffffff8021b343:	e9 f3 fc ff ff       	jmpq   ffffffff8021b03b <caml_fl_allocate+0x23b>
ffffffff8021b348:	81 fb e8 03 00 00    	cmp    $0x3e8,%ebx
ffffffff8021b34e:	0f 84 c1 fc ff ff    	je     ffffffff8021b015 <caml_fl_allocate+0x215>
ffffffff8021b354:	ba e8 03 00 00       	mov    $0x3e8,%edx
ffffffff8021b359:	4a 8d 7c fd 00       	lea    0x0(%rbp,%r15,8),%rdi
ffffffff8021b35e:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
ffffffff8021b363:	29 da                	sub    %ebx,%edx
ffffffff8021b365:	48 63 d2             	movslq %edx,%rdx
ffffffff8021b368:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8021b36c:	e8 32 4d fe ff       	callq  ffffffff802000a3 <memcpy>
ffffffff8021b371:	e9 9f fc ff ff       	jmpq   ffffffff8021b015 <caml_fl_allocate+0x215>
ffffffff8021b376:	41 89 cc             	mov    %ecx,%r12d
ffffffff8021b379:	e9 58 fc ff ff       	jmpq   ffffffff8021afd6 <caml_fl_allocate+0x1d6>
ffffffff8021b37e:	ba e8 03 00 00       	mov    $0x3e8,%edx
ffffffff8021b383:	4a 8d 74 cd 00       	lea    0x0(%rbp,%r9,8),%rsi
ffffffff8021b388:	29 c2                	sub    %eax,%edx
ffffffff8021b38a:	48 98                	cltq   
ffffffff8021b38c:	48 63 d2             	movslq %edx,%rdx
ffffffff8021b38f:	48 8d 7c c5 00       	lea    0x0(%rbp,%rax,8),%rdi
ffffffff8021b394:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8021b398:	e8 08 4d fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff8021b39d:	45 85 e4             	test   %r12d,%r12d
ffffffff8021b3a0:	0f 8e 6f fc ff ff    	jle    ffffffff8021b015 <caml_fl_allocate+0x215>
ffffffff8021b3a6:	e9 54 fc ff ff       	jmpq   ffffffff8021afff <caml_fl_allocate+0x1ff>
ffffffff8021b3ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021b3b0:	41 81 fe e8 03 00 00 	cmp    $0x3e8,%r14d
ffffffff8021b3b7:	7f 2b                	jg     ffffffff8021b3e4 <caml_fl_allocate+0x5e4>
ffffffff8021b3b9:	44 89 f2             	mov    %r14d,%edx
ffffffff8021b3bc:	4a 8d 74 cd 00       	lea    0x0(%rbp,%r9,8),%rsi
ffffffff8021b3c1:	4a 8d 7c fd 00       	lea    0x0(%rbp,%r15,8),%rdi
ffffffff8021b3c6:	29 da                	sub    %ebx,%edx
ffffffff8021b3c8:	48 63 d2             	movslq %edx,%rdx
ffffffff8021b3cb:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8021b3cf:	e8 d1 4c fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff8021b3d4:	44 89 f1             	mov    %r14d,%ecx
ffffffff8021b3d7:	e9 6d fe ff ff       	jmpq   ffffffff8021b249 <caml_fl_allocate+0x449>
ffffffff8021b3dc:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021b3df:	e9 80 fe ff ff       	jmpq   ffffffff8021b264 <caml_fl_allocate+0x464>
ffffffff8021b3e4:	81 fb e7 03 00 00    	cmp    $0x3e7,%ebx
ffffffff8021b3ea:	0f 8f 58 ff ff ff    	jg     ffffffff8021b348 <caml_fl_allocate+0x548>
ffffffff8021b3f0:	ba e8 03 00 00       	mov    $0x3e8,%edx
ffffffff8021b3f5:	4a 8d 74 cd 00       	lea    0x0(%rbp,%r9,8),%rsi
ffffffff8021b3fa:	4a 8d 7c fd 00       	lea    0x0(%rbp,%r15,8),%rdi
ffffffff8021b3ff:	29 da                	sub    %ebx,%edx
ffffffff8021b401:	48 63 d2             	movslq %edx,%rdx
ffffffff8021b404:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff8021b408:	e8 98 4c fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff8021b40d:	e9 03 fc ff ff       	jmpq   ffffffff8021b015 <caml_fl_allocate+0x215>
ffffffff8021b412:	48 c7 05 fb b0 02 00 	movq   $0x0,0x2b0fb(%rip)        # ffffffff80246518 <beyond>
ffffffff8021b419:	00 00 00 00 
ffffffff8021b41d:	e9 f6 fd ff ff       	jmpq   ffffffff8021b218 <caml_fl_allocate+0x418>
ffffffff8021b422:	e8 79 4c fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021b427:	44 89 c3             	mov    %r8d,%ebx
ffffffff8021b42a:	e9 40 fa ff ff       	jmpq   ffffffff8021ae6f <caml_fl_allocate+0x6f>
ffffffff8021b42f:	90                   	nop

ffffffff8021b430 <caml_fl_init_merge>:
ffffffff8021b430:	48 8d 05 d9 09 01 00 	lea    0x109d9(%rip),%rax        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021b437:	48 c7 05 ce b0 02 00 	movq   $0x0,0x2b0ce(%rip)        # ffffffff80246510 <last_fragment>
ffffffff8021b43e:	00 00 00 00 
ffffffff8021b442:	48 89 05 d7 09 01 00 	mov    %rax,0x109d7(%rip)        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021b449:	c3                   	retq   
ffffffff8021b44a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8021b450 <caml_fl_reset>:
ffffffff8021b450:	48 8b 05 a9 b0 02 00 	mov    0x2b0a9(%rip),%rax        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021b457:	48 8d 3d b2 09 01 00 	lea    0x109b2(%rip),%rdi        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021b45e:	48 c7 05 a7 09 01 00 	movq   $0x0,0x109a7(%rip)        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021b465:	00 00 00 00 
ffffffff8021b469:	48 85 c0             	test   %rax,%rax
ffffffff8021b46c:	74 32                	je     ffffffff8021b4a0 <caml_fl_reset+0x50>
ffffffff8021b46e:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8021b472:	75 05                	jne    ffffffff8021b479 <caml_fl_reset+0x29>
ffffffff8021b474:	e8 d7 f8 ff ff       	callq  ffffffff8021ad50 <truncate_flp>
ffffffff8021b479:	48 c7 05 84 b0 02 00 	movq   $0x0,0x2b084(%rip)        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021b480:	00 00 00 00 
ffffffff8021b484:	48 c7 05 81 b0 02 00 	movq   $0x0,0x2b081(%rip)        # ffffffff80246510 <last_fragment>
ffffffff8021b48b:	00 00 00 00 
ffffffff8021b48f:	48 89 3d 8a 09 01 00 	mov    %rdi,0x1098a(%rip)        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021b496:	c3                   	retq   
ffffffff8021b497:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021b49e:	00 00 
ffffffff8021b4a0:	48 89 3d 81 09 01 00 	mov    %rdi,0x10981(%rip)        # ffffffff8022be28 <fl_prev>
ffffffff8021b4a7:	eb d0                	jmp    ffffffff8021b479 <caml_fl_reset+0x29>
ffffffff8021b4a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021b4b0 <caml_fl_merge_block>:
ffffffff8021b4b0:	41 55                	push   %r13
ffffffff8021b4b2:	48 8b 05 4f b0 02 00 	mov    0x2b04f(%rip),%rax        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021b4b9:	49 89 fa             	mov    %rdi,%r10
ffffffff8021b4bc:	49 89 fd             	mov    %rdi,%r13
ffffffff8021b4bf:	41 54                	push   %r12
ffffffff8021b4c1:	55                   	push   %rbp
ffffffff8021b4c2:	48 8d 6f f8          	lea    -0x8(%rdi),%rbp
ffffffff8021b4c6:	53                   	push   %rbx
ffffffff8021b4c7:	48 8b 5f f8          	mov    -0x8(%rdi),%rbx
ffffffff8021b4cb:	48 8b 3d 4e 09 01 00 	mov    0x1094e(%rip),%rdi        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021b4d2:	49 89 db             	mov    %rbx,%r11
ffffffff8021b4d5:	49 c1 eb 0a          	shr    $0xa,%r11
ffffffff8021b4d9:	48 83 3d 1f b0 02 00 	cmpq   $0x1,0x2b01f(%rip)        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021b4e0:	01 
ffffffff8021b4e1:	49 8d 44 03 01       	lea    0x1(%r11,%rax,1),%rax
ffffffff8021b4e6:	48 89 05 1b b0 02 00 	mov    %rax,0x2b01b(%rip)        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021b4ed:	4c 8b 27             	mov    (%rdi),%r12
ffffffff8021b4f0:	0f 84 5a 01 00 00    	je     ffffffff8021b650 <caml_fl_merge_block+0x1a0>
ffffffff8021b4f6:	48 3b 2d 13 b0 02 00 	cmp    0x2b013(%rip),%rbp        # ffffffff80246510 <last_fragment>
ffffffff8021b4fd:	0f 84 05 01 00 00    	je     ffffffff8021b608 <caml_fl_merge_block+0x158>
ffffffff8021b503:	4f 8d 44 dd 00       	lea    0x0(%r13,%r11,8),%r8
ffffffff8021b508:	49 8d 44 24 f8       	lea    -0x8(%r12),%rax
ffffffff8021b50d:	4c 39 c0             	cmp    %r8,%rax
ffffffff8021b510:	0f 84 8a 00 00 00    	je     ffffffff8021b5a0 <caml_fl_merge_block+0xf0>
ffffffff8021b516:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
ffffffff8021b51a:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021b51e:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
ffffffff8021b522:	48 39 d5             	cmp    %rdx,%rbp
ffffffff8021b525:	74 49                	je     ffffffff8021b570 <caml_fl_merge_block+0xc0>
ffffffff8021b527:	4d 85 db             	test   %r11,%r11
ffffffff8021b52a:	75 1c                	jne    ffffffff8021b548 <caml_fl_merge_block+0x98>
ffffffff8021b52c:	5b                   	pop    %rbx
ffffffff8021b52d:	4c 89 c0             	mov    %r8,%rax
ffffffff8021b530:	5d                   	pop    %rbp
ffffffff8021b531:	4c 89 15 d8 af 02 00 	mov    %r10,0x2afd8(%rip)        # ffffffff80246510 <last_fragment>
ffffffff8021b538:	41 5c                	pop    %r12
ffffffff8021b53a:	48 83 2d c6 af 02 00 	subq   $0x1,0x2afc6(%rip)        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021b541:	01 
ffffffff8021b542:	41 5d                	pop    %r13
ffffffff8021b544:	c3                   	retq   
ffffffff8021b545:	0f 1f 00             	nopl   (%rax)
ffffffff8021b548:	80 e7 fc             	and    $0xfc,%bh
ffffffff8021b54b:	4c 89 c0             	mov    %r8,%rax
ffffffff8021b54e:	80 cf 02             	or     $0x2,%bh
ffffffff8021b551:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff8021b555:	4d 89 22             	mov    %r12,(%r10)
ffffffff8021b558:	4c 89 17             	mov    %r10,(%rdi)
ffffffff8021b55b:	5b                   	pop    %rbx
ffffffff8021b55c:	4c 89 15 bd 08 01 00 	mov    %r10,0x108bd(%rip)        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021b563:	5d                   	pop    %rbp
ffffffff8021b564:	41 5c                	pop    %r12
ffffffff8021b566:	41 5d                	pop    %r13
ffffffff8021b568:	c3                   	retq   
ffffffff8021b569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021b570:	48 ba fe ff ff ff ff 	movabs $0x3ffffffffffffe,%rdx
ffffffff8021b577:	ff 3f 00 
ffffffff8021b57a:	49 8d 44 03 01       	lea    0x1(%r11,%rax,1),%rax
ffffffff8021b57f:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021b582:	77 a3                	ja     ffffffff8021b527 <caml_fl_merge_block+0x77>
ffffffff8021b584:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff8021b588:	48 05 00 02 00 00    	add    $0x200,%rax
ffffffff8021b58e:	48 89 47 f8          	mov    %rax,-0x8(%rdi)
ffffffff8021b592:	4c 89 c0             	mov    %r8,%rax
ffffffff8021b595:	5b                   	pop    %rbx
ffffffff8021b596:	5d                   	pop    %rbp
ffffffff8021b597:	41 5c                	pop    %r12
ffffffff8021b599:	41 5d                	pop    %r13
ffffffff8021b59b:	c3                   	retq   
ffffffff8021b59c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021b5a0:	48 ba ff ff ff ff ff 	movabs $0x3fffffffffffff,%rdx
ffffffff8021b5a7:	ff 3f 00 
ffffffff8021b5aa:	49 8b 44 24 f8       	mov    -0x8(%r12),%rax
ffffffff8021b5af:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021b5b3:	49 8d 44 03 01       	lea    0x1(%r11,%rax,1),%rax
ffffffff8021b5b8:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021b5bb:	0f 87 55 ff ff ff    	ja     ffffffff8021b516 <caml_fl_merge_block+0x66>
ffffffff8021b5c1:	49 8b 14 24          	mov    (%r12),%rdx
ffffffff8021b5c5:	48 89 17             	mov    %rdx,(%rdi)
ffffffff8021b5c8:	48 83 3d 30 af 02 00 	cmpq   $0x0,0x2af30(%rip)        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021b5cf:	00 
ffffffff8021b5d0:	75 0d                	jne    ffffffff8021b5df <caml_fl_merge_block+0x12f>
ffffffff8021b5d2:	4c 39 25 4f 08 01 00 	cmp    %r12,0x1084f(%rip)        # ffffffff8022be28 <fl_prev>
ffffffff8021b5d9:	0f 84 81 00 00 00    	je     ffffffff8021b660 <caml_fl_merge_block+0x1b0>
ffffffff8021b5df:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff8021b5e3:	49 89 d4             	mov    %rdx,%r12
ffffffff8021b5e6:	48 8d 98 00 02 00 00 	lea    0x200(%rax),%rbx
ffffffff8021b5ed:	49 89 db             	mov    %rbx,%r11
ffffffff8021b5f0:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff8021b5f4:	49 c1 eb 0a          	shr    $0xa,%r11
ffffffff8021b5f8:	4f 8d 44 dd 00       	lea    0x0(%r13,%r11,8),%r8
ffffffff8021b5fd:	e9 14 ff ff ff       	jmpq   ffffffff8021b516 <caml_fl_merge_block+0x66>
ffffffff8021b602:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021b608:	48 ba ff ff ff ff ff 	movabs $0x3fffffffffffff,%rdx
ffffffff8021b60f:	ff 3f 00 
ffffffff8021b612:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff8021b616:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021b61a:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021b61e:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021b621:	0f 87 dc fe ff ff    	ja     ffffffff8021b503 <caml_fl_merge_block+0x53>
ffffffff8021b627:	48 89 c3             	mov    %rax,%rbx
ffffffff8021b62a:	49 89 ea             	mov    %rbp,%r10
ffffffff8021b62d:	49 89 ed             	mov    %rbp,%r13
ffffffff8021b630:	48 21 d0             	and    %rdx,%rax
ffffffff8021b633:	48 c1 e3 0a          	shl    $0xa,%rbx
ffffffff8021b637:	48 83 ed 08          	sub    $0x8,%rbp
ffffffff8021b63b:	49 89 c3             	mov    %rax,%r11
ffffffff8021b63e:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
ffffffff8021b642:	48 83 05 be ae 02 00 	addq   $0x1,0x2aebe(%rip)        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021b649:	01 
ffffffff8021b64a:	e9 b4 fe ff ff       	jmpq   ffffffff8021b503 <caml_fl_merge_block+0x53>
ffffffff8021b64f:	90                   	nop
ffffffff8021b650:	e8 fb f6 ff ff       	callq  ffffffff8021ad50 <truncate_flp>
ffffffff8021b655:	e9 9c fe ff ff       	jmpq   ffffffff8021b4f6 <caml_fl_merge_block+0x46>
ffffffff8021b65a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021b660:	48 89 3d c1 07 01 00 	mov    %rdi,0x107c1(%rip)        # ffffffff8022be28 <fl_prev>
ffffffff8021b667:	e9 73 ff ff ff       	jmpq   ffffffff8021b5df <caml_fl_merge_block+0x12f>
ffffffff8021b66c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8021b670 <caml_fl_add_blocks>:
ffffffff8021b670:	48 8b 0d 91 ae 02 00 	mov    0x2ae91(%rip),%rcx        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021b677:	48 89 f8             	mov    %rdi,%rax
ffffffff8021b67a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021b680:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
ffffffff8021b684:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021b688:	48 8d 4c 11 01       	lea    0x1(%rcx,%rdx,1),%rcx
ffffffff8021b68d:	48 89 0d 74 ae 02 00 	mov    %rcx,0x2ae74(%rip)        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021b694:	48 8b 00             	mov    (%rax),%rax
ffffffff8021b697:	48 85 c0             	test   %rax,%rax
ffffffff8021b69a:	75 e4                	jne    ffffffff8021b680 <caml_fl_add_blocks+0x10>
ffffffff8021b69c:	48 8b 05 dd cd 02 00 	mov    0x2cddd(%rip),%rax        # ffffffff80248480 <fl_last>
ffffffff8021b6a3:	48 39 c7             	cmp    %rax,%rdi
ffffffff8021b6a6:	76 20                	jbe    ffffffff8021b6c8 <caml_fl_add_blocks+0x58>
ffffffff8021b6a8:	48 89 38             	mov    %rdi,(%rax)
ffffffff8021b6ab:	48 3b 05 6e 07 01 00 	cmp    0x1076e(%rip),%rax        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021b6b2:	0f 84 90 00 00 00    	je     ffffffff8021b748 <caml_fl_add_blocks+0xd8>
ffffffff8021b6b8:	48 83 3d 40 ae 02 00 	cmpq   $0x1,0x2ae40(%rip)        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021b6bf:	01 
ffffffff8021b6c0:	74 5e                	je     ffffffff8021b720 <caml_fl_add_blocks+0xb0>
ffffffff8021b6c2:	c3                   	retq   
ffffffff8021b6c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021b6c8:	48 8b 05 41 07 01 00 	mov    0x10741(%rip),%rax        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021b6cf:	48 85 c0             	test   %rax,%rax
ffffffff8021b6d2:	0f 84 8d 00 00 00    	je     ffffffff8021b765 <caml_fl_add_blocks+0xf5>
ffffffff8021b6d8:	48 39 c7             	cmp    %rax,%rdi
ffffffff8021b6db:	0f 86 84 00 00 00    	jbe    ffffffff8021b765 <caml_fl_add_blocks+0xf5>
ffffffff8021b6e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021b6e8:	48 89 c2             	mov    %rax,%rdx
ffffffff8021b6eb:	48 8b 00             	mov    (%rax),%rax
ffffffff8021b6ee:	48 85 c0             	test   %rax,%rax
ffffffff8021b6f1:	74 05                	je     ffffffff8021b6f8 <caml_fl_add_blocks+0x88>
ffffffff8021b6f3:	48 39 c7             	cmp    %rax,%rdi
ffffffff8021b6f6:	77 f0                	ja     ffffffff8021b6e8 <caml_fl_add_blocks+0x78>
ffffffff8021b6f8:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021b6fb:	48 8b 77 08          	mov    0x8(%rdi),%rsi
ffffffff8021b6ff:	48 89 06             	mov    %rax,(%rsi)
ffffffff8021b702:	48 89 39             	mov    %rdi,(%rcx)
ffffffff8021b705:	48 39 15 14 07 01 00 	cmp    %rdx,0x10714(%rip)        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021b70c:	74 6a                	je     ffffffff8021b778 <caml_fl_add_blocks+0x108>
ffffffff8021b70e:	48 83 3d ea ad 02 00 	cmpq   $0x1,0x2adea(%rip)        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021b715:	01 
ffffffff8021b716:	75 aa                	jne    ffffffff8021b6c2 <caml_fl_add_blocks+0x52>
ffffffff8021b718:	e9 33 f6 ff ff       	jmpq   ffffffff8021ad50 <truncate_flp>
ffffffff8021b71d:	0f 1f 00             	nopl   (%rax)
ffffffff8021b720:	48 63 15 f9 ad 02 00 	movslq 0x2adf9(%rip),%rdx        # ffffffff80246520 <flp_size>
ffffffff8021b727:	81 fa e7 03 00 00    	cmp    $0x3e7,%edx
ffffffff8021b72d:	7f 93                	jg     ffffffff8021b6c2 <caml_fl_add_blocks+0x52>
ffffffff8021b72f:	8d 4a 01             	lea    0x1(%rdx),%ecx
ffffffff8021b732:	89 0d e8 ad 02 00    	mov    %ecx,0x2ade8(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021b738:	48 8d 0d 01 ae 02 00 	lea    0x2ae01(%rip),%rcx        # ffffffff80246540 <flp>
ffffffff8021b73f:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
ffffffff8021b743:	c3                   	retq   
ffffffff8021b744:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021b748:	48 3b 3d 59 06 02 00 	cmp    0x20659(%rip),%rdi        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8021b74f:	0f 83 63 ff ff ff    	jae    ffffffff8021b6b8 <caml_fl_add_blocks+0x48>
ffffffff8021b755:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021b759:	48 89 15 c0 06 01 00 	mov    %rdx,0x106c0(%rip)        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021b760:	e9 53 ff ff ff       	jmpq   ffffffff8021b6b8 <caml_fl_add_blocks+0x48>
ffffffff8021b765:	48 8d 15 a4 06 01 00 	lea    0x106a4(%rip),%rdx        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021b76c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021b76f:	eb 8a                	jmp    ffffffff8021b6fb <caml_fl_add_blocks+0x8b>
ffffffff8021b771:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021b778:	48 3b 3d 29 06 02 00 	cmp    0x20629(%rip),%rdi        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8021b77f:	73 8d                	jae    ffffffff8021b70e <caml_fl_add_blocks+0x9e>
ffffffff8021b781:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021b785:	48 89 05 94 06 01 00 	mov    %rax,0x10694(%rip)        # ffffffff8022be20 <caml_fl_merge>
ffffffff8021b78c:	eb 80                	jmp    ffffffff8021b70e <caml_fl_add_blocks+0x9e>
ffffffff8021b78e:	66 90                	xchg   %ax,%ax

ffffffff8021b790 <caml_make_free_blocks>:
ffffffff8021b790:	48 85 f6             	test   %rsi,%rsi
ffffffff8021b793:	74 73                	je     ffffffff8021b808 <caml_make_free_blocks+0x78>
ffffffff8021b795:	41 57                	push   %r15
ffffffff8021b797:	41 89 d7             	mov    %edx,%r15d
ffffffff8021b79a:	41 56                	push   %r14
ffffffff8021b79c:	4c 63 f1             	movslq %ecx,%r14
ffffffff8021b79f:	41 55                	push   %r13
ffffffff8021b7a1:	49 bd 00 00 00 00 00 	movabs $0x40000000000000,%r13
ffffffff8021b7a8:	00 40 00 
ffffffff8021b7ab:	41 54                	push   %r12
ffffffff8021b7ad:	49 89 fc             	mov    %rdi,%r12
ffffffff8021b7b0:	55                   	push   %rbp
ffffffff8021b7b1:	53                   	push   %rbx
ffffffff8021b7b2:	48 89 f3             	mov    %rsi,%rbx
ffffffff8021b7b5:	eb 12                	jmp    ffffffff8021b7c9 <caml_make_free_blocks+0x39>
ffffffff8021b7b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021b7be:	00 00 
ffffffff8021b7c0:	4d 8d 24 ec          	lea    (%r12,%rbp,8),%r12
ffffffff8021b7c4:	48 29 eb             	sub    %rbp,%rbx
ffffffff8021b7c7:	74 31                	je     ffffffff8021b7fa <caml_make_free_blocks+0x6a>
ffffffff8021b7c9:	4c 39 eb             	cmp    %r13,%rbx
ffffffff8021b7cc:	4c 89 ed             	mov    %r13,%rbp
ffffffff8021b7cf:	48 0f 46 eb          	cmovbe %rbx,%rbp
ffffffff8021b7d3:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
ffffffff8021b7d7:	48 c1 e0 0a          	shl    $0xa,%rax
ffffffff8021b7db:	4c 01 f0             	add    %r14,%rax
ffffffff8021b7de:	49 89 04 24          	mov    %rax,(%r12)
ffffffff8021b7e2:	45 85 ff             	test   %r15d,%r15d
ffffffff8021b7e5:	74 d9                	je     ffffffff8021b7c0 <caml_make_free_blocks+0x30>
ffffffff8021b7e7:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
ffffffff8021b7ec:	4d 8d 24 ec          	lea    (%r12,%rbp,8),%r12
ffffffff8021b7f0:	e8 bb fc ff ff       	callq  ffffffff8021b4b0 <caml_fl_merge_block>
ffffffff8021b7f5:	48 29 eb             	sub    %rbp,%rbx
ffffffff8021b7f8:	75 cf                	jne    ffffffff8021b7c9 <caml_make_free_blocks+0x39>
ffffffff8021b7fa:	5b                   	pop    %rbx
ffffffff8021b7fb:	5d                   	pop    %rbp
ffffffff8021b7fc:	41 5c                	pop    %r12
ffffffff8021b7fe:	41 5d                	pop    %r13
ffffffff8021b800:	41 5e                	pop    %r14
ffffffff8021b802:	41 5f                	pop    %r15
ffffffff8021b804:	c3                   	retq   
ffffffff8021b805:	0f 1f 00             	nopl   (%rax)
ffffffff8021b808:	c3                   	retq   
ffffffff8021b809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021b810 <caml_set_allocation_policy>:
ffffffff8021b810:	48 85 ff             	test   %rdi,%rdi
ffffffff8021b813:	74 33                	je     ffffffff8021b848 <caml_set_allocation_policy+0x38>
ffffffff8021b815:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff8021b819:	75 25                	jne    ffffffff8021b840 <caml_set_allocation_policy+0x30>
ffffffff8021b81b:	c7 05 fb ac 02 00 00 	movl   $0x0,0x2acfb(%rip)        # ffffffff80246520 <flp_size>
ffffffff8021b822:	00 00 00 
ffffffff8021b825:	48 c7 05 e8 ac 02 00 	movq   $0x0,0x2ace8(%rip)        # ffffffff80246518 <beyond>
ffffffff8021b82c:	00 00 00 00 
ffffffff8021b830:	48 c7 05 c5 ac 02 00 	movq   $0x1,0x2acc5(%rip)        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021b837:	01 00 00 00 
ffffffff8021b83b:	c3                   	retq   
ffffffff8021b83c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021b840:	c3                   	retq   
ffffffff8021b841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021b848:	48 8d 05 c1 05 01 00 	lea    0x105c1(%rip),%rax        # ffffffff8022be10 <sentinel+0x10>
ffffffff8021b84f:	48 c7 05 a6 ac 02 00 	movq   $0x0,0x2aca6(%rip)        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021b856:	00 00 00 00 
ffffffff8021b85a:	48 89 05 c7 05 01 00 	mov    %rax,0x105c7(%rip)        # ffffffff8022be28 <fl_prev>
ffffffff8021b861:	c3                   	retq   
ffffffff8021b862:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021b869:	00 00 00 
ffffffff8021b86c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8021b870 <test_and_compact>:
ffffffff8021b870:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8021b874:	48 8b 15 8d ac 02 00 	mov    0x2ac8d(%rip),%rdx        # ffffffff80246508 <caml_fl_cur_wsz>
ffffffff8021b87b:	48 85 d2             	test   %rdx,%rdx
ffffffff8021b87e:	0f 88 dc 00 00 00    	js     ffffffff8021b960 <test_and_compact+0xf0>
ffffffff8021b884:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021b888:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
ffffffff8021b88d:	48 8b 05 0c cc 02 00 	mov    0x2cc0c(%rip),%rax        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8021b894:	f2 0f 59 05 8c 6c 00 	mulsd  0x6c8c(%rip),%xmm0        # ffffffff80222528 <posix_signals+0x448>
ffffffff8021b89b:	00 
ffffffff8021b89c:	48 29 d0             	sub    %rdx,%rax
ffffffff8021b89f:	0f 88 9b 00 00 00    	js     ffffffff8021b940 <test_and_compact+0xd0>
ffffffff8021b8a5:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021b8a9:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8021b8ae:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
ffffffff8021b8b2:	66 0f 2f 05 5e 70 00 	comisd 0x705e(%rip),%xmm0        # ffffffff80222918 <posix_signals+0x838>
ffffffff8021b8b9:	00 
ffffffff8021b8ba:	77 24                	ja     ffffffff8021b8e0 <test_and_compact+0x70>
ffffffff8021b8bc:	f2 0f 10 0d 44 65 00 	movsd  0x6544(%rip),%xmm1        # ffffffff80221e08 <int32_length+0x328>
ffffffff8021b8c3:	00 
ffffffff8021b8c4:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff8021b8c8:	72 66                	jb     ffffffff8021b930 <test_and_compact+0xc0>
ffffffff8021b8ca:	66 0f 28 d0          	movapd %xmm0,%xmm2
ffffffff8021b8ce:	f2 0f 5c d1          	subsd  %xmm1,%xmm2
ffffffff8021b8d2:	f2 48 0f 2c d2       	cvttsd2si %xmm2,%rdx
ffffffff8021b8d7:	48 0f ba fa 3f       	btc    $0x3f,%rdx
ffffffff8021b8dc:	eb 13                	jmp    ffffffff8021b8f1 <test_and_compact+0x81>
ffffffff8021b8de:	66 90                	xchg   %ax,%ax
ffffffff8021b8e0:	48 8b 05 31 70 00 00 	mov    0x7031(%rip),%rax        # ffffffff80222918 <posix_signals+0x838>
ffffffff8021b8e7:	ba 3f 42 0f 00       	mov    $0xf423f,%edx
ffffffff8021b8ec:	66 48 0f 6e c0       	movq   %rax,%xmm0
ffffffff8021b8f1:	31 c0                	xor    %eax,%eax
ffffffff8021b8f3:	48 8d 35 9e 6c 00 00 	lea    0x6c9e(%rip),%rsi        # ffffffff80222598 <posix_signals+0x4b8>
ffffffff8021b8fa:	bf 00 02 00 00       	mov    $0x200,%edi
ffffffff8021b8ff:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8021b905:	e8 e6 68 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021b90a:	48 8b 05 5f ab 02 00 	mov    0x2ab5f(%rip),%rax        # ffffffff80246470 <caml_percent_max>
ffffffff8021b911:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
ffffffff8021b917:	48 85 c0             	test   %rax,%rax
ffffffff8021b91a:	78 6c                	js     ffffffff8021b988 <test_and_compact+0x118>
ffffffff8021b91c:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021b920:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8021b925:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff8021b929:	73 7c                	jae    ffffffff8021b9a7 <test_and_compact+0x137>
ffffffff8021b92b:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021b92f:	c3                   	retq   
ffffffff8021b930:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
ffffffff8021b935:	eb ba                	jmp    ffffffff8021b8f1 <test_and_compact+0x81>
ffffffff8021b937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021b93e:	00 00 
ffffffff8021b940:	48 89 c2             	mov    %rax,%rdx
ffffffff8021b943:	83 e0 01             	and    $0x1,%eax
ffffffff8021b946:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021b94a:	48 d1 ea             	shr    %rdx
ffffffff8021b94d:	48 09 c2             	or     %rax,%rdx
ffffffff8021b950:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8021b955:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8021b959:	e9 50 ff ff ff       	jmpq   ffffffff8021b8ae <test_and_compact+0x3e>
ffffffff8021b95e:	66 90                	xchg   %ax,%ax
ffffffff8021b960:	48 89 d0             	mov    %rdx,%rax
ffffffff8021b963:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021b966:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021b96a:	48 d1 e8             	shr    %rax
ffffffff8021b96d:	83 e1 01             	and    $0x1,%ecx
ffffffff8021b970:	48 09 c8             	or     %rcx,%rax
ffffffff8021b973:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8021b978:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
ffffffff8021b97c:	e9 0c ff ff ff       	jmpq   ffffffff8021b88d <test_and_compact+0x1d>
ffffffff8021b981:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021b988:	48 89 c2             	mov    %rax,%rdx
ffffffff8021b98b:	83 e0 01             	and    $0x1,%eax
ffffffff8021b98e:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021b992:	48 d1 ea             	shr    %rdx
ffffffff8021b995:	48 09 c2             	or     %rax,%rdx
ffffffff8021b998:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8021b99d:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8021b9a1:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff8021b9a5:	72 84                	jb     ffffffff8021b92b <test_and_compact+0xbb>
ffffffff8021b9a7:	48 8d 35 32 6b 00 00 	lea    0x6b32(%rip),%rsi        # ffffffff802224e0 <posix_signals+0x400>
ffffffff8021b9ae:	bf 00 02 00 00       	mov    $0x200,%edi
ffffffff8021b9b3:	31 c0                	xor    %eax,%eax
ffffffff8021b9b5:	e8 36 68 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021b9ba:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021b9be:	e9 cd df ff ff       	jmpq   ffffffff80219990 <caml_compact_heap>
ffffffff8021b9c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021b9ca:	00 00 00 00 
ffffffff8021b9ce:	66 90                	xchg   %ax,%ax

ffffffff8021b9d0 <caml_gc_stat>:
ffffffff8021b9d0:	41 57                	push   %r15
ffffffff8021b9d2:	41 56                	push   %r14
ffffffff8021b9d4:	41 55                	push   %r13
ffffffff8021b9d6:	41 54                	push   %r12
ffffffff8021b9d8:	55                   	push   %rbp
ffffffff8021b9d9:	53                   	push   %rbx
ffffffff8021b9da:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
ffffffff8021b9e1:	48 8b 15 c8 03 02 00 	mov    0x203c8(%rip),%rdx        # ffffffff8023bdb0 <caml_heap_start>
ffffffff8021b9e8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021b9ef:	00 00 
ffffffff8021b9f1:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff8021b9f8:	00 
ffffffff8021b9f9:	31 c0                	xor    %eax,%eax
ffffffff8021b9fb:	48 8b 05 76 86 02 00 	mov    0x28676(%rip),%rax        # ffffffff80244078 <caml_local_roots>
ffffffff8021ba02:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8021ba06:	48 85 d2             	test   %rdx,%rdx
ffffffff8021ba09:	0f 84 11 04 00 00    	je     ffffffff8021be20 <caml_gc_stat+0x450>
ffffffff8021ba0f:	8b 05 8b 03 02 00    	mov    0x2038b(%rip),%eax        # ffffffff8023bda0 <caml_gc_phase>
ffffffff8021ba15:	31 c9                	xor    %ecx,%ecx
ffffffff8021ba17:	45 31 db             	xor    %r11d,%r11d
ffffffff8021ba1a:	45 31 c9             	xor    %r9d,%r9d
ffffffff8021ba1d:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
ffffffff8021ba24:	00 00 
ffffffff8021ba26:	31 db                	xor    %ebx,%ebx
ffffffff8021ba28:	45 31 c0             	xor    %r8d,%r8d
ffffffff8021ba2b:	45 31 f6             	xor    %r14d,%r14d
ffffffff8021ba2e:	89 44 24 10          	mov    %eax,0x10(%rsp)
ffffffff8021ba32:	48 8b 05 6f 03 02 00 	mov    0x2036f(%rip),%rax        # ffffffff8023bda8 <caml_gc_sweep_hp>
ffffffff8021ba39:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021ba3e:	66 90                	xchg   %ax,%ax
ffffffff8021ba40:	4c 8b 7a f0          	mov    -0x10(%rdx),%r15
ffffffff8021ba44:	49 83 c6 01          	add    $0x1,%r14
ffffffff8021ba48:	49 01 d7             	add    %rdx,%r15
ffffffff8021ba4b:	49 39 d7             	cmp    %rdx,%r15
ffffffff8021ba4e:	0f 86 8c 03 00 00    	jbe    ffffffff8021bde0 <caml_gc_stat+0x410>
ffffffff8021ba54:	49 89 d2             	mov    %rdx,%r10
ffffffff8021ba57:	eb 20                	jmp    ffffffff8021ba79 <caml_gc_stat+0xa9>
ffffffff8021ba59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021ba60:	48 85 c0             	test   %rax,%rax
ffffffff8021ba63:	0f 85 3f 03 00 00    	jne    ffffffff8021bda8 <caml_gc_stat+0x3d8>
ffffffff8021ba69:	48 83 44 24 08 01    	addq   $0x1,0x8(%rsp)
ffffffff8021ba6f:	90                   	nop
ffffffff8021ba70:	4d 8d 14 ea          	lea    (%r10,%rbp,8),%r10
ffffffff8021ba74:	4d 39 d7             	cmp    %r10,%r15
ffffffff8021ba77:	76 54                	jbe    ffffffff8021bacd <caml_gc_stat+0xfd>
ffffffff8021ba79:	49 8b 02             	mov    (%r10),%rax
ffffffff8021ba7c:	4c 89 c7             	mov    %r8,%rdi
ffffffff8021ba7f:	4c 89 ce             	mov    %r9,%rsi
ffffffff8021ba82:	49 89 cd             	mov    %rcx,%r13
ffffffff8021ba85:	49 89 c4             	mov    %rax,%r12
ffffffff8021ba88:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021ba8c:	41 81 e4 00 03 00 00 	and    $0x300,%r12d
ffffffff8021ba93:	48 8d 68 01          	lea    0x1(%rax),%rbp
ffffffff8021ba97:	49 81 fc 00 02 00 00 	cmp    $0x200,%r12
ffffffff8021ba9e:	0f 84 1c 03 00 00    	je     ffffffff8021bdc0 <caml_gc_stat+0x3f0>
ffffffff8021baa4:	0f 87 e6 02 00 00    	ja     ffffffff8021bd90 <caml_gc_stat+0x3c0>
ffffffff8021baaa:	4d 85 e4             	test   %r12,%r12
ffffffff8021baad:	74 b1                	je     ffffffff8021ba60 <caml_gc_stat+0x90>
ffffffff8021baaf:	49 81 fc 00 01 00 00 	cmp    $0x100,%r12
ffffffff8021bab6:	75 b8                	jne    ffffffff8021ba70 <caml_gc_stat+0xa0>
ffffffff8021bab8:	49 8d 7c 00 01       	lea    0x1(%r8,%rax,1),%rdi
ffffffff8021babd:	4d 8d 14 ea          	lea    (%r10,%rbp,8),%r10
ffffffff8021bac1:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021bac5:	49 89 f8             	mov    %rdi,%r8
ffffffff8021bac8:	4d 39 d7             	cmp    %r10,%r15
ffffffff8021bacb:	77 ac                	ja     ffffffff8021ba79 <caml_gc_stat+0xa9>
ffffffff8021bacd:	48 8b 52 f8          	mov    -0x8(%rdx),%rdx
ffffffff8021bad1:	48 85 d2             	test   %rdx,%rdx
ffffffff8021bad4:	0f 85 66 ff ff ff    	jne    ffffffff8021ba40 <caml_gc_stat+0x70>
ffffffff8021bada:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021badf:	4f 8d 7c 36 01       	lea    0x1(%r14,%r14,1),%r15
ffffffff8021bae4:	4c 8d 44 3f 01       	lea    0x1(%rdi,%rdi,1),%r8
ffffffff8021bae9:	4c 8d 4c 1b 01       	lea    0x1(%rbx,%rbx,1),%r9
ffffffff8021baee:	4c 8d 54 36 01       	lea    0x1(%rsi,%rsi,1),%r10
ffffffff8021baf3:	4f 8d 74 1b 01       	lea    0x1(%r11,%r11,1),%r14
ffffffff8021baf8:	4f 8d 6c 2d 01       	lea    0x1(%r13,%r13,1),%r13
ffffffff8021bafd:	4c 8d 64 00 01       	lea    0x1(%rax,%rax,1),%r12
ffffffff8021bb02:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8021bb06:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021bb0a:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
ffffffff8021bb11:	00 00 
ffffffff8021bb13:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff8021bb1a:	00 00 
ffffffff8021bb1c:	f2 0f 10 15 9c c9 02 	movsd  0x2c99c(%rip),%xmm2        # ffffffff802484c0 <caml_stat_promoted_words>
ffffffff8021bb23:	00 
ffffffff8021bb24:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff8021bb29:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff8021bb2e:	48 89 05 43 85 02 00 	mov    %rax,0x28543(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021bb35:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
ffffffff8021bb3a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff8021bb3f:	48 8b 05 4a 04 02 00 	mov    0x2044a(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff8021bb46:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff8021bb4d:	00 00 
ffffffff8021bb4f:	48 2b 05 32 04 02 00 	sub    0x20432(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8021bb56:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff8021bb5a:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8021bb5f:	48 8b 05 32 02 02 00 	mov    0x20232(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8021bb66:	f2 0f 58 05 5a c9 02 	addsd  0x2c95a(%rip),%xmm0        # ffffffff802484c8 <caml_stat_minor_words>
ffffffff8021bb6d:	00 
ffffffff8021bb6e:	48 85 c0             	test   %rax,%rax
ffffffff8021bb71:	0f 88 89 02 00 00    	js     ffffffff8021be00 <caml_gc_stat+0x430>
ffffffff8021bb77:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021bb7b:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8021bb80:	f2 0f 58 0d 30 c9 02 	addsd  0x2c930(%rip),%xmm1        # ffffffff802484b8 <caml_stat_major_words>
ffffffff8021bb87:	00 
ffffffff8021bb88:	48 8b 15 11 c9 02 00 	mov    0x2c911(%rip),%rdx        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8021bb8f:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021bb94:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
ffffffff8021bb99:	48 8b 0d 08 c9 02 00 	mov    0x2c908(%rip),%rcx        # ffffffff802484a8 <caml_stat_major_collections>
ffffffff8021bba0:	4c 8b 1d 09 c9 02 00 	mov    0x2c909(%rip),%r11        # ffffffff802484b0 <caml_stat_minor_collections>
ffffffff8021bba7:	4c 89 4c 24 40       	mov    %r9,0x40(%rsp)
ffffffff8021bbac:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
ffffffff8021bbb1:	48 8b 1d e0 c8 02 00 	mov    0x2c8e0(%rip),%rbx        # ffffffff80248498 <caml_stat_top_heap_wsz>
ffffffff8021bbb8:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8021bbbd:	48 8b 2d cc c8 02 00 	mov    0x2c8cc(%rip),%rbp        # ffffffff80248490 <caml_stat_compactions>
ffffffff8021bbc4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8021bbc9:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
ffffffff8021bbce:	f2 0f 11 4c 24 20    	movsd  %xmm1,0x20(%rsp)
ffffffff8021bbd4:	f2 0f 11 54 24 30    	movsd  %xmm2,0x30(%rsp)
ffffffff8021bbda:	f2 0f 11 44 24 28    	movsd  %xmm0,0x28(%rsp)
ffffffff8021bbe0:	e8 4b d1 ff ff       	callq  ffffffff80218d30 <caml_alloc_tuple>
ffffffff8021bbe5:	f2 0f 10 44 24 28    	movsd  0x28(%rsp),%xmm0
ffffffff8021bbeb:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff8021bbf0:	e8 5b ba fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021bbf5:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
ffffffff8021bbfa:	48 89 c6             	mov    %rax,%rsi
ffffffff8021bbfd:	e8 5e 4a ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bc02:	f2 0f 10 54 24 30    	movsd  0x30(%rsp),%xmm2
ffffffff8021bc08:	66 0f 28 c2          	movapd %xmm2,%xmm0
ffffffff8021bc0c:	e8 3f ba fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021bc11:	48 89 c6             	mov    %rax,%rsi
ffffffff8021bc14:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bc19:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8021bc1d:	e8 3e 4a ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bc22:	f2 0f 10 4c 24 20    	movsd  0x20(%rsp),%xmm1
ffffffff8021bc28:	66 0f 28 c1          	movapd %xmm1,%xmm0
ffffffff8021bc2c:	e8 1f ba fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021bc31:	48 89 c6             	mov    %rax,%rsi
ffffffff8021bc34:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bc39:	48 8d 78 10          	lea    0x10(%rax),%rdi
ffffffff8021bc3d:	e8 1e 4a ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bc42:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
ffffffff8021bc47:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bc4c:	4b 8d 74 1b 01       	lea    0x1(%r11,%r11,1),%rsi
ffffffff8021bc51:	48 8d 78 18          	lea    0x18(%rax),%rdi
ffffffff8021bc55:	e8 06 4a ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bc5a:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
ffffffff8021bc5f:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bc64:	48 8d 74 09 01       	lea    0x1(%rcx,%rcx,1),%rsi
ffffffff8021bc69:	48 8d 78 20          	lea    0x20(%rax),%rdi
ffffffff8021bc6d:	e8 ee 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bc72:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8021bc77:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bc7c:	48 8d 74 12 01       	lea    0x1(%rdx,%rdx,1),%rsi
ffffffff8021bc81:	48 8d 78 28          	lea    0x28(%rax),%rdi
ffffffff8021bc85:	e8 d6 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bc8a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bc8f:	4c 89 fe             	mov    %r15,%rsi
ffffffff8021bc92:	48 8d 78 30          	lea    0x30(%rax),%rdi
ffffffff8021bc96:	e8 c5 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bc9b:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
ffffffff8021bca0:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bca5:	4c 89 c6             	mov    %r8,%rsi
ffffffff8021bca8:	48 8d 78 38          	lea    0x38(%rax),%rdi
ffffffff8021bcac:	e8 af 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bcb1:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
ffffffff8021bcb6:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bcbb:	4c 89 ce             	mov    %r9,%rsi
ffffffff8021bcbe:	48 8d 78 40          	lea    0x40(%rax),%rdi
ffffffff8021bcc2:	e8 99 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bcc7:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
ffffffff8021bccc:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bcd1:	4c 89 d6             	mov    %r10,%rsi
ffffffff8021bcd4:	48 8d 78 48          	lea    0x48(%rax),%rdi
ffffffff8021bcd8:	e8 83 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bcdd:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bce2:	4c 89 f6             	mov    %r14,%rsi
ffffffff8021bce5:	48 8d 78 50          	lea    0x50(%rax),%rdi
ffffffff8021bce9:	e8 72 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bcee:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bcf3:	4c 89 ee             	mov    %r13,%rsi
ffffffff8021bcf6:	48 8d 78 58          	lea    0x58(%rax),%rdi
ffffffff8021bcfa:	e8 61 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bcff:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bd04:	4c 89 e6             	mov    %r12,%rsi
ffffffff8021bd07:	48 8d 78 60          	lea    0x60(%rax),%rdi
ffffffff8021bd0b:	e8 50 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bd10:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bd15:	48 8d 74 2d 01       	lea    0x1(%rbp,%rbp,1),%rsi
ffffffff8021bd1a:	48 8d 78 68          	lea    0x68(%rax),%rdi
ffffffff8021bd1e:	e8 3d 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bd23:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bd28:	48 8d 74 1b 01       	lea    0x1(%rbx,%rbx,1),%rsi
ffffffff8021bd2d:	48 8d 78 70          	lea    0x70(%rax),%rdi
ffffffff8021bd31:	e8 2a 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bd36:	e8 a5 7f ff ff       	callq  ffffffff80213ce0 <caml_stack_usage>
ffffffff8021bd3b:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021bd40:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bd45:	48 8d 78 78          	lea    0x78(%rax),%rdi
ffffffff8021bd49:	e8 12 49 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bd4e:	48 8b 1c 24          	mov    (%rsp),%rbx
ffffffff8021bd52:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021bd57:	48 89 1d 1a 83 02 00 	mov    %rbx,0x2831a(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021bd5e:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
ffffffff8021bd65:	00 
ffffffff8021bd66:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021bd6d:	00 00 
ffffffff8021bd6f:	0f 85 da 00 00 00    	jne    ffffffff8021be4f <caml_gc_stat+0x47f>
ffffffff8021bd75:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
ffffffff8021bd7c:	5b                   	pop    %rbx
ffffffff8021bd7d:	5d                   	pop    %rbp
ffffffff8021bd7e:	41 5c                	pop    %r12
ffffffff8021bd80:	41 5d                	pop    %r13
ffffffff8021bd82:	41 5e                	pop    %r14
ffffffff8021bd84:	41 5f                	pop    %r15
ffffffff8021bd86:	c3                   	retq   
ffffffff8021bd87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021bd8e:	00 00 
ffffffff8021bd90:	49 81 fc 00 03 00 00 	cmp    $0x300,%r12
ffffffff8021bd97:	0f 84 1b fd ff ff    	je     ffffffff8021bab8 <caml_gc_stat+0xe8>
ffffffff8021bd9d:	e9 ce fc ff ff       	jmpq   ffffffff8021ba70 <caml_gc_stat+0xa0>
ffffffff8021bda2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021bda8:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
ffffffff8021bdad:	0f 85 05 fd ff ff    	jne    ffffffff8021bab8 <caml_gc_stat+0xe8>
ffffffff8021bdb3:	4c 39 54 24 18       	cmp    %r10,0x18(%rsp)
ffffffff8021bdb8:	0f 87 fa fc ff ff    	ja     ffffffff8021bab8 <caml_gc_stat+0xe8>
ffffffff8021bdbe:	66 90                	xchg   %ax,%ax
ffffffff8021bdc0:	49 8d 74 01 01       	lea    0x1(%r9,%rax,1),%rsi
ffffffff8021bdc5:	49 83 c3 01          	add    $0x1,%r11
ffffffff8021bdc9:	49 89 f1             	mov    %rsi,%r9
ffffffff8021bdcc:	48 39 cd             	cmp    %rcx,%rbp
ffffffff8021bdcf:	0f 86 9b fc ff ff    	jbe    ffffffff8021ba70 <caml_gc_stat+0xa0>
ffffffff8021bdd5:	48 89 e9             	mov    %rbp,%rcx
ffffffff8021bdd8:	49 89 ed             	mov    %rbp,%r13
ffffffff8021bddb:	e9 90 fc ff ff       	jmpq   ffffffff8021ba70 <caml_gc_stat+0xa0>
ffffffff8021bde0:	48 8b 52 f8          	mov    -0x8(%rdx),%rdx
ffffffff8021bde4:	4c 89 c7             	mov    %r8,%rdi
ffffffff8021bde7:	4c 89 ce             	mov    %r9,%rsi
ffffffff8021bdea:	49 89 cd             	mov    %rcx,%r13
ffffffff8021bded:	48 85 d2             	test   %rdx,%rdx
ffffffff8021bdf0:	0f 85 4a fc ff ff    	jne    ffffffff8021ba40 <caml_gc_stat+0x70>
ffffffff8021bdf6:	e9 df fc ff ff       	jmpq   ffffffff8021bada <caml_gc_stat+0x10a>
ffffffff8021bdfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021be00:	48 89 c2             	mov    %rax,%rdx
ffffffff8021be03:	83 e0 01             	and    $0x1,%eax
ffffffff8021be06:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021be0a:	48 d1 ea             	shr    %rdx
ffffffff8021be0d:	48 09 c2             	or     %rax,%rdx
ffffffff8021be10:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8021be15:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8021be19:	e9 62 fd ff ff       	jmpq   ffffffff8021bb80 <caml_gc_stat+0x1b0>
ffffffff8021be1e:	66 90                	xchg   %ax,%ax
ffffffff8021be20:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff8021be26:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff8021be2c:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff8021be32:	41 ba 01 00 00 00    	mov    $0x1,%r10d
ffffffff8021be38:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff8021be3e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8021be44:	41 bf 01 00 00 00    	mov    $0x1,%r15d
ffffffff8021be4a:	e9 b3 fc ff ff       	jmpq   ffffffff8021bb02 <caml_gc_stat+0x132>
ffffffff8021be4f:	e8 4c 42 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021be54:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021be5b:	00 00 00 00 
ffffffff8021be5f:	90                   	nop

ffffffff8021be60 <caml_gc_quick_stat>:
ffffffff8021be60:	41 57                	push   %r15
ffffffff8021be62:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021be66:	41 56                	push   %r14
ffffffff8021be68:	41 55                	push   %r13
ffffffff8021be6a:	41 54                	push   %r12
ffffffff8021be6c:	55                   	push   %rbp
ffffffff8021be6d:	53                   	push   %rbx
ffffffff8021be6e:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
ffffffff8021be75:	48 8b 1d fc 81 02 00 	mov    0x281fc(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8021be7c:	f2 0f 10 15 3c c6 02 	movsd  0x2c63c(%rip),%xmm2        # ffffffff802484c0 <caml_stat_promoted_words>
ffffffff8021be83:	00 
ffffffff8021be84:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021be8b:	00 00 
ffffffff8021be8d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff8021be92:	31 c0                	xor    %eax,%eax
ffffffff8021be94:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
ffffffff8021be99:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff8021bea0:	00 00 
ffffffff8021bea2:	48 89 05 cf 81 02 00 	mov    %rax,0x281cf(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021bea9:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
ffffffff8021beae:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff8021beb3:	48 8b 05 d6 00 02 00 	mov    0x200d6(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff8021beba:	48 2b 05 c7 00 02 00 	sub    0x200c7(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8021bec1:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
ffffffff8021bec6:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
ffffffff8021becd:	00 00 
ffffffff8021becf:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff8021bed3:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
ffffffff8021beda:	00 00 
ffffffff8021bedc:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8021bee1:	48 8b 05 b0 fe 01 00 	mov    0x1feb0(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8021bee8:	f2 0f 58 05 d8 c5 02 	addsd  0x2c5d8(%rip),%xmm0        # ffffffff802484c8 <caml_stat_minor_words>
ffffffff8021beef:	00 
ffffffff8021bef0:	48 85 c0             	test   %rax,%rax
ffffffff8021bef3:	0f 88 e7 01 00 00    	js     ffffffff8021c0e0 <caml_gc_quick_stat+0x280>
ffffffff8021bef9:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021befd:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8021bf02:	f2 0f 58 0d ae c5 02 	addsd  0x2c5ae(%rip),%xmm1        # ffffffff802484b8 <caml_stat_major_words>
ffffffff8021bf09:	00 
ffffffff8021bf0a:	48 8b 15 9f c5 02 00 	mov    0x2c59f(%rip),%rdx        # ffffffff802484b0 <caml_stat_minor_collections>
ffffffff8021bf11:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021bf16:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
ffffffff8021bf1c:	4c 8b 3d 85 c5 02 00 	mov    0x2c585(%rip),%r15        # ffffffff802484a8 <caml_stat_major_collections>
ffffffff8021bf23:	4c 8b 35 76 c5 02 00 	mov    0x2c576(%rip),%r14        # ffffffff802484a0 <caml_stat_heap_wsz>
ffffffff8021bf2a:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
ffffffff8021bf30:	48 89 14 24          	mov    %rdx,(%rsp)
ffffffff8021bf34:	48 8b 2d 5d c5 02 00 	mov    0x2c55d(%rip),%rbp        # ffffffff80248498 <caml_stat_top_heap_wsz>
ffffffff8021bf3b:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
ffffffff8021bf41:	4c 8b 25 48 c5 02 00 	mov    0x2c548(%rip),%r12        # ffffffff80248490 <caml_stat_compactions>
ffffffff8021bf48:	4c 8b 2d 39 c5 02 00 	mov    0x2c539(%rip),%r13        # ffffffff80248488 <caml_stat_heap_chunks>
ffffffff8021bf4f:	e8 dc cd ff ff       	callq  ffffffff80218d30 <caml_alloc_tuple>
ffffffff8021bf54:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
ffffffff8021bf5a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8021bf5f:	e8 ec b6 fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021bf64:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
ffffffff8021bf69:	48 89 c6             	mov    %rax,%rsi
ffffffff8021bf6c:	e8 ef 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bf71:	f2 0f 10 54 24 18    	movsd  0x18(%rsp),%xmm2
ffffffff8021bf77:	66 0f 28 c2          	movapd %xmm2,%xmm0
ffffffff8021bf7b:	e8 d0 b6 fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021bf80:	48 89 c6             	mov    %rax,%rsi
ffffffff8021bf83:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021bf88:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8021bf8c:	e8 cf 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bf91:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
ffffffff8021bf97:	66 0f 28 c1          	movapd %xmm1,%xmm0
ffffffff8021bf9b:	e8 b0 b6 fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021bfa0:	48 89 c6             	mov    %rax,%rsi
ffffffff8021bfa3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021bfa8:	48 8d 78 10          	lea    0x10(%rax),%rdi
ffffffff8021bfac:	e8 af 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bfb1:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff8021bfb5:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021bfba:	48 8d 74 12 01       	lea    0x1(%rdx,%rdx,1),%rsi
ffffffff8021bfbf:	48 8d 78 18          	lea    0x18(%rax),%rdi
ffffffff8021bfc3:	e8 98 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bfc8:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021bfcd:	4b 8d 74 3f 01       	lea    0x1(%r15,%r15,1),%rsi
ffffffff8021bfd2:	48 8d 78 20          	lea    0x20(%rax),%rdi
ffffffff8021bfd6:	e8 85 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bfdb:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021bfe0:	4b 8d 74 36 01       	lea    0x1(%r14,%r14,1),%rsi
ffffffff8021bfe5:	48 8d 78 28          	lea    0x28(%rax),%rdi
ffffffff8021bfe9:	e8 72 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021bfee:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021bff3:	4b 8d 74 2d 01       	lea    0x1(%r13,%r13,1),%rsi
ffffffff8021bff8:	48 8d 78 30          	lea    0x30(%rax),%rdi
ffffffff8021bffc:	e8 5f 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c001:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c006:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021c00b:	48 8d 78 38          	lea    0x38(%rax),%rdi
ffffffff8021c00f:	e8 4c 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c014:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c019:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021c01e:	48 8d 78 40          	lea    0x40(%rax),%rdi
ffffffff8021c022:	e8 39 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c027:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c02c:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021c031:	48 8d 78 48          	lea    0x48(%rax),%rdi
ffffffff8021c035:	e8 26 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c03a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c03f:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021c044:	48 8d 78 50          	lea    0x50(%rax),%rdi
ffffffff8021c048:	e8 13 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c04d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c052:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021c057:	48 8d 78 58          	lea    0x58(%rax),%rdi
ffffffff8021c05b:	e8 00 46 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c060:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c065:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021c06a:	48 8d 78 60          	lea    0x60(%rax),%rdi
ffffffff8021c06e:	e8 ed 45 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c073:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c078:	4b 8d 74 24 01       	lea    0x1(%r12,%r12,1),%rsi
ffffffff8021c07d:	48 8d 78 68          	lea    0x68(%rax),%rdi
ffffffff8021c081:	e8 da 45 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c086:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c08b:	48 8d 74 2d 01       	lea    0x1(%rbp,%rbp,1),%rsi
ffffffff8021c090:	48 8d 78 70          	lea    0x70(%rax),%rdi
ffffffff8021c094:	e8 c7 45 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c099:	e8 42 7c ff ff       	callq  ffffffff80213ce0 <caml_stack_usage>
ffffffff8021c09e:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c0a3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c0a8:	48 8d 78 78          	lea    0x78(%rax),%rdi
ffffffff8021c0ac:	e8 af 45 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c0b1:	48 89 1d c0 7f 02 00 	mov    %rbx,0x27fc0(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021c0b8:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c0bd:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
ffffffff8021c0c2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8021c0c9:	00 00 
ffffffff8021c0cb:	75 31                	jne    ffffffff8021c0fe <caml_gc_quick_stat+0x29e>
ffffffff8021c0cd:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
ffffffff8021c0d4:	5b                   	pop    %rbx
ffffffff8021c0d5:	5d                   	pop    %rbp
ffffffff8021c0d6:	41 5c                	pop    %r12
ffffffff8021c0d8:	41 5d                	pop    %r13
ffffffff8021c0da:	41 5e                	pop    %r14
ffffffff8021c0dc:	41 5f                	pop    %r15
ffffffff8021c0de:	c3                   	retq   
ffffffff8021c0df:	90                   	nop
ffffffff8021c0e0:	48 89 c2             	mov    %rax,%rdx
ffffffff8021c0e3:	83 e0 01             	and    $0x1,%eax
ffffffff8021c0e6:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021c0ea:	48 d1 ea             	shr    %rdx
ffffffff8021c0ed:	48 09 c2             	or     %rax,%rdx
ffffffff8021c0f0:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8021c0f5:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8021c0f9:	e9 04 fe ff ff       	jmpq   ffffffff8021bf02 <caml_gc_quick_stat+0xa2>
ffffffff8021c0fe:	e8 9d 3f fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021c103:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021c10a:	00 00 00 00 
ffffffff8021c10e:	66 90                	xchg   %ax,%ax

ffffffff8021c110 <caml_gc_minor_words_unboxed>:
ffffffff8021c110:	48 8b 05 79 fe 01 00 	mov    0x1fe79(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff8021c117:	48 2b 05 6a fe 01 00 	sub    0x1fe6a(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8021c11e:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021c122:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff8021c126:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8021c12b:	f2 0f 58 05 95 c3 02 	addsd  0x2c395(%rip),%xmm0        # ffffffff802484c8 <caml_stat_minor_words>
ffffffff8021c132:	00 
ffffffff8021c133:	c3                   	retq   
ffffffff8021c134:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021c13b:	00 00 00 00 
ffffffff8021c13f:	90                   	nop

ffffffff8021c140 <caml_gc_minor_words>:
ffffffff8021c140:	48 8b 05 49 fe 01 00 	mov    0x1fe49(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff8021c147:	48 2b 05 3a fe 01 00 	sub    0x1fe3a(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8021c14e:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021c152:	53                   	push   %rbx
ffffffff8021c153:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff8021c157:	48 8b 1d 1a 7f 02 00 	mov    0x27f1a(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8021c15e:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8021c163:	f2 0f 58 05 5d c3 02 	addsd  0x2c35d(%rip),%xmm0        # ffffffff802484c8 <caml_stat_minor_words>
ffffffff8021c16a:	00 
ffffffff8021c16b:	e8 e0 b4 fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021c170:	48 89 1d 01 7f 02 00 	mov    %rbx,0x27f01(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021c177:	5b                   	pop    %rbx
ffffffff8021c178:	c3                   	retq   
ffffffff8021c179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021c180 <caml_gc_counters>:
ffffffff8021c180:	53                   	push   %rbx
ffffffff8021c181:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021c185:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
ffffffff8021c189:	48 8b 1d e8 7e 02 00 	mov    0x27ee8(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8021c190:	f2 0f 10 15 28 c3 02 	movsd  0x2c328(%rip),%xmm2        # ffffffff802484c0 <caml_stat_promoted_words>
ffffffff8021c197:	00 
ffffffff8021c198:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021c19f:	00 00 
ffffffff8021c1a1:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff8021c1a6:	31 c0                	xor    %eax,%eax
ffffffff8021c1a8:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
ffffffff8021c1ad:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff8021c1b4:	00 00 
ffffffff8021c1b6:	48 89 05 bb 7e 02 00 	mov    %rax,0x27ebb(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021c1bd:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
ffffffff8021c1c2:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
ffffffff8021c1c7:	48 8b 05 c2 fd 01 00 	mov    0x1fdc2(%rip),%rax        # ffffffff8023bf90 <caml_young_alloc_end>
ffffffff8021c1ce:	48 2b 05 b3 fd 01 00 	sub    0x1fdb3(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8021c1d5:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
ffffffff8021c1da:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
ffffffff8021c1e1:	00 00 
ffffffff8021c1e3:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff8021c1e7:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
ffffffff8021c1ee:	00 00 
ffffffff8021c1f0:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
ffffffff8021c1f5:	48 8b 05 9c fb 01 00 	mov    0x1fb9c(%rip),%rax        # ffffffff8023bd98 <caml_allocated_words>
ffffffff8021c1fc:	f2 0f 58 05 c4 c2 02 	addsd  0x2c2c4(%rip),%xmm0        # ffffffff802484c8 <caml_stat_minor_words>
ffffffff8021c203:	00 
ffffffff8021c204:	48 85 c0             	test   %rax,%rax
ffffffff8021c207:	0f 88 b3 00 00 00    	js     ffffffff8021c2c0 <caml_gc_counters+0x140>
ffffffff8021c20d:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021c211:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
ffffffff8021c216:	f2 0f 58 0d 9a c2 02 	addsd  0x2c29a(%rip),%xmm1        # ffffffff802484b8 <caml_stat_major_words>
ffffffff8021c21d:	00 
ffffffff8021c21e:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff8021c223:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
ffffffff8021c229:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
ffffffff8021c22f:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
ffffffff8021c235:	e8 f6 ca ff ff       	callq  ffffffff80218d30 <caml_alloc_tuple>
ffffffff8021c23a:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
ffffffff8021c240:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8021c245:	e8 06 b4 fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021c24a:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
ffffffff8021c24f:	48 89 c6             	mov    %rax,%rsi
ffffffff8021c252:	e8 09 44 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c257:	f2 0f 10 54 24 18    	movsd  0x18(%rsp),%xmm2
ffffffff8021c25d:	66 0f 28 c2          	movapd %xmm2,%xmm0
ffffffff8021c261:	e8 ea b3 fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021c266:	48 89 c6             	mov    %rax,%rsi
ffffffff8021c269:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c26e:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8021c272:	e8 e9 43 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c277:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
ffffffff8021c27d:	66 0f 28 c1          	movapd %xmm1,%xmm0
ffffffff8021c281:	e8 ca b3 fe ff       	callq  ffffffff80207650 <caml_copy_double>
ffffffff8021c286:	48 89 c6             	mov    %rax,%rsi
ffffffff8021c289:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c28e:	48 8d 78 10          	lea    0x10(%rax),%rdi
ffffffff8021c292:	e8 c9 43 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c297:	48 89 1d da 7d 02 00 	mov    %rbx,0x27dda(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021c29e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021c2a3:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
ffffffff8021c2a8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8021c2af:	00 00 
ffffffff8021c2b1:	75 2b                	jne    ffffffff8021c2de <caml_gc_counters+0x15e>
ffffffff8021c2b3:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
ffffffff8021c2b7:	5b                   	pop    %rbx
ffffffff8021c2b8:	c3                   	retq   
ffffffff8021c2b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021c2c0:	48 89 c2             	mov    %rax,%rdx
ffffffff8021c2c3:	83 e0 01             	and    $0x1,%eax
ffffffff8021c2c6:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021c2ca:	48 d1 ea             	shr    %rdx
ffffffff8021c2cd:	48 09 c2             	or     %rax,%rdx
ffffffff8021c2d0:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
ffffffff8021c2d5:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
ffffffff8021c2d9:	e9 38 ff ff ff       	jmpq   ffffffff8021c216 <caml_gc_counters+0x96>
ffffffff8021c2de:	e8 bd 3d fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021c2e3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021c2ea:	00 00 00 00 
ffffffff8021c2ee:	66 90                	xchg   %ax,%ax

ffffffff8021c2f0 <caml_gc_huge_fallback_count>:
ffffffff8021c2f0:	48 63 05 51 fb 01 00 	movslq 0x1fb51(%rip),%rax        # ffffffff8023be48 <caml_huge_fallback_count>
ffffffff8021c2f7:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021c2fc:	c3                   	retq   
ffffffff8021c2fd:	0f 1f 00             	nopl   (%rax)

ffffffff8021c300 <caml_gc_get>:
ffffffff8021c300:	53                   	push   %rbx
ffffffff8021c301:	bf 0b 00 00 00       	mov    $0xb,%edi
ffffffff8021c306:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8021c30a:	48 8b 1d 67 7d 02 00 	mov    0x27d67(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8021c311:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021c318:	00 00 
ffffffff8021c31a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
ffffffff8021c31f:	31 c0                	xor    %eax,%eax
ffffffff8021c321:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
ffffffff8021c326:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
ffffffff8021c32d:	00 00 
ffffffff8021c32f:	48 89 05 42 7d 02 00 	mov    %rax,0x27d42(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021c336:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff8021c33b:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8021c340:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8021c347:	00 00 
ffffffff8021c349:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8021c350:	00 00 
ffffffff8021c352:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8021c357:	e8 d4 c9 ff ff       	callq  ffffffff80218d30 <caml_alloc_tuple>
ffffffff8021c35c:	48 89 c7             	mov    %rax,%rdi
ffffffff8021c35f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8021c364:	48 8b 05 4d fc 01 00 	mov    0x1fc4d(%rip),%rax        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff8021c36b:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c370:	e8 eb 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c375:	48 8b 05 3c fa 01 00 	mov    0x1fa3c(%rip),%rax        # ffffffff8023bdb8 <caml_major_heap_increment>
ffffffff8021c37c:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c381:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c386:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8021c38a:	e8 d1 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c38f:	48 8b 05 2a fa 01 00 	mov    0x1fa2a(%rip),%rax        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8021c396:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c39b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c3a0:	48 8d 78 10          	lea    0x10(%rax),%rdi
ffffffff8021c3a4:	e8 b7 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c3a9:	48 8b 05 28 fc 01 00 	mov    0x1fc28(%rip),%rax        # ffffffff8023bfd8 <caml_verb_gc>
ffffffff8021c3b0:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c3b5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c3ba:	48 8d 78 18          	lea    0x18(%rax),%rdi
ffffffff8021c3be:	e8 9d 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c3c3:	48 8b 05 a6 a0 02 00 	mov    0x2a0a6(%rip),%rax        # ffffffff80246470 <caml_percent_max>
ffffffff8021c3ca:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c3cf:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c3d4:	48 8d 78 20          	lea    0x20(%rax),%rdi
ffffffff8021c3d8:	e8 83 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c3dd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c3e2:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021c3e7:	48 8d 78 28          	lea    0x28(%rax),%rdi
ffffffff8021c3eb:	e8 70 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c3f0:	48 8b 05 09 a1 02 00 	mov    0x2a109(%rip),%rax        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021c3f7:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c3fc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c401:	48 8d 78 30          	lea    0x30(%rax),%rdi
ffffffff8021c405:	e8 56 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c40a:	48 63 05 ef f8 00 00 	movslq 0xf8ef(%rip),%rax        # ffffffff8022bd00 <caml_major_window>
ffffffff8021c411:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c416:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c41b:	48 8d 78 38          	lea    0x38(%rax),%rdi
ffffffff8021c41f:	e8 3c 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c424:	48 8b 05 b5 f9 00 00 	mov    0xf9b5(%rip),%rax        # ffffffff8022bde0 <caml_custom_major_ratio>
ffffffff8021c42b:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c430:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c435:	48 8d 78 40          	lea    0x40(%rax),%rdi
ffffffff8021c439:	e8 22 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c43e:	48 8b 05 93 f9 00 00 	mov    0xf993(%rip),%rax        # ffffffff8022bdd8 <caml_custom_minor_ratio>
ffffffff8021c445:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c44a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c44f:	48 8d 78 48          	lea    0x48(%rax),%rdi
ffffffff8021c453:	e8 08 42 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c458:	48 8b 05 71 f9 00 00 	mov    0xf971(%rip),%rax        # ffffffff8022bdd0 <caml_custom_minor_max_bsz>
ffffffff8021c45f:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
ffffffff8021c464:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c469:	48 8d 78 50          	lea    0x50(%rax),%rdi
ffffffff8021c46d:	e8 ee 41 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021c472:	48 89 1d ff 7b 02 00 	mov    %rbx,0x27bff(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021c479:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c47e:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
ffffffff8021c483:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff8021c48a:	00 00 
ffffffff8021c48c:	75 06                	jne    ffffffff8021c494 <caml_gc_get+0x194>
ffffffff8021c48e:	48 83 c4 60          	add    $0x60,%rsp
ffffffff8021c492:	5b                   	pop    %rbx
ffffffff8021c493:	c3                   	retq   
ffffffff8021c494:	e8 07 3c fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021c499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021c4a0 <caml_gc_set>:
ffffffff8021c4a0:	55                   	push   %rbp
ffffffff8021c4a1:	53                   	push   %rbx
ffffffff8021c4a2:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021c4a5:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021c4a9:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff8021c4ad:	48 d1 f8             	sar    %rax
ffffffff8021c4b0:	48 89 05 21 fb 01 00 	mov    %rax,0x1fb21(%rip)        # ffffffff8023bfd8 <caml_verb_gc>
ffffffff8021c4b7:	48 8b 57 10          	mov    0x10(%rdi),%rdx
ffffffff8021c4bb:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021c4c0:	48 d1 fa             	sar    %rdx
ffffffff8021c4c3:	48 0f 44 d0          	cmove  %rax,%rdx
ffffffff8021c4c7:	48 39 15 f2 f8 01 00 	cmp    %rdx,0x1f8f2(%rip)        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8021c4ce:	74 1a                	je     ffffffff8021c4ea <caml_gc_set+0x4a>
ffffffff8021c4d0:	48 8d 35 53 63 00 00 	lea    0x6353(%rip),%rsi        # ffffffff8022282a <posix_signals+0x74a>
ffffffff8021c4d7:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c4dc:	31 c0                	xor    %eax,%eax
ffffffff8021c4de:	48 89 15 db f8 01 00 	mov    %rdx,0x1f8db(%rip)        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8021c4e5:	e8 06 5d ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c4ea:	48 8b 53 20          	mov    0x20(%rbx),%rdx
ffffffff8021c4ee:	48 d1 fa             	sar    %rdx
ffffffff8021c4f1:	48 3b 15 78 9f 02 00 	cmp    0x29f78(%rip),%rdx        # ffffffff80246470 <caml_percent_max>
ffffffff8021c4f8:	74 1a                	je     ffffffff8021c514 <caml_gc_set+0x74>
ffffffff8021c4fa:	48 8d 35 44 63 00 00 	lea    0x6344(%rip),%rsi        # ffffffff80222845 <posix_signals+0x765>
ffffffff8021c501:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c506:	31 c0                	xor    %eax,%eax
ffffffff8021c508:	48 89 15 61 9f 02 00 	mov    %rdx,0x29f61(%rip)        # ffffffff80246470 <caml_percent_max>
ffffffff8021c50f:	e8 dc 5c ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c514:	48 8b 53 08          	mov    0x8(%rbx),%rdx
ffffffff8021c518:	48 d1 fa             	sar    %rdx
ffffffff8021c51b:	48 39 15 96 f8 01 00 	cmp    %rdx,0x1f896(%rip)        # ffffffff8023bdb8 <caml_major_heap_increment>
ffffffff8021c522:	74 2b                	je     ffffffff8021c54f <caml_gc_set+0xaf>
ffffffff8021c524:	48 89 15 8d f8 01 00 	mov    %rdx,0x1f88d(%rip)        # ffffffff8023bdb8 <caml_major_heap_increment>
ffffffff8021c52b:	48 81 fa e8 03 00 00 	cmp    $0x3e8,%rdx
ffffffff8021c532:	0f 86 30 01 00 00    	jbe    ffffffff8021c668 <caml_gc_set+0x1c8>
ffffffff8021c538:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021c53c:	48 8d 35 85 60 00 00 	lea    0x6085(%rip),%rsi        # ffffffff802225c8 <posix_signals+0x4e8>
ffffffff8021c543:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c548:	31 c0                	xor    %eax,%eax
ffffffff8021c54a:	e8 a1 5c ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c54f:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
ffffffff8021c553:	48 8b 2d a6 9f 02 00 	mov    0x29fa6(%rip),%rbp        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021c55a:	48 d1 ff             	sar    %rdi
ffffffff8021c55d:	e8 ae f2 ff ff       	callq  ffffffff8021b810 <caml_set_allocation_policy>
ffffffff8021c562:	48 8b 15 97 9f 02 00 	mov    0x29f97(%rip),%rdx        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021c569:	48 39 ea             	cmp    %rbp,%rdx
ffffffff8021c56c:	74 13                	je     ffffffff8021c581 <caml_gc_set+0xe1>
ffffffff8021c56e:	48 8d 35 e9 62 00 00 	lea    0x62e9(%rip),%rsi        # ffffffff8022285e <posix_signals+0x77e>
ffffffff8021c575:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c57a:	31 c0                	xor    %eax,%eax
ffffffff8021c57c:	e8 6f 5c ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c581:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff8021c585:	48 89 c2             	mov    %rax,%rdx
ffffffff8021c588:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021c58c:	48 3d ff 1f 00 00    	cmp    $0x1fff,%rax
ffffffff8021c592:	0f 87 58 01 00 00    	ja     ffffffff8021c6f0 <caml_gc_set+0x250>
ffffffff8021c598:	48 83 fa 0a          	cmp    $0xa,%rdx
ffffffff8021c59c:	76 52                	jbe    ffffffff8021c5f0 <caml_gc_set+0x150>
ffffffff8021c59e:	48 83 7b 40 00       	cmpq   $0x0,0x40(%rbx)
ffffffff8021c5a3:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8021c5a8:	48 0f 45 53 40       	cmovne 0x40(%rbx),%rdx
ffffffff8021c5ad:	48 39 15 2c f8 00 00 	cmp    %rdx,0xf82c(%rip)        # ffffffff8022bde0 <caml_custom_major_ratio>
ffffffff8021c5b4:	0f 85 16 01 00 00    	jne    ffffffff8021c6d0 <caml_gc_set+0x230>
ffffffff8021c5ba:	48 83 7b 48 00       	cmpq   $0x0,0x48(%rbx)
ffffffff8021c5bf:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8021c5c4:	48 0f 45 53 48       	cmovne 0x48(%rbx),%rdx
ffffffff8021c5c9:	48 39 15 08 f8 00 00 	cmp    %rdx,0xf808(%rip)        # ffffffff8022bdd8 <caml_custom_minor_ratio>
ffffffff8021c5d0:	0f 85 ca 00 00 00    	jne    ffffffff8021c6a0 <caml_gc_set+0x200>
ffffffff8021c5d6:	48 8b 53 50          	mov    0x50(%rbx),%rdx
ffffffff8021c5da:	48 39 15 ef f7 00 00 	cmp    %rdx,0xf7ef(%rip)        # ffffffff8022bdd0 <caml_custom_minor_max_bsz>
ffffffff8021c5e1:	0f 85 99 00 00 00    	jne    ffffffff8021c680 <caml_gc_set+0x1e0>
ffffffff8021c5e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021c5ee:	00 00 
ffffffff8021c5f0:	48 8b 03             	mov    (%rbx),%rax
ffffffff8021c5f3:	48 89 c2             	mov    %rax,%rdx
ffffffff8021c5f6:	48 d1 fa             	sar    %rdx
ffffffff8021c5f9:	48 3d 01 00 00 20    	cmp    $0x20000001,%rax
ffffffff8021c5ff:	b8 00 00 00 10       	mov    $0x10000000,%eax
ffffffff8021c604:	48 0f 4f d0          	cmovg  %rax,%rdx
ffffffff8021c608:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff8021c60d:	48 81 fa 00 10 00 00 	cmp    $0x1000,%rdx
ffffffff8021c614:	48 0f 4c d0          	cmovl  %rax,%rdx
ffffffff8021c618:	48 81 c2 ff 01 00 00 	add    $0x1ff,%rdx
ffffffff8021c61f:	48 89 d3             	mov    %rdx,%rbx
ffffffff8021c622:	48 81 e2 00 fe ff ff 	and    $0xfffffffffffffe00,%rdx
ffffffff8021c629:	48 c1 eb 09          	shr    $0x9,%rbx
ffffffff8021c62d:	48 39 15 84 f9 01 00 	cmp    %rdx,0x1f984(%rip)        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff8021c634:	74 23                	je     ffffffff8021c659 <caml_gc_set+0x1b9>
ffffffff8021c636:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021c63a:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c63f:	31 c0                	xor    %eax,%eax
ffffffff8021c641:	48 c1 e3 0c          	shl    $0xc,%rbx
ffffffff8021c645:	48 8d 35 4c 60 00 00 	lea    0x604c(%rip),%rsi        # ffffffff80222698 <posix_signals+0x5b8>
ffffffff8021c64c:	e8 9f 5b ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c651:	48 89 df             	mov    %rbx,%rdi
ffffffff8021c654:	e8 17 57 ff ff       	callq  ffffffff80211d70 <caml_set_minor_heap_size>
ffffffff8021c659:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021c65d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021c662:	5b                   	pop    %rbx
ffffffff8021c663:	5d                   	pop    %rbp
ffffffff8021c664:	c3                   	retq   
ffffffff8021c665:	0f 1f 00             	nopl   (%rax)
ffffffff8021c668:	48 8d 35 81 5f 00 00 	lea    0x5f81(%rip),%rsi        # ffffffff802225f0 <posix_signals+0x510>
ffffffff8021c66f:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c674:	31 c0                	xor    %eax,%eax
ffffffff8021c676:	e8 75 5b ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c67b:	e9 cf fe ff ff       	jmpq   ffffffff8021c54f <caml_gc_set+0xaf>
ffffffff8021c680:	48 8d 35 e9 5f 00 00 	lea    0x5fe9(%rip),%rsi        # ffffffff80222670 <posix_signals+0x590>
ffffffff8021c687:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c68c:	31 c0                	xor    %eax,%eax
ffffffff8021c68e:	48 89 15 3b f7 00 00 	mov    %rdx,0xf73b(%rip)        # ffffffff8022bdd0 <caml_custom_minor_max_bsz>
ffffffff8021c695:	e8 56 5b ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c69a:	e9 51 ff ff ff       	jmpq   ffffffff8021c5f0 <caml_gc_set+0x150>
ffffffff8021c69f:	90                   	nop
ffffffff8021c6a0:	31 c0                	xor    %eax,%eax
ffffffff8021c6a2:	48 8d 35 a7 5f 00 00 	lea    0x5fa7(%rip),%rsi        # ffffffff80222650 <posix_signals+0x570>
ffffffff8021c6a9:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c6ae:	48 89 15 23 f7 00 00 	mov    %rdx,0xf723(%rip)        # ffffffff8022bdd8 <caml_custom_minor_ratio>
ffffffff8021c6b5:	e8 36 5b ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c6ba:	48 8b 53 50          	mov    0x50(%rbx),%rdx
ffffffff8021c6be:	48 39 15 0b f7 00 00 	cmp    %rdx,0xf70b(%rip)        # ffffffff8022bdd0 <caml_custom_minor_max_bsz>
ffffffff8021c6c5:	0f 84 25 ff ff ff    	je     ffffffff8021c5f0 <caml_gc_set+0x150>
ffffffff8021c6cb:	eb b3                	jmp    ffffffff8021c680 <caml_gc_set+0x1e0>
ffffffff8021c6cd:	0f 1f 00             	nopl   (%rax)
ffffffff8021c6d0:	48 8d 35 59 5f 00 00 	lea    0x5f59(%rip),%rsi        # ffffffff80222630 <posix_signals+0x550>
ffffffff8021c6d7:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c6dc:	31 c0                	xor    %eax,%eax
ffffffff8021c6de:	48 89 15 fb f6 00 00 	mov    %rdx,0xf6fb(%rip)        # ffffffff8022bde0 <caml_custom_major_ratio>
ffffffff8021c6e5:	e8 06 5b ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c6ea:	e9 cb fe ff ff       	jmpq   ffffffff8021c5ba <caml_gc_set+0x11a>
ffffffff8021c6ef:	90                   	nop
ffffffff8021c6f0:	48 8b 43 38          	mov    0x38(%rbx),%rax
ffffffff8021c6f4:	8b 2d 06 f6 00 00    	mov    0xf606(%rip),%ebp        # ffffffff8022bd00 <caml_major_window>
ffffffff8021c6fa:	48 89 c7             	mov    %rax,%rdi
ffffffff8021c6fd:	48 d1 ff             	sar    %rdi
ffffffff8021c700:	48 83 f8 65          	cmp    $0x65,%rax
ffffffff8021c704:	b8 32 00 00 00       	mov    $0x32,%eax
ffffffff8021c709:	48 0f 4f f8          	cmovg  %rax,%rdi
ffffffff8021c70d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021c712:	48 85 ff             	test   %rdi,%rdi
ffffffff8021c715:	48 0f 4e f8          	cmovle %rax,%rdi
ffffffff8021c719:	e8 62 2e ff ff       	callq  ffffffff8020f580 <caml_set_major_window>
ffffffff8021c71e:	8b 15 dc f5 00 00    	mov    0xf5dc(%rip),%edx        # ffffffff8022bd00 <caml_major_window>
ffffffff8021c724:	39 ea                	cmp    %ebp,%edx
ffffffff8021c726:	75 10                	jne    ffffffff8021c738 <caml_gc_set+0x298>
ffffffff8021c728:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
ffffffff8021c72c:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021c730:	e9 63 fe ff ff       	jmpq   ffffffff8021c598 <caml_gc_set+0xf8>
ffffffff8021c735:	0f 1f 00             	nopl   (%rax)
ffffffff8021c738:	48 8d 35 d1 5e 00 00 	lea    0x5ed1(%rip),%rsi        # ffffffff80222610 <posix_signals+0x530>
ffffffff8021c73f:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021c744:	31 c0                	xor    %eax,%eax
ffffffff8021c746:	e8 a5 5a ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c74b:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
ffffffff8021c74f:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021c753:	e9 40 fe ff ff       	jmpq   ffffffff8021c598 <caml_gc_set+0xf8>
ffffffff8021c758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021c75f:	00 

ffffffff8021c760 <caml_gc_minor>:
ffffffff8021c760:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021c764:	e8 27 7c ff ff       	callq  ffffffff80214390 <caml_request_minor_gc>
ffffffff8021c769:	e8 52 58 ff ff       	callq  ffffffff80211fc0 <caml_gc_dispatch>
ffffffff8021c76e:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021c773:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021c777:	c3                   	retq   
ffffffff8021c778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021c77f:	00 

ffffffff8021c780 <caml_gc_major>:
ffffffff8021c780:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021c784:	31 c0                	xor    %eax,%eax
ffffffff8021c786:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8021c78b:	48 8d 35 e8 60 00 00 	lea    0x60e8(%rip),%rsi        # ffffffff8022287a <posix_signals+0x79a>
ffffffff8021c792:	e8 59 5a ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c797:	e8 d4 52 ff ff       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff8021c79c:	e8 df 2a ff ff       	callq  ffffffff8020f280 <caml_finish_major_cycle>
ffffffff8021c7a1:	e8 ca f0 ff ff       	callq  ffffffff8021b870 <test_and_compact>
ffffffff8021c7a6:	e8 45 df ff ff       	callq  ffffffff8021a6f0 <caml_final_do_calls>
ffffffff8021c7ab:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021c7b0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021c7b4:	c3                   	retq   
ffffffff8021c7b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021c7bc:	00 00 00 00 

ffffffff8021c7c0 <caml_gc_full_major>:
ffffffff8021c7c0:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021c7c4:	31 c0                	xor    %eax,%eax
ffffffff8021c7c6:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8021c7cb:	48 8d 35 ee 5e 00 00 	lea    0x5eee(%rip),%rsi        # ffffffff802226c0 <posix_signals+0x5e0>
ffffffff8021c7d2:	e8 19 5a ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c7d7:	e8 94 52 ff ff       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff8021c7dc:	e8 9f 2a ff ff       	callq  ffffffff8020f280 <caml_finish_major_cycle>
ffffffff8021c7e1:	e8 0a df ff ff       	callq  ffffffff8021a6f0 <caml_final_do_calls>
ffffffff8021c7e6:	e8 85 52 ff ff       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff8021c7eb:	e8 90 2a ff ff       	callq  ffffffff8020f280 <caml_finish_major_cycle>
ffffffff8021c7f0:	e8 7b f0 ff ff       	callq  ffffffff8021b870 <test_and_compact>
ffffffff8021c7f5:	e8 f6 de ff ff       	callq  ffffffff8021a6f0 <caml_final_do_calls>
ffffffff8021c7fa:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021c7ff:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021c803:	c3                   	retq   
ffffffff8021c804:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021c80b:	00 00 00 00 
ffffffff8021c80f:	90                   	nop

ffffffff8021c810 <caml_gc_major_slice>:
ffffffff8021c810:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021c814:	48 d1 ff             	sar    %rdi
ffffffff8021c817:	e8 54 22 ff ff       	callq  ffffffff8020ea70 <caml_major_collection_slice>
ffffffff8021c81c:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021c821:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021c825:	c3                   	retq   
ffffffff8021c826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021c82d:	00 00 00 

ffffffff8021c830 <caml_gc_compaction>:
ffffffff8021c830:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021c834:	31 c0                	xor    %eax,%eax
ffffffff8021c836:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8021c83b:	48 8d 35 52 60 00 00 	lea    0x6052(%rip),%rsi        # ffffffff80222894 <posix_signals+0x7b4>
ffffffff8021c842:	e8 a9 59 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021c847:	e8 24 52 ff ff       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff8021c84c:	e8 2f 2a ff ff       	callq  ffffffff8020f280 <caml_finish_major_cycle>
ffffffff8021c851:	e8 9a de ff ff       	callq  ffffffff8021a6f0 <caml_final_do_calls>
ffffffff8021c856:	e8 15 52 ff ff       	callq  ffffffff80211a70 <caml_empty_minor_heap>
ffffffff8021c85b:	e8 20 2a ff ff       	callq  ffffffff8020f280 <caml_finish_major_cycle>
ffffffff8021c860:	e8 2b d1 ff ff       	callq  ffffffff80219990 <caml_compact_heap>
ffffffff8021c865:	e8 86 de ff ff       	callq  ffffffff8021a6f0 <caml_final_do_calls>
ffffffff8021c86a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021c86f:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021c873:	c3                   	retq   
ffffffff8021c874:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021c87b:	00 00 00 00 
ffffffff8021c87f:	90                   	nop

ffffffff8021c880 <caml_get_minor_free>:
ffffffff8021c880:	48 8b 05 01 f7 01 00 	mov    0x1f701(%rip),%rax        # ffffffff8023bf88 <caml_young_ptr>
ffffffff8021c887:	48 2b 05 12 f7 01 00 	sub    0x1f712(%rip),%rax        # ffffffff8023bfa0 <caml_young_alloc_start>
ffffffff8021c88e:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff8021c892:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021c897:	c3                   	retq   
ffffffff8021c898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021c89f:	00 

ffffffff8021c8a0 <caml_get_major_bucket>:
ffffffff8021c8a0:	48 d1 ff             	sar    %rdi
ffffffff8021c8a3:	78 47                	js     ffffffff8021c8ec <caml_get_major_bucket+0x4c>
ffffffff8021c8a5:	48 63 15 54 f4 00 00 	movslq 0xf454(%rip),%rdx        # ffffffff8022bd00 <caml_major_window>
ffffffff8021c8ac:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021c8b1:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8021c8b4:	7e 35                	jle    ffffffff8021c8eb <caml_get_major_bucket+0x4b>
ffffffff8021c8b6:	48 63 05 1b f3 01 00 	movslq 0x1f31b(%rip),%rax        # ffffffff8023bbd8 <caml_major_ring_index>
ffffffff8021c8bd:	f2 0f 10 05 3b 55 00 	movsd  0x553b(%rip),%xmm0        # ffffffff80221e00 <int32_length+0x320>
ffffffff8021c8c4:	00 
ffffffff8021c8c5:	48 01 c7             	add    %rax,%rdi
ffffffff8021c8c8:	48 89 f8             	mov    %rdi,%rax
ffffffff8021c8cb:	48 29 d0             	sub    %rdx,%rax
ffffffff8021c8ce:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8021c8d1:	48 0f 4e f8          	cmovle %rax,%rdi
ffffffff8021c8d5:	48 8d 05 04 f3 01 00 	lea    0x1f304(%rip),%rax        # ffffffff8023bbe0 <caml_major_ring>
ffffffff8021c8dc:	f2 0f 59 04 f8       	mulsd  (%rax,%rdi,8),%xmm0
ffffffff8021c8e1:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
ffffffff8021c8e6:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021c8eb:	c3                   	retq   
ffffffff8021c8ec:	50                   	push   %rax
ffffffff8021c8ed:	48 8d 3d bb 5f 00 00 	lea    0x5fbb(%rip),%rdi        # ffffffff802228af <posix_signals+0x7cf>
ffffffff8021c8f4:	e8 87 ab fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021c8f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021c900 <caml_get_major_credit>:
ffffffff8021c900:	f2 0f 10 05 f8 54 00 	movsd  0x54f8(%rip),%xmm0        # ffffffff80221e00 <int32_length+0x320>
ffffffff8021c907:	00 
ffffffff8021c908:	f2 0f 59 05 c0 f2 01 	mulsd  0x1f2c0(%rip),%xmm0        # ffffffff8023bbd0 <caml_major_work_credit>
ffffffff8021c90f:	00 
ffffffff8021c910:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
ffffffff8021c915:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021c91a:	c3                   	retq   
ffffffff8021c91b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8021c920 <caml_init_gc>:
ffffffff8021c920:	41 57                	push   %r15
ffffffff8021c922:	41 56                	push   %r14
ffffffff8021c924:	41 55                	push   %r13
ffffffff8021c926:	49 89 cd             	mov    %rcx,%r13
ffffffff8021c929:	41 54                	push   %r12
ffffffff8021c92b:	55                   	push   %rbp
ffffffff8021c92c:	4c 89 cd             	mov    %r9,%rbp
ffffffff8021c92f:	53                   	push   %rbx
ffffffff8021c930:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021c933:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8021c937:	48 81 fe 00 f0 00 00 	cmp    $0xf000,%rsi
ffffffff8021c93e:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
ffffffff8021c943:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
ffffffff8021c948:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8021c94d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
ffffffff8021c952:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
ffffffff8021c957:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021c95c:	b8 00 f0 00 00       	mov    $0xf000,%eax
ffffffff8021c961:	48 0f 42 f0          	cmovb  %rax,%rsi
ffffffff8021c965:	4c 8d 24 f5 ff 0f 00 	lea    0xfff(,%rsi,8),%r12
ffffffff8021c96c:	00 
ffffffff8021c96d:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
ffffffff8021c974:	e8 27 3b ff ff       	callq  ffffffff802104a0 <caml_init_alloc_for_heap>
ffffffff8021c979:	85 c0                	test   %eax,%eax
ffffffff8021c97b:	0f 85 b6 01 00 00    	jne    ffffffff8021cb37 <caml_init_gc+0x217>
ffffffff8021c981:	49 8d 3c dc          	lea    (%r12,%rbx,8),%rdi
ffffffff8021c985:	e8 f6 40 ff ff       	callq  ffffffff80210a80 <caml_page_table_initialize>
ffffffff8021c98a:	85 c0                	test   %eax,%eax
ffffffff8021c98c:	0f 85 97 01 00 00    	jne    ffffffff8021cb29 <caml_init_gc+0x209>
ffffffff8021c992:	48 81 fb 00 00 00 10 	cmp    $0x10000000,%rbx
ffffffff8021c999:	bf 00 00 00 10       	mov    $0x10000000,%edi
ffffffff8021c99e:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff8021c9a3:	48 0f 4f df          	cmovg  %rdi,%rbx
ffffffff8021c9a7:	48 81 fb 00 10 00 00 	cmp    $0x1000,%rbx
ffffffff8021c9ae:	48 0f 4c d8          	cmovl  %rax,%rbx
ffffffff8021c9b2:	48 8d 3c dd f8 0f 00 	lea    0xff8(,%rbx,8),%rdi
ffffffff8021c9b9:	00 
ffffffff8021c9ba:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff8021c9bf:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
ffffffff8021c9c6:	e8 a5 53 ff ff       	callq  ffffffff80211d70 <caml_set_minor_heap_size>
ffffffff8021c9cb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021c9d0:	4d 85 ed             	test   %r13,%r13
ffffffff8021c9d3:	4c 89 e7             	mov    %r12,%rdi
ffffffff8021c9d6:	4c 0f 44 eb          	cmove  %rbx,%r13
ffffffff8021c9da:	48 89 05 d7 f3 01 00 	mov    %rax,0x1f3d7(%rip)        # ffffffff8023bdb8 <caml_major_heap_increment>
ffffffff8021c9e1:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff8021c9e6:	4c 89 2d d3 f3 01 00 	mov    %r13,0x1f3d3(%rip)        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8021c9ed:	48 89 05 7c 9a 02 00 	mov    %rax,0x29a7c(%rip)        # ffffffff80246470 <caml_percent_max>
ffffffff8021c9f4:	e8 e7 29 ff ff       	callq  ffffffff8020f3e0 <caml_init_major_heap>
ffffffff8021c9f9:	41 b9 32 00 00 00    	mov    $0x32,%r9d
ffffffff8021c9ff:	48 83 fd 32          	cmp    $0x32,%rbp
ffffffff8021ca03:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021ca08:	49 0f 4f e9          	cmovg  %r9,%rbp
ffffffff8021ca0c:	48 8b 15 a5 f5 01 00 	mov    0x1f5a5(%rip),%rdx        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff8021ca13:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021ca18:	48 8d 35 e9 5c 00 00 	lea    0x5ce9(%rip),%rsi        # ffffffff80222708 <posix_signals+0x628>
ffffffff8021ca1f:	48 89 05 aa f3 00 00 	mov    %rax,0xf3aa(%rip)        # ffffffff8022bdd0 <caml_custom_minor_max_bsz>
ffffffff8021ca26:	48 85 ed             	test   %rbp,%rbp
ffffffff8021ca29:	48 0f 4e eb          	cmovle %rbx,%rbp
ffffffff8021ca2d:	4d 85 ff             	test   %r15,%r15
ffffffff8021ca30:	4c 0f 44 fb          	cmove  %rbx,%r15
ffffffff8021ca34:	4d 85 f6             	test   %r14,%r14
ffffffff8021ca37:	4c 0f 44 f3          	cmove  %rbx,%r14
ffffffff8021ca3b:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021ca3f:	31 c0                	xor    %eax,%eax
ffffffff8021ca41:	89 2d b9 f2 00 00    	mov    %ebp,0xf2b9(%rip)        # ffffffff8022bd00 <caml_major_window>
ffffffff8021ca47:	4c 89 3d 92 f3 00 00 	mov    %r15,0xf392(%rip)        # ffffffff8022bde0 <caml_custom_major_ratio>
ffffffff8021ca4e:	4c 89 35 83 f3 00 00 	mov    %r14,0xf383(%rip)        # ffffffff8022bdd8 <caml_custom_minor_ratio>
ffffffff8021ca55:	e8 96 57 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021ca5a:	4c 89 e2             	mov    %r12,%rdx
ffffffff8021ca5d:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021ca62:	31 c0                	xor    %eax,%eax
ffffffff8021ca64:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021ca68:	48 8d 35 c1 5c 00 00 	lea    0x5cc1(%rip),%rsi        # ffffffff80222730 <posix_signals+0x650>
ffffffff8021ca6f:	e8 7c 57 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021ca74:	48 8b 15 45 f3 01 00 	mov    0x1f345(%rip),%rdx        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8021ca7b:	48 8d 35 d6 5c 00 00 	lea    0x5cd6(%rip),%rsi        # ffffffff80222758 <posix_signals+0x678>
ffffffff8021ca82:	31 c0                	xor    %eax,%eax
ffffffff8021ca84:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021ca89:	e8 62 57 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021ca8e:	48 8b 15 db 99 02 00 	mov    0x299db(%rip),%rdx        # ffffffff80246470 <caml_percent_max>
ffffffff8021ca95:	48 8d 35 3e 5e 00 00 	lea    0x5e3e(%rip),%rsi        # ffffffff802228da <posix_signals+0x7fa>
ffffffff8021ca9c:	31 c0                	xor    %eax,%eax
ffffffff8021ca9e:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021caa3:	e8 48 57 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021caa8:	48 8b 15 09 f3 01 00 	mov    0x1f309(%rip),%rdx        # ffffffff8023bdb8 <caml_major_heap_increment>
ffffffff8021caaf:	48 81 fa e8 03 00 00 	cmp    $0x3e8,%rdx
ffffffff8021cab6:	77 58                	ja     ffffffff8021cb10 <caml_init_gc+0x1f0>
ffffffff8021cab8:	48 8d 35 e1 5c 00 00 	lea    0x5ce1(%rip),%rsi        # ffffffff802227a0 <posix_signals+0x6c0>
ffffffff8021cabf:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021cac4:	31 c0                	xor    %eax,%eax
ffffffff8021cac6:	e8 25 57 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021cacb:	48 8b 15 2e 9a 02 00 	mov    0x29a2e(%rip),%rdx        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021cad2:	48 8d 35 e7 5c 00 00 	lea    0x5ce7(%rip),%rsi        # ffffffff802227c0 <posix_signals+0x6e0>
ffffffff8021cad9:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021cade:	31 c0                	xor    %eax,%eax
ffffffff8021cae0:	e8 0b 57 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021cae5:	8b 15 15 f2 00 00    	mov    0xf215(%rip),%edx        # ffffffff8022bd00 <caml_major_window>
ffffffff8021caeb:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8021caef:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021caf4:	5b                   	pop    %rbx
ffffffff8021caf5:	48 8d 35 fb 5d 00 00 	lea    0x5dfb(%rip),%rsi        # ffffffff802228f7 <posix_signals+0x817>
ffffffff8021cafc:	5d                   	pop    %rbp
ffffffff8021cafd:	31 c0                	xor    %eax,%eax
ffffffff8021caff:	41 5c                	pop    %r12
ffffffff8021cb01:	41 5d                	pop    %r13
ffffffff8021cb03:	41 5e                	pop    %r14
ffffffff8021cb05:	41 5f                	pop    %r15
ffffffff8021cb07:	e9 e4 56 ff ff       	jmpq   ffffffff802121f0 <caml_gc_message>
ffffffff8021cb0c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021cb10:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021cb14:	48 8d 35 5d 5c 00 00 	lea    0x5c5d(%rip),%rsi        # ffffffff80222778 <posix_signals+0x698>
ffffffff8021cb1b:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8021cb20:	31 c0                	xor    %eax,%eax
ffffffff8021cb22:	e8 c9 56 ff ff       	callq  ffffffff802121f0 <caml_gc_message>
ffffffff8021cb27:	eb a2                	jmp    ffffffff8021cacb <caml_init_gc+0x1ab>
ffffffff8021cb29:	48 8d 3d 8d 5d 00 00 	lea    0x5d8d(%rip),%rdi        # ffffffff802228bd <posix_signals+0x7dd>
ffffffff8021cb30:	31 c0                	xor    %eax,%eax
ffffffff8021cb32:	e8 99 57 ff ff       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff8021cb37:	48 8d 3d a2 5b 00 00 	lea    0x5ba2(%rip),%rdi        # ffffffff802226e0 <posix_signals+0x600>
ffffffff8021cb3e:	31 c0                	xor    %eax,%eax
ffffffff8021cb40:	e8 8b 57 ff ff       	callq  ffffffff802122d0 <caml_fatal_error>
ffffffff8021cb45:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021cb4c:	00 00 00 00 

ffffffff8021cb50 <caml_runtime_variant>:
ffffffff8021cb50:	48 8d 3d 37 59 00 00 	lea    0x5937(%rip),%rdi        # ffffffff8022248e <posix_signals+0x3ae>
ffffffff8021cb57:	e9 b4 c2 ff ff       	jmpq   ffffffff80218e10 <caml_copy_string>
ffffffff8021cb5c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8021cb60 <caml_runtime_parameters>:
ffffffff8021cb60:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021cb64:	8b 05 96 f1 00 00    	mov    0xf196(%rip),%eax        # ffffffff8022bd00 <caml_major_window>
ffffffff8021cb6a:	45 31 c9             	xor    %r9d,%r9d
ffffffff8021cb6d:	ff 35 5d f4 01 00    	pushq  0x1f45d(%rip)        # ffffffff8023bfd0 <caml_runtime_warnings>
ffffffff8021cb73:	4c 8b 05 3e f2 01 00 	mov    0x1f23e(%rip),%r8        # ffffffff8023bdb8 <caml_major_heap_increment>
ffffffff8021cb7a:	48 8d 3d 5f 5c 00 00 	lea    0x5c5f(%rip),%rdi        # ffffffff802227e0 <posix_signals+0x700>
ffffffff8021cb81:	48 8b 0d b8 f2 01 00 	mov    0x1f2b8(%rip),%rcx        # ffffffff8023be40 <caml_use_huge_pages>
ffffffff8021cb88:	8b 15 86 84 01 00    	mov    0x18486(%rip),%edx        # ffffffff80235014 <caml_backtrace_active>
ffffffff8021cb8e:	50                   	push   %rax
ffffffff8021cb8f:	8b 05 3b b9 02 00    	mov    0x2b93b(%rip),%eax        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021cb95:	ff 35 3d f4 01 00    	pushq  0x1f43d(%rip)        # ffffffff8023bfd8 <caml_verb_gc>
ffffffff8021cb9b:	8b 35 5f 99 02 00    	mov    0x2995f(%rip),%esi        # ffffffff80246500 <caml_allocation_policy>
ffffffff8021cba1:	ff 35 81 97 02 00    	pushq  0x29781(%rip)        # ffffffff80246328 <caml_trace_level>
ffffffff8021cba7:	ff 35 0b f4 01 00    	pushq  0x1f40b(%rip)        # ffffffff8023bfb8 <caml_minor_heap_wsz>
ffffffff8021cbad:	50                   	push   %rax
ffffffff8021cbae:	31 c0                	xor    %eax,%eax
ffffffff8021cbb0:	ff 35 ba 98 02 00    	pushq  0x298ba(%rip)        # ffffffff80246470 <caml_percent_max>
ffffffff8021cbb6:	ff 35 04 f2 01 00    	pushq  0x1f204(%rip)        # ffffffff8023bdc0 <caml_percent_free>
ffffffff8021cbbc:	e8 7f 88 ff ff       	callq  ffffffff80215440 <caml_alloc_sprintf>
ffffffff8021cbc1:	48 83 c4 48          	add    $0x48,%rsp
ffffffff8021cbc5:	c3                   	retq   
ffffffff8021cbc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021cbcd:	00 00 00 

ffffffff8021cbd0 <caml_ml_enable_runtime_warnings>:
ffffffff8021cbd0:	48 d1 ff             	sar    %rdi
ffffffff8021cbd3:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021cbd8:	48 63 ff             	movslq %edi,%rdi
ffffffff8021cbdb:	48 89 3d ee f3 01 00 	mov    %rdi,0x1f3ee(%rip)        # ffffffff8023bfd0 <caml_runtime_warnings>
ffffffff8021cbe2:	c3                   	retq   
ffffffff8021cbe3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021cbea:	00 00 00 00 
ffffffff8021cbee:	66 90                	xchg   %ax,%ax

ffffffff8021cbf0 <caml_ml_runtime_warnings_enabled>:
ffffffff8021cbf0:	48 83 3d d8 f3 01 00 	cmpq   $0x1,0x1f3d8(%rip)        # ffffffff8023bfd0 <caml_runtime_warnings>
ffffffff8021cbf7:	01 
ffffffff8021cbf8:	48 19 c0             	sbb    %rax,%rax
ffffffff8021cbfb:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff8021cbff:	48 83 c0 03          	add    $0x3,%rax
ffffffff8021cc03:	c3                   	retq   
ffffffff8021cc04:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021cc0b:	00 00 00 
ffffffff8021cc0e:	66 90                	xchg   %ax,%ax

ffffffff8021cc10 <caml_parse_engine>:
ffffffff8021cc10:	41 57                	push   %r15
ffffffff8021cc12:	48 d1 fa             	sar    %rdx
ffffffff8021cc15:	41 56                	push   %r14
ffffffff8021cc17:	41 55                	push   %r13
ffffffff8021cc19:	41 54                	push   %r12
ffffffff8021cc1b:	55                   	push   %rbp
ffffffff8021cc1c:	53                   	push   %rbx
ffffffff8021cc1d:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8021cc21:	89 54 24 18          	mov    %edx,0x18(%rsp)
ffffffff8021cc25:	83 fa 05             	cmp    $0x5,%edx
ffffffff8021cc28:	0f 87 8e 08 00 00    	ja     ffffffff8021d4bc <caml_parse_engine.cold>
ffffffff8021cc2e:	48 89 f3             	mov    %rsi,%rbx
ffffffff8021cc31:	49 89 cf             	mov    %rcx,%r15
ffffffff8021cc34:	48 8d 35 cd 5d 00 00 	lea    0x5dcd(%rip),%rsi        # ffffffff80222a08 <posix_signals+0x928>
ffffffff8021cc3b:	89 d1                	mov    %edx,%ecx
ffffffff8021cc3d:	48 63 04 8e          	movslq (%rsi,%rcx,4),%rax
ffffffff8021cc41:	49 89 fc             	mov    %rdi,%r12
ffffffff8021cc44:	48 01 f0             	add    %rsi,%rax
ffffffff8021cc47:	ff e0                	jmpq   *%rax
ffffffff8021cc49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021cc50:	48 8b 43 70          	mov    0x70(%rbx),%rax
ffffffff8021cc54:	4c 8b 43 68          	mov    0x68(%rbx),%r8
ffffffff8021cc58:	4c 89 fe             	mov    %r15,%rsi
ffffffff8021cc5b:	48 8b 6b 78          	mov    0x78(%rbx),%rbp
ffffffff8021cc5f:	48 d1 f8             	sar    %rax
ffffffff8021cc62:	49 d1 f8             	sar    %r8
ffffffff8021cc65:	89 44 24 18          	mov    %eax,0x18(%rsp)
ffffffff8021cc69:	48 98                	cltq   
ffffffff8021cc6b:	4d 63 e8             	movslq %r8d,%r13
ffffffff8021cc6e:	48 d1 fd             	sar    %rbp
ffffffff8021cc71:	48 89 c7             	mov    %rax,%rdi
ffffffff8021cc74:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8021cc78:	48 8b 03             	mov    (%rbx),%rax
ffffffff8021cc7b:	4e 8d 34 ed 00 00 00 	lea    0x0(,%r13,8),%r14
ffffffff8021cc82:	00 
ffffffff8021cc83:	4c 8d 14 3f          	lea    (%rdi,%rdi,1),%r10
ffffffff8021cc87:	49 8d 52 01          	lea    0x1(%r10),%rdx
ffffffff8021cc8b:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
ffffffff8021cc90:	4a 89 14 e8          	mov    %rdx,(%rax,%r13,8)
ffffffff8021cc94:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
ffffffff8021cc98:	4c 01 f7             	add    %r14,%rdi
ffffffff8021cc9b:	e8 c0 39 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021cca0:	4c 8b 7b 50          	mov    0x50(%rbx),%r15
ffffffff8021cca4:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
ffffffff8021cca8:	49 d1 ff             	sar    %r15
ffffffff8021ccab:	4d 63 ff             	movslq %r15d,%r15
ffffffff8021ccae:	4a 8b 34 ff          	mov    (%rdi,%r15,8),%rsi
ffffffff8021ccb2:	4c 01 f7             	add    %r14,%rdi
ffffffff8021ccb5:	e8 a6 39 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021ccba:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021ccbf:	4d 39 fd             	cmp    %r15,%r13
ffffffff8021ccc2:	0f 87 c8 06 00 00    	ja     ffffffff8021d390 <caml_parse_engine+0x780>
ffffffff8021ccc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021cccf:	00 
ffffffff8021ccd0:	49 8b 44 24 28       	mov    0x28(%r12),%rax
ffffffff8021ccd5:	4e 0f bf 34 10       	movswq (%rax,%r10,1),%r14
ffffffff8021ccda:	45 85 f6             	test   %r14d,%r14d
ffffffff8021ccdd:	0f 85 75 03 00 00    	jne    ffffffff8021d058 <caml_parse_engine+0x448>
ffffffff8021cce3:	48 8b 53 30          	mov    0x30(%rbx),%rdx
ffffffff8021cce7:	48 d1 fa             	sar    %rdx
ffffffff8021ccea:	89 d0                	mov    %edx,%eax
ffffffff8021ccec:	85 d2                	test   %edx,%edx
ffffffff8021ccee:	0f 89 ab 01 00 00    	jns    ffffffff8021ce9f <caml_parse_engine+0x28f>
ffffffff8021ccf4:	4b 8d 44 2d 01       	lea    0x1(%r13,%r13,1),%rax
ffffffff8021ccf9:	48 63 ed             	movslq %ebp,%rbp
ffffffff8021ccfc:	48 89 43 68          	mov    %rax,0x68(%rbx)
ffffffff8021cd00:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8021cd04:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021cd09:	48 89 43 70          	mov    %rax,0x70(%rbx)
ffffffff8021cd0d:	48 8d 44 2d 01       	lea    0x1(%rbp,%rbp,1),%rax
ffffffff8021cd12:	48 89 43 78          	mov    %rax,0x78(%rbx)
ffffffff8021cd16:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021cd1b:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8021cd1f:	5b                   	pop    %rbx
ffffffff8021cd20:	5d                   	pop    %rbp
ffffffff8021cd21:	41 5c                	pop    %r12
ffffffff8021cd23:	41 5d                	pop    %r13
ffffffff8021cd25:	41 5e                	pop    %r14
ffffffff8021cd27:	41 5f                	pop    %r15
ffffffff8021cd29:	c3                   	retq   
ffffffff8021cd2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021cd30:	48 8b 43 70          	mov    0x70(%rbx),%rax
ffffffff8021cd34:	4c 8b 43 68          	mov    0x68(%rbx),%r8
ffffffff8021cd38:	48 8b 6b 78          	mov    0x78(%rbx),%rbp
ffffffff8021cd3c:	48 d1 f8             	sar    %rax
ffffffff8021cd3f:	49 d1 f8             	sar    %r8
ffffffff8021cd42:	89 44 24 18          	mov    %eax,0x18(%rsp)
ffffffff8021cd46:	4d 63 e8             	movslq %r8d,%r13
ffffffff8021cd49:	48 d1 fd             	sar    %rbp
ffffffff8021cd4c:	83 fd 02             	cmp    $0x2,%ebp
ffffffff8021cd4f:	0f 8f bb 02 00 00    	jg     ffffffff8021d010 <caml_parse_engine+0x400>
ffffffff8021cd55:	8b 35 75 b7 02 00    	mov    0x2b775(%rip),%esi        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021cd5b:	48 8d 2d 1e 5c 00 00 	lea    0x5c1e(%rip),%rbp        # ffffffff80222980 <posix_signals+0x8a0>
ffffffff8021cd62:	eb 16                	jmp    ffffffff8021cd7a <caml_parse_engine+0x16a>
ffffffff8021cd64:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021cd68:	48 8b 43 28          	mov    0x28(%rbx),%rax
ffffffff8021cd6c:	48 d1 f8             	sar    %rax
ffffffff8021cd6f:	48 98                	cltq   
ffffffff8021cd71:	4c 39 e8             	cmp    %r13,%rax
ffffffff8021cd74:	73 74                	jae    ffffffff8021cdea <caml_parse_engine+0x1da>
ffffffff8021cd76:	49 83 ed 01          	sub    $0x1,%r13
ffffffff8021cd7a:	48 8b 03             	mov    (%rbx),%rax
ffffffff8021cd7d:	4a 8b 14 e8          	mov    (%rax,%r13,8),%rdx
ffffffff8021cd81:	49 8b 44 24 38       	mov    0x38(%r12),%rax
ffffffff8021cd86:	48 d1 fa             	sar    %rdx
ffffffff8021cd89:	48 63 ca             	movslq %edx,%rcx
ffffffff8021cd8c:	0f bf 0c 48          	movswl (%rax,%rcx,2),%ecx
ffffffff8021cd90:	8d 81 00 01 00 00    	lea    0x100(%rcx),%eax
ffffffff8021cd96:	85 c9                	test   %ecx,%ecx
ffffffff8021cd98:	74 27                	je     ffffffff8021cdc1 <caml_parse_engine+0x1b1>
ffffffff8021cd9a:	85 c0                	test   %eax,%eax
ffffffff8021cd9c:	78 23                	js     ffffffff8021cdc1 <caml_parse_engine+0x1b1>
ffffffff8021cd9e:	49 8b 4c 24 50       	mov    0x50(%r12),%rcx
ffffffff8021cda3:	48 d1 f9             	sar    %rcx
ffffffff8021cda6:	39 c8                	cmp    %ecx,%eax
ffffffff8021cda8:	7f 17                	jg     ffffffff8021cdc1 <caml_parse_engine+0x1b1>
ffffffff8021cdaa:	49 8b 4c 24 60       	mov    0x60(%r12),%rcx
ffffffff8021cdaf:	48 98                	cltq   
ffffffff8021cdb1:	4c 8d 34 00          	lea    (%rax,%rax,1),%r14
ffffffff8021cdb5:	66 81 3c 41 00 01    	cmpw   $0x100,(%rcx,%rax,2)
ffffffff8021cdbb:	0f 84 3f 06 00 00    	je     ffffffff8021d400 <caml_parse_engine+0x7f0>
ffffffff8021cdc1:	85 f6                	test   %esi,%esi
ffffffff8021cdc3:	74 a3                	je     ffffffff8021cd68 <caml_parse_engine+0x158>
ffffffff8021cdc5:	48 8b 3d 1c b7 02 00 	mov    0x2b71c(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8021cdcc:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021cdcf:	31 c0                	xor    %eax,%eax
ffffffff8021cdd1:	e8 d5 32 fe ff       	callq  ffffffff802000ab <fprintf>
ffffffff8021cdd6:	48 8b 43 28          	mov    0x28(%rbx),%rax
ffffffff8021cdda:	8b 35 f0 b6 02 00    	mov    0x2b6f0(%rip),%esi        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021cde0:	48 d1 f8             	sar    %rax
ffffffff8021cde3:	48 98                	cltq   
ffffffff8021cde5:	4c 39 e8             	cmp    %r13,%rax
ffffffff8021cde8:	72 8c                	jb     ffffffff8021cd76 <caml_parse_engine+0x166>
ffffffff8021cdea:	85 f6                	test   %esi,%esi
ffffffff8021cdec:	0f 85 d6 03 00 00    	jne    ffffffff8021d1c8 <caml_parse_engine+0x5b8>
ffffffff8021cdf2:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8021cdf6:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8021cdfb:	5b                   	pop    %rbx
ffffffff8021cdfc:	5d                   	pop    %rbp
ffffffff8021cdfd:	41 5c                	pop    %r12
ffffffff8021cdff:	41 5d                	pop    %r13
ffffffff8021ce01:	41 5e                	pop    %r14
ffffffff8021ce03:	41 5f                	pop    %r15
ffffffff8021ce05:	c3                   	retq   
ffffffff8021ce06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021ce0d:	00 00 00 
ffffffff8021ce10:	4c 8b 43 68          	mov    0x68(%rbx),%r8
ffffffff8021ce14:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
ffffffff8021ce1b:	00 
ffffffff8021ce1c:	89 d5                	mov    %edx,%ebp
ffffffff8021ce1e:	45 31 d2             	xor    %r10d,%r10d
ffffffff8021ce21:	49 d1 f8             	sar    %r8
ffffffff8021ce24:	4d 63 e8             	movslq %r8d,%r13
ffffffff8021ce27:	e9 a4 fe ff ff       	jmpq   ffffffff8021ccd0 <caml_parse_engine+0xc0>
ffffffff8021ce2c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021ce30:	4c 8b 73 70          	mov    0x70(%rbx),%r14
ffffffff8021ce34:	4c 8b 43 68          	mov    0x68(%rbx),%r8
ffffffff8021ce38:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
ffffffff8021ce3c:	48 8b 6b 78          	mov    0x78(%rbx),%rbp
ffffffff8021ce40:	49 d1 fe             	sar    %r14
ffffffff8021ce43:	49 d1 f8             	sar    %r8
ffffffff8021ce46:	49 63 c6             	movslq %r14d,%rax
ffffffff8021ce49:	44 89 74 24 18       	mov    %r14d,0x18(%rsp)
ffffffff8021ce4e:	4d 63 e8             	movslq %r8d,%r13
ffffffff8021ce51:	48 d1 fd             	sar    %rbp
ffffffff8021ce54:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8021ce58:	4c 8d 14 00          	lea    (%rax,%rax,1),%r10
ffffffff8021ce5c:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff8021ce60:	0f 85 aa 02 00 00    	jne    ffffffff8021d110 <caml_parse_engine+0x500>
ffffffff8021ce66:	41 0f b6 57 f8       	movzbl -0x8(%r15),%edx
ffffffff8021ce6b:	49 8b 44 24 10       	mov    0x10(%r12),%rax
ffffffff8021ce70:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
ffffffff8021ce75:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
ffffffff8021ce79:	48 89 43 30          	mov    %rax,0x30(%rbx)
ffffffff8021ce7d:	49 8b 37             	mov    (%r15),%rsi
ffffffff8021ce80:	e8 db 37 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021ce85:	8b 3d 45 b6 02 00    	mov    0x2b645(%rip),%edi        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021ce8b:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021ce90:	85 ff                	test   %edi,%edi
ffffffff8021ce92:	0f 85 80 03 00 00    	jne    ffffffff8021d218 <caml_parse_engine+0x608>
ffffffff8021ce98:	48 8b 43 30          	mov    0x30(%rbx),%rax
ffffffff8021ce9c:	48 d1 f8             	sar    %rax
ffffffff8021ce9f:	49 8b 54 24 38       	mov    0x38(%r12),%rdx
ffffffff8021cea4:	42 0f bf 0c 12       	movswl (%rdx,%r10,1),%ecx
ffffffff8021cea9:	8d 14 01             	lea    (%rcx,%rax,1),%edx
ffffffff8021ceac:	85 c9                	test   %ecx,%ecx
ffffffff8021ceae:	74 28                	je     ffffffff8021ced8 <caml_parse_engine+0x2c8>
ffffffff8021ceb0:	85 d2                	test   %edx,%edx
ffffffff8021ceb2:	78 24                	js     ffffffff8021ced8 <caml_parse_engine+0x2c8>
ffffffff8021ceb4:	49 8b 4c 24 50       	mov    0x50(%r12),%rcx
ffffffff8021ceb9:	48 d1 f9             	sar    %rcx
ffffffff8021cebc:	39 ca                	cmp    %ecx,%edx
ffffffff8021cebe:	7f 18                	jg     ffffffff8021ced8 <caml_parse_engine+0x2c8>
ffffffff8021cec0:	49 8b 4c 24 60       	mov    0x60(%r12),%rcx
ffffffff8021cec5:	48 63 d2             	movslq %edx,%rdx
ffffffff8021cec8:	4c 8d 34 12          	lea    (%rdx,%rdx,1),%r14
ffffffff8021cecc:	0f bf 14 51          	movswl (%rcx,%rdx,2),%edx
ffffffff8021ced0:	39 c2                	cmp    %eax,%edx
ffffffff8021ced2:	0f 84 1f 04 00 00    	je     ffffffff8021d2f7 <caml_parse_engine+0x6e7>
ffffffff8021ced8:	49 8b 54 24 40       	mov    0x40(%r12),%rdx
ffffffff8021cedd:	42 0f bf 0c 12       	movswl (%rdx,%r10,1),%ecx
ffffffff8021cee2:	8d 14 01             	lea    (%rcx,%rax,1),%edx
ffffffff8021cee5:	85 c9                	test   %ecx,%ecx
ffffffff8021cee7:	74 24                	je     ffffffff8021cf0d <caml_parse_engine+0x2fd>
ffffffff8021cee9:	85 d2                	test   %edx,%edx
ffffffff8021ceeb:	78 20                	js     ffffffff8021cf0d <caml_parse_engine+0x2fd>
ffffffff8021ceed:	49 8b 4c 24 50       	mov    0x50(%r12),%rcx
ffffffff8021cef2:	48 d1 f9             	sar    %rcx
ffffffff8021cef5:	39 ca                	cmp    %ecx,%edx
ffffffff8021cef7:	7f 14                	jg     ffffffff8021cf0d <caml_parse_engine+0x2fd>
ffffffff8021cef9:	49 8b 4c 24 60       	mov    0x60(%r12),%rcx
ffffffff8021cefe:	48 63 d2             	movslq %edx,%rdx
ffffffff8021cf01:	0f bf 0c 51          	movswl (%rcx,%rdx,2),%ecx
ffffffff8021cf05:	39 c1                	cmp    %eax,%ecx
ffffffff8021cf07:	0f 84 3a 01 00 00    	je     ffffffff8021d047 <caml_parse_engine+0x437>
ffffffff8021cf0d:	85 ed                	test   %ebp,%ebp
ffffffff8021cf0f:	0f 8f 37 fe ff ff    	jg     ffffffff8021cd4c <caml_parse_engine+0x13c>
ffffffff8021cf15:	4b 8d 44 2d 01       	lea    0x1(%r13,%r13,1),%rax
ffffffff8021cf1a:	48 63 ed             	movslq %ebp,%rbp
ffffffff8021cf1d:	48 89 43 68          	mov    %rax,0x68(%rbx)
ffffffff8021cf21:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8021cf25:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021cf2a:	48 89 43 70          	mov    %rax,0x70(%rbx)
ffffffff8021cf2e:	48 8d 44 2d 01       	lea    0x1(%rbp,%rbp,1),%rax
ffffffff8021cf33:	48 89 43 78          	mov    %rax,0x78(%rbx)
ffffffff8021cf37:	b8 0b 00 00 00       	mov    $0xb,%eax
ffffffff8021cf3c:	e9 da fd ff ff       	jmpq   ffffffff8021cd1b <caml_parse_engine+0x10b>
ffffffff8021cf41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021cf48:	48 8b 43 70          	mov    0x70(%rbx),%rax
ffffffff8021cf4c:	4c 8b 43 68          	mov    0x68(%rbx),%r8
ffffffff8021cf50:	48 8b 6b 78          	mov    0x78(%rbx),%rbp
ffffffff8021cf54:	48 d1 f8             	sar    %rax
ffffffff8021cf57:	49 d1 f8             	sar    %r8
ffffffff8021cf5a:	89 44 24 18          	mov    %eax,0x18(%rsp)
ffffffff8021cf5e:	4d 63 e8             	movslq %r8d,%r13
ffffffff8021cf61:	48 d1 fd             	sar    %rbp
ffffffff8021cf64:	48 63 44 24 18       	movslq 0x18(%rsp),%rax
ffffffff8021cf69:	4e 8d 34 ed 00 00 00 	lea    0x0(,%r13,8),%r14
ffffffff8021cf70:	00 
ffffffff8021cf71:	48 89 c7             	mov    %rax,%rdi
ffffffff8021cf74:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8021cf78:	48 8b 03             	mov    (%rbx),%rax
ffffffff8021cf7b:	4c 8d 3c 3f          	lea    (%rdi,%rdi,1),%r15
ffffffff8021cf7f:	49 8d 57 01          	lea    0x1(%r15),%rdx
ffffffff8021cf83:	4a 89 14 e8          	mov    %rdx,(%rax,%r13,8)
ffffffff8021cf87:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
ffffffff8021cf8b:	48 8b 73 38          	mov    0x38(%rbx),%rsi
ffffffff8021cf8f:	4c 01 f7             	add    %r14,%rdi
ffffffff8021cf92:	e8 c9 36 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021cf97:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
ffffffff8021cf9b:	48 8b 73 40          	mov    0x40(%rbx),%rsi
ffffffff8021cf9f:	4c 01 f7             	add    %r14,%rdi
ffffffff8021cfa2:	e8 b9 36 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021cfa7:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
ffffffff8021cfab:	48 8b 73 48          	mov    0x48(%rbx),%rsi
ffffffff8021cfaf:	4c 01 f7             	add    %r14,%rdi
ffffffff8021cfb2:	e8 a9 36 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021cfb7:	4d 89 fa             	mov    %r15,%r10
ffffffff8021cfba:	e9 11 fd ff ff       	jmpq   ffffffff8021ccd0 <caml_parse_engine+0xc0>
ffffffff8021cfbf:	90                   	nop
ffffffff8021cfc0:	48 8b 43 68          	mov    0x68(%rbx),%rax
ffffffff8021cfc4:	48 d1 f8             	sar    %rax
ffffffff8021cfc7:	48 98                	cltq   
ffffffff8021cfc9:	48 8d 4c 00 01       	lea    0x1(%rax,%rax,1),%rcx
ffffffff8021cfce:	48 8b 43 70          	mov    0x70(%rbx),%rax
ffffffff8021cfd2:	48 d1 f8             	sar    %rax
ffffffff8021cfd5:	48 98                	cltq   
ffffffff8021cfd7:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
ffffffff8021cfdc:	48 8b 43 78          	mov    0x78(%rbx),%rax
ffffffff8021cfe0:	48 d1 f8             	sar    %rax
ffffffff8021cfe3:	48 98                	cltq   
ffffffff8021cfe5:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021cfea:	48 89 43 78          	mov    %rax,0x78(%rbx)
ffffffff8021cfee:	b8 09 00 00 00       	mov    $0x9,%eax
ffffffff8021cff3:	48 89 4b 68          	mov    %rcx,0x68(%rbx)
ffffffff8021cff7:	48 89 53 70          	mov    %rdx,0x70(%rbx)
ffffffff8021cffb:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8021cfff:	5b                   	pop    %rbx
ffffffff8021d000:	5d                   	pop    %rbp
ffffffff8021d001:	41 5c                	pop    %r12
ffffffff8021d003:	41 5d                	pop    %r13
ffffffff8021d005:	41 5e                	pop    %r14
ffffffff8021d007:	41 5f                	pop    %r15
ffffffff8021d009:	c3                   	retq   
ffffffff8021d00a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021d010:	48 8b 43 30          	mov    0x30(%rbx),%rax
ffffffff8021d014:	48 d1 f8             	sar    %rax
ffffffff8021d017:	85 c0                	test   %eax,%eax
ffffffff8021d019:	0f 84 d3 fd ff ff    	je     ffffffff8021cdf2 <caml_parse_engine+0x1e2>
ffffffff8021d01f:	8b 0d ab b4 02 00    	mov    0x2b4ab(%rip),%ecx        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021d025:	85 c9                	test   %ecx,%ecx
ffffffff8021d027:	0f 85 ab 03 00 00    	jne    ffffffff8021d3d8 <caml_parse_engine+0x7c8>
ffffffff8021d02d:	48 63 44 24 18       	movslq 0x18(%rsp),%rax
ffffffff8021d032:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
ffffffff8021d039:	ff 
ffffffff8021d03a:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8021d03e:	4c 8d 14 00          	lea    (%rax,%rax,1),%r10
ffffffff8021d042:	e9 89 fc ff ff       	jmpq   ffffffff8021ccd0 <caml_parse_engine+0xc0>
ffffffff8021d047:	49 8b 44 24 58       	mov    0x58(%r12),%rax
ffffffff8021d04c:	4c 0f bf 34 50       	movswq (%rax,%rdx,2),%r14
ffffffff8021d051:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021d058:	8b 05 72 b4 02 00    	mov    0x2b472(%rip),%eax        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021d05e:	85 c0                	test   %eax,%eax
ffffffff8021d060:	0f 85 4a 03 00 00    	jne    ffffffff8021d3b0 <caml_parse_engine+0x7a0>
ffffffff8021d066:	49 8b 44 24 20       	mov    0x20(%r12),%rax
ffffffff8021d06b:	4b 8d 54 2d 01       	lea    0x1(%r13,%r13,1),%rdx
ffffffff8021d070:	4d 8d 45 01          	lea    0x1(%r13),%r8
ffffffff8021d074:	4a 0f bf 04 70       	movswq (%rax,%r14,2),%rax
ffffffff8021d079:	48 89 53 50          	mov    %rdx,0x50(%rbx)
ffffffff8021d07d:	4b 8d 54 36 01       	lea    0x1(%r14,%r14,1),%rdx
ffffffff8021d082:	48 89 53 60          	mov    %rdx,0x60(%rbx)
ffffffff8021d086:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
ffffffff8021d08b:	49 29 c0             	sub    %rax,%r8
ffffffff8021d08e:	48 8b 03             	mov    (%rbx),%rax
ffffffff8021d091:	48 89 53 58          	mov    %rdx,0x58(%rbx)
ffffffff8021d095:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
ffffffff8021d09a:	4a 8b 44 c0 f8       	mov    -0x8(%rax,%r8,8),%rax
ffffffff8021d09f:	4a 0f bf 34 72       	movswq (%rdx,%r14,2),%rsi
ffffffff8021d0a4:	49 8b 54 24 48       	mov    0x48(%r12),%rdx
ffffffff8021d0a9:	48 d1 f8             	sar    %rax
ffffffff8021d0ac:	0f bf 0c 72          	movswl (%rdx,%rsi,2),%ecx
ffffffff8021d0b0:	8d 14 01             	lea    (%rcx,%rax,1),%edx
ffffffff8021d0b3:	85 c9                	test   %ecx,%ecx
ffffffff8021d0b5:	74 14                	je     ffffffff8021d0cb <caml_parse_engine+0x4bb>
ffffffff8021d0b7:	85 d2                	test   %edx,%edx
ffffffff8021d0b9:	78 10                	js     ffffffff8021d0cb <caml_parse_engine+0x4bb>
ffffffff8021d0bb:	49 8b 4c 24 50       	mov    0x50(%r12),%rcx
ffffffff8021d0c0:	48 d1 f9             	sar    %rcx
ffffffff8021d0c3:	39 ca                	cmp    %ecx,%edx
ffffffff8021d0c5:	0f 8e 25 01 00 00    	jle    ffffffff8021d1f0 <caml_parse_engine+0x5e0>
ffffffff8021d0cb:	49 8b 44 24 30       	mov    0x30(%r12),%rax
ffffffff8021d0d0:	48 0f bf 04 70       	movswq (%rax,%rsi,2),%rax
ffffffff8021d0d5:	48 8b 73 20          	mov    0x20(%rbx),%rsi
ffffffff8021d0d9:	48 63 ed             	movslq %ebp,%rbp
ffffffff8021d0dc:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
ffffffff8021d0e1:	4b 8d 4c 00 01       	lea    0x1(%r8,%r8,1),%rcx
ffffffff8021d0e6:	48 8d 44 2d 01       	lea    0x1(%rbp,%rbp,1),%rax
ffffffff8021d0eb:	48 d1 fe             	sar    %rsi
ffffffff8021d0ee:	4c 39 c6             	cmp    %r8,%rsi
ffffffff8021d0f1:	0f 87 f3 fe ff ff    	ja     ffffffff8021cfea <caml_parse_engine+0x3da>
ffffffff8021d0f7:	48 89 43 78          	mov    %rax,0x78(%rbx)
ffffffff8021d0fb:	b8 07 00 00 00       	mov    $0x7,%eax
ffffffff8021d100:	48 89 4b 68          	mov    %rcx,0x68(%rbx)
ffffffff8021d104:	48 89 53 70          	mov    %rdx,0x70(%rbx)
ffffffff8021d108:	e9 0e fc ff ff       	jmpq   ffffffff8021cd1b <caml_parse_engine+0x10b>
ffffffff8021d10d:	0f 1f 00             	nopl   (%rax)
ffffffff8021d110:	4c 89 f8             	mov    %r15,%rax
ffffffff8021d113:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
ffffffff8021d118:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021d11d:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
ffffffff8021d122:	48 d1 f8             	sar    %rax
ffffffff8021d125:	48 63 c8             	movslq %eax,%rcx
ffffffff8021d128:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8021d12d:	41 89 c7             	mov    %eax,%r15d
ffffffff8021d130:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
ffffffff8021d134:	48 89 53 30          	mov    %rdx,0x30(%rbx)
ffffffff8021d138:	e8 23 35 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021d13d:	8b 35 8d b3 02 00    	mov    0x2b38d(%rip),%esi        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021d143:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021d148:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff8021d14d:	85 f6                	test   %esi,%esi
ffffffff8021d14f:	0f 84 43 fd ff ff    	je     ffffffff8021ce98 <caml_parse_engine+0x288>
ffffffff8021d155:	49 8b 4c 24 70       	mov    0x70(%r12),%rcx
ffffffff8021d15a:	85 c0                	test   %eax,%eax
ffffffff8021d15c:	7f 29                	jg     ffffffff8021d187 <caml_parse_engine+0x577>
ffffffff8021d15e:	eb 33                	jmp    ffffffff8021d193 <caml_parse_engine+0x583>
ffffffff8021d160:	48 89 cf             	mov    %rcx,%rdi
ffffffff8021d163:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
ffffffff8021d168:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
ffffffff8021d16d:	e8 36 2f fe ff       	callq  ffffffff802000a8 <strlen>
ffffffff8021d172:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff8021d177:	41 83 ef 01          	sub    $0x1,%r15d
ffffffff8021d17b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff8021d180:	48 8d 4c 01 01       	lea    0x1(%rcx,%rax,1),%rcx
ffffffff8021d185:	74 0c                	je     ffffffff8021d193 <caml_parse_engine+0x583>
ffffffff8021d187:	80 39 00             	cmpb   $0x0,(%rcx)
ffffffff8021d18a:	75 d4                	jne    ffffffff8021d160 <caml_parse_engine+0x550>
ffffffff8021d18c:	48 8d 0d 8d 57 00 00 	lea    0x578d(%rip),%rcx        # ffffffff80222920 <posix_signals+0x840>
ffffffff8021d193:	48 8b 3d 4e b3 02 00 	mov    0x2b34e(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8021d19a:	44 89 f2             	mov    %r14d,%edx
ffffffff8021d19d:	48 8d 35 8c 57 00 00 	lea    0x578c(%rip),%rsi        # ffffffff80222930 <posix_signals+0x850>
ffffffff8021d1a4:	31 c0                	xor    %eax,%eax
ffffffff8021d1a6:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
ffffffff8021d1ab:	e8 fb 2e fe ff       	callq  ffffffff802000ab <fprintf>
ffffffff8021d1b0:	48 8b 43 30          	mov    0x30(%rbx),%rax
ffffffff8021d1b4:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021d1b9:	48 d1 f8             	sar    %rax
ffffffff8021d1bc:	e9 de fc ff ff       	jmpq   ffffffff8021ce9f <caml_parse_engine+0x28f>
ffffffff8021d1c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021d1c8:	48 8b 0d 19 b3 02 00 	mov    0x2b319(%rip),%rcx        # ffffffff802484e8 <stderr>
ffffffff8021d1cf:	ba 1a 00 00 00       	mov    $0x1a,%edx
ffffffff8021d1d4:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021d1d9:	48 8d 3d b5 57 00 00 	lea    0x57b5(%rip),%rdi        # ffffffff80222995 <posix_signals+0x8b5>
ffffffff8021d1e0:	e8 c7 2e fe ff       	callq  ffffffff802000ac <fwrite>
ffffffff8021d1e5:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8021d1ea:	e9 2c fb ff ff       	jmpq   ffffffff8021cd1b <caml_parse_engine+0x10b>
ffffffff8021d1ef:	90                   	nop
ffffffff8021d1f0:	49 8b 4c 24 60       	mov    0x60(%r12),%rcx
ffffffff8021d1f5:	48 63 d2             	movslq %edx,%rdx
ffffffff8021d1f8:	0f bf 0c 51          	movswl (%rcx,%rdx,2),%ecx
ffffffff8021d1fc:	39 c1                	cmp    %eax,%ecx
ffffffff8021d1fe:	0f 85 c7 fe ff ff    	jne    ffffffff8021d0cb <caml_parse_engine+0x4bb>
ffffffff8021d204:	49 8b 44 24 58       	mov    0x58(%r12),%rax
ffffffff8021d209:	48 0f bf 04 50       	movswq (%rax,%rdx,2),%rax
ffffffff8021d20e:	e9 c2 fe ff ff       	jmpq   ffffffff8021d0d5 <caml_parse_engine+0x4c5>
ffffffff8021d213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021d218:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
ffffffff8021d21d:	49 8b 4c 24 78       	mov    0x78(%r12),%rcx
ffffffff8021d222:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
ffffffff8021d226:	85 c0                	test   %eax,%eax
ffffffff8021d228:	7f 2e                	jg     ffffffff8021d258 <caml_parse_engine+0x648>
ffffffff8021d22a:	eb 38                	jmp    ffffffff8021d264 <caml_parse_engine+0x654>
ffffffff8021d22c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021d230:	48 89 cf             	mov    %rcx,%rdi
ffffffff8021d233:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
ffffffff8021d238:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
ffffffff8021d23d:	e8 66 2e fe ff       	callq  ffffffff802000a8 <strlen>
ffffffff8021d242:	83 6c 24 1c 01       	subl   $0x1,0x1c(%rsp)
ffffffff8021d247:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff8021d24c:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff8021d251:	48 8d 4c 01 01       	lea    0x1(%rcx,%rax,1),%rcx
ffffffff8021d256:	74 0c                	je     ffffffff8021d264 <caml_parse_engine+0x654>
ffffffff8021d258:	80 39 00             	cmpb   $0x0,(%rcx)
ffffffff8021d25b:	75 d3                	jne    ffffffff8021d230 <caml_parse_engine+0x620>
ffffffff8021d25d:	48 8d 0d bc 56 00 00 	lea    0x56bc(%rip),%rcx        # ffffffff80222920 <posix_signals+0x840>
ffffffff8021d264:	48 8b 3d 7d b2 02 00 	mov    0x2b27d(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8021d26b:	44 89 f2             	mov    %r14d,%edx
ffffffff8021d26e:	31 c0                	xor    %eax,%eax
ffffffff8021d270:	48 8d 35 d2 56 00 00 	lea    0x56d2(%rip),%rsi        # ffffffff80222949 <posix_signals+0x869>
ffffffff8021d277:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
ffffffff8021d27c:	e8 2a 2e fe ff       	callq  ffffffff802000ab <fprintf>
ffffffff8021d281:	49 8b 17             	mov    (%r15),%rdx
ffffffff8021d284:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021d289:	f6 c2 01             	test   $0x1,%dl
ffffffff8021d28c:	0f 85 b5 01 00 00    	jne    ffffffff8021d447 <caml_parse_engine+0x837>
ffffffff8021d292:	0f b6 42 f8          	movzbl -0x8(%rdx),%eax
ffffffff8021d296:	4c 8b 1d 4b b2 02 00 	mov    0x2b24b(%rip),%r11        # ffffffff802484e8 <stderr>
ffffffff8021d29d:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
ffffffff8021d2a2:	3c fc                	cmp    $0xfc,%al
ffffffff8021d2a4:	0f 84 e1 01 00 00    	je     ffffffff8021d48b <caml_parse_engine+0x87b>
ffffffff8021d2aa:	3c fd                	cmp    $0xfd,%al
ffffffff8021d2ac:	0f 84 b7 01 00 00    	je     ffffffff8021d469 <caml_parse_engine+0x859>
ffffffff8021d2b2:	4c 89 de             	mov    %r11,%rsi
ffffffff8021d2b5:	bf 5f 00 00 00       	mov    $0x5f,%edi
ffffffff8021d2ba:	e8 ef 2d fe ff       	callq  ffffffff802000ae <fputc>
ffffffff8021d2bf:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021d2c4:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8021d2c9:	48 8b 0d 18 b2 02 00 	mov    0x2b218(%rip),%rcx        # ffffffff802484e8 <stderr>
ffffffff8021d2d0:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021d2d5:	48 8d 3d 89 56 00 00 	lea    0x5689(%rip),%rdi        # ffffffff80222965 <posix_signals+0x885>
ffffffff8021d2dc:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
ffffffff8021d2e1:	e8 c6 2d fe ff       	callq  ffffffff802000ac <fwrite>
ffffffff8021d2e6:	48 8b 43 30          	mov    0x30(%rbx),%rax
ffffffff8021d2ea:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021d2ef:	48 d1 f8             	sar    %rax
ffffffff8021d2f2:	e9 a8 fb ff ff       	jmpq   ffffffff8021ce9f <caml_parse_engine+0x28f>
ffffffff8021d2f7:	31 c0                	xor    %eax,%eax
ffffffff8021d2f9:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
ffffffff8021d300:	ff 
ffffffff8021d301:	85 ed                	test   %ebp,%ebp
ffffffff8021d303:	0f 9f c0             	setg   %al
ffffffff8021d306:	29 c5                	sub    %eax,%ebp
ffffffff8021d308:	49 8b 44 24 58       	mov    0x58(%r12),%rax
ffffffff8021d30d:	8b 15 bd b1 02 00    	mov    0x2b1bd(%rip),%edx        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021d313:	4a 0f bf 0c 30       	movswq (%rax,%r14,1),%rcx
ffffffff8021d318:	48 89 c8             	mov    %rcx,%rax
ffffffff8021d31b:	85 d2                	test   %edx,%edx
ffffffff8021d31d:	0f 84 1b 01 00 00    	je     ffffffff8021d43e <caml_parse_engine+0x82e>
ffffffff8021d323:	48 8b 3d be b1 02 00 	mov    0x2b1be(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8021d32a:	8b 54 24 18          	mov    0x18(%rsp),%edx
ffffffff8021d32e:	48 8d 35 97 56 00 00 	lea    0x5697(%rip),%rsi        # ffffffff802229cc <posix_signals+0x8ec>
ffffffff8021d335:	31 c0                	xor    %eax,%eax
ffffffff8021d337:	e8 6f 2d fe ff       	callq  ffffffff802000ab <fprintf>
ffffffff8021d33c:	49 8b 44 24 58       	mov    0x58(%r12),%rax
ffffffff8021d341:	4a 0f bf 3c 30       	movswq (%rax,%r14,1),%rdi
ffffffff8021d346:	89 7c 24 18          	mov    %edi,0x18(%rsp)
ffffffff8021d34a:	48 89 f8             	mov    %rdi,%rax
ffffffff8021d34d:	48 8b 53 20          	mov    0x20(%rbx),%rdx
ffffffff8021d351:	49 83 c5 01          	add    $0x1,%r13
ffffffff8021d355:	48 d1 fa             	sar    %rdx
ffffffff8021d358:	4c 39 ea             	cmp    %r13,%rdx
ffffffff8021d35b:	0f 87 03 fc ff ff    	ja     ffffffff8021cf64 <caml_parse_engine+0x354>
ffffffff8021d361:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021d366:	48 63 ed             	movslq %ebp,%rbp
ffffffff8021d369:	4b 8d 54 2d 01       	lea    0x1(%r13,%r13,1),%rdx
ffffffff8021d36e:	48 89 43 70          	mov    %rax,0x70(%rbx)
ffffffff8021d372:	48 8d 44 2d 01       	lea    0x1(%rbp,%rbp,1),%rax
ffffffff8021d377:	48 89 43 78          	mov    %rax,0x78(%rbx)
ffffffff8021d37b:	b8 05 00 00 00       	mov    $0x5,%eax
ffffffff8021d380:	48 89 53 68          	mov    %rdx,0x68(%rbx)
ffffffff8021d384:	e9 92 f9 ff ff       	jmpq   ffffffff8021cd1b <caml_parse_engine+0x10b>
ffffffff8021d389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021d390:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8021d394:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
ffffffff8021d398:	4a 8b 34 f8          	mov    (%rax,%r15,8),%rsi
ffffffff8021d39c:	4c 01 f7             	add    %r14,%rdi
ffffffff8021d39f:	e8 bc 32 ff ff       	callq  ffffffff80210660 <caml_modify>
ffffffff8021d3a4:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021d3a9:	e9 22 f9 ff ff       	jmpq   ffffffff8021ccd0 <caml_parse_engine+0xc0>
ffffffff8021d3ae:	66 90                	xchg   %ax,%ax
ffffffff8021d3b0:	8b 54 24 18          	mov    0x18(%rsp),%edx
ffffffff8021d3b4:	48 8b 3d 2d b1 02 00 	mov    0x2b12d(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8021d3bb:	44 89 f1             	mov    %r14d,%ecx
ffffffff8021d3be:	31 c0                	xor    %eax,%eax
ffffffff8021d3c0:	48 8d 35 22 56 00 00 	lea    0x5622(%rip),%rsi        # ffffffff802229e9 <posix_signals+0x909>
ffffffff8021d3c7:	e8 df 2c fe ff       	callq  ffffffff802000ab <fprintf>
ffffffff8021d3cc:	e9 95 fc ff ff       	jmpq   ffffffff8021d066 <caml_parse_engine+0x456>
ffffffff8021d3d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021d3d8:	48 8b 0d 09 b1 02 00 	mov    0x2b109(%rip),%rcx        # ffffffff802484e8 <stderr>
ffffffff8021d3df:	ba 1b 00 00 00       	mov    $0x1b,%edx
ffffffff8021d3e4:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021d3e9:	48 8d 3d c0 55 00 00 	lea    0x55c0(%rip),%rdi        # ffffffff802229b0 <posix_signals+0x8d0>
ffffffff8021d3f0:	e8 b7 2c fe ff       	callq  ffffffff802000ac <fwrite>
ffffffff8021d3f5:	e9 33 fc ff ff       	jmpq   ffffffff8021d02d <caml_parse_engine+0x41d>
ffffffff8021d3fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021d400:	85 f6                	test   %esi,%esi
ffffffff8021d402:	75 1b                	jne    ffffffff8021d41f <caml_parse_engine+0x80f>
ffffffff8021d404:	49 8b 44 24 58       	mov    0x58(%r12),%rax
ffffffff8021d409:	bd 03 00 00 00       	mov    $0x3,%ebp
ffffffff8021d40e:	4a 0f bf 3c 30       	movswq (%rax,%r14,1),%rdi
ffffffff8021d413:	89 7c 24 18          	mov    %edi,0x18(%rsp)
ffffffff8021d417:	48 89 f8             	mov    %rdi,%rax
ffffffff8021d41a:	e9 2e ff ff ff       	jmpq   ffffffff8021d34d <caml_parse_engine+0x73d>
ffffffff8021d41f:	48 8b 3d c2 b0 02 00 	mov    0x2b0c2(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8021d426:	48 8d 35 3b 55 00 00 	lea    0x553b(%rip),%rsi        # ffffffff80222968 <posix_signals+0x888>
ffffffff8021d42d:	31 c0                	xor    %eax,%eax
ffffffff8021d42f:	bd 03 00 00 00       	mov    $0x3,%ebp
ffffffff8021d434:	e8 72 2c fe ff       	callq  ffffffff802000ab <fprintf>
ffffffff8021d439:	e9 ca fe ff ff       	jmpq   ffffffff8021d308 <caml_parse_engine+0x6f8>
ffffffff8021d43e:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
ffffffff8021d442:	e9 06 ff ff ff       	jmpq   ffffffff8021d34d <caml_parse_engine+0x73d>
ffffffff8021d447:	48 8b 3d 9a b0 02 00 	mov    0x2b09a(%rip),%rdi        # ffffffff802484e8 <stderr>
ffffffff8021d44e:	48 d1 fa             	sar    %rdx
ffffffff8021d451:	48 8d 35 05 4c 00 00 	lea    0x4c05(%rip),%rsi        # ffffffff8022205d <int32_length+0x57d>
ffffffff8021d458:	31 c0                	xor    %eax,%eax
ffffffff8021d45a:	e8 4c 2c fe ff       	callq  ffffffff802000ab <fprintf>
ffffffff8021d45f:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021d464:	e9 5b fe ff ff       	jmpq   ffffffff8021d2c4 <caml_parse_engine+0x6b4>
ffffffff8021d469:	f2 0f 10 02          	movsd  (%rdx),%xmm0
ffffffff8021d46d:	48 8d 35 ee 54 00 00 	lea    0x54ee(%rip),%rsi        # ffffffff80222962 <posix_signals+0x882>
ffffffff8021d474:	4c 89 df             	mov    %r11,%rdi
ffffffff8021d477:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d47c:	e8 2a 2c fe ff       	callq  ffffffff802000ab <fprintf>
ffffffff8021d481:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021d486:	e9 39 fe ff ff       	jmpq   ffffffff8021d2c4 <caml_parse_engine+0x6b4>
ffffffff8021d48b:	4c 89 de             	mov    %r11,%rsi
ffffffff8021d48e:	48 89 d7             	mov    %rdx,%rdi
ffffffff8021d491:	e8 14 2c fe ff       	callq  ffffffff802000aa <fputs>
ffffffff8021d496:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
ffffffff8021d49b:	e9 24 fe ff ff       	jmpq   ffffffff8021d2c4 <caml_parse_engine+0x6b4>

ffffffff8021d4a0 <caml_set_parser_trace>:
ffffffff8021d4a0:	83 3d 29 b0 02 00 01 	cmpl   $0x1,0x2b029(%rip)        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021d4a7:	48 19 c0             	sbb    %rax,%rax
ffffffff8021d4aa:	48 d1 ff             	sar    %rdi
ffffffff8021d4ad:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff8021d4b1:	89 3d 19 b0 02 00    	mov    %edi,0x2b019(%rip)        # ffffffff802484d0 <caml_parser_trace>
ffffffff8021d4b7:	48 83 c0 03          	add    $0x3,%rax
ffffffff8021d4bb:	c3                   	retq   

ffffffff8021d4bc <caml_parse_engine.cold>:
ffffffff8021d4bc:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8021d4c1:	e9 55 f8 ff ff       	jmpq   ffffffff8021cd1b <caml_parse_engine+0x10b>
ffffffff8021d4c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021d4cd:	00 00 00 

ffffffff8021d4d0 <caml_ba_compare>:
ffffffff8021d4d0:	4c 8b 57 18          	mov    0x18(%rdi),%r10
ffffffff8021d4d4:	48 8b 46 18          	mov    0x18(%rsi),%rax
ffffffff8021d4d8:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
ffffffff8021d4dc:	4c 8d 4e 08          	lea    0x8(%rsi),%r9
ffffffff8021d4e0:	4c 89 d2             	mov    %r10,%rdx
ffffffff8021d4e3:	25 ff 01 00 00       	and    $0x1ff,%eax
ffffffff8021d4e8:	81 e2 ff 01 00 00    	and    $0x1ff,%edx
ffffffff8021d4ee:	48 39 c2             	cmp    %rax,%rdx
ffffffff8021d4f1:	74 0d                	je     ffffffff8021d500 <caml_ba_compare+0x30>
ffffffff8021d4f3:	29 d0                	sub    %edx,%eax
ffffffff8021d4f5:	c3                   	retq   
ffffffff8021d4f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021d4fd:	00 00 00 
ffffffff8021d500:	49 8b 51 08          	mov    0x8(%r9),%rdx
ffffffff8021d504:	4c 8b 41 08          	mov    0x8(%rcx),%r8
ffffffff8021d508:	89 d0                	mov    %edx,%eax
ffffffff8021d50a:	44 29 c0             	sub    %r8d,%eax
ffffffff8021d50d:	49 39 d0             	cmp    %rdx,%r8
ffffffff8021d510:	75 2e                	jne    ffffffff8021d540 <caml_ba_compare+0x70>
ffffffff8021d512:	31 d2                	xor    %edx,%edx
ffffffff8021d514:	31 c0                	xor    %eax,%eax
ffffffff8021d516:	4d 85 c0             	test   %r8,%r8
ffffffff8021d519:	7f 10                	jg     ffffffff8021d52b <caml_ba_compare+0x5b>
ffffffff8021d51b:	e9 13 03 00 00       	jmpq   ffffffff8021d833 <caml_ba_compare+0x363>
ffffffff8021d520:	83 c2 01             	add    $0x1,%edx
ffffffff8021d523:	48 63 c2             	movslq %edx,%rax
ffffffff8021d526:	49 39 c0             	cmp    %rax,%r8
ffffffff8021d529:	7e 1d                	jle    ffffffff8021d548 <caml_ba_compare+0x78>
ffffffff8021d52b:	4d 8b 5c c1 20       	mov    0x20(%r9,%rax,8),%r11
ffffffff8021d530:	4c 39 5c c1 20       	cmp    %r11,0x20(%rcx,%rax,8)
ffffffff8021d535:	74 e9                	je     ffffffff8021d520 <caml_ba_compare+0x50>
ffffffff8021d537:	7c 55                	jl     ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d539:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d53e:	c3                   	retq   
ffffffff8021d53f:	90                   	nop
ffffffff8021d540:	c3                   	retq   
ffffffff8021d541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021d548:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d54d:	45 31 c9             	xor    %r9d,%r9d
ffffffff8021d550:	31 d2                	xor    %edx,%edx
ffffffff8021d552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021d558:	41 83 c1 01          	add    $0x1,%r9d
ffffffff8021d55c:	48 0f af 44 d1 20    	imul   0x20(%rcx,%rdx,8),%rax
ffffffff8021d562:	49 63 d1             	movslq %r9d,%rdx
ffffffff8021d565:	49 39 d0             	cmp    %rdx,%r8
ffffffff8021d568:	7f ee                	jg     ffffffff8021d558 <caml_ba_compare+0x88>
ffffffff8021d56a:	41 0f b6 d2          	movzbl %r10b,%edx
ffffffff8021d56e:	41 80 fa 0c          	cmp    $0xc,%r10b
ffffffff8021d572:	0f 87 b5 29 00 00    	ja     ffffffff8021ff2d <caml_ba_compare.cold>
ffffffff8021d578:	48 8d 0d a1 54 00 00 	lea    0x54a1(%rip),%rcx        # ffffffff80222a20 <posix_signals+0x940>
ffffffff8021d57f:	48 63 14 91          	movslq (%rcx,%rdx,4),%rdx
ffffffff8021d583:	48 01 ca             	add    %rcx,%rdx
ffffffff8021d586:	ff e2                	jmpq   *%rdx
ffffffff8021d588:	0f 85 f6 00 00 00    	jne    ffffffff8021d684 <caml_ba_compare+0x1b4>
ffffffff8021d58e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff8021d593:	c3                   	retq   
ffffffff8021d594:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d598:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d59c:	48 85 c0             	test   %rax,%rax
ffffffff8021d59f:	0f 84 8b 02 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d5a5:	31 d2                	xor    %edx,%edx
ffffffff8021d5a7:	eb 16                	jmp    ffffffff8021d5bf <caml_ba_compare+0xef>
ffffffff8021d5a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021d5b0:	7f 87                	jg     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d5b2:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d5b6:	48 39 c2             	cmp    %rax,%rdx
ffffffff8021d5b9:	0f 84 71 02 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d5bf:	48 8b 34 d1          	mov    (%rcx,%rdx,8),%rsi
ffffffff8021d5c3:	48 39 34 d7          	cmp    %rsi,(%rdi,%rdx,8)
ffffffff8021d5c7:	7d e7                	jge    ffffffff8021d5b0 <caml_ba_compare+0xe0>
ffffffff8021d5c9:	eb c3                	jmp    ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d5cb:	48 01 c0             	add    %rax,%rax
ffffffff8021d5ce:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d5d2:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d5d6:	48 85 c0             	test   %rax,%rax
ffffffff8021d5d9:	0f 84 51 02 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d5df:	31 d2                	xor    %edx,%edx
ffffffff8021d5e1:	eb 42                	jmp    ffffffff8021d625 <caml_ba_compare+0x155>
ffffffff8021d5e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021d5e8:	66 0f 2f c1          	comisd %xmm1,%xmm0
ffffffff8021d5ec:	0f 87 47 ff ff ff    	ja     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d5f2:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
ffffffff8021d5f6:	7a 02                	jp     ffffffff8021d5fa <caml_ba_compare+0x12a>
ffffffff8021d5f8:	74 1e                	je     ffffffff8021d618 <caml_ba_compare+0x148>
ffffffff8021d5fa:	c7 05 84 7a 01 00 01 	movl   $0x1,0x17a84(%rip)        # ffffffff80235088 <caml_compare_unordered>
ffffffff8021d601:	00 00 00 
ffffffff8021d604:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
ffffffff8021d608:	0f 8b 26 03 00 00    	jnp    ffffffff8021d934 <caml_ba_compare+0x464>
ffffffff8021d60e:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
ffffffff8021d612:	0f 8b 27 03 00 00    	jnp    ffffffff8021d93f <caml_ba_compare+0x46f>
ffffffff8021d618:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d61c:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021d61f:	0f 84 0b 02 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d625:	f2 0f 10 04 d7       	movsd  (%rdi,%rdx,8),%xmm0
ffffffff8021d62a:	f2 0f 10 0c d1       	movsd  (%rcx,%rdx,8),%xmm1
ffffffff8021d62f:	66 0f 2f c8          	comisd %xmm0,%xmm1
ffffffff8021d633:	76 b3                	jbe    ffffffff8021d5e8 <caml_ba_compare+0x118>
ffffffff8021d635:	e9 54 ff ff ff       	jmpq   ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d63a:	48 01 c0             	add    %rax,%rax
ffffffff8021d63d:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d641:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d645:	48 85 c0             	test   %rax,%rax
ffffffff8021d648:	0f 84 e2 01 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d64e:	31 d2                	xor    %edx,%edx
ffffffff8021d650:	eb 3f                	jmp    ffffffff8021d691 <caml_ba_compare+0x1c1>
ffffffff8021d652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021d658:	0f 2f c1             	comiss %xmm1,%xmm0
ffffffff8021d65b:	0f 87 d8 fe ff ff    	ja     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d661:	0f 2e c1             	ucomiss %xmm1,%xmm0
ffffffff8021d664:	7a 02                	jp     ffffffff8021d668 <caml_ba_compare+0x198>
ffffffff8021d666:	74 1c                	je     ffffffff8021d684 <caml_ba_compare+0x1b4>
ffffffff8021d668:	c7 05 16 7a 01 00 01 	movl   $0x1,0x17a16(%rip)        # ffffffff80235088 <caml_compare_unordered>
ffffffff8021d66f:	00 00 00 
ffffffff8021d672:	0f 2e c0             	ucomiss %xmm0,%xmm0
ffffffff8021d675:	0f 8b ae 02 00 00    	jnp    ffffffff8021d929 <caml_ba_compare+0x459>
ffffffff8021d67b:	0f 2e c9             	ucomiss %xmm1,%xmm1
ffffffff8021d67e:	0f 8b 04 ff ff ff    	jnp    ffffffff8021d588 <caml_ba_compare+0xb8>
ffffffff8021d684:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d688:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021d68b:	0f 86 9f 01 00 00    	jbe    ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d691:	f3 0f 10 04 97       	movss  (%rdi,%rdx,4),%xmm0
ffffffff8021d696:	f3 0f 10 0c 91       	movss  (%rcx,%rdx,4),%xmm1
ffffffff8021d69b:	0f 2f c8             	comiss %xmm0,%xmm1
ffffffff8021d69e:	76 b8                	jbe    ffffffff8021d658 <caml_ba_compare+0x188>
ffffffff8021d6a0:	e9 e9 fe ff ff       	jmpq   ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d6a5:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021d6a9:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8021d6ad:	48 85 c0             	test   %rax,%rax
ffffffff8021d6b0:	0f 84 7a 01 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d6b6:	31 d2                	xor    %edx,%edx
ffffffff8021d6b8:	eb 19                	jmp    ffffffff8021d6d3 <caml_ba_compare+0x203>
ffffffff8021d6ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021d6c0:	0f 8f 73 fe ff ff    	jg     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d6c6:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d6ca:	48 39 c2             	cmp    %rax,%rdx
ffffffff8021d6cd:	0f 84 5d 01 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d6d3:	48 8b 3c d6          	mov    (%rsi,%rdx,8),%rdi
ffffffff8021d6d7:	48 39 3c d1          	cmp    %rdi,(%rcx,%rdx,8)
ffffffff8021d6db:	7d e3                	jge    ffffffff8021d6c0 <caml_ba_compare+0x1f0>
ffffffff8021d6dd:	e9 ac fe ff ff       	jmpq   ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d6e2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d6e6:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d6ea:	48 85 c0             	test   %rax,%rax
ffffffff8021d6ed:	0f 84 3d 01 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d6f3:	31 d2                	xor    %edx,%edx
ffffffff8021d6f5:	eb 1c                	jmp    ffffffff8021d713 <caml_ba_compare+0x243>
ffffffff8021d6f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021d6fe:	00 00 
ffffffff8021d700:	0f 8f 33 fe ff ff    	jg     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d706:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d70a:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021d70d:	0f 84 1d 01 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d713:	0f b6 34 11          	movzbl (%rcx,%rdx,1),%esi
ffffffff8021d717:	40 38 34 17          	cmp    %sil,(%rdi,%rdx,1)
ffffffff8021d71b:	7d e3                	jge    ffffffff8021d700 <caml_ba_compare+0x230>
ffffffff8021d71d:	e9 6c fe ff ff       	jmpq   ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d722:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021d726:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8021d72a:	48 85 c0             	test   %rax,%rax
ffffffff8021d72d:	0f 84 fd 00 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d733:	31 d2                	xor    %edx,%edx
ffffffff8021d735:	eb 1c                	jmp    ffffffff8021d753 <caml_ba_compare+0x283>
ffffffff8021d737:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021d73e:	00 00 
ffffffff8021d740:	0f 8f f3 fd ff ff    	jg     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d746:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d74a:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021d74d:	0f 84 dd 00 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d753:	8b 3c 96             	mov    (%rsi,%rdx,4),%edi
ffffffff8021d756:	39 3c 91             	cmp    %edi,(%rcx,%rdx,4)
ffffffff8021d759:	7d e5                	jge    ffffffff8021d740 <caml_ba_compare+0x270>
ffffffff8021d75b:	e9 2e fe ff ff       	jmpq   ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d760:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021d764:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8021d768:	48 85 c0             	test   %rax,%rax
ffffffff8021d76b:	0f 84 bf 00 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d771:	31 d2                	xor    %edx,%edx
ffffffff8021d773:	eb 16                	jmp    ffffffff8021d78b <caml_ba_compare+0x2bb>
ffffffff8021d775:	0f 1f 00             	nopl   (%rax)
ffffffff8021d778:	0f 87 bb fd ff ff    	ja     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d77e:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d782:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021d785:	0f 84 a5 00 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d78b:	0f b6 3c 16          	movzbl (%rsi,%rdx,1),%edi
ffffffff8021d78f:	40 38 3c 11          	cmp    %dil,(%rcx,%rdx,1)
ffffffff8021d793:	73 e3                	jae    ffffffff8021d778 <caml_ba_compare+0x2a8>
ffffffff8021d795:	e9 f4 fd ff ff       	jmpq   ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d79a:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021d79e:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8021d7a2:	48 85 c0             	test   %rax,%rax
ffffffff8021d7a5:	0f 84 85 00 00 00    	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d7ab:	31 d2                	xor    %edx,%edx
ffffffff8021d7ad:	eb 10                	jmp    ffffffff8021d7bf <caml_ba_compare+0x2ef>
ffffffff8021d7af:	90                   	nop
ffffffff8021d7b0:	0f 8f 83 fd ff ff    	jg     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d7b6:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d7ba:	48 39 c2             	cmp    %rax,%rdx
ffffffff8021d7bd:	74 71                	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d7bf:	0f b7 3c 56          	movzwl (%rsi,%rdx,2),%edi
ffffffff8021d7c3:	66 39 3c 51          	cmp    %di,(%rcx,%rdx,2)
ffffffff8021d7c7:	7d e7                	jge    ffffffff8021d7b0 <caml_ba_compare+0x2e0>
ffffffff8021d7c9:	e9 c0 fd ff ff       	jmpq   ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d7ce:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d7d2:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d7d6:	48 85 c0             	test   %rax,%rax
ffffffff8021d7d9:	74 55                	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d7db:	31 d2                	xor    %edx,%edx
ffffffff8021d7dd:	eb 10                	jmp    ffffffff8021d7ef <caml_ba_compare+0x31f>
ffffffff8021d7df:	90                   	nop
ffffffff8021d7e0:	0f 87 53 fd ff ff    	ja     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d7e6:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d7ea:	48 39 c2             	cmp    %rax,%rdx
ffffffff8021d7ed:	74 41                	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d7ef:	0f b6 34 11          	movzbl (%rcx,%rdx,1),%esi
ffffffff8021d7f3:	40 38 34 17          	cmp    %sil,(%rdi,%rdx,1)
ffffffff8021d7f7:	73 e7                	jae    ffffffff8021d7e0 <caml_ba_compare+0x310>
ffffffff8021d7f9:	e9 90 fd ff ff       	jmpq   ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d7fe:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d802:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d806:	48 85 c0             	test   %rax,%rax
ffffffff8021d809:	74 25                	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d80b:	31 d2                	xor    %edx,%edx
ffffffff8021d80d:	eb 10                	jmp    ffffffff8021d81f <caml_ba_compare+0x34f>
ffffffff8021d80f:	90                   	nop
ffffffff8021d810:	0f 87 23 fd ff ff    	ja     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d816:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021d81a:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021d81d:	74 11                	je     ffffffff8021d830 <caml_ba_compare+0x360>
ffffffff8021d81f:	0f b7 34 51          	movzwl (%rcx,%rdx,2),%esi
ffffffff8021d823:	66 39 34 57          	cmp    %si,(%rdi,%rdx,2)
ffffffff8021d827:	73 e7                	jae    ffffffff8021d810 <caml_ba_compare+0x340>
ffffffff8021d829:	e9 60 fd ff ff       	jmpq   ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d82e:	66 90                	xchg   %ax,%ax
ffffffff8021d830:	31 c0                	xor    %eax,%eax
ffffffff8021d832:	c3                   	retq   
ffffffff8021d833:	41 0f b6 c2          	movzbl %r10b,%eax
ffffffff8021d837:	41 80 fa 0c          	cmp    $0xc,%r10b
ffffffff8021d83b:	0f 87 ec 26 00 00    	ja     ffffffff8021ff2d <caml_ba_compare.cold>
ffffffff8021d841:	48 8d 15 0c 52 00 00 	lea    0x520c(%rip),%rdx        # ffffffff80222a54 <posix_signals+0x974>
ffffffff8021d848:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
ffffffff8021d84c:	48 01 d0             	add    %rdx,%rax
ffffffff8021d84f:	ff e0                	jmpq   *%rax
ffffffff8021d851:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d855:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d859:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d85e:	e9 42 fd ff ff       	jmpq   ffffffff8021d5a5 <caml_ba_compare+0xd5>
ffffffff8021d863:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021d867:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8021d86b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d870:	e9 41 fe ff ff       	jmpq   ffffffff8021d6b6 <caml_ba_compare+0x1e6>
ffffffff8021d875:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021d879:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8021d87d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d882:	e9 ac fe ff ff       	jmpq   ffffffff8021d733 <caml_ba_compare+0x263>
ffffffff8021d887:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d88b:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d88f:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d894:	e9 72 ff ff ff       	jmpq   ffffffff8021d80b <caml_ba_compare+0x33b>
ffffffff8021d899:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021d89d:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8021d8a1:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d8a6:	e9 00 ff ff ff       	jmpq   ffffffff8021d7ab <caml_ba_compare+0x2db>
ffffffff8021d8ab:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d8af:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d8b3:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d8b8:	e9 1e ff ff ff       	jmpq   ffffffff8021d7db <caml_ba_compare+0x30b>
ffffffff8021d8bd:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d8c1:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d8c5:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d8ca:	e9 24 fe ff ff       	jmpq   ffffffff8021d6f3 <caml_ba_compare+0x223>
ffffffff8021d8cf:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d8d3:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d8d7:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d8dc:	e9 fe fc ff ff       	jmpq   ffffffff8021d5df <caml_ba_compare+0x10f>
ffffffff8021d8e1:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d8e5:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d8e9:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d8ee:	e9 5b fd ff ff       	jmpq   ffffffff8021d64e <caml_ba_compare+0x17e>
ffffffff8021d8f3:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021d8f7:	48 8b 76 08          	mov    0x8(%rsi),%rsi
ffffffff8021d8fb:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021d900:	e9 6c fe ff ff       	jmpq   ffffffff8021d771 <caml_ba_compare+0x2a1>
ffffffff8021d905:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d909:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d90d:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff8021d912:	e9 c8 fc ff ff       	jmpq   ffffffff8021d5df <caml_ba_compare+0x10f>
ffffffff8021d917:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021d91b:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff8021d91f:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff8021d924:	e9 25 fd ff ff       	jmpq   ffffffff8021d64e <caml_ba_compare+0x17e>
ffffffff8021d929:	0f 84 0a fc ff ff    	je     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d92f:	e9 47 fd ff ff       	jmpq   ffffffff8021d67b <caml_ba_compare+0x1ab>
ffffffff8021d934:	0f 84 ff fb ff ff    	je     ffffffff8021d539 <caml_ba_compare+0x69>
ffffffff8021d93a:	e9 cf fc ff ff       	jmpq   ffffffff8021d60e <caml_ba_compare+0x13e>
ffffffff8021d93f:	0f 84 49 fc ff ff    	je     ffffffff8021d58e <caml_ba_compare+0xbe>
ffffffff8021d945:	e9 ce fc ff ff       	jmpq   ffffffff8021d618 <caml_ba_compare+0x148>
ffffffff8021d94a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8021d950 <caml_ba_update_proxy>:
ffffffff8021d950:	55                   	push   %rbp
ffffffff8021d951:	53                   	push   %rbx
ffffffff8021d952:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8021d956:	48 8b 6f 10          	mov    0x10(%rdi),%rbp
ffffffff8021d95a:	f7 c5 00 06 00 00    	test   $0x600,%ebp
ffffffff8021d960:	74 14                	je     ffffffff8021d976 <caml_ba_update_proxy+0x26>
ffffffff8021d962:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff8021d966:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021d969:	48 85 c0             	test   %rax,%rax
ffffffff8021d96c:	74 12                	je     ffffffff8021d980 <caml_ba_update_proxy+0x30>
ffffffff8021d96e:	48 89 46 18          	mov    %rax,0x18(%rsi)
ffffffff8021d972:	48 83 00 01          	addq   $0x1,(%rax)
ffffffff8021d976:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021d97a:	5b                   	pop    %rbx
ffffffff8021d97b:	5d                   	pop    %rbp
ffffffff8021d97c:	c3                   	retq   
ffffffff8021d97d:	0f 1f 00             	nopl   (%rax)
ffffffff8021d980:	bf 18 00 00 00       	mov    $0x18,%edi
ffffffff8021d985:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff8021d98a:	e8 f6 26 fe ff       	callq  ffffffff80200085 <malloc>
ffffffff8021d98f:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
ffffffff8021d994:	48 85 c0             	test   %rax,%rax
ffffffff8021d997:	74 66                	je     ffffffff8021d9ff <caml_ba_update_proxy+0xaf>
ffffffff8021d999:	48 8b 13             	mov    (%rbx),%rdx
ffffffff8021d99c:	48 c7 00 02 00 00 00 	movq   $0x2,(%rax)
ffffffff8021d9a3:	31 ff                	xor    %edi,%edi
ffffffff8021d9a5:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff8021d9a9:	f7 c5 00 04 00 00    	test   $0x400,%ebp
ffffffff8021d9af:	74 3b                	je     ffffffff8021d9ec <caml_ba_update_proxy+0x9c>
ffffffff8021d9b1:	4c 8b 43 08          	mov    0x8(%rbx),%r8
ffffffff8021d9b5:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8021d9ba:	4d 85 c0             	test   %r8,%r8
ffffffff8021d9bd:	7e 1a                	jle    ffffffff8021d9d9 <caml_ba_update_proxy+0x89>
ffffffff8021d9bf:	31 c9                	xor    %ecx,%ecx
ffffffff8021d9c1:	31 d2                	xor    %edx,%edx
ffffffff8021d9c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021d9c8:	83 c1 01             	add    $0x1,%ecx
ffffffff8021d9cb:	48 0f af 7c d3 20    	imul   0x20(%rbx,%rdx,8),%rdi
ffffffff8021d9d1:	48 63 d1             	movslq %ecx,%rdx
ffffffff8021d9d4:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8021d9d7:	7c ef                	jl     ffffffff8021d9c8 <caml_ba_update_proxy+0x78>
ffffffff8021d9d9:	40 0f b6 ed          	movzbl %bpl,%ebp
ffffffff8021d9dd:	48 8d 15 5c e4 00 00 	lea    0xe45c(%rip),%rdx        # ffffffff8022be40 <caml_ba_element_size>
ffffffff8021d9e4:	48 63 14 aa          	movslq (%rdx,%rbp,4),%rdx
ffffffff8021d9e8:	48 0f af fa          	imul   %rdx,%rdi
ffffffff8021d9ec:	48 89 43 18          	mov    %rax,0x18(%rbx)
ffffffff8021d9f0:	48 89 78 10          	mov    %rdi,0x10(%rax)
ffffffff8021d9f4:	48 89 46 18          	mov    %rax,0x18(%rsi)
ffffffff8021d9f8:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021d9fc:	5b                   	pop    %rbx
ffffffff8021d9fd:	5d                   	pop    %rbp
ffffffff8021d9fe:	c3                   	retq   
ffffffff8021d9ff:	e8 bc 9a fe ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff8021da04:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021da0b:	00 00 00 00 
ffffffff8021da0f:	90                   	nop

ffffffff8021da10 <caml_ba_finalize>:
ffffffff8021da10:	53                   	push   %rbx
ffffffff8021da11:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff8021da15:	48 8d 5f 08          	lea    0x8(%rdi),%rbx
ffffffff8021da19:	25 00 06 00 00       	and    $0x600,%eax
ffffffff8021da1e:	48 3d 00 02 00 00    	cmp    $0x200,%rax
ffffffff8021da24:	74 0a                	je     ffffffff8021da30 <caml_ba_finalize+0x20>
ffffffff8021da26:	5b                   	pop    %rbx
ffffffff8021da27:	c3                   	retq   
ffffffff8021da28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021da2f:	00 
ffffffff8021da30:	48 8b 53 18          	mov    0x18(%rbx),%rdx
ffffffff8021da34:	48 85 d2             	test   %rdx,%rdx
ffffffff8021da37:	74 27                	je     ffffffff8021da60 <caml_ba_finalize+0x50>
ffffffff8021da39:	48 83 2a 01          	subq   $0x1,(%rdx)
ffffffff8021da3d:	75 e7                	jne    ffffffff8021da26 <caml_ba_finalize+0x16>
ffffffff8021da3f:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8021da43:	48 8b 78 08          	mov    0x8(%rax),%rdi
ffffffff8021da47:	e8 53 26 fe ff       	callq  ffffffff8020009f <free>
ffffffff8021da4c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
ffffffff8021da50:	5b                   	pop    %rbx
ffffffff8021da51:	e9 49 26 fe ff       	jmpq   ffffffff8020009f <free>
ffffffff8021da56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021da5d:	00 00 00 
ffffffff8021da60:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8021da64:	5b                   	pop    %rbx
ffffffff8021da65:	e9 35 26 fe ff       	jmpq   ffffffff8020009f <free>
ffffffff8021da6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8021da70 <caml_ba_hash>:
ffffffff8021da70:	41 55                	push   %r13
ffffffff8021da72:	4c 8d 47 08          	lea    0x8(%rdi),%r8
ffffffff8021da76:	41 54                	push   %r12
ffffffff8021da78:	55                   	push   %rbp
ffffffff8021da79:	53                   	push   %rbx
ffffffff8021da7a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021da7e:	4d 8b 48 08          	mov    0x8(%r8),%r9
ffffffff8021da82:	41 0f b6 48 10       	movzbl 0x10(%r8),%ecx
ffffffff8021da87:	4d 85 c9             	test   %r9,%r9
ffffffff8021da8a:	7e 3c                	jle    ffffffff8021dac8 <caml_ba_hash+0x58>
ffffffff8021da8c:	31 d2                	xor    %edx,%edx
ffffffff8021da8e:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021da93:	31 c0                	xor    %eax,%eax
ffffffff8021da95:	0f 1f 00             	nopl   (%rax)
ffffffff8021da98:	83 c2 01             	add    $0x1,%edx
ffffffff8021da9b:	49 0f af 74 c0 20    	imul   0x20(%r8,%rax,8),%rsi
ffffffff8021daa1:	48 63 c2             	movslq %edx,%rax
ffffffff8021daa4:	4c 39 c8             	cmp    %r9,%rax
ffffffff8021daa7:	7c ef                	jl     ffffffff8021da98 <caml_ba_hash+0x28>
ffffffff8021daa9:	48 83 f9 0c          	cmp    $0xc,%rcx
ffffffff8021daad:	0f 87 7d 24 00 00    	ja     ffffffff8021ff30 <caml_ba_hash.cold>
ffffffff8021dab3:	48 8d 15 ce 4f 00 00 	lea    0x4fce(%rip),%rdx        # ffffffff80222a88 <posix_signals+0x9a8>
ffffffff8021daba:	48 63 04 8a          	movslq (%rdx,%rcx,4),%rax
ffffffff8021dabe:	48 01 d0             	add    %rdx,%rax
ffffffff8021dac1:	ff e0                	jmpq   *%rax
ffffffff8021dac3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021dac8:	48 83 f9 0c          	cmp    $0xc,%rcx
ffffffff8021dacc:	0f 87 65 24 00 00    	ja     ffffffff8021ff37 <caml_ba_hash.cold+0x7>
ffffffff8021dad2:	48 8d 15 e3 4f 00 00 	lea    0x4fe3(%rip),%rdx        # ffffffff80222abc <posix_signals+0x9dc>
ffffffff8021dad9:	48 63 04 8a          	movslq (%rdx,%rcx,4),%rax
ffffffff8021dadd:	48 01 d0             	add    %rdx,%rax
ffffffff8021dae0:	ff e0                	jmpq   *%rax
ffffffff8021dae2:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021dae6:	bd 02 00 00 00       	mov    $0x2,%ebp
ffffffff8021daeb:	31 ff                	xor    %edi,%edi
ffffffff8021daed:	31 db                	xor    %ebx,%ebx
ffffffff8021daef:	90                   	nop
ffffffff8021daf0:	f3 41 0f 10 04 9c    	movss  (%r12,%rbx,4),%xmm0
ffffffff8021daf6:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021dafa:	e8 11 28 00 00       	callq  ffffffff80220310 <caml_hash_mix_float>
ffffffff8021daff:	89 c7                	mov    %eax,%edi
ffffffff8021db01:	48 39 eb             	cmp    %rbp,%rbx
ffffffff8021db04:	7c ea                	jl     ffffffff8021daf0 <caml_ba_hash+0x80>
ffffffff8021db06:	89 f8                	mov    %edi,%eax
ffffffff8021db08:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021db0c:	5b                   	pop    %rbx
ffffffff8021db0d:	5d                   	pop    %rbp
ffffffff8021db0e:	41 5c                	pop    %r12
ffffffff8021db10:	41 5d                	pop    %r13
ffffffff8021db12:	c3                   	retq   
ffffffff8021db13:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021db17:	bd 02 00 00 00       	mov    $0x2,%ebp
ffffffff8021db1c:	31 ff                	xor    %edi,%edi
ffffffff8021db1e:	31 db                	xor    %ebx,%ebx
ffffffff8021db20:	f2 41 0f 10 04 dc    	movsd  (%r12,%rbx,8),%xmm0
ffffffff8021db26:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021db2a:	e8 51 27 00 00       	callq  ffffffff80220280 <caml_hash_mix_double>
ffffffff8021db2f:	89 c7                	mov    %eax,%edi
ffffffff8021db31:	48 39 dd             	cmp    %rbx,%rbp
ffffffff8021db34:	7f ea                	jg     ffffffff8021db20 <caml_ba_hash+0xb0>
ffffffff8021db36:	89 f8                	mov    %edi,%eax
ffffffff8021db38:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021db3c:	5b                   	pop    %rbx
ffffffff8021db3d:	5d                   	pop    %rbp
ffffffff8021db3e:	41 5c                	pop    %r12
ffffffff8021db40:	41 5d                	pop    %r13
ffffffff8021db42:	c3                   	retq   
ffffffff8021db43:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021db47:	31 ff                	xor    %edi,%edi
ffffffff8021db49:	41 0f b7 34 24       	movzwl (%r12),%esi
ffffffff8021db4e:	e8 7d 26 00 00       	callq  ffffffff802201d0 <caml_hash_mix_uint32>
ffffffff8021db53:	89 c0                	mov    %eax,%eax
ffffffff8021db55:	eb 53                	jmp    ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021db57:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021db5b:	31 ff                	xor    %edi,%edi
ffffffff8021db5d:	f2 0f 10 00          	movsd  (%rax),%xmm0
ffffffff8021db61:	e8 1a 27 00 00       	callq  ffffffff80220280 <caml_hash_mix_double>
ffffffff8021db66:	89 c7                	mov    %eax,%edi
ffffffff8021db68:	89 f8                	mov    %edi,%eax
ffffffff8021db6a:	eb cc                	jmp    ffffffff8021db38 <caml_ba_hash+0xc8>
ffffffff8021db6c:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021db70:	31 ff                	xor    %edi,%edi
ffffffff8021db72:	48 8b 30             	mov    (%rax),%rsi
ffffffff8021db75:	e8 b6 26 00 00       	callq  ffffffff80220230 <caml_hash_mix_int64>
ffffffff8021db7a:	89 c7                	mov    %eax,%edi
ffffffff8021db7c:	89 f8                	mov    %edi,%eax
ffffffff8021db7e:	eb 2a                	jmp    ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021db80:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021db84:	31 ff                	xor    %edi,%edi
ffffffff8021db86:	48 8b 30             	mov    (%rax),%rsi
ffffffff8021db89:	e8 62 26 00 00       	callq  ffffffff802201f0 <caml_hash_mix_intnat>
ffffffff8021db8e:	89 c7                	mov    %eax,%edi
ffffffff8021db90:	89 f8                	mov    %edi,%eax
ffffffff8021db92:	eb 16                	jmp    ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021db94:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021db98:	31 f6                	xor    %esi,%esi
ffffffff8021db9a:	31 ff                	xor    %edi,%edi
ffffffff8021db9c:	41 0f b6 04 24       	movzbl (%r12),%eax
ffffffff8021dba1:	09 c6                	or     %eax,%esi
ffffffff8021dba3:	e8 28 26 00 00       	callq  ffffffff802201d0 <caml_hash_mix_uint32>
ffffffff8021dba8:	89 c0                	mov    %eax,%eax
ffffffff8021dbaa:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021dbae:	5b                   	pop    %rbx
ffffffff8021dbaf:	5d                   	pop    %rbp
ffffffff8021dbb0:	41 5c                	pop    %r12
ffffffff8021dbb2:	41 5d                	pop    %r13
ffffffff8021dbb4:	c3                   	retq   
ffffffff8021dbb5:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021dbb9:	31 ff                	xor    %edi,%edi
ffffffff8021dbbb:	8b 30                	mov    (%rax),%esi
ffffffff8021dbbd:	e8 0e 26 00 00       	callq  ffffffff802201d0 <caml_hash_mix_uint32>
ffffffff8021dbc2:	89 c7                	mov    %eax,%edi
ffffffff8021dbc4:	89 f8                	mov    %edi,%eax
ffffffff8021dbc6:	eb e2                	jmp    ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021dbc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021dbcf:	00 
ffffffff8021dbd0:	48 81 fe 00 01 00 00 	cmp    $0x100,%rsi
ffffffff8021dbd7:	bb 00 01 00 00       	mov    $0x100,%ebx
ffffffff8021dbdc:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021dbe0:	48 0f 4e de          	cmovle %rsi,%rbx
ffffffff8021dbe4:	31 ff                	xor    %edi,%edi
ffffffff8021dbe6:	48 89 dd             	mov    %rbx,%rbp
ffffffff8021dbe9:	83 e5 03             	and    $0x3,%ebp
ffffffff8021dbec:	48 83 fe 03          	cmp    $0x3,%rsi
ffffffff8021dbf0:	7e 26                	jle    ffffffff8021dc18 <caml_ba_hash+0x1a8>
ffffffff8021dbf2:	41 bd 04 00 00 00    	mov    $0x4,%r13d
ffffffff8021dbf8:	4d 29 e5             	sub    %r12,%r13
ffffffff8021dbfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021dc00:	41 8b 34 24          	mov    (%r12),%esi
ffffffff8021dc04:	49 83 c4 04          	add    $0x4,%r12
ffffffff8021dc08:	e8 c3 25 00 00       	callq  ffffffff802201d0 <caml_hash_mix_uint32>
ffffffff8021dc0d:	89 c7                	mov    %eax,%edi
ffffffff8021dc0f:	4b 8d 04 2c          	lea    (%r12,%r13,1),%rax
ffffffff8021dc13:	48 39 d8             	cmp    %rbx,%rax
ffffffff8021dc16:	7e e8                	jle    ffffffff8021dc00 <caml_ba_hash+0x190>
ffffffff8021dc18:	48 83 fd 02          	cmp    $0x2,%rbp
ffffffff8021dc1c:	0f 84 ac 01 00 00    	je     ffffffff8021ddce <caml_ba_hash+0x35e>
ffffffff8021dc22:	48 83 fd 03          	cmp    $0x3,%rbp
ffffffff8021dc26:	0f 84 87 01 00 00    	je     ffffffff8021ddb3 <caml_ba_hash+0x343>
ffffffff8021dc2c:	48 83 fd 01          	cmp    $0x1,%rbp
ffffffff8021dc30:	0f 84 b8 01 00 00    	je     ffffffff8021ddee <caml_ba_hash+0x37e>
ffffffff8021dc36:	89 f8                	mov    %edi,%eax
ffffffff8021dc38:	e9 6d ff ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021dc3d:	0f 1f 00             	nopl   (%rax)
ffffffff8021dc40:	48 83 fe 40          	cmp    $0x40,%rsi
ffffffff8021dc44:	bd 40 00 00 00       	mov    $0x40,%ebp
ffffffff8021dc49:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021dc4d:	48 0f 4e ee          	cmovle %rsi,%rbp
ffffffff8021dc51:	48 85 f6             	test   %rsi,%rsi
ffffffff8021dc54:	0f 8e 86 01 00 00    	jle    ffffffff8021dde0 <caml_ba_hash+0x370>
ffffffff8021dc5a:	31 ff                	xor    %edi,%edi
ffffffff8021dc5c:	31 db                	xor    %ebx,%ebx
ffffffff8021dc5e:	66 90                	xchg   %ax,%ax
ffffffff8021dc60:	49 8b 34 dc          	mov    (%r12,%rbx,8),%rsi
ffffffff8021dc64:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021dc68:	e8 83 25 00 00       	callq  ffffffff802201f0 <caml_hash_mix_intnat>
ffffffff8021dc6d:	89 c7                	mov    %eax,%edi
ffffffff8021dc6f:	48 39 eb             	cmp    %rbp,%rbx
ffffffff8021dc72:	7c ec                	jl     ffffffff8021dc60 <caml_ba_hash+0x1f0>
ffffffff8021dc74:	89 f8                	mov    %edi,%eax
ffffffff8021dc76:	e9 2f ff ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021dc7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021dc80:	48 81 fe 80 00 00 00 	cmp    $0x80,%rsi
ffffffff8021dc87:	bb 80 00 00 00       	mov    $0x80,%ebx
ffffffff8021dc8c:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021dc90:	48 0f 4e de          	cmovle %rsi,%rbx
ffffffff8021dc94:	48 89 dd             	mov    %rbx,%rbp
ffffffff8021dc97:	83 e5 01             	and    $0x1,%ebp
ffffffff8021dc9a:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff8021dc9e:	0f 8e 35 01 00 00    	jle    ffffffff8021ddd9 <caml_ba_hash+0x369>
ffffffff8021dca4:	41 bd 02 00 00 00    	mov    $0x2,%r13d
ffffffff8021dcaa:	31 ff                	xor    %edi,%edi
ffffffff8021dcac:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021dcb0:	41 8b 34 24          	mov    (%r12),%esi
ffffffff8021dcb4:	49 83 c5 02          	add    $0x2,%r13
ffffffff8021dcb8:	49 83 c4 04          	add    $0x4,%r12
ffffffff8021dcbc:	e8 0f 25 00 00       	callq  ffffffff802201d0 <caml_hash_mix_uint32>
ffffffff8021dcc1:	89 c7                	mov    %eax,%edi
ffffffff8021dcc3:	49 39 dd             	cmp    %rbx,%r13
ffffffff8021dcc6:	7e e8                	jle    ffffffff8021dcb0 <caml_ba_hash+0x240>
ffffffff8021dcc8:	89 f8                	mov    %edi,%eax
ffffffff8021dcca:	48 85 ed             	test   %rbp,%rbp
ffffffff8021dccd:	0f 84 d7 fe ff ff    	je     ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021dcd3:	e9 71 fe ff ff       	jmpq   ffffffff8021db49 <caml_ba_hash+0xd9>
ffffffff8021dcd8:	48 01 f6             	add    %rsi,%rsi
ffffffff8021dcdb:	48 83 fe 40          	cmp    $0x40,%rsi
ffffffff8021dcdf:	bd 40 00 00 00       	mov    $0x40,%ebp
ffffffff8021dce4:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021dce8:	48 0f 4e ee          	cmovle %rsi,%rbp
ffffffff8021dcec:	31 c0                	xor    %eax,%eax
ffffffff8021dcee:	48 85 f6             	test   %rsi,%rsi
ffffffff8021dcf1:	0f 8f f4 fd ff ff    	jg     ffffffff8021daeb <caml_ba_hash+0x7b>
ffffffff8021dcf7:	e9 ae fe ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021dcfc:	48 01 f6             	add    %rsi,%rsi
ffffffff8021dcff:	48 83 fe 20          	cmp    $0x20,%rsi
ffffffff8021dd03:	bd 20 00 00 00       	mov    $0x20,%ebp
ffffffff8021dd08:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021dd0c:	48 0f 4e ee          	cmovle %rsi,%rbp
ffffffff8021dd10:	31 c0                	xor    %eax,%eax
ffffffff8021dd12:	48 85 f6             	test   %rsi,%rsi
ffffffff8021dd15:	0f 8f 01 fe ff ff    	jg     ffffffff8021db1c <caml_ba_hash+0xac>
ffffffff8021dd1b:	e9 8a fe ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021dd20:	48 83 fe 40          	cmp    $0x40,%rsi
ffffffff8021dd24:	bd 40 00 00 00       	mov    $0x40,%ebp
ffffffff8021dd29:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021dd2d:	48 0f 4e ee          	cmovle %rsi,%rbp
ffffffff8021dd31:	48 85 f6             	test   %rsi,%rsi
ffffffff8021dd34:	0f 8e 98 00 00 00    	jle    ffffffff8021ddd2 <caml_ba_hash+0x362>
ffffffff8021dd3a:	31 ff                	xor    %edi,%edi
ffffffff8021dd3c:	31 db                	xor    %ebx,%ebx
ffffffff8021dd3e:	66 90                	xchg   %ax,%ax
ffffffff8021dd40:	41 8b 34 9c          	mov    (%r12,%rbx,4),%esi
ffffffff8021dd44:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021dd48:	e8 83 24 00 00       	callq  ffffffff802201d0 <caml_hash_mix_uint32>
ffffffff8021dd4d:	89 c7                	mov    %eax,%edi
ffffffff8021dd4f:	48 39 eb             	cmp    %rbp,%rbx
ffffffff8021dd52:	7c ec                	jl     ffffffff8021dd40 <caml_ba_hash+0x2d0>
ffffffff8021dd54:	89 f8                	mov    %edi,%eax
ffffffff8021dd56:	e9 4f fe ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021dd5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021dd60:	48 83 fe 20          	cmp    $0x20,%rsi
ffffffff8021dd64:	bd 20 00 00 00       	mov    $0x20,%ebp
ffffffff8021dd69:	4c 8b 67 08          	mov    0x8(%rdi),%r12
ffffffff8021dd6d:	48 0f 4e ee          	cmovle %rsi,%rbp
ffffffff8021dd71:	48 85 f6             	test   %rsi,%rsi
ffffffff8021dd74:	7e 71                	jle    ffffffff8021dde7 <caml_ba_hash+0x377>
ffffffff8021dd76:	31 ff                	xor    %edi,%edi
ffffffff8021dd78:	31 db                	xor    %ebx,%ebx
ffffffff8021dd7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021dd80:	49 8b 34 dc          	mov    (%r12,%rbx,8),%rsi
ffffffff8021dd84:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021dd88:	e8 a3 24 00 00       	callq  ffffffff80220230 <caml_hash_mix_int64>
ffffffff8021dd8d:	89 c7                	mov    %eax,%edi
ffffffff8021dd8f:	48 39 eb             	cmp    %rbp,%rbx
ffffffff8021dd92:	7c ec                	jl     ffffffff8021dd80 <caml_ba_hash+0x310>
ffffffff8021dd94:	89 f8                	mov    %edi,%eax
ffffffff8021dd96:	e9 0f fe ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021dd9b:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021dd9f:	31 ff                	xor    %edi,%edi
ffffffff8021dda1:	f3 0f 10 00          	movss  (%rax),%xmm0
ffffffff8021dda5:	e8 66 25 00 00       	callq  ffffffff80220310 <caml_hash_mix_float>
ffffffff8021ddaa:	89 c7                	mov    %eax,%edi
ffffffff8021ddac:	89 f8                	mov    %edi,%eax
ffffffff8021ddae:	e9 55 fd ff ff       	jmpq   ffffffff8021db08 <caml_ba_hash+0x98>
ffffffff8021ddb3:	41 0f b6 74 24 02    	movzbl 0x2(%r12),%esi
ffffffff8021ddb9:	89 f0                	mov    %esi,%eax
ffffffff8021ddbb:	c1 e0 10             	shl    $0x10,%eax
ffffffff8021ddbe:	41 0f b6 74 24 01    	movzbl 0x1(%r12),%esi
ffffffff8021ddc4:	c1 e6 08             	shl    $0x8,%esi
ffffffff8021ddc7:	09 c6                	or     %eax,%esi
ffffffff8021ddc9:	e9 ce fd ff ff       	jmpq   ffffffff8021db9c <caml_ba_hash+0x12c>
ffffffff8021ddce:	31 c0                	xor    %eax,%eax
ffffffff8021ddd0:	eb ec                	jmp    ffffffff8021ddbe <caml_ba_hash+0x34e>
ffffffff8021ddd2:	31 c0                	xor    %eax,%eax
ffffffff8021ddd4:	e9 d1 fd ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021ddd9:	31 ff                	xor    %edi,%edi
ffffffff8021dddb:	e9 e8 fe ff ff       	jmpq   ffffffff8021dcc8 <caml_ba_hash+0x258>
ffffffff8021dde0:	31 c0                	xor    %eax,%eax
ffffffff8021dde2:	e9 c3 fd ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021dde7:	31 c0                	xor    %eax,%eax
ffffffff8021dde9:	e9 bc fd ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021ddee:	31 f6                	xor    %esi,%esi
ffffffff8021ddf0:	e9 a7 fd ff ff       	jmpq   ffffffff8021db9c <caml_ba_hash+0x12c>
ffffffff8021ddf5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021ddfc:	00 00 00 00 

ffffffff8021de00 <caml_ba_serialize_longarray>:
ffffffff8021de00:	48 85 f6             	test   %rsi,%rsi
ffffffff8021de03:	7e 75                	jle    ffffffff8021de7a <caml_ba_serialize_longarray+0x7a>
ffffffff8021de05:	41 54                	push   %r12
ffffffff8021de07:	49 89 fc             	mov    %rdi,%r12
ffffffff8021de0a:	55                   	push   %rbp
ffffffff8021de0b:	48 89 f5             	mov    %rsi,%rbp
ffffffff8021de0e:	53                   	push   %rbx
ffffffff8021de0f:	31 db                	xor    %ebx,%ebx
ffffffff8021de11:	eb 16                	jmp    ffffffff8021de29 <caml_ba_serialize_longarray+0x29>
ffffffff8021de13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021de18:	48 39 d0             	cmp    %rdx,%rax
ffffffff8021de1b:	7c 15                	jl     ffffffff8021de32 <caml_ba_serialize_longarray+0x32>
ffffffff8021de1d:	48 8d 43 01          	lea    0x1(%rbx),%rax
ffffffff8021de21:	48 39 c5             	cmp    %rax,%rbp
ffffffff8021de24:	74 2a                	je     ffffffff8021de50 <caml_ba_serialize_longarray+0x50>
ffffffff8021de26:	48 89 c3             	mov    %rax,%rbx
ffffffff8021de29:	49 8b 04 dc          	mov    (%r12,%rbx,8),%rax
ffffffff8021de2d:	48 39 c8             	cmp    %rcx,%rax
ffffffff8021de30:	7e e6                	jle    ffffffff8021de18 <caml_ba_serialize_longarray+0x18>
ffffffff8021de32:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8021de37:	e8 14 7f fe ff       	callq  ffffffff80205d50 <caml_serialize_int_1>
ffffffff8021de3c:	5b                   	pop    %rbx
ffffffff8021de3d:	48 89 ee             	mov    %rbp,%rsi
ffffffff8021de40:	4c 89 e7             	mov    %r12,%rdi
ffffffff8021de43:	5d                   	pop    %rbp
ffffffff8021de44:	41 5c                	pop    %r12
ffffffff8021de46:	e9 e5 81 fe ff       	jmpq   ffffffff80206030 <caml_serialize_block_8>
ffffffff8021de4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021de50:	31 ff                	xor    %edi,%edi
ffffffff8021de52:	31 ed                	xor    %ebp,%ebp
ffffffff8021de54:	e8 f7 7e fe ff       	callq  ffffffff80205d50 <caml_serialize_int_1>
ffffffff8021de59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021de60:	41 8b 3c ec          	mov    (%r12,%rbp,8),%edi
ffffffff8021de64:	e8 97 7f fe ff       	callq  ffffffff80205e00 <caml_serialize_int_4>
ffffffff8021de69:	48 89 e8             	mov    %rbp,%rax
ffffffff8021de6c:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8021de70:	48 39 c3             	cmp    %rax,%rbx
ffffffff8021de73:	75 eb                	jne    ffffffff8021de60 <caml_ba_serialize_longarray+0x60>
ffffffff8021de75:	5b                   	pop    %rbx
ffffffff8021de76:	5d                   	pop    %rbp
ffffffff8021de77:	41 5c                	pop    %r12
ffffffff8021de79:	c3                   	retq   
ffffffff8021de7a:	31 ff                	xor    %edi,%edi
ffffffff8021de7c:	e9 cf 7e fe ff       	jmpq   ffffffff80205d50 <caml_serialize_int_1>
ffffffff8021de81:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021de88:	00 00 00 00 
ffffffff8021de8c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8021de90 <caml_ba_serialize>:
ffffffff8021de90:	41 56                	push   %r14
ffffffff8021de92:	41 55                	push   %r13
ffffffff8021de94:	49 89 f5             	mov    %rsi,%r13
ffffffff8021de97:	41 54                	push   %r12
ffffffff8021de99:	49 89 d4             	mov    %rdx,%r12
ffffffff8021de9c:	55                   	push   %rbp
ffffffff8021de9d:	48 89 fd             	mov    %rdi,%rbp
ffffffff8021dea0:	53                   	push   %rbx
ffffffff8021dea1:	48 8d 5f 08          	lea    0x8(%rdi),%rbx
ffffffff8021dea5:	8b 7b 08             	mov    0x8(%rbx),%edi
ffffffff8021dea8:	e8 53 7f fe ff       	callq  ffffffff80205e00 <caml_serialize_int_4>
ffffffff8021dead:	8b 7b 10             	mov    0x10(%rbx),%edi
ffffffff8021deb0:	81 e7 ff 01 00 00    	and    $0x1ff,%edi
ffffffff8021deb6:	e8 45 7f fe ff       	callq  ffffffff80205e00 <caml_serialize_int_4>
ffffffff8021debb:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
ffffffff8021dec0:	0f 8e fa 00 00 00    	jle    ffffffff8021dfc0 <caml_ba_serialize+0x130>
ffffffff8021dec6:	45 31 f6             	xor    %r14d,%r14d
ffffffff8021dec9:	31 c0                	xor    %eax,%eax
ffffffff8021decb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021ded0:	48 8b 7c c3 20       	mov    0x20(%rbx,%rax,8),%rdi
ffffffff8021ded5:	41 83 c6 01          	add    $0x1,%r14d
ffffffff8021ded9:	e8 22 7f fe ff       	callq  ffffffff80205e00 <caml_serialize_int_4>
ffffffff8021dede:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
ffffffff8021dee2:	49 63 c6             	movslq %r14d,%rax
ffffffff8021dee5:	48 39 c8             	cmp    %rcx,%rax
ffffffff8021dee8:	7c e6                	jl     ffffffff8021ded0 <caml_ba_serialize+0x40>
ffffffff8021deea:	48 85 c9             	test   %rcx,%rcx
ffffffff8021deed:	0f 8e cd 00 00 00    	jle    ffffffff8021dfc0 <caml_ba_serialize+0x130>
ffffffff8021def3:	31 d2                	xor    %edx,%edx
ffffffff8021def5:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021defa:	31 c0                	xor    %eax,%eax
ffffffff8021defc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021df00:	83 c2 01             	add    $0x1,%edx
ffffffff8021df03:	48 0f af 74 c3 20    	imul   0x20(%rbx,%rax,8),%rsi
ffffffff8021df09:	48 63 c2             	movslq %edx,%rax
ffffffff8021df0c:	48 39 c1             	cmp    %rax,%rcx
ffffffff8021df0f:	7f ef                	jg     ffffffff8021df00 <caml_ba_serialize+0x70>
ffffffff8021df11:	0f b6 43 10          	movzbl 0x10(%rbx),%eax
ffffffff8021df15:	48 83 f8 0c          	cmp    $0xc,%rax
ffffffff8021df19:	77 23                	ja     ffffffff8021df3e <caml_ba_serialize+0xae>
ffffffff8021df1b:	48 8d 15 ce 4b 00 00 	lea    0x4bce(%rip),%rdx        # ffffffff80222af0 <posix_signals+0xa10>
ffffffff8021df22:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
ffffffff8021df26:	48 01 d0             	add    %rdx,%rax
ffffffff8021df29:	ff e0                	jmpq   *%rax
ffffffff8021df2b:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
ffffffff8021df2f:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
ffffffff8021df34:	ba 00 00 00 80       	mov    $0x80000000,%edx
ffffffff8021df39:	e8 c2 fe ff ff       	callq  ffffffff8021de00 <caml_ba_serialize_longarray>
ffffffff8021df3e:	48 8b 43 08          	mov    0x8(%rbx),%rax
ffffffff8021df42:	48 8d 04 85 10 00 00 	lea    0x10(,%rax,4),%rax
ffffffff8021df49:	00 
ffffffff8021df4a:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff8021df4e:	48 8b 43 08          	mov    0x8(%rbx),%rax
ffffffff8021df52:	5b                   	pop    %rbx
ffffffff8021df53:	5d                   	pop    %rbp
ffffffff8021df54:	48 8d 04 c5 20 00 00 	lea    0x20(,%rax,8),%rax
ffffffff8021df5b:	00 
ffffffff8021df5c:	49 89 04 24          	mov    %rax,(%r12)
ffffffff8021df60:	41 5c                	pop    %r12
ffffffff8021df62:	41 5d                	pop    %r13
ffffffff8021df64:	41 5e                	pop    %r14
ffffffff8021df66:	c3                   	retq   
ffffffff8021df67:	48 01 f6             	add    %rsi,%rsi
ffffffff8021df6a:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
ffffffff8021df6e:	e8 bd 80 fe ff       	callq  ffffffff80206030 <caml_serialize_block_8>
ffffffff8021df73:	eb c9                	jmp    ffffffff8021df3e <caml_ba_serialize+0xae>
ffffffff8021df75:	48 01 f6             	add    %rsi,%rsi
ffffffff8021df78:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
ffffffff8021df7c:	e8 ff 7f fe ff       	callq  ffffffff80205f80 <caml_serialize_block_4>
ffffffff8021df81:	eb bb                	jmp    ffffffff8021df3e <caml_ba_serialize+0xae>
ffffffff8021df83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021df88:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
ffffffff8021df8c:	e8 1f 7f fe ff       	callq  ffffffff80205eb0 <caml_serialize_block_1>
ffffffff8021df91:	eb ab                	jmp    ffffffff8021df3e <caml_ba_serialize+0xae>
ffffffff8021df93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021df98:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
ffffffff8021df9c:	e8 5f 7f fe ff       	callq  ffffffff80205f00 <caml_serialize_block_2>
ffffffff8021dfa1:	eb 9b                	jmp    ffffffff8021df3e <caml_ba_serialize+0xae>
ffffffff8021dfa3:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
ffffffff8021dfa7:	b9 ff ff ff 3f       	mov    $0x3fffffff,%ecx
ffffffff8021dfac:	48 c7 c2 00 00 00 c0 	mov    $0xffffffffc0000000,%rdx
ffffffff8021dfb3:	e8 48 fe ff ff       	callq  ffffffff8021de00 <caml_ba_serialize_longarray>
ffffffff8021dfb8:	eb 84                	jmp    ffffffff8021df3e <caml_ba_serialize+0xae>
ffffffff8021dfba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021dfc0:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8021dfc5:	e9 47 ff ff ff       	jmpq   ffffffff8021df11 <caml_ba_serialize+0x81>
ffffffff8021dfca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8021dfd0 <caml_ba_deserialize>:
ffffffff8021dfd0:	41 55                	push   %r13
ffffffff8021dfd2:	41 54                	push   %r12
ffffffff8021dfd4:	55                   	push   %rbp
ffffffff8021dfd5:	53                   	push   %rbx
ffffffff8021dfd6:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021dfd9:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021dfdd:	e8 6e c8 fe ff       	callq  ffffffff8020a850 <caml_deserialize_uint_4>
ffffffff8021dfe2:	89 c7                	mov    %eax,%edi
ffffffff8021dfe4:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
ffffffff8021dfe8:	83 f8 10             	cmp    $0x10,%eax
ffffffff8021dfeb:	0f 87 93 01 00 00    	ja     ffffffff8021e184 <caml_ba_deserialize+0x1b4>
ffffffff8021dff1:	e8 5a c8 fe ff       	callq  ffffffff8020a850 <caml_deserialize_uint_4>
ffffffff8021dff6:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
ffffffff8021dffd:	00 
ffffffff8021dffe:	0d 00 02 00 00       	or     $0x200,%eax
ffffffff8021e003:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
ffffffff8021e008:	48 89 43 10          	mov    %rax,0x10(%rbx)
ffffffff8021e00c:	0f 8e 47 01 00 00    	jle    ffffffff8021e159 <caml_ba_deserialize+0x189>
ffffffff8021e012:	45 31 e4             	xor    %r12d,%r12d
ffffffff8021e015:	31 ed                	xor    %ebp,%ebp
ffffffff8021e017:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021e01e:	00 00 
ffffffff8021e020:	e8 2b c8 fe ff       	callq  ffffffff8020a850 <caml_deserialize_uint_4>
ffffffff8021e025:	41 83 c4 01          	add    $0x1,%r12d
ffffffff8021e029:	89 c0                	mov    %eax,%eax
ffffffff8021e02b:	48 89 44 eb 20       	mov    %rax,0x20(%rbx,%rbp,8)
ffffffff8021e030:	48 8b 73 08          	mov    0x8(%rbx),%rsi
ffffffff8021e034:	49 63 ec             	movslq %r12d,%rbp
ffffffff8021e037:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8021e03a:	7c e4                	jl     ffffffff8021e020 <caml_ba_deserialize+0x50>
ffffffff8021e03c:	48 85 f6             	test   %rsi,%rsi
ffffffff8021e03f:	0f 8e 10 01 00 00    	jle    ffffffff8021e155 <caml_ba_deserialize+0x185>
ffffffff8021e045:	4c 8b 63 20          	mov    0x20(%rbx),%r12
ffffffff8021e049:	31 c9                	xor    %ecx,%ecx
ffffffff8021e04b:	eb 14                	jmp    ffffffff8021e061 <caml_ba_deserialize+0x91>
ffffffff8021e04d:	0f 1f 00             	nopl   (%rax)
ffffffff8021e050:	4c 89 e0             	mov    %r12,%rax
ffffffff8021e053:	48 f7 64 d3 20       	mulq   0x20(%rbx,%rdx,8)
ffffffff8021e058:	49 89 c4             	mov    %rax,%r12
ffffffff8021e05b:	0f 80 17 01 00 00    	jo     ffffffff8021e178 <caml_ba_deserialize+0x1a8>
ffffffff8021e061:	83 c1 01             	add    $0x1,%ecx
ffffffff8021e064:	48 63 d1             	movslq %ecx,%rdx
ffffffff8021e067:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8021e06a:	7f e4                	jg     ffffffff8021e050 <caml_ba_deserialize+0x80>
ffffffff8021e06c:	0f b6 6b 10          	movzbl 0x10(%rbx),%ebp
ffffffff8021e070:	48 83 fd 0c          	cmp    $0xc,%rbp
ffffffff8021e074:	0f 8f 22 01 00 00    	jg     ffffffff8021e19c <caml_ba_deserialize+0x1cc>
ffffffff8021e07a:	48 8d 05 bf dd 00 00 	lea    0xddbf(%rip),%rax        # ffffffff8022be40 <caml_ba_element_size>
ffffffff8021e081:	48 63 3c a8          	movslq (%rax,%rbp,4),%rdi
ffffffff8021e085:	48 89 f8             	mov    %rdi,%rax
ffffffff8021e088:	49 f7 e4             	mul    %r12
ffffffff8021e08b:	48 89 c7             	mov    %rax,%rdi
ffffffff8021e08e:	0f 80 e4 00 00 00    	jo     ffffffff8021e178 <caml_ba_deserialize+0x1a8>
ffffffff8021e094:	e8 ec 1f fe ff       	callq  ffffffff80200085 <malloc>
ffffffff8021e099:	48 89 03             	mov    %rax,(%rbx)
ffffffff8021e09c:	49 89 c5             	mov    %rax,%r13
ffffffff8021e09f:	48 85 c0             	test   %rax,%rax
ffffffff8021e0a2:	0f 84 e8 00 00 00    	je     ffffffff8021e190 <caml_ba_deserialize+0x1c0>
ffffffff8021e0a8:	48 83 fd 0c          	cmp    $0xc,%rbp
ffffffff8021e0ac:	77 1c                	ja     ffffffff8021e0ca <caml_ba_deserialize+0xfa>
ffffffff8021e0ae:	48 8d 15 6f 4a 00 00 	lea    0x4a6f(%rip),%rdx        # ffffffff80222b24 <posix_signals+0xa44>
ffffffff8021e0b5:	48 63 04 aa          	movslq (%rdx,%rbp,4),%rax
ffffffff8021e0b9:	48 01 d0             	add    %rdx,%rax
ffffffff8021e0bc:	ff e0                	jmpq   *%rax
ffffffff8021e0be:	4b 8d 34 24          	lea    (%r12,%r12,1),%rsi
ffffffff8021e0c2:	4c 89 ef             	mov    %r13,%rdi
ffffffff8021e0c5:	e8 56 c9 fe ff       	callq  ffffffff8020aa20 <caml_deserialize_block_8>
ffffffff8021e0ca:	48 8b 43 08          	mov    0x8(%rbx),%rax
ffffffff8021e0ce:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021e0d2:	5b                   	pop    %rbx
ffffffff8021e0d3:	5d                   	pop    %rbp
ffffffff8021e0d4:	48 8d 04 c5 20 00 00 	lea    0x20(,%rax,8),%rax
ffffffff8021e0db:	00 
ffffffff8021e0dc:	41 5c                	pop    %r12
ffffffff8021e0de:	41 5d                	pop    %r13
ffffffff8021e0e0:	c3                   	retq   
ffffffff8021e0e1:	4c 89 e6             	mov    %r12,%rsi
ffffffff8021e0e4:	4c 89 ef             	mov    %r13,%rdi
ffffffff8021e0e7:	e8 34 c9 fe ff       	callq  ffffffff8020aa20 <caml_deserialize_block_8>
ffffffff8021e0ec:	eb dc                	jmp    ffffffff8021e0ca <caml_ba_deserialize+0xfa>
ffffffff8021e0ee:	4c 89 e6             	mov    %r12,%rsi
ffffffff8021e0f1:	4c 89 ef             	mov    %r13,%rdi
ffffffff8021e0f4:	e8 47 c8 fe ff       	callq  ffffffff8020a940 <caml_deserialize_block_1>
ffffffff8021e0f9:	eb cf                	jmp    ffffffff8021e0ca <caml_ba_deserialize+0xfa>
ffffffff8021e0fb:	4c 89 e6             	mov    %r12,%rsi
ffffffff8021e0fe:	4c 89 ef             	mov    %r13,%rdi
ffffffff8021e101:	e8 6a c8 fe ff       	callq  ffffffff8020a970 <caml_deserialize_block_2>
ffffffff8021e106:	eb c2                	jmp    ffffffff8021e0ca <caml_ba_deserialize+0xfa>
ffffffff8021e108:	e8 a3 c6 fe ff       	callq  ffffffff8020a7b0 <caml_deserialize_uint_1>
ffffffff8021e10d:	85 c0                	test   %eax,%eax
ffffffff8021e10f:	75 d0                	jne    ffffffff8021e0e1 <caml_ba_deserialize+0x111>
ffffffff8021e111:	31 ed                	xor    %ebp,%ebp
ffffffff8021e113:	4d 85 e4             	test   %r12,%r12
ffffffff8021e116:	7e b2                	jle    ffffffff8021e0ca <caml_ba_deserialize+0xfa>
ffffffff8021e118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021e11f:	00 
ffffffff8021e120:	e8 6b c7 fe ff       	callq  ffffffff8020a890 <caml_deserialize_sint_4>
ffffffff8021e125:	48 98                	cltq   
ffffffff8021e127:	49 89 44 ed 00       	mov    %rax,0x0(%r13,%rbp,8)
ffffffff8021e12c:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8021e130:	49 39 ec             	cmp    %rbp,%r12
ffffffff8021e133:	75 eb                	jne    ffffffff8021e120 <caml_ba_deserialize+0x150>
ffffffff8021e135:	eb 93                	jmp    ffffffff8021e0ca <caml_ba_deserialize+0xfa>
ffffffff8021e137:	4b 8d 34 24          	lea    (%r12,%r12,1),%rsi
ffffffff8021e13b:	4c 89 ef             	mov    %r13,%rdi
ffffffff8021e13e:	e8 7d c8 fe ff       	callq  ffffffff8020a9c0 <caml_deserialize_block_4>
ffffffff8021e143:	eb 85                	jmp    ffffffff8021e0ca <caml_ba_deserialize+0xfa>
ffffffff8021e145:	4c 89 e6             	mov    %r12,%rsi
ffffffff8021e148:	4c 89 ef             	mov    %r13,%rdi
ffffffff8021e14b:	e8 70 c8 fe ff       	callq  ffffffff8020a9c0 <caml_deserialize_block_4>
ffffffff8021e150:	e9 75 ff ff ff       	jmpq   ffffffff8021e0ca <caml_ba_deserialize+0xfa>
ffffffff8021e155:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8021e159:	0f b6 e8             	movzbl %al,%ebp
ffffffff8021e15c:	48 83 fd 0c          	cmp    $0xc,%rbp
ffffffff8021e160:	7f 3a                	jg     ffffffff8021e19c <caml_ba_deserialize+0x1cc>
ffffffff8021e162:	48 8d 05 d7 dc 00 00 	lea    0xdcd7(%rip),%rax        # ffffffff8022be40 <caml_ba_element_size>
ffffffff8021e169:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff8021e16f:	48 63 3c a8          	movslq (%rax,%rbp,4),%rdi
ffffffff8021e173:	e9 1c ff ff ff       	jmpq   ffffffff8021e094 <caml_ba_deserialize+0xc4>
ffffffff8021e178:	48 8d 3d e1 4a 00 00 	lea    0x4ae1(%rip),%rdi        # ffffffff80222c60 <posix_signals+0xb80>
ffffffff8021e17f:	e8 dc c9 fe ff       	callq  ffffffff8020ab60 <caml_deserialize_error>
ffffffff8021e184:	48 8d 3d 9d 4a 00 00 	lea    0x4a9d(%rip),%rdi        # ffffffff80222c28 <posix_signals+0xb48>
ffffffff8021e18b:	e8 d0 c9 fe ff       	callq  ffffffff8020ab60 <caml_deserialize_error>
ffffffff8021e190:	48 8d 3d 11 4b 00 00 	lea    0x4b11(%rip),%rdi        # ffffffff80222ca8 <posix_signals+0xbc8>
ffffffff8021e197:	e8 c4 c9 fe ff       	callq  ffffffff8020ab60 <caml_deserialize_error>
ffffffff8021e19c:	48 8d 3d e5 4a 00 00 	lea    0x4ae5(%rip),%rdi        # ffffffff80222c88 <posix_signals+0xba8>
ffffffff8021e1a3:	e8 b8 c9 fe ff       	callq  ffffffff8020ab60 <caml_deserialize_error>
ffffffff8021e1a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021e1af:	00 

ffffffff8021e1b0 <caml_ba_offset>:
ffffffff8021e1b0:	48 8b 47 10          	mov    0x10(%rdi),%rax
ffffffff8021e1b4:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
ffffffff8021e1b8:	25 00 01 00 00       	and    $0x100,%eax
ffffffff8021e1bd:	75 39                	jne    ffffffff8021e1f8 <caml_ba_offset+0x48>
ffffffff8021e1bf:	4d 85 c9             	test   %r9,%r9
ffffffff8021e1c2:	7e 3c                	jle    ffffffff8021e200 <caml_ba_offset+0x50>
ffffffff8021e1c4:	31 c9                	xor    %ecx,%ecx
ffffffff8021e1c6:	31 d2                	xor    %edx,%edx
ffffffff8021e1c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021e1cf:	00 
ffffffff8021e1d0:	4c 8b 04 d6          	mov    (%rsi,%rdx,8),%r8
ffffffff8021e1d4:	48 8b 54 d7 20       	mov    0x20(%rdi,%rdx,8),%rdx
ffffffff8021e1d9:	49 39 d0             	cmp    %rdx,%r8
ffffffff8021e1dc:	73 70                	jae    ffffffff8021e24e <caml_ba_offset+0x9e>
ffffffff8021e1de:	48 0f af c2          	imul   %rdx,%rax
ffffffff8021e1e2:	83 c1 01             	add    $0x1,%ecx
ffffffff8021e1e5:	48 63 d1             	movslq %ecx,%rdx
ffffffff8021e1e8:	4c 01 c0             	add    %r8,%rax
ffffffff8021e1eb:	4c 39 ca             	cmp    %r9,%rdx
ffffffff8021e1ee:	7c e0                	jl     ffffffff8021e1d0 <caml_ba_offset+0x20>
ffffffff8021e1f0:	c3                   	retq   
ffffffff8021e1f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021e1f8:	41 83 e9 01          	sub    $0x1,%r9d
ffffffff8021e1fc:	79 0a                	jns    ffffffff8021e208 <caml_ba_offset+0x58>
ffffffff8021e1fe:	31 c0                	xor    %eax,%eax
ffffffff8021e200:	c3                   	retq   
ffffffff8021e201:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021e208:	49 63 c1             	movslq %r9d,%rax
ffffffff8021e20b:	45 89 c9             	mov    %r9d,%r9d
ffffffff8021e20e:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
ffffffff8021e215:	00 
ffffffff8021e216:	4c 29 c8             	sub    %r9,%rax
ffffffff8021e219:	4c 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%r9
ffffffff8021e220:	00 
ffffffff8021e221:	31 c0                	xor    %eax,%eax
ffffffff8021e223:	eb 06                	jmp    ffffffff8021e22b <caml_ba_offset+0x7b>
ffffffff8021e225:	0f 1f 00             	nopl   (%rax)
ffffffff8021e228:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021e22b:	48 8b 14 0e          	mov    (%rsi,%rcx,1),%rdx
ffffffff8021e22f:	4c 8b 44 0f 20       	mov    0x20(%rdi,%rcx,1),%r8
ffffffff8021e234:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff8021e238:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8021e23b:	73 11                	jae    ffffffff8021e24e <caml_ba_offset+0x9e>
ffffffff8021e23d:	49 0f af c0          	imul   %r8,%rax
ffffffff8021e241:	48 01 d0             	add    %rdx,%rax
ffffffff8021e244:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
ffffffff8021e248:	49 39 c9             	cmp    %rcx,%r9
ffffffff8021e24b:	75 db                	jne    ffffffff8021e228 <caml_ba_offset+0x78>
ffffffff8021e24d:	c3                   	retq   
ffffffff8021e24e:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021e252:	e8 e9 92 fe ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff8021e257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021e25e:	00 00 

ffffffff8021e260 <caml_ba_set_aux>:
ffffffff8021e260:	41 54                	push   %r12
ffffffff8021e262:	4c 8d 67 08          	lea    0x8(%rdi),%r12
ffffffff8021e266:	49 89 d0             	mov    %rdx,%r8
ffffffff8021e269:	55                   	push   %rbp
ffffffff8021e26a:	53                   	push   %rbx
ffffffff8021e26b:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
ffffffff8021e272:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
ffffffff8021e277:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021e27e:	00 00 
ffffffff8021e280:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff8021e287:	00 
ffffffff8021e288:	31 c0                	xor    %eax,%eax
ffffffff8021e28a:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8021e28d:	0f 85 2e 01 00 00    	jne    ffffffff8021e3c1 <caml_ba_set_aux+0x161>
ffffffff8021e293:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021e296:	48 89 cd             	mov    %rcx,%rbp
ffffffff8021e299:	49 89 e0             	mov    %rsp,%r8
ffffffff8021e29c:	48 8d 3c d5 00 00 00 	lea    0x0(,%rdx,8),%rdi
ffffffff8021e2a3:	00 
ffffffff8021e2a4:	48 85 d2             	test   %rdx,%rdx
ffffffff8021e2a7:	7e 1b                	jle    ffffffff8021e2c4 <caml_ba_set_aux+0x64>
ffffffff8021e2a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021e2b0:	48 8b 14 06          	mov    (%rsi,%rax,1),%rdx
ffffffff8021e2b4:	48 d1 fa             	sar    %rdx
ffffffff8021e2b7:	49 89 14 00          	mov    %rdx,(%r8,%rax,1)
ffffffff8021e2bb:	48 83 c0 08          	add    $0x8,%rax
ffffffff8021e2bf:	48 39 c7             	cmp    %rax,%rdi
ffffffff8021e2c2:	75 ec                	jne    ffffffff8021e2b0 <caml_ba_set_aux+0x50>
ffffffff8021e2c4:	4c 89 c6             	mov    %r8,%rsi
ffffffff8021e2c7:	4c 89 e7             	mov    %r12,%rdi
ffffffff8021e2ca:	e8 e1 fe ff ff       	callq  ffffffff8021e1b0 <caml_ba_offset>
ffffffff8021e2cf:	41 0f b6 54 24 10    	movzbl 0x10(%r12),%edx
ffffffff8021e2d5:	48 8b 73 08          	mov    0x8(%rbx),%rsi
ffffffff8021e2d9:	48 83 fa 0c          	cmp    $0xc,%rdx
ffffffff8021e2dd:	0f 87 c6 00 00 00    	ja     ffffffff8021e3a9 <caml_ba_set_aux+0x149>
ffffffff8021e2e3:	48 8d 0d 6e 48 00 00 	lea    0x486e(%rip),%rcx        # ffffffff80222b58 <posix_signals+0xa78>
ffffffff8021e2ea:	48 63 14 91          	movslq (%rcx,%rdx,4),%rdx
ffffffff8021e2ee:	48 01 ca             	add    %rcx,%rdx
ffffffff8021e2f1:	ff e2                	jmpq   *%rdx
ffffffff8021e2f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021e2f8:	48 d1 fd             	sar    %rbp
ffffffff8021e2fb:	40 88 2c 06          	mov    %bpl,(%rsi,%rax,1)
ffffffff8021e2ff:	90                   	nop
ffffffff8021e300:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
ffffffff8021e307:	00 
ffffffff8021e308:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8021e30f:	00 00 
ffffffff8021e311:	0f 85 a5 00 00 00    	jne    ffffffff8021e3bc <caml_ba_set_aux+0x15c>
ffffffff8021e317:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
ffffffff8021e31e:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021e323:	5b                   	pop    %rbx
ffffffff8021e324:	5d                   	pop    %rbp
ffffffff8021e325:	41 5c                	pop    %r12
ffffffff8021e327:	c3                   	retq   
ffffffff8021e328:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021e32f:	00 
ffffffff8021e330:	48 8b 55 08          	mov    0x8(%rbp),%rdx
ffffffff8021e334:	48 89 14 c6          	mov    %rdx,(%rsi,%rax,8)
ffffffff8021e338:	eb c6                	jmp    ffffffff8021e300 <caml_ba_set_aux+0xa0>
ffffffff8021e33a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021e340:	48 d1 fd             	sar    %rbp
ffffffff8021e343:	66 89 2c 46          	mov    %bp,(%rsi,%rax,2)
ffffffff8021e347:	eb b7                	jmp    ffffffff8021e300 <caml_ba_set_aux+0xa0>
ffffffff8021e349:	48 d1 fd             	sar    %rbp
ffffffff8021e34c:	48 89 2c c6          	mov    %rbp,(%rsi,%rax,8)
ffffffff8021e350:	eb ae                	jmp    ffffffff8021e300 <caml_ba_set_aux+0xa0>
ffffffff8021e352:	8b 55 08             	mov    0x8(%rbp),%edx
ffffffff8021e355:	89 14 86             	mov    %edx,(%rsi,%rax,4)
ffffffff8021e358:	eb a6                	jmp    ffffffff8021e300 <caml_ba_set_aux+0xa0>
ffffffff8021e35a:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
ffffffff8021e35e:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021e362:	f2 0f 5a 45 00       	cvtsd2ss 0x0(%rbp),%xmm0
ffffffff8021e367:	f3 0f 11 00          	movss  %xmm0,(%rax)
ffffffff8021e36b:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021e36f:	f2 0f 5a 45 08       	cvtsd2ss 0x8(%rbp),%xmm0
ffffffff8021e374:	f3 0f 11 40 04       	movss  %xmm0,0x4(%rax)
ffffffff8021e379:	eb 85                	jmp    ffffffff8021e300 <caml_ba_set_aux+0xa0>
ffffffff8021e37b:	f2 0f 10 45 00       	movsd  0x0(%rbp),%xmm0
ffffffff8021e380:	f2 0f 11 04 c6       	movsd  %xmm0,(%rsi,%rax,8)
ffffffff8021e385:	e9 76 ff ff ff       	jmpq   ffffffff8021e300 <caml_ba_set_aux+0xa0>
ffffffff8021e38a:	f2 0f 10 45 00       	movsd  0x0(%rbp),%xmm0
ffffffff8021e38f:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff8021e393:	48 01 f0             	add    %rsi,%rax
ffffffff8021e396:	f2 0f 11 00          	movsd  %xmm0,(%rax)
ffffffff8021e39a:	f2 0f 10 45 08       	movsd  0x8(%rbp),%xmm0
ffffffff8021e39f:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
ffffffff8021e3a4:	e9 57 ff ff ff       	jmpq   ffffffff8021e300 <caml_ba_set_aux+0xa0>
ffffffff8021e3a9:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021e3ad:	f2 0f 5a 45 00       	cvtsd2ss 0x0(%rbp),%xmm0
ffffffff8021e3b2:	f3 0f 11 04 86       	movss  %xmm0,(%rsi,%rax,4)
ffffffff8021e3b7:	e9 44 ff ff ff       	jmpq   ffffffff8021e300 <caml_ba_set_aux+0xa0>
ffffffff8021e3bc:	e8 df 1c fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021e3c1:	48 8d 3d 08 49 00 00 	lea    0x4908(%rip),%rdi        # ffffffff80222cd0 <posix_signals+0xbf0>
ffffffff8021e3c8:	e8 b3 90 fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021e3cd:	0f 1f 00             	nopl   (%rax)

ffffffff8021e3d0 <caml_ba_num_elts>:
ffffffff8021e3d0:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021e3d4:	48 85 c9             	test   %rcx,%rcx
ffffffff8021e3d7:	7e 27                	jle    ffffffff8021e400 <caml_ba_num_elts+0x30>
ffffffff8021e3d9:	31 d2                	xor    %edx,%edx
ffffffff8021e3db:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8021e3e1:	31 c0                	xor    %eax,%eax
ffffffff8021e3e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021e3e8:	83 c2 01             	add    $0x1,%edx
ffffffff8021e3eb:	4c 0f af 44 c7 20    	imul   0x20(%rdi,%rax,8),%r8
ffffffff8021e3f1:	48 63 c2             	movslq %edx,%rax
ffffffff8021e3f4:	48 39 c8             	cmp    %rcx,%rax
ffffffff8021e3f7:	7c ef                	jl     ffffffff8021e3e8 <caml_ba_num_elts+0x18>
ffffffff8021e3f9:	4c 89 c0             	mov    %r8,%rax
ffffffff8021e3fc:	c3                   	retq   
ffffffff8021e3fd:	0f 1f 00             	nopl   (%rax)
ffffffff8021e400:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8021e406:	4c 89 c0             	mov    %r8,%rax
ffffffff8021e409:	c3                   	retq   
ffffffff8021e40a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8021e410 <caml_ba_byte_size>:
ffffffff8021e410:	48 8b 77 08          	mov    0x8(%rdi),%rsi
ffffffff8021e414:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021e419:	48 85 f6             	test   %rsi,%rsi
ffffffff8021e41c:	7e 1b                	jle    ffffffff8021e439 <caml_ba_byte_size+0x29>
ffffffff8021e41e:	31 c9                	xor    %ecx,%ecx
ffffffff8021e420:	31 d2                	xor    %edx,%edx
ffffffff8021e422:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021e428:	83 c1 01             	add    $0x1,%ecx
ffffffff8021e42b:	48 0f af 44 d7 20    	imul   0x20(%rdi,%rdx,8),%rax
ffffffff8021e431:	48 63 d1             	movslq %ecx,%rdx
ffffffff8021e434:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8021e437:	7c ef                	jl     ffffffff8021e428 <caml_ba_byte_size+0x18>
ffffffff8021e439:	0f b6 4f 10          	movzbl 0x10(%rdi),%ecx
ffffffff8021e43d:	48 8d 15 fc d9 00 00 	lea    0xd9fc(%rip),%rdx        # ffffffff8022be40 <caml_ba_element_size>
ffffffff8021e444:	48 63 14 8a          	movslq (%rdx,%rcx,4),%rdx
ffffffff8021e448:	48 0f af c2          	imul   %rdx,%rax
ffffffff8021e44c:	c3                   	retq   
ffffffff8021e44d:	0f 1f 00             	nopl   (%rax)

ffffffff8021e450 <caml_ba_alloc>:
ffffffff8021e450:	41 56                	push   %r14
ffffffff8021e452:	41 55                	push   %r13
ffffffff8021e454:	49 89 d5             	mov    %rdx,%r13
ffffffff8021e457:	41 54                	push   %r12
ffffffff8021e459:	55                   	push   %rbp
ffffffff8021e45a:	48 63 ee             	movslq %esi,%rbp
ffffffff8021e45d:	53                   	push   %rbx
ffffffff8021e45e:	89 fb                	mov    %edi,%ebx
ffffffff8021e460:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
ffffffff8021e467:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021e46e:	00 00 
ffffffff8021e470:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff8021e477:	00 
ffffffff8021e478:	31 c0                	xor    %eax,%eax
ffffffff8021e47a:	85 ed                	test   %ebp,%ebp
ffffffff8021e47c:	0f 8e 4e 01 00 00    	jle    ffffffff8021e5d0 <caml_ba_alloc+0x180>
ffffffff8021e482:	8d 75 ff             	lea    -0x1(%rbp),%esi
ffffffff8021e485:	49 89 e4             	mov    %rsp,%r12
ffffffff8021e488:	49 89 f6             	mov    %rsi,%r14
ffffffff8021e48b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021e490:	48 8b 14 c1          	mov    (%rcx,%rax,8),%rdx
ffffffff8021e494:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
ffffffff8021e498:	48 89 c2             	mov    %rax,%rdx
ffffffff8021e49b:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021e49f:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8021e4a2:	75 ec                	jne    ffffffff8021e490 <caml_ba_alloc+0x40>
ffffffff8021e4a4:	4d 85 ed             	test   %r13,%r13
ffffffff8021e4a7:	74 77                	je     ffffffff8021e520 <caml_ba_alloc+0xd0>
ffffffff8021e4a9:	48 8d 34 ed 20 00 00 	lea    0x20(,%rbp,8),%rsi
ffffffff8021e4b0:	00 
ffffffff8021e4b1:	31 d2                	xor    %edx,%edx
ffffffff8021e4b3:	48 8d 3d c6 d9 00 00 	lea    0xd9c6(%rip),%rdi        # ffffffff8022be80 <caml_ba_ops>
ffffffff8021e4ba:	48 63 db             	movslq %ebx,%rbx
ffffffff8021e4bd:	e8 ee bb ff ff       	callq  ffffffff8021a0b0 <caml_alloc_custom_mem>
ffffffff8021e4c2:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021e4c6:	4c 89 68 08          	mov    %r13,0x8(%rax)
ffffffff8021e4ca:	48 89 6e 08          	mov    %rbp,0x8(%rsi)
ffffffff8021e4ce:	48 89 5e 10          	mov    %rbx,0x10(%rsi)
ffffffff8021e4d2:	48 c7 46 18 00 00 00 	movq   $0x0,0x18(%rsi)
ffffffff8021e4d9:	00 
ffffffff8021e4da:	44 89 f7             	mov    %r14d,%edi
ffffffff8021e4dd:	31 d2                	xor    %edx,%edx
ffffffff8021e4df:	90                   	nop
ffffffff8021e4e0:	49 8b 0c d4          	mov    (%r12,%rdx,8),%rcx
ffffffff8021e4e4:	48 89 4c d6 20       	mov    %rcx,0x20(%rsi,%rdx,8)
ffffffff8021e4e9:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021e4ec:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8021e4f0:	48 39 cf             	cmp    %rcx,%rdi
ffffffff8021e4f3:	75 eb                	jne    ffffffff8021e4e0 <caml_ba_alloc+0x90>
ffffffff8021e4f5:	48 8b 9c 24 88 00 00 	mov    0x88(%rsp),%rbx
ffffffff8021e4fc:	00 
ffffffff8021e4fd:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021e504:	00 00 
ffffffff8021e506:	0f 85 13 01 00 00    	jne    ffffffff8021e61f <caml_ba_alloc+0x1cf>
ffffffff8021e50c:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
ffffffff8021e513:	5b                   	pop    %rbx
ffffffff8021e514:	5d                   	pop    %rbp
ffffffff8021e515:	41 5c                	pop    %r12
ffffffff8021e517:	41 5d                	pop    %r13
ffffffff8021e519:	41 5e                	pop    %r14
ffffffff8021e51b:	c3                   	retq   
ffffffff8021e51c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021e520:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
ffffffff8021e525:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8021e529:	48 8d 34 f1          	lea    (%rcx,%rsi,8),%rsi
ffffffff8021e52d:	eb 17                	jmp    ffffffff8021e546 <caml_ba_alloc+0xf6>
ffffffff8021e52f:	90                   	nop
ffffffff8021e530:	48 f7 21             	mulq   (%rcx)
ffffffff8021e533:	0f 90 c2             	seto   %dl
ffffffff8021e536:	48 83 c1 08          	add    $0x8,%rcx
ffffffff8021e53a:	0f b6 d2             	movzbl %dl,%edx
ffffffff8021e53d:	48 85 d2             	test   %rdx,%rdx
ffffffff8021e540:	0f 85 d4 00 00 00    	jne    ffffffff8021e61a <caml_ba_alloc+0x1ca>
ffffffff8021e546:	48 39 f1             	cmp    %rsi,%rcx
ffffffff8021e549:	75 e5                	jne    ffffffff8021e530 <caml_ba_alloc+0xe0>
ffffffff8021e54b:	0f b6 d3             	movzbl %bl,%edx
ffffffff8021e54e:	48 8d 0d eb d8 00 00 	lea    0xd8eb(%rip),%rcx        # ffffffff8022be40 <caml_ba_element_size>
ffffffff8021e555:	4c 63 24 91          	movslq (%rcx,%rdx,4),%r12
ffffffff8021e559:	49 f7 e4             	mul    %r12
ffffffff8021e55c:	49 89 c4             	mov    %rax,%r12
ffffffff8021e55f:	0f 80 b5 00 00 00    	jo     ffffffff8021e61a <caml_ba_alloc+0x1ca>
ffffffff8021e565:	4c 89 e7             	mov    %r12,%rdi
ffffffff8021e568:	e8 18 1b fe ff       	callq  ffffffff80200085 <malloc>
ffffffff8021e56d:	49 89 c5             	mov    %rax,%r13
ffffffff8021e570:	4d 85 e4             	test   %r12,%r12
ffffffff8021e573:	74 09                	je     ffffffff8021e57e <caml_ba_alloc+0x12e>
ffffffff8021e575:	48 85 c0             	test   %rax,%rax
ffffffff8021e578:	0f 84 9c 00 00 00    	je     ffffffff8021e61a <caml_ba_alloc+0x1ca>
ffffffff8021e57e:	4c 63 f5             	movslq %ebp,%r14
ffffffff8021e581:	4c 89 e2             	mov    %r12,%rdx
ffffffff8021e584:	48 8d 3d f5 d8 00 00 	lea    0xd8f5(%rip),%rdi        # ffffffff8022be80 <caml_ba_ops>
ffffffff8021e58b:	80 cf 02             	or     $0x2,%bh
ffffffff8021e58e:	4a 8d 34 f5 20 00 00 	lea    0x20(,%r14,8),%rsi
ffffffff8021e595:	00 
ffffffff8021e596:	48 63 db             	movslq %ebx,%rbx
ffffffff8021e599:	e8 12 bb ff ff       	callq  ffffffff8021a0b0 <caml_alloc_custom_mem>
ffffffff8021e59e:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021e5a2:	4c 89 68 08          	mov    %r13,0x8(%rax)
ffffffff8021e5a6:	4c 89 76 08          	mov    %r14,0x8(%rsi)
ffffffff8021e5aa:	48 89 5e 10          	mov    %rbx,0x10(%rsi)
ffffffff8021e5ae:	48 c7 46 18 00 00 00 	movq   $0x0,0x18(%rsi)
ffffffff8021e5b5:	00 
ffffffff8021e5b6:	85 ed                	test   %ebp,%ebp
ffffffff8021e5b8:	0f 8e 37 ff ff ff    	jle    ffffffff8021e4f5 <caml_ba_alloc+0xa5>
ffffffff8021e5be:	44 8d 75 ff          	lea    -0x1(%rbp),%r14d
ffffffff8021e5c2:	49 89 e4             	mov    %rsp,%r12
ffffffff8021e5c5:	e9 10 ff ff ff       	jmpq   ffffffff8021e4da <caml_ba_alloc+0x8a>
ffffffff8021e5ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021e5d0:	48 85 d2             	test   %rdx,%rdx
ffffffff8021e5d3:	74 32                	je     ffffffff8021e607 <caml_ba_alloc+0x1b7>
ffffffff8021e5d5:	48 8d 34 ed 20 00 00 	lea    0x20(,%rbp,8),%rsi
ffffffff8021e5dc:	00 
ffffffff8021e5dd:	31 d2                	xor    %edx,%edx
ffffffff8021e5df:	48 8d 3d 9a d8 00 00 	lea    0xd89a(%rip),%rdi        # ffffffff8022be80 <caml_ba_ops>
ffffffff8021e5e6:	48 63 db             	movslq %ebx,%rbx
ffffffff8021e5e9:	e8 c2 ba ff ff       	callq  ffffffff8021a0b0 <caml_alloc_custom_mem>
ffffffff8021e5ee:	4c 89 68 08          	mov    %r13,0x8(%rax)
ffffffff8021e5f2:	48 89 68 10          	mov    %rbp,0x10(%rax)
ffffffff8021e5f6:	48 89 58 18          	mov    %rbx,0x18(%rax)
ffffffff8021e5fa:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
ffffffff8021e601:	00 
ffffffff8021e602:	e9 ee fe ff ff       	jmpq   ffffffff8021e4f5 <caml_ba_alloc+0xa5>
ffffffff8021e607:	0f b6 c3             	movzbl %bl,%eax
ffffffff8021e60a:	48 8d 15 2f d8 00 00 	lea    0xd82f(%rip),%rdx        # ffffffff8022be40 <caml_ba_element_size>
ffffffff8021e611:	4c 63 24 82          	movslq (%rdx,%rax,4),%r12
ffffffff8021e615:	e9 4b ff ff ff       	jmpq   ffffffff8021e565 <caml_ba_alloc+0x115>
ffffffff8021e61a:	e8 a1 8e fe ff       	callq  ffffffff802074c0 <caml_raise_out_of_memory>
ffffffff8021e61f:	e8 7c 1a fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021e624:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021e62b:	00 00 00 00 
ffffffff8021e62f:	90                   	nop

ffffffff8021e630 <caml_ba_alloc_dims>:
ffffffff8021e630:	41 54                	push   %r12
ffffffff8021e632:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
ffffffff8021e639:	48 89 8c 24 c8 00 00 	mov    %rcx,0xc8(%rsp)
ffffffff8021e640:	00 
ffffffff8021e641:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
ffffffff8021e646:	4c 89 84 24 d0 00 00 	mov    %r8,0xd0(%rsp)
ffffffff8021e64d:	00 
ffffffff8021e64e:	4c 89 8c 24 d8 00 00 	mov    %r9,0xd8(%rsp)
ffffffff8021e655:	00 
ffffffff8021e656:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021e65d:	00 00 
ffffffff8021e65f:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
ffffffff8021e666:	00 
ffffffff8021e667:	31 c0                	xor    %eax,%eax
ffffffff8021e669:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
ffffffff8021e670:	00 
ffffffff8021e671:	c7 44 24 08 18 00 00 	movl   $0x18,0x8(%rsp)
ffffffff8021e678:	00 
ffffffff8021e679:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8021e67e:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
ffffffff8021e685:	00 
ffffffff8021e686:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021e68b:	85 f6                	test   %esi,%esi
ffffffff8021e68d:	7e 60                	jle    ffffffff8021e6ef <caml_ba_alloc_dims+0xbf>
ffffffff8021e68f:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
ffffffff8021e694:	8d 4e ff             	lea    -0x1(%rsi),%ecx
ffffffff8021e697:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
ffffffff8021e69c:	41 b8 18 00 00 00    	mov    $0x18,%r8d
ffffffff8021e6a2:	4c 89 e0             	mov    %r12,%rax
ffffffff8021e6a5:	4c 8d 54 cc 28       	lea    0x28(%rsp,%rcx,8),%r10
ffffffff8021e6aa:	4c 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%r9
ffffffff8021e6b1:	00 
ffffffff8021e6b2:	eb 1e                	jmp    ffffffff8021e6d2 <caml_ba_alloc_dims+0xa2>
ffffffff8021e6b4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021e6b8:	44 89 c1             	mov    %r8d,%ecx
ffffffff8021e6bb:	48 83 c0 08          	add    $0x8,%rax
ffffffff8021e6bf:	41 83 c0 08          	add    $0x8,%r8d
ffffffff8021e6c3:	4c 01 d9             	add    %r11,%rcx
ffffffff8021e6c6:	48 8b 09             	mov    (%rcx),%rcx
ffffffff8021e6c9:	48 89 48 f8          	mov    %rcx,-0x8(%rax)
ffffffff8021e6cd:	4c 39 d0             	cmp    %r10,%rax
ffffffff8021e6d0:	74 1d                	je     ffffffff8021e6ef <caml_ba_alloc_dims+0xbf>
ffffffff8021e6d2:	41 83 f8 2f          	cmp    $0x2f,%r8d
ffffffff8021e6d6:	76 e0                	jbe    ffffffff8021e6b8 <caml_ba_alloc_dims+0x88>
ffffffff8021e6d8:	4c 89 c9             	mov    %r9,%rcx
ffffffff8021e6db:	48 83 c0 08          	add    $0x8,%rax
ffffffff8021e6df:	49 83 c1 08          	add    $0x8,%r9
ffffffff8021e6e3:	48 8b 09             	mov    (%rcx),%rcx
ffffffff8021e6e6:	48 89 48 f8          	mov    %rcx,-0x8(%rax)
ffffffff8021e6ea:	4c 39 d0             	cmp    %r10,%rax
ffffffff8021e6ed:	75 e3                	jne    ffffffff8021e6d2 <caml_ba_alloc_dims+0xa2>
ffffffff8021e6ef:	4c 89 e1             	mov    %r12,%rcx
ffffffff8021e6f2:	e8 59 fd ff ff       	callq  ffffffff8021e450 <caml_ba_alloc>
ffffffff8021e6f7:	48 8b 94 24 a8 00 00 	mov    0xa8(%rsp),%rdx
ffffffff8021e6fe:	00 
ffffffff8021e6ff:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff8021e706:	00 00 
ffffffff8021e708:	75 0a                	jne    ffffffff8021e714 <caml_ba_alloc_dims+0xe4>
ffffffff8021e70a:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
ffffffff8021e711:	41 5c                	pop    %r12
ffffffff8021e713:	c3                   	retq   
ffffffff8021e714:	e8 87 19 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021e719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021e720 <caml_ba_create>:
ffffffff8021e720:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
ffffffff8021e727:	49 89 f1             	mov    %rsi,%r9
ffffffff8021e72a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021e731:	00 00 
ffffffff8021e733:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff8021e73a:	00 
ffffffff8021e73b:	31 c0                	xor    %eax,%eax
ffffffff8021e73d:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
ffffffff8021e741:	48 89 c6             	mov    %rax,%rsi
ffffffff8021e744:	48 c1 ee 0a          	shr    $0xa,%rsi
ffffffff8021e748:	48 3d ff 43 00 00    	cmp    $0x43ff,%rax
ffffffff8021e74e:	77 75                	ja     ffffffff8021e7c5 <caml_ba_create+0xa5>
ffffffff8021e750:	49 89 fa             	mov    %rdi,%r10
ffffffff8021e753:	49 89 e3             	mov    %rsp,%r11
ffffffff8021e756:	48 85 f6             	test   %rsi,%rsi
ffffffff8021e759:	74 2a                	je     ffffffff8021e785 <caml_ba_create+0x65>
ffffffff8021e75b:	49 89 e3             	mov    %rsp,%r11
ffffffff8021e75e:	4c 8d 04 f2          	lea    (%rdx,%rsi,8),%r8
ffffffff8021e762:	4c 89 d9             	mov    %r11,%rcx
ffffffff8021e765:	48 29 d1             	sub    %rdx,%rcx
ffffffff8021e768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021e76f:	00 
ffffffff8021e770:	48 8b 02             	mov    (%rdx),%rax
ffffffff8021e773:	48 d1 f8             	sar    %rax
ffffffff8021e776:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
ffffffff8021e77a:	78 3d                	js     ffffffff8021e7b9 <caml_ba_create+0x99>
ffffffff8021e77c:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8021e780:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8021e783:	75 eb                	jne    ffffffff8021e770 <caml_ba_create+0x50>
ffffffff8021e785:	4c 89 cf             	mov    %r9,%rdi
ffffffff8021e788:	49 d1 fa             	sar    %r10
ffffffff8021e78b:	31 d2                	xor    %edx,%edx
ffffffff8021e78d:	4c 89 d9             	mov    %r11,%rcx
ffffffff8021e790:	48 d1 ff             	sar    %rdi
ffffffff8021e793:	c1 e7 08             	shl    $0x8,%edi
ffffffff8021e796:	44 09 d7             	or     %r10d,%edi
ffffffff8021e799:	e8 b2 fc ff ff       	callq  ffffffff8021e450 <caml_ba_alloc>
ffffffff8021e79e:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
ffffffff8021e7a5:	00 
ffffffff8021e7a6:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
ffffffff8021e7ad:	00 00 
ffffffff8021e7af:	75 20                	jne    ffffffff8021e7d1 <caml_ba_create+0xb1>
ffffffff8021e7b1:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
ffffffff8021e7b8:	c3                   	retq   
ffffffff8021e7b9:	48 8d 3d 68 45 00 00 	lea    0x4568(%rip),%rdi        # ffffffff80222d28 <posix_signals+0xc48>
ffffffff8021e7c0:	e8 bb 8c fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021e7c5:	48 8d 3d 2c 45 00 00 	lea    0x452c(%rip),%rdi        # ffffffff80222cf8 <posix_signals+0xc18>
ffffffff8021e7cc:	e8 af 8c fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021e7d1:	e8 ca 18 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021e7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021e7dd:	00 00 00 

ffffffff8021e7e0 <caml_ba_get_N>:
ffffffff8021e7e0:	55                   	push   %rbp
ffffffff8021e7e1:	48 63 d2             	movslq %edx,%rdx
ffffffff8021e7e4:	53                   	push   %rbx
ffffffff8021e7e5:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
ffffffff8021e7ec:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021e7f3:	00 00 
ffffffff8021e7f5:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
ffffffff8021e7fc:	00 
ffffffff8021e7fd:	31 c0                	xor    %eax,%eax
ffffffff8021e7ff:	48 3b 57 10          	cmp    0x10(%rdi),%rdx
ffffffff8021e803:	0f 85 f4 01 00 00    	jne    ffffffff8021e9fd <caml_ba_get_N+0x21d>
ffffffff8021e809:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021e80c:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
ffffffff8021e810:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
ffffffff8021e815:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
ffffffff8021e81c:	00 
ffffffff8021e81d:	48 85 d2             	test   %rdx,%rdx
ffffffff8021e820:	7e 1a                	jle    ffffffff8021e83c <caml_ba_get_N+0x5c>
ffffffff8021e822:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021e828:	48 8b 14 06          	mov    (%rsi,%rax,1),%rdx
ffffffff8021e82c:	48 d1 fa             	sar    %rdx
ffffffff8021e82f:	49 89 14 00          	mov    %rdx,(%r8,%rax,1)
ffffffff8021e833:	48 83 c0 08          	add    $0x8,%rax
ffffffff8021e837:	48 39 c1             	cmp    %rax,%rcx
ffffffff8021e83a:	75 ec                	jne    ffffffff8021e828 <caml_ba_get_N+0x48>
ffffffff8021e83c:	4c 89 c6             	mov    %r8,%rsi
ffffffff8021e83f:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021e842:	e8 69 f9 ff ff       	callq  ffffffff8021e1b0 <caml_ba_offset>
ffffffff8021e847:	0f b6 55 10          	movzbl 0x10(%rbp),%edx
ffffffff8021e84b:	48 8b 73 08          	mov    0x8(%rbx),%rsi
ffffffff8021e84f:	48 83 fa 0c          	cmp    $0xc,%rdx
ffffffff8021e853:	0f 87 75 01 00 00    	ja     ffffffff8021e9ce <caml_ba_get_N+0x1ee>
ffffffff8021e859:	48 8d 0d 2c 43 00 00 	lea    0x432c(%rip),%rcx        # ffffffff80222b8c <posix_signals+0xaac>
ffffffff8021e860:	48 63 14 91          	movslq (%rcx,%rdx,4),%rdx
ffffffff8021e864:	48 01 ca             	add    %rcx,%rdx
ffffffff8021e867:	ff e2                	jmpq   *%rdx
ffffffff8021e869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021e870:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
ffffffff8021e874:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021e879:	48 8b 9c 24 98 00 00 	mov    0x98(%rsp),%rbx
ffffffff8021e880:	00 
ffffffff8021e881:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021e888:	00 00 
ffffffff8021e88a:	0f 85 68 01 00 00    	jne    ffffffff8021e9f8 <caml_ba_get_N+0x218>
ffffffff8021e890:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffff8021e897:	5b                   	pop    %rbx
ffffffff8021e898:	5d                   	pop    %rbp
ffffffff8021e899:	c3                   	retq   
ffffffff8021e89a:	48 0f bf 04 46       	movswq (%rsi,%rax,2),%rax
ffffffff8021e89f:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021e8a4:	eb d3                	jmp    ffffffff8021e879 <caml_ba_get_N+0x99>
ffffffff8021e8a6:	0f b7 04 46          	movzwl (%rsi,%rax,2),%eax
ffffffff8021e8aa:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021e8af:	eb c8                	jmp    ffffffff8021e879 <caml_ba_get_N+0x99>
ffffffff8021e8b1:	48 8b 9c 24 98 00 00 	mov    0x98(%rsp),%rbx
ffffffff8021e8b8:	00 
ffffffff8021e8b9:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021e8c0:	00 00 
ffffffff8021e8c2:	0f 85 30 01 00 00    	jne    ffffffff8021e9f8 <caml_ba_get_N+0x218>
ffffffff8021e8c8:	8b 3c 86             	mov    (%rsi,%rax,4),%edi
ffffffff8021e8cb:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffff8021e8d2:	5b                   	pop    %rbx
ffffffff8021e8d3:	5d                   	pop    %rbp
ffffffff8021e8d4:	e9 a7 c8 fe ff       	jmpq   ffffffff8020b180 <caml_copy_int32>
ffffffff8021e8d9:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
ffffffff8021e8e0:	00 
ffffffff8021e8e1:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
ffffffff8021e8e8:	00 00 
ffffffff8021e8ea:	0f 85 08 01 00 00    	jne    ffffffff8021e9f8 <caml_ba_get_N+0x218>
ffffffff8021e8f0:	48 8b 3c c6          	mov    (%rsi,%rax,8),%rdi
ffffffff8021e8f4:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffff8021e8fb:	5b                   	pop    %rbx
ffffffff8021e8fc:	5d                   	pop    %rbp
ffffffff8021e8fd:	e9 5e cd fe ff       	jmpq   ffffffff8020b660 <caml_copy_int64>
ffffffff8021e902:	48 8b 04 c6          	mov    (%rsi,%rax,8),%rax
ffffffff8021e906:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021e90b:	e9 69 ff ff ff       	jmpq   ffffffff8021e879 <caml_ba_get_N+0x99>
ffffffff8021e910:	48 8b 9c 24 98 00 00 	mov    0x98(%rsp),%rbx
ffffffff8021e917:	00 
ffffffff8021e918:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021e91f:	00 00 
ffffffff8021e921:	0f 85 d1 00 00 00    	jne    ffffffff8021e9f8 <caml_ba_get_N+0x218>
ffffffff8021e927:	48 8b 3c c6          	mov    (%rsi,%rax,8),%rdi
ffffffff8021e92b:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffff8021e932:	5b                   	pop    %rbx
ffffffff8021e933:	5d                   	pop    %rbp
ffffffff8021e934:	e9 17 d5 fe ff       	jmpq   ffffffff8020be50 <caml_copy_nativeint>
ffffffff8021e939:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
ffffffff8021e93d:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021e941:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021e945:	f3 0f 5a 40 04       	cvtss2sd 0x4(%rax),%xmm0
ffffffff8021e94a:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8021e950:	f3 0f 5a 08          	cvtss2sd (%rax),%xmm1
ffffffff8021e954:	be fe 00 00 00       	mov    $0xfe,%esi
ffffffff8021e959:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff8021e95e:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
ffffffff8021e963:	e8 98 a2 ff ff       	callq  ffffffff80218c00 <caml_alloc_small>
ffffffff8021e968:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
ffffffff8021e96d:	f2 0f 11 08          	movsd  %xmm1,(%rax)
ffffffff8021e971:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
ffffffff8021e977:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
ffffffff8021e97c:	e9 f8 fe ff ff       	jmpq   ffffffff8021e879 <caml_ba_get_N+0x99>
ffffffff8021e981:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff8021e985:	48 01 f0             	add    %rsi,%rax
ffffffff8021e988:	f2 0f 10 40 08       	movsd  0x8(%rax),%xmm0
ffffffff8021e98d:	f2 0f 10 08          	movsd  (%rax),%xmm1
ffffffff8021e991:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8021e997:	eb bb                	jmp    ffffffff8021e954 <caml_ba_get_N+0x174>
ffffffff8021e999:	48 8b 9c 24 98 00 00 	mov    0x98(%rsp),%rbx
ffffffff8021e9a0:	00 
ffffffff8021e9a1:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021e9a8:	00 00 
ffffffff8021e9aa:	75 4c                	jne    ffffffff8021e9f8 <caml_ba_get_N+0x218>
ffffffff8021e9ac:	f2 0f 10 04 c6       	movsd  (%rsi,%rax,8),%xmm0
ffffffff8021e9b1:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffff8021e9b8:	5b                   	pop    %rbx
ffffffff8021e9b9:	5d                   	pop    %rbp
ffffffff8021e9ba:	e9 91 8c fe ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8021e9bf:	48 0f be 04 06       	movsbq (%rsi,%rax,1),%rax
ffffffff8021e9c4:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021e9c9:	e9 ab fe ff ff       	jmpq   ffffffff8021e879 <caml_ba_get_N+0x99>
ffffffff8021e9ce:	48 8b 9c 24 98 00 00 	mov    0x98(%rsp),%rbx
ffffffff8021e9d5:	00 
ffffffff8021e9d6:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021e9dd:	00 00 
ffffffff8021e9df:	75 17                	jne    ffffffff8021e9f8 <caml_ba_get_N+0x218>
ffffffff8021e9e1:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021e9e5:	f3 0f 5a 04 86       	cvtss2sd (%rsi,%rax,4),%xmm0
ffffffff8021e9ea:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
ffffffff8021e9f1:	5b                   	pop    %rbx
ffffffff8021e9f2:	5d                   	pop    %rbp
ffffffff8021e9f3:	e9 58 8c fe ff       	jmpq   ffffffff80207650 <caml_copy_double>
ffffffff8021e9f8:	e8 a3 16 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021e9fd:	48 8d 3d 4c 43 00 00 	lea    0x434c(%rip),%rdi        # ffffffff80222d50 <posix_signals+0xc70>
ffffffff8021ea04:	e8 77 8a fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021ea09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021ea10 <caml_ba_get_1>:
ffffffff8021ea10:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8021ea14:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8021ea19:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff8021ea1e:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
ffffffff8021ea23:	e8 b8 fd ff ff       	callq  ffffffff8021e7e0 <caml_ba_get_N>
ffffffff8021ea28:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021ea2c:	c3                   	retq   
ffffffff8021ea2d:	0f 1f 00             	nopl   (%rax)

ffffffff8021ea30 <caml_ba_get_2>:
ffffffff8021ea30:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8021ea34:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021ea3b:	00 00 
ffffffff8021ea3d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021ea42:	31 c0                	xor    %eax,%eax
ffffffff8021ea44:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8021ea48:	48 89 e6             	mov    %rsp,%rsi
ffffffff8021ea4b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8021ea50:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8021ea55:	e8 86 fd ff ff       	callq  ffffffff8021e7e0 <caml_ba_get_N>
ffffffff8021ea5a:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
ffffffff8021ea5f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8021ea66:	00 00 
ffffffff8021ea68:	75 05                	jne    ffffffff8021ea6f <caml_ba_get_2+0x3f>
ffffffff8021ea6a:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8021ea6e:	c3                   	retq   
ffffffff8021ea6f:	e8 2c 16 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021ea74:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021ea7b:	00 00 00 00 
ffffffff8021ea7f:	90                   	nop

ffffffff8021ea80 <caml_ba_get_3>:
ffffffff8021ea80:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8021ea84:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021ea8b:	00 00 
ffffffff8021ea8d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021ea92:	31 c0                	xor    %eax,%eax
ffffffff8021ea94:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8021ea98:	48 89 e6             	mov    %rsp,%rsi
ffffffff8021ea9b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8021eaa0:	ba 03 00 00 00       	mov    $0x3,%edx
ffffffff8021eaa5:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8021eaaa:	e8 31 fd ff ff       	callq  ffffffff8021e7e0 <caml_ba_get_N>
ffffffff8021eaaf:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
ffffffff8021eab4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff8021eabb:	00 00 
ffffffff8021eabd:	75 05                	jne    ffffffff8021eac4 <caml_ba_get_3+0x44>
ffffffff8021eabf:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8021eac3:	c3                   	retq   
ffffffff8021eac4:	e8 d7 15 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021eac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021ead0 <caml_ba_get_generic>:
ffffffff8021ead0:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
ffffffff8021ead4:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021ead8:	e9 03 fd ff ff       	jmpq   ffffffff8021e7e0 <caml_ba_get_N>
ffffffff8021eadd:	0f 1f 00             	nopl   (%rax)

ffffffff8021eae0 <caml_ba_uint8_get16>:
ffffffff8021eae0:	48 d1 fe             	sar    %rsi
ffffffff8021eae3:	78 27                	js     ffffffff8021eb0c <caml_ba_uint8_get16+0x2c>
ffffffff8021eae5:	48 8b 47 28          	mov    0x28(%rdi),%rax
ffffffff8021eae9:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8021eaed:	48 39 f0             	cmp    %rsi,%rax
ffffffff8021eaf0:	7e 1a                	jle    ffffffff8021eb0c <caml_ba_uint8_get16+0x2c>
ffffffff8021eaf2:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021eaf6:	0f b6 44 32 01       	movzbl 0x1(%rdx,%rsi,1),%eax
ffffffff8021eafb:	0f b6 14 32          	movzbl (%rdx,%rsi,1),%edx
ffffffff8021eaff:	c1 e0 08             	shl    $0x8,%eax
ffffffff8021eb02:	09 d0                	or     %edx,%eax
ffffffff8021eb04:	48 98                	cltq   
ffffffff8021eb06:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021eb0b:	c3                   	retq   
ffffffff8021eb0c:	50                   	push   %rax
ffffffff8021eb0d:	e8 2e 8a fe ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff8021eb12:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021eb19:	00 00 00 00 
ffffffff8021eb1d:	0f 1f 00             	nopl   (%rax)

ffffffff8021eb20 <caml_ba_uint8_get32>:
ffffffff8021eb20:	48 d1 fe             	sar    %rsi
ffffffff8021eb23:	78 38                	js     ffffffff8021eb5d <caml_ba_uint8_get32+0x3d>
ffffffff8021eb25:	48 8b 47 28          	mov    0x28(%rdi),%rax
ffffffff8021eb29:	48 83 e8 03          	sub    $0x3,%rax
ffffffff8021eb2d:	48 39 f0             	cmp    %rsi,%rax
ffffffff8021eb30:	7e 2b                	jle    ffffffff8021eb5d <caml_ba_uint8_get32+0x3d>
ffffffff8021eb32:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021eb36:	0f b6 7c 30 03       	movzbl 0x3(%rax,%rsi,1),%edi
ffffffff8021eb3b:	0f b6 54 30 02       	movzbl 0x2(%rax,%rsi,1),%edx
ffffffff8021eb40:	c1 e7 18             	shl    $0x18,%edi
ffffffff8021eb43:	c1 e2 10             	shl    $0x10,%edx
ffffffff8021eb46:	09 d7                	or     %edx,%edi
ffffffff8021eb48:	0f b6 14 30          	movzbl (%rax,%rsi,1),%edx
ffffffff8021eb4c:	0f b6 44 30 01       	movzbl 0x1(%rax,%rsi,1),%eax
ffffffff8021eb51:	09 d7                	or     %edx,%edi
ffffffff8021eb53:	c1 e0 08             	shl    $0x8,%eax
ffffffff8021eb56:	09 c7                	or     %eax,%edi
ffffffff8021eb58:	e9 23 c6 fe ff       	jmpq   ffffffff8020b180 <caml_copy_int32>
ffffffff8021eb5d:	50                   	push   %rax
ffffffff8021eb5e:	e8 dd 89 fe ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff8021eb63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021eb6a:	00 00 00 00 
ffffffff8021eb6e:	66 90                	xchg   %ax,%ax

ffffffff8021eb70 <caml_ba_uint8_get64>:
ffffffff8021eb70:	48 d1 fe             	sar    %rsi
ffffffff8021eb73:	78 6e                	js     ffffffff8021ebe3 <caml_ba_uint8_get64+0x73>
ffffffff8021eb75:	48 8b 47 28          	mov    0x28(%rdi),%rax
ffffffff8021eb79:	48 83 e8 07          	sub    $0x7,%rax
ffffffff8021eb7d:	48 39 f0             	cmp    %rsi,%rax
ffffffff8021eb80:	7e 61                	jle    ffffffff8021ebe3 <caml_ba_uint8_get64+0x73>
ffffffff8021eb82:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021eb86:	0f b6 7c 30 07       	movzbl 0x7(%rax,%rsi,1),%edi
ffffffff8021eb8b:	0f b6 54 30 06       	movzbl 0x6(%rax,%rsi,1),%edx
ffffffff8021eb90:	48 c1 e7 38          	shl    $0x38,%rdi
ffffffff8021eb94:	48 c1 e2 30          	shl    $0x30,%rdx
ffffffff8021eb98:	48 09 d7             	or     %rdx,%rdi
ffffffff8021eb9b:	0f b6 14 30          	movzbl (%rax,%rsi,1),%edx
ffffffff8021eb9f:	48 09 d7             	or     %rdx,%rdi
ffffffff8021eba2:	0f b6 54 30 05       	movzbl 0x5(%rax,%rsi,1),%edx
ffffffff8021eba7:	48 c1 e2 28          	shl    $0x28,%rdx
ffffffff8021ebab:	48 09 d7             	or     %rdx,%rdi
ffffffff8021ebae:	0f b6 54 30 04       	movzbl 0x4(%rax,%rsi,1),%edx
ffffffff8021ebb3:	48 c1 e2 20          	shl    $0x20,%rdx
ffffffff8021ebb7:	48 09 d7             	or     %rdx,%rdi
ffffffff8021ebba:	0f b6 54 30 03       	movzbl 0x3(%rax,%rsi,1),%edx
ffffffff8021ebbf:	48 c1 e2 18          	shl    $0x18,%rdx
ffffffff8021ebc3:	48 09 d7             	or     %rdx,%rdi
ffffffff8021ebc6:	0f b6 54 30 02       	movzbl 0x2(%rax,%rsi,1),%edx
ffffffff8021ebcb:	0f b6 44 30 01       	movzbl 0x1(%rax,%rsi,1),%eax
ffffffff8021ebd0:	48 c1 e2 10          	shl    $0x10,%rdx
ffffffff8021ebd4:	48 c1 e0 08          	shl    $0x8,%rax
ffffffff8021ebd8:	48 09 d7             	or     %rdx,%rdi
ffffffff8021ebdb:	48 09 c7             	or     %rax,%rdi
ffffffff8021ebde:	e9 7d ca fe ff       	jmpq   ffffffff8020b660 <caml_copy_int64>
ffffffff8021ebe3:	50                   	push   %rax
ffffffff8021ebe4:	e8 57 89 fe ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff8021ebe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8021ebf0 <caml_ba_set_1>:
ffffffff8021ebf0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8021ebf4:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021ebf7:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8021ebfc:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff8021ec01:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
ffffffff8021ec06:	e8 55 f6 ff ff       	callq  ffffffff8021e260 <caml_ba_set_aux>
ffffffff8021ec0b:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8021ec0f:	c3                   	retq   

ffffffff8021ec10 <caml_ba_set_2>:
ffffffff8021ec10:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8021ec14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021ec1b:	00 00 
ffffffff8021ec1d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021ec22:	31 c0                	xor    %eax,%eax
ffffffff8021ec24:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8021ec28:	48 89 e6             	mov    %rsp,%rsi
ffffffff8021ec2b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8021ec30:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8021ec35:	e8 26 f6 ff ff       	callq  ffffffff8021e260 <caml_ba_set_aux>
ffffffff8021ec3a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff8021ec3f:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff8021ec46:	00 00 
ffffffff8021ec48:	75 05                	jne    ffffffff8021ec4f <caml_ba_set_2+0x3f>
ffffffff8021ec4a:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8021ec4e:	c3                   	retq   
ffffffff8021ec4f:	e8 4c 14 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021ec54:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021ec5b:	00 00 00 00 
ffffffff8021ec5f:	90                   	nop

ffffffff8021ec60 <caml_ba_set_3>:
ffffffff8021ec60:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8021ec64:	49 89 c9             	mov    %rcx,%r9
ffffffff8021ec67:	4c 89 c1             	mov    %r8,%rcx
ffffffff8021ec6a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021ec71:	00 00 
ffffffff8021ec73:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021ec78:	31 c0                	xor    %eax,%eax
ffffffff8021ec7a:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8021ec7e:	48 89 e6             	mov    %rsp,%rsi
ffffffff8021ec81:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8021ec86:	ba 03 00 00 00       	mov    $0x3,%edx
ffffffff8021ec8b:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
ffffffff8021ec90:	e8 cb f5 ff ff       	callq  ffffffff8021e260 <caml_ba_set_aux>
ffffffff8021ec95:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff8021ec9a:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
ffffffff8021eca1:	00 00 
ffffffff8021eca3:	75 05                	jne    ffffffff8021ecaa <caml_ba_set_3+0x4a>
ffffffff8021eca5:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8021eca9:	c3                   	retq   
ffffffff8021ecaa:	e8 f1 13 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021ecaf:	90                   	nop

ffffffff8021ecb0 <caml_ba_set_N>:
ffffffff8021ecb0:	48 63 c2             	movslq %edx,%rax
ffffffff8021ecb3:	83 ea 01             	sub    $0x1,%edx
ffffffff8021ecb6:	48 8b 4c c6 f8       	mov    -0x8(%rsi,%rax,8),%rcx
ffffffff8021ecbb:	48 63 d2             	movslq %edx,%rdx
ffffffff8021ecbe:	e9 9d f5 ff ff       	jmpq   ffffffff8021e260 <caml_ba_set_aux>
ffffffff8021ecc3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021ecca:	00 00 00 00 
ffffffff8021ecce:	66 90                	xchg   %ax,%ax

ffffffff8021ecd0 <caml_ba_set_generic>:
ffffffff8021ecd0:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021ecd3:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
ffffffff8021ecd7:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff8021ecdb:	e9 80 f5 ff ff       	jmpq   ffffffff8021e260 <caml_ba_set_aux>

ffffffff8021ece0 <caml_ba_uint8_set16>:
ffffffff8021ece0:	48 d1 fe             	sar    %rsi
ffffffff8021ece3:	78 2c                	js     ffffffff8021ed11 <caml_ba_uint8_set16+0x31>
ffffffff8021ece5:	48 8b 47 28          	mov    0x28(%rdi),%rax
ffffffff8021ece9:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8021eced:	48 39 f0             	cmp    %rsi,%rax
ffffffff8021ecf0:	7e 1f                	jle    ffffffff8021ed11 <caml_ba_uint8_set16+0x31>
ffffffff8021ecf2:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021ecf6:	48 89 d1             	mov    %rdx,%rcx
ffffffff8021ecf9:	48 c1 fa 09          	sar    $0x9,%rdx
ffffffff8021ecfd:	48 d1 f9             	sar    %rcx
ffffffff8021ed00:	88 0c 30             	mov    %cl,(%rax,%rsi,1)
ffffffff8021ed03:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021ed07:	88 54 30 01          	mov    %dl,0x1(%rax,%rsi,1)
ffffffff8021ed0b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021ed10:	c3                   	retq   
ffffffff8021ed11:	50                   	push   %rax
ffffffff8021ed12:	e8 29 88 fe ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff8021ed17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021ed1e:	00 00 

ffffffff8021ed20 <caml_ba_uint8_set32>:
ffffffff8021ed20:	48 d1 fe             	sar    %rsi
ffffffff8021ed23:	78 43                	js     ffffffff8021ed68 <caml_ba_uint8_set32+0x48>
ffffffff8021ed25:	48 8b 47 28          	mov    0x28(%rdi),%rax
ffffffff8021ed29:	48 83 e8 03          	sub    $0x3,%rax
ffffffff8021ed2d:	48 39 f0             	cmp    %rsi,%rax
ffffffff8021ed30:	7e 36                	jle    ffffffff8021ed68 <caml_ba_uint8_set32+0x48>
ffffffff8021ed32:	8b 52 08             	mov    0x8(%rdx),%edx
ffffffff8021ed35:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021ed39:	88 14 30             	mov    %dl,(%rax,%rsi,1)
ffffffff8021ed3c:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
ffffffff8021ed40:	48 63 c2             	movslq %edx,%rax
ffffffff8021ed43:	88 74 31 01          	mov    %dh,0x1(%rcx,%rsi,1)
ffffffff8021ed47:	48 89 c1             	mov    %rax,%rcx
ffffffff8021ed4a:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021ed4e:	48 c1 f8 18          	sar    $0x18,%rax
ffffffff8021ed52:	48 c1 f9 10          	sar    $0x10,%rcx
ffffffff8021ed56:	88 4c 32 02          	mov    %cl,0x2(%rdx,%rsi,1)
ffffffff8021ed5a:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021ed5e:	88 44 32 03          	mov    %al,0x3(%rdx,%rsi,1)
ffffffff8021ed62:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021ed67:	c3                   	retq   
ffffffff8021ed68:	50                   	push   %rax
ffffffff8021ed69:	e8 d2 87 fe ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff8021ed6e:	66 90                	xchg   %ax,%ax

ffffffff8021ed70 <caml_ba_uint8_set64>:
ffffffff8021ed70:	48 d1 fe             	sar    %rsi
ffffffff8021ed73:	0f 88 84 00 00 00    	js     ffffffff8021edfd <caml_ba_uint8_set64+0x8d>
ffffffff8021ed79:	48 8b 47 28          	mov    0x28(%rdi),%rax
ffffffff8021ed7d:	48 83 e8 07          	sub    $0x7,%rax
ffffffff8021ed81:	48 39 f0             	cmp    %rsi,%rax
ffffffff8021ed84:	7e 77                	jle    ffffffff8021edfd <caml_ba_uint8_set64+0x8d>
ffffffff8021ed86:	48 8b 42 08          	mov    0x8(%rdx),%rax
ffffffff8021ed8a:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021ed8e:	48 89 c1             	mov    %rax,%rcx
ffffffff8021ed91:	88 04 32             	mov    %al,(%rdx,%rsi,1)
ffffffff8021ed94:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021ed98:	48 c1 f9 08          	sar    $0x8,%rcx
ffffffff8021ed9c:	88 4c 32 01          	mov    %cl,0x1(%rdx,%rsi,1)
ffffffff8021eda0:	48 89 c1             	mov    %rax,%rcx
ffffffff8021eda3:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021eda7:	48 c1 f9 10          	sar    $0x10,%rcx
ffffffff8021edab:	88 4c 32 02          	mov    %cl,0x2(%rdx,%rsi,1)
ffffffff8021edaf:	48 89 c1             	mov    %rax,%rcx
ffffffff8021edb2:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021edb6:	48 c1 f9 18          	sar    $0x18,%rcx
ffffffff8021edba:	88 4c 32 03          	mov    %cl,0x3(%rdx,%rsi,1)
ffffffff8021edbe:	48 89 c1             	mov    %rax,%rcx
ffffffff8021edc1:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021edc5:	48 c1 f9 20          	sar    $0x20,%rcx
ffffffff8021edc9:	88 4c 32 04          	mov    %cl,0x4(%rdx,%rsi,1)
ffffffff8021edcd:	48 89 c1             	mov    %rax,%rcx
ffffffff8021edd0:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021edd4:	48 c1 f9 28          	sar    $0x28,%rcx
ffffffff8021edd8:	88 4c 32 05          	mov    %cl,0x5(%rdx,%rsi,1)
ffffffff8021eddc:	48 89 c1             	mov    %rax,%rcx
ffffffff8021eddf:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021ede3:	48 c1 e8 38          	shr    $0x38,%rax
ffffffff8021ede7:	48 c1 f9 30          	sar    $0x30,%rcx
ffffffff8021edeb:	88 4c 32 06          	mov    %cl,0x6(%rdx,%rsi,1)
ffffffff8021edef:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8021edf3:	88 44 32 07          	mov    %al,0x7(%rdx,%rsi,1)
ffffffff8021edf7:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021edfc:	c3                   	retq   
ffffffff8021edfd:	50                   	push   %rax
ffffffff8021edfe:	e8 3d 87 fe ff       	callq  ffffffff80207540 <caml_array_bound_error>
ffffffff8021ee03:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021ee0a:	00 00 00 00 
ffffffff8021ee0e:	66 90                	xchg   %ax,%ax

ffffffff8021ee10 <caml_ba_num_dims>:
ffffffff8021ee10:	48 8b 47 10          	mov    0x10(%rdi),%rax
ffffffff8021ee14:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021ee19:	c3                   	retq   
ffffffff8021ee1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8021ee20 <caml_ba_dim>:
ffffffff8021ee20:	48 83 c7 08          	add    $0x8,%rdi
ffffffff8021ee24:	48 d1 fe             	sar    %rsi
ffffffff8021ee27:	78 11                	js     ffffffff8021ee3a <caml_ba_dim+0x1a>
ffffffff8021ee29:	48 39 77 08          	cmp    %rsi,0x8(%rdi)
ffffffff8021ee2d:	7e 0b                	jle    ffffffff8021ee3a <caml_ba_dim+0x1a>
ffffffff8021ee2f:	48 8b 44 f7 20       	mov    0x20(%rdi,%rsi,8),%rax
ffffffff8021ee34:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021ee39:	c3                   	retq   
ffffffff8021ee3a:	50                   	push   %rax
ffffffff8021ee3b:	48 8d 3d fe 3f 00 00 	lea    0x3ffe(%rip),%rdi        # ffffffff80222e40 <posix_signals+0xd60>
ffffffff8021ee42:	e8 39 86 fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021ee47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021ee4e:	00 00 

ffffffff8021ee50 <caml_ba_dim_1>:
ffffffff8021ee50:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
ffffffff8021ee55:	7e 0e                	jle    ffffffff8021ee65 <caml_ba_dim_1+0x15>
ffffffff8021ee57:	48 8d 47 08          	lea    0x8(%rdi),%rax
ffffffff8021ee5b:	48 8b 40 20          	mov    0x20(%rax),%rax
ffffffff8021ee5f:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021ee64:	c3                   	retq   
ffffffff8021ee65:	50                   	push   %rax
ffffffff8021ee66:	48 8d 3d d3 3f 00 00 	lea    0x3fd3(%rip),%rdi        # ffffffff80222e40 <posix_signals+0xd60>
ffffffff8021ee6d:	e8 0e 86 fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021ee72:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021ee79:	00 00 00 00 
ffffffff8021ee7d:	0f 1f 00             	nopl   (%rax)

ffffffff8021ee80 <caml_ba_dim_2>:
ffffffff8021ee80:	48 83 7f 10 01       	cmpq   $0x1,0x10(%rdi)
ffffffff8021ee85:	7e 0e                	jle    ffffffff8021ee95 <caml_ba_dim_2+0x15>
ffffffff8021ee87:	48 8d 47 08          	lea    0x8(%rdi),%rax
ffffffff8021ee8b:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8021ee8f:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021ee94:	c3                   	retq   
ffffffff8021ee95:	50                   	push   %rax
ffffffff8021ee96:	48 8d 3d a3 3f 00 00 	lea    0x3fa3(%rip),%rdi        # ffffffff80222e40 <posix_signals+0xd60>
ffffffff8021ee9d:	e8 de 85 fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021eea2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021eea9:	00 00 00 00 
ffffffff8021eead:	0f 1f 00             	nopl   (%rax)

ffffffff8021eeb0 <caml_ba_dim_3>:
ffffffff8021eeb0:	48 83 7f 10 02       	cmpq   $0x2,0x10(%rdi)
ffffffff8021eeb5:	7e 0e                	jle    ffffffff8021eec5 <caml_ba_dim_3+0x15>
ffffffff8021eeb7:	48 8d 47 08          	lea    0x8(%rdi),%rax
ffffffff8021eebb:	48 8b 40 30          	mov    0x30(%rax),%rax
ffffffff8021eebf:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff8021eec4:	c3                   	retq   
ffffffff8021eec5:	50                   	push   %rax
ffffffff8021eec6:	48 8d 3d 73 3f 00 00 	lea    0x3f73(%rip),%rdi        # ffffffff80222e40 <posix_signals+0xd60>
ffffffff8021eecd:	e8 ae 85 fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021eed2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021eed9:	00 00 00 00 
ffffffff8021eedd:	0f 1f 00             	nopl   (%rax)

ffffffff8021eee0 <caml_ba_kind>:
ffffffff8021eee0:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff8021eee4:	48 01 c0             	add    %rax,%rax
ffffffff8021eee7:	25 fe 01 00 00       	and    $0x1fe,%eax
ffffffff8021eeec:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021eef0:	c3                   	retq   
ffffffff8021eef1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021eef8:	00 00 00 00 
ffffffff8021eefc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8021ef00 <caml_ba_layout>:
ffffffff8021ef00:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff8021ef04:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8021ef09:	c1 f8 08             	sar    $0x8,%eax
ffffffff8021ef0c:	83 e0 01             	and    $0x1,%eax
ffffffff8021ef0f:	48 8d 04 42          	lea    (%rdx,%rax,2),%rax
ffffffff8021ef13:	c3                   	retq   
ffffffff8021ef14:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021ef1b:	00 00 00 00 
ffffffff8021ef1f:	90                   	nop

ffffffff8021ef20 <caml_ba_slice>:
ffffffff8021ef20:	41 57                	push   %r15
ffffffff8021ef22:	41 56                	push   %r14
ffffffff8021ef24:	41 55                	push   %r13
ffffffff8021ef26:	41 54                	push   %r12
ffffffff8021ef28:	55                   	push   %rbp
ffffffff8021ef29:	53                   	push   %rbx
ffffffff8021ef2a:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
ffffffff8021ef31:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8021ef36:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8021ef3b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff8021ef40:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8021ef44:	4c 8d 71 08          	lea    0x8(%rcx),%r14
ffffffff8021ef48:	64 48 8b 1c 25 28 00 	mov    %fs:0x28,%rbx
ffffffff8021ef4f:	00 00 
ffffffff8021ef51:	48 89 9c 24 28 01 00 	mov    %rbx,0x128(%rsp)
ffffffff8021ef58:	00 
ffffffff8021ef59:	31 db                	xor    %ebx,%ebx
ffffffff8021ef5b:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
ffffffff8021ef60:	48 89 e2             	mov    %rsp,%rdx
ffffffff8021ef63:	48 8b 1d 0e 51 02 00 	mov    0x2510e(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8021ef6a:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
ffffffff8021ef6f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff8021ef74:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
ffffffff8021ef79:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
ffffffff8021ef7e:	48 89 15 f3 50 02 00 	mov    %rdx,0x250f3(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021ef85:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff8021ef8a:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8021ef91:	00 00 
ffffffff8021ef93:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
ffffffff8021ef9a:	00 00 
ffffffff8021ef9c:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff8021efa3:	00 00 
ffffffff8021efa5:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff8021efac:	00 00 
ffffffff8021efae:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
ffffffff8021efb3:	4d 8b 66 08          	mov    0x8(%r14),%r12
ffffffff8021efb7:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8021efbc:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8021efc3:	00 00 
ffffffff8021efc5:	4c 8b 6e f8          	mov    -0x8(%rsi),%r13
ffffffff8021efc9:	49 c1 ed 0a          	shr    $0xa,%r13
ffffffff8021efcd:	4d 63 fd             	movslq %r13d,%r15
ffffffff8021efd0:	4d 39 e7             	cmp    %r12,%r15
ffffffff8021efd3:	0f 8f a5 01 00 00    	jg     ffffffff8021f17e <caml_ba_slice+0x25e>
ffffffff8021efd9:	49 8b 6e 10          	mov    0x10(%r14),%rbp
ffffffff8021efdd:	48 89 f0             	mov    %rsi,%rax
ffffffff8021efe0:	f7 c5 00 01 00 00    	test   $0x100,%ebp
ffffffff8021efe6:	0f 84 04 01 00 00    	je     ffffffff8021f0f0 <caml_ba_slice+0x1d0>
ffffffff8021efec:	4c 89 e7             	mov    %r12,%rdi
ffffffff8021efef:	4c 29 ff             	sub    %r15,%rdi
ffffffff8021eff2:	45 85 ed             	test   %r13d,%r13d
ffffffff8021eff5:	0f 8e 65 01 00 00    	jle    ffffffff8021f160 <caml_ba_slice+0x240>
ffffffff8021effb:	48 8d 4e 08          	lea    0x8(%rsi),%rcx
ffffffff8021efff:	48 8d 34 fd 00 00 00 	lea    0x0(,%rdi,8),%rsi
ffffffff8021f006:	00 
ffffffff8021f007:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff8021f00b:	4c 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%r8
ffffffff8021f012:	00 
ffffffff8021f013:	48 29 c6             	sub    %rax,%rsi
ffffffff8021f016:	4c 8d 0c d1          	lea    (%rcx,%rdx,8),%r9
ffffffff8021f01a:	4c 01 c6             	add    %r8,%rsi
ffffffff8021f01d:	eb 05                	jmp    ffffffff8021f024 <caml_ba_slice+0x104>
ffffffff8021f01f:	90                   	nop
ffffffff8021f020:	48 83 c1 08          	add    $0x8,%rcx
ffffffff8021f024:	48 8b 10             	mov    (%rax),%rdx
ffffffff8021f027:	48 d1 fa             	sar    %rdx
ffffffff8021f02a:	48 89 14 06          	mov    %rdx,(%rsi,%rax,1)
ffffffff8021f02e:	48 89 c8             	mov    %rcx,%rax
ffffffff8021f031:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8021f034:	75 ea                	jne    ffffffff8021f020 <caml_ba_slice+0x100>
ffffffff8021f036:	4c 89 c0             	mov    %r8,%rax
ffffffff8021f039:	49 8d 14 f8          	lea    (%r8,%rdi,8),%rdx
ffffffff8021f03d:	48 85 ff             	test   %rdi,%rdi
ffffffff8021f040:	7e 16                	jle    ffffffff8021f058 <caml_ba_slice+0x138>
ffffffff8021f042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021f048:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
ffffffff8021f04f:	48 83 c0 08          	add    $0x8,%rax
ffffffff8021f053:	48 39 c2             	cmp    %rax,%rdx
ffffffff8021f056:	75 f0                	jne    ffffffff8021f048 <caml_ba_slice+0x128>
ffffffff8021f058:	4c 89 c6             	mov    %r8,%rsi
ffffffff8021f05b:	4c 89 f7             	mov    %r14,%rdi
ffffffff8021f05e:	e8 4d f1 ff ff       	callq  ffffffff8021e1b0 <caml_ba_offset>
ffffffff8021f063:	49 8d 4e 20          	lea    0x20(%r14),%rcx
ffffffff8021f067:	40 0f b6 f5          	movzbl %bpl,%esi
ffffffff8021f06b:	48 8d 15 ce cd 00 00 	lea    0xcdce(%rip),%rdx        # ffffffff8022be40 <caml_ba_element_size>
ffffffff8021f072:	89 ef                	mov    %ebp,%edi
ffffffff8021f074:	48 63 14 b2          	movslq (%rdx,%rsi,4),%rdx
ffffffff8021f078:	44 89 e6             	mov    %r12d,%esi
ffffffff8021f07b:	44 29 ee             	sub    %r13d,%esi
ffffffff8021f07e:	48 0f af d0          	imul   %rax,%rdx
ffffffff8021f082:	49 03 16             	add    (%r14),%rdx
ffffffff8021f085:	e8 c6 f3 ff ff       	callq  ffffffff8021e450 <caml_ba_alloc>
ffffffff8021f08a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8021f08f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021f094:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8021f097:	48 89 10             	mov    %rdx,(%rax)
ffffffff8021f09a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021f09f:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021f0a3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021f0a8:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8021f0ac:	e8 9f e8 ff ff       	callq  ffffffff8021d950 <caml_ba_update_proxy>
ffffffff8021f0b1:	48 89 1d c0 4f 02 00 	mov    %rbx,0x24fc0(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f0b8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021f0bd:	48 8b 9c 24 28 01 00 	mov    0x128(%rsp),%rbx
ffffffff8021f0c4:	00 
ffffffff8021f0c5:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021f0cc:	00 00 
ffffffff8021f0ce:	0f 85 b6 00 00 00    	jne    ffffffff8021f18a <caml_ba_slice+0x26a>
ffffffff8021f0d4:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
ffffffff8021f0db:	5b                   	pop    %rbx
ffffffff8021f0dc:	5d                   	pop    %rbp
ffffffff8021f0dd:	41 5c                	pop    %r12
ffffffff8021f0df:	41 5d                	pop    %r13
ffffffff8021f0e1:	41 5e                	pop    %r14
ffffffff8021f0e3:	41 5f                	pop    %r15
ffffffff8021f0e5:	c3                   	retq   
ffffffff8021f0e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021f0ed:	00 00 00 
ffffffff8021f0f0:	45 85 ed             	test   %r13d,%r13d
ffffffff8021f0f3:	7e 7b                	jle    ffffffff8021f170 <caml_ba_slice+0x250>
ffffffff8021f0f5:	4c 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%r8
ffffffff8021f0fc:	00 
ffffffff8021f0fd:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff8021f101:	4c 89 ff             	mov    %r15,%rdi
ffffffff8021f104:	4c 89 c1             	mov    %r8,%rcx
ffffffff8021f107:	48 8d 74 d6 08       	lea    0x8(%rsi,%rdx,8),%rsi
ffffffff8021f10c:	48 29 c1             	sub    %rax,%rcx
ffffffff8021f10f:	90                   	nop
ffffffff8021f110:	48 8b 10             	mov    (%rax),%rdx
ffffffff8021f113:	48 d1 fa             	sar    %rdx
ffffffff8021f116:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
ffffffff8021f11a:	48 83 c0 08          	add    $0x8,%rax
ffffffff8021f11e:	48 39 c6             	cmp    %rax,%rsi
ffffffff8021f121:	75 ed                	jne    ffffffff8021f110 <caml_ba_slice+0x1f0>
ffffffff8021f123:	44 89 e8             	mov    %r13d,%eax
ffffffff8021f126:	48 63 d0             	movslq %eax,%rdx
ffffffff8021f129:	49 39 fc             	cmp    %rdi,%r12
ffffffff8021f12c:	7e 19                	jle    ffffffff8021f147 <caml_ba_slice+0x227>
ffffffff8021f12e:	66 90                	xchg   %ax,%ax
ffffffff8021f130:	48 c7 84 d4 a0 00 00 	movq   $0x0,0xa0(%rsp,%rdx,8)
ffffffff8021f137:	00 00 00 00 00 
ffffffff8021f13c:	83 c0 01             	add    $0x1,%eax
ffffffff8021f13f:	48 63 d0             	movslq %eax,%rdx
ffffffff8021f142:	49 39 d4             	cmp    %rdx,%r12
ffffffff8021f145:	7f e9                	jg     ffffffff8021f130 <caml_ba_slice+0x210>
ffffffff8021f147:	4c 89 c6             	mov    %r8,%rsi
ffffffff8021f14a:	4c 89 f7             	mov    %r14,%rdi
ffffffff8021f14d:	e8 5e f0 ff ff       	callq  ffffffff8021e1b0 <caml_ba_offset>
ffffffff8021f152:	4b 8d 4c fe 20       	lea    0x20(%r14,%r15,8),%rcx
ffffffff8021f157:	e9 0b ff ff ff       	jmpq   ffffffff8021f067 <caml_ba_slice+0x147>
ffffffff8021f15c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021f160:	4c 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%r8
ffffffff8021f167:	00 
ffffffff8021f168:	e9 c9 fe ff ff       	jmpq   ffffffff8021f036 <caml_ba_slice+0x116>
ffffffff8021f16d:	0f 1f 00             	nopl   (%rax)
ffffffff8021f170:	31 ff                	xor    %edi,%edi
ffffffff8021f172:	31 c0                	xor    %eax,%eax
ffffffff8021f174:	4c 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%r8
ffffffff8021f17b:	00 
ffffffff8021f17c:	eb a8                	jmp    ffffffff8021f126 <caml_ba_slice+0x206>
ffffffff8021f17e:	48 8d 3d f3 3b 00 00 	lea    0x3bf3(%rip),%rdi        # ffffffff80222d78 <posix_signals+0xc98>
ffffffff8021f185:	e8 f6 82 fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021f18a:	e8 11 0f fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021f18f:	90                   	nop

ffffffff8021f190 <caml_ba_change_layout>:
ffffffff8021f190:	53                   	push   %rbx
ffffffff8021f191:	48 89 f8             	mov    %rdi,%rax
ffffffff8021f194:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
ffffffff8021f19b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8021f1a0:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8021f1a5:	48 89 f7             	mov    %rsi,%rdi
ffffffff8021f1a8:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8021f1ac:	48 d1 ff             	sar    %rdi
ffffffff8021f1af:	c1 e7 08             	shl    $0x8,%edi
ffffffff8021f1b2:	4c 63 c7             	movslq %edi,%r8
ffffffff8021f1b5:	64 48 8b 1c 25 28 00 	mov    %fs:0x28,%rbx
ffffffff8021f1bc:	00 00 
ffffffff8021f1be:	48 89 9c 24 28 01 00 	mov    %rbx,0x128(%rsp)
ffffffff8021f1c5:	00 
ffffffff8021f1c6:	31 db                	xor    %ebx,%ebx
ffffffff8021f1c8:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
ffffffff8021f1cd:	48 89 e2             	mov    %rsp,%rdx
ffffffff8021f1d0:	48 8b 1d a1 4e 02 00 	mov    0x24ea1(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8021f1d7:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
ffffffff8021f1dc:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff8021f1e1:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
ffffffff8021f1e6:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
ffffffff8021f1eb:	48 89 15 86 4e 02 00 	mov    %rdx,0x24e86(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f1f2:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff8021f1f7:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
ffffffff8021f1fc:	48 8d 50 08          	lea    0x8(%rax),%rdx
ffffffff8021f200:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8021f207:	00 00 
ffffffff8021f209:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff8021f210:	00 00 
ffffffff8021f212:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
ffffffff8021f216:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8021f21b:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
ffffffff8021f222:	00 00 
ffffffff8021f224:	48 89 ce             	mov    %rcx,%rsi
ffffffff8021f227:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8021f22e:	00 00 
ffffffff8021f230:	81 e6 00 01 00 00    	and    $0x100,%esi
ffffffff8021f236:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff8021f23d:	00 00 
ffffffff8021f23f:	49 39 f0             	cmp    %rsi,%r8
ffffffff8021f242:	0f 84 a8 00 00 00    	je     ffffffff8021f2f0 <caml_ba_change_layout+0x160>
ffffffff8021f248:	48 8b 72 08          	mov    0x8(%rdx),%rsi
ffffffff8021f24c:	81 e1 ff 06 00 00    	and    $0x6ff,%ecx
ffffffff8021f252:	4c 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%r8
ffffffff8021f259:	00 
ffffffff8021f25a:	09 cf                	or     %ecx,%edi
ffffffff8021f25c:	48 85 f6             	test   %rsi,%rsi
ffffffff8021f25f:	7e 2f                	jle    ffffffff8021f290 <caml_ba_change_layout+0x100>
ffffffff8021f261:	31 c0                	xor    %eax,%eax
ffffffff8021f263:	4c 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%r8
ffffffff8021f26a:	00 
ffffffff8021f26b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8021f270:	48 89 c1             	mov    %rax,%rcx
ffffffff8021f273:	48 f7 d1             	not    %rcx
ffffffff8021f276:	48 8d 4c 0e 04       	lea    0x4(%rsi,%rcx,1),%rcx
ffffffff8021f27b:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff8021f27f:	49 89 0c c0          	mov    %rcx,(%r8,%rax,8)
ffffffff8021f283:	48 8b 72 08          	mov    0x8(%rdx),%rsi
ffffffff8021f287:	48 83 c0 01          	add    $0x1,%rax
ffffffff8021f28b:	48 39 c6             	cmp    %rax,%rsi
ffffffff8021f28e:	7f e0                	jg     ffffffff8021f270 <caml_ba_change_layout+0xe0>
ffffffff8021f290:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8021f293:	4c 89 c1             	mov    %r8,%rcx
ffffffff8021f296:	e8 b5 f1 ff ff       	callq  ffffffff8021e450 <caml_ba_alloc>
ffffffff8021f29b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8021f2a0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021f2a5:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8021f2a8:	48 89 10             	mov    %rdx,(%rax)
ffffffff8021f2ab:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021f2b0:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021f2b4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021f2b9:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8021f2bd:	e8 8e e6 ff ff       	callq  ffffffff8021d950 <caml_ba_update_proxy>
ffffffff8021f2c2:	48 89 1d af 4d 02 00 	mov    %rbx,0x24daf(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f2c9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021f2ce:	48 8b 9c 24 28 01 00 	mov    0x128(%rsp),%rbx
ffffffff8021f2d5:	00 
ffffffff8021f2d6:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021f2dd:	00 00 
ffffffff8021f2df:	75 18                	jne    ffffffff8021f2f9 <caml_ba_change_layout+0x169>
ffffffff8021f2e1:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
ffffffff8021f2e8:	5b                   	pop    %rbx
ffffffff8021f2e9:	c3                   	retq   
ffffffff8021f2ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021f2f0:	48 89 1d 81 4d 02 00 	mov    %rbx,0x24d81(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f2f7:	eb d5                	jmp    ffffffff8021f2ce <caml_ba_change_layout+0x13e>
ffffffff8021f2f9:	e8 a2 0d fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021f2fe:	66 90                	xchg   %ax,%ax

ffffffff8021f300 <caml_ba_sub>:
ffffffff8021f300:	41 54                	push   %r12
ffffffff8021f302:	48 89 f9             	mov    %rdi,%rcx
ffffffff8021f305:	48 89 f0             	mov    %rsi,%rax
ffffffff8021f308:	55                   	push   %rbp
ffffffff8021f309:	48 83 c1 08          	add    $0x8,%rcx
ffffffff8021f30d:	48 d1 f8             	sar    %rax
ffffffff8021f310:	53                   	push   %rbx
ffffffff8021f311:	48 89 d3             	mov    %rdx,%rbx
ffffffff8021f314:	48 d1 fb             	sar    %rbx
ffffffff8021f317:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
ffffffff8021f31e:	48 8b 2d 53 4d 02 00 	mov    0x24d53(%rip),%rbp        # ffffffff80244078 <caml_local_roots>
ffffffff8021f325:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
ffffffff8021f32a:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff8021f32f:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff8021f334:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff8021f339:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
ffffffff8021f340:	00 00 
ffffffff8021f342:	48 89 bc 24 b8 00 00 	mov    %rdi,0xb8(%rsp)
ffffffff8021f349:	00 
ffffffff8021f34a:	31 ff                	xor    %edi,%edi
ffffffff8021f34c:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
ffffffff8021f351:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
ffffffff8021f356:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
ffffffff8021f35b:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
ffffffff8021f360:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
ffffffff8021f365:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
ffffffff8021f36a:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
ffffffff8021f36f:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
ffffffff8021f374:	48 89 15 fd 4c 02 00 	mov    %rdx,0x24cfd(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f37b:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
ffffffff8021f380:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
ffffffff8021f387:	00 
ffffffff8021f388:	48 89 c2             	mov    %rax,%rdx
ffffffff8021f38b:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
ffffffff8021f392:	00 00 
ffffffff8021f394:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
ffffffff8021f39b:	00 01 00 00 00 
ffffffff8021f3a0:	48 8b 79 10          	mov    0x10(%rcx),%rdi
ffffffff8021f3a4:	48 c7 44 24 38 03 00 	movq   $0x3,0x38(%rsp)
ffffffff8021f3ab:	00 00 
ffffffff8021f3ad:	48 c7 44 24 78 01 00 	movq   $0x1,0x78(%rsp)
ffffffff8021f3b4:	00 00 
ffffffff8021f3b6:	48 8b 71 08          	mov    0x8(%rcx),%rsi
ffffffff8021f3ba:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
ffffffff8021f3bf:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff8021f3c6:	00 00 
ffffffff8021f3c8:	f7 c7 00 01 00 00    	test   $0x100,%edi
ffffffff8021f3ce:	0f 84 e4 00 00 00    	je     ffffffff8021f4b8 <caml_ba_sub+0x1b8>
ffffffff8021f3d4:	4c 8d 56 ff          	lea    -0x1(%rsi),%r10
ffffffff8021f3d8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f3dd:	45 31 c9             	xor    %r9d,%r9d
ffffffff8021f3e0:	45 31 c0             	xor    %r8d,%r8d
ffffffff8021f3e3:	4d 85 d2             	test   %r10,%r10
ffffffff8021f3e6:	7e 1a                	jle    ffffffff8021f402 <caml_ba_sub+0x102>
ffffffff8021f3e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021f3ef:	00 
ffffffff8021f3f0:	41 83 c1 01          	add    $0x1,%r9d
ffffffff8021f3f4:	4a 0f af 44 c1 20    	imul   0x20(%rcx,%r8,8),%rax
ffffffff8021f3fa:	4d 63 c1             	movslq %r9d,%r8
ffffffff8021f3fd:	4d 39 d0             	cmp    %r10,%r8
ffffffff8021f400:	7c ee                	jl     ffffffff8021f3f0 <caml_ba_sub+0xf0>
ffffffff8021f402:	44 8d 46 ff          	lea    -0x1(%rsi),%r8d
ffffffff8021f406:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff8021f40a:	48 85 d2             	test   %rdx,%rdx
ffffffff8021f40d:	0f 88 d7 00 00 00    	js     ffffffff8021f4ea <caml_ba_sub+0x1ea>
ffffffff8021f413:	48 85 db             	test   %rbx,%rbx
ffffffff8021f416:	0f 88 ce 00 00 00    	js     ffffffff8021f4ea <caml_ba_sub+0x1ea>
ffffffff8021f41c:	4d 63 c0             	movslq %r8d,%r8
ffffffff8021f41f:	4c 8d 0c 1a          	lea    (%rdx,%rbx,1),%r9
ffffffff8021f423:	4d 8d 60 04          	lea    0x4(%r8),%r12
ffffffff8021f427:	4e 3b 4c c1 20       	cmp    0x20(%rcx,%r8,8),%r9
ffffffff8021f42c:	0f 8f b8 00 00 00    	jg     ffffffff8021f4ea <caml_ba_sub+0x1ea>
ffffffff8021f432:	44 0f b6 d7          	movzbl %dil,%r10d
ffffffff8021f436:	48 0f af c2          	imul   %rdx,%rax
ffffffff8021f43a:	4c 8d 05 ff c9 00 00 	lea    0xc9ff(%rip),%r8        # ffffffff8022be40 <caml_ba_element_size>
ffffffff8021f441:	4f 63 04 90          	movslq (%r8,%r10,4),%r8
ffffffff8021f445:	4c 8d 49 20          	lea    0x20(%rcx),%r9
ffffffff8021f449:	49 0f af c0          	imul   %r8,%rax
ffffffff8021f44d:	48 03 01             	add    (%rcx),%rax
ffffffff8021f450:	4c 89 c9             	mov    %r9,%rcx
ffffffff8021f453:	48 89 c2             	mov    %rax,%rdx
ffffffff8021f456:	e8 f5 ef ff ff       	callq  ffffffff8021e450 <caml_ba_alloc>
ffffffff8021f45b:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
ffffffff8021f460:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8021f465:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8021f468:	48 89 10             	mov    %rdx,(%rax)
ffffffff8021f46b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021f470:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021f474:	4a 89 1c e6          	mov    %rbx,(%rsi,%r12,8)
ffffffff8021f478:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021f47d:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8021f481:	e8 ca e4 ff ff       	callq  ffffffff8021d950 <caml_ba_update_proxy>
ffffffff8021f486:	48 89 2d eb 4b 02 00 	mov    %rbp,0x24beb(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f48d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
ffffffff8021f492:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
ffffffff8021f499:	00 
ffffffff8021f49a:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021f4a1:	00 00 
ffffffff8021f4a3:	75 51                	jne    ffffffff8021f4f6 <caml_ba_sub+0x1f6>
ffffffff8021f4a5:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
ffffffff8021f4ac:	5b                   	pop    %rbx
ffffffff8021f4ad:	5d                   	pop    %rbp
ffffffff8021f4ae:	41 5c                	pop    %r12
ffffffff8021f4b0:	c3                   	retq   
ffffffff8021f4b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021f4b8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f4bd:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff8021f4c1:	7e 1f                	jle    ffffffff8021f4e2 <caml_ba_sub+0x1e2>
ffffffff8021f4c3:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff8021f4c9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8021f4cf:	90                   	nop
ffffffff8021f4d0:	41 83 c1 01          	add    $0x1,%r9d
ffffffff8021f4d4:	4a 0f af 44 c1 20    	imul   0x20(%rcx,%r8,8),%rax
ffffffff8021f4da:	4d 63 c1             	movslq %r9d,%r8
ffffffff8021f4dd:	49 39 f0             	cmp    %rsi,%r8
ffffffff8021f4e0:	7c ee                	jl     ffffffff8021f4d0 <caml_ba_sub+0x1d0>
ffffffff8021f4e2:	45 31 c0             	xor    %r8d,%r8d
ffffffff8021f4e5:	e9 20 ff ff ff       	jmpq   ffffffff8021f40a <caml_ba_sub+0x10a>
ffffffff8021f4ea:	48 8d 3d 5c 39 00 00 	lea    0x395c(%rip),%rdi        # ffffffff80222e4d <posix_signals+0xd6d>
ffffffff8021f4f1:	e8 8a 7f fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021f4f6:	e8 a5 0b fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021f4fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8021f500 <caml_ba_blit>:
ffffffff8021f500:	41 55                	push   %r13
ffffffff8021f502:	48 89 f0             	mov    %rsi,%rax
ffffffff8021f505:	4c 8d 46 08          	lea    0x8(%rsi),%r8
ffffffff8021f509:	41 54                	push   %r12
ffffffff8021f50b:	55                   	push   %rbp
ffffffff8021f50c:	53                   	push   %rbx
ffffffff8021f50d:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8021f511:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8021f515:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
ffffffff8021f51a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8021f51f:	64 48 8b 1c 25 28 00 	mov    %fs:0x28,%rbx
ffffffff8021f526:	00 00 
ffffffff8021f528:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
ffffffff8021f52d:	31 db                	xor    %ebx,%ebx
ffffffff8021f52f:	48 8b 1d 42 4b 02 00 	mov    0x24b42(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8021f536:	48 89 0d 3b 4b 02 00 	mov    %rcx,0x24b3b(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f53d:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
ffffffff8021f542:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
ffffffff8021f547:	48 89 e1             	mov    %rsp,%rcx
ffffffff8021f54a:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
ffffffff8021f54f:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
ffffffff8021f553:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
ffffffff8021f55a:	00 00 
ffffffff8021f55c:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
ffffffff8021f563:	00 00 
ffffffff8021f565:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8021f56a:	48 8b 6e 08          	mov    0x8(%rsi),%rbp
ffffffff8021f56e:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
ffffffff8021f572:	48 8b 71 08          	mov    0x8(%rcx),%rsi
ffffffff8021f576:	48 3b 70 10          	cmp    0x10(%rax),%rsi
ffffffff8021f57a:	0f 85 d1 00 00 00    	jne    ffffffff8021f651 <caml_ba_blit+0x151>
ffffffff8021f580:	48 85 f6             	test   %rsi,%rsi
ffffffff8021f583:	0f 8e be 00 00 00    	jle    ffffffff8021f647 <caml_ba_blit+0x147>
ffffffff8021f589:	31 d2                	xor    %edx,%edx
ffffffff8021f58b:	31 c0                	xor    %eax,%eax
ffffffff8021f58d:	0f 1f 00             	nopl   (%rax)
ffffffff8021f590:	49 8b 7c c0 20       	mov    0x20(%r8,%rax,8),%rdi
ffffffff8021f595:	48 39 7c c1 20       	cmp    %rdi,0x20(%rcx,%rax,8)
ffffffff8021f59a:	0f 85 b1 00 00 00    	jne    ffffffff8021f651 <caml_ba_blit+0x151>
ffffffff8021f5a0:	83 c2 01             	add    $0x1,%edx
ffffffff8021f5a3:	48 63 c2             	movslq %edx,%rax
ffffffff8021f5a6:	48 39 c6             	cmp    %rax,%rsi
ffffffff8021f5a9:	7f e5                	jg     ffffffff8021f590 <caml_ba_blit+0x90>
ffffffff8021f5ab:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8021f5b0:	31 ff                	xor    %edi,%edi
ffffffff8021f5b2:	31 c0                	xor    %eax,%eax
ffffffff8021f5b4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021f5b8:	83 c7 01             	add    $0x1,%edi
ffffffff8021f5bb:	48 0f af 54 c1 20    	imul   0x20(%rcx,%rax,8),%rdx
ffffffff8021f5c1:	48 63 c7             	movslq %edi,%rax
ffffffff8021f5c4:	48 39 c6             	cmp    %rax,%rsi
ffffffff8021f5c7:	7f ef                	jg     ffffffff8021f5b8 <caml_ba_blit+0xb8>
ffffffff8021f5c9:	48 8b 41 10          	mov    0x10(%rcx),%rax
ffffffff8021f5cd:	48 8d 0d 6c c8 00 00 	lea    0xc86c(%rip),%rcx        # ffffffff8022be40 <caml_ba_element_size>
ffffffff8021f5d4:	0f b6 f0             	movzbl %al,%esi
ffffffff8021f5d7:	4c 63 24 b1          	movslq (%rcx,%rsi,4),%r12
ffffffff8021f5db:	4c 0f af e2          	imul   %rdx,%r12
ffffffff8021f5df:	49 81 fc ff 7f 00 00 	cmp    $0x7fff,%r12
ffffffff8021f5e6:	77 05                	ja     ffffffff8021f5ed <caml_ba_blit+0xed>
ffffffff8021f5e8:	f6 c4 04             	test   $0x4,%ah
ffffffff8021f5eb:	74 43                	je     ffffffff8021f630 <caml_ba_blit+0x130>
ffffffff8021f5ed:	e8 0e 4d ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021f5f2:	4c 89 e2             	mov    %r12,%rdx
ffffffff8021f5f5:	4c 89 ee             	mov    %r13,%rsi
ffffffff8021f5f8:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021f5fb:	e8 a5 0a fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff8021f600:	e8 3b 4d ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff8021f605:	48 89 1d 6c 4a 02 00 	mov    %rbx,0x24a6c(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f60c:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
ffffffff8021f611:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8021f618:	00 00 
ffffffff8021f61a:	75 41                	jne    ffffffff8021f65d <caml_ba_blit+0x15d>
ffffffff8021f61c:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8021f620:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f625:	5b                   	pop    %rbx
ffffffff8021f626:	5d                   	pop    %rbp
ffffffff8021f627:	41 5c                	pop    %r12
ffffffff8021f629:	41 5d                	pop    %r13
ffffffff8021f62b:	c3                   	retq   
ffffffff8021f62c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021f630:	41 f6 40 11 04       	testb  $0x4,0x11(%r8)
ffffffff8021f635:	75 b6                	jne    ffffffff8021f5ed <caml_ba_blit+0xed>
ffffffff8021f637:	4c 89 e2             	mov    %r12,%rdx
ffffffff8021f63a:	4c 89 ee             	mov    %r13,%rsi
ffffffff8021f63d:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021f640:	e8 60 0a fe ff       	callq  ffffffff802000a5 <memmove>
ffffffff8021f645:	eb be                	jmp    ffffffff8021f605 <caml_ba_blit+0x105>
ffffffff8021f647:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8021f64c:	e9 78 ff ff ff       	jmpq   ffffffff8021f5c9 <caml_ba_blit+0xc9>
ffffffff8021f651:	48 8d 3d 48 37 00 00 	lea    0x3748(%rip),%rdi        # ffffffff80222da0 <posix_signals+0xcc0>
ffffffff8021f658:	e8 23 7e fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021f65d:	e8 3e 0a fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021f662:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8021f669:	00 00 00 00 
ffffffff8021f66d:	0f 1f 00             	nopl   (%rax)

ffffffff8021f670 <caml_ba_fill>:
ffffffff8021f670:	41 56                	push   %r14
ffffffff8021f672:	48 89 f8             	mov    %rdi,%rax
ffffffff8021f675:	41 55                	push   %r13
ffffffff8021f677:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff8021f67b:	41 54                	push   %r12
ffffffff8021f67d:	55                   	push   %rbp
ffffffff8021f67e:	53                   	push   %rbx
ffffffff8021f67f:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff8021f683:	4c 8b 35 ee 49 02 00 	mov    0x249ee(%rip),%r14        # ffffffff80244078 <caml_local_roots>
ffffffff8021f68a:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff8021f68f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
ffffffff8021f694:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
ffffffff8021f69b:	00 00 
ffffffff8021f69d:	48 89 7c 24 68       	mov    %rdi,0x68(%rsp)
ffffffff8021f6a2:	31 ff                	xor    %edi,%edi
ffffffff8021f6a4:	48 89 15 cd 49 02 00 	mov    %rdx,0x249cd(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f6ab:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
ffffffff8021f6b0:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8021f6b7:	00 00 
ffffffff8021f6b9:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
ffffffff8021f6c0:	00 00 
ffffffff8021f6c2:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
ffffffff8021f6c7:	48 8b 79 08          	mov    0x8(%rcx),%rdi
ffffffff8021f6cb:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
ffffffff8021f6d0:	48 8b 58 08          	mov    0x8(%rax),%rbx
ffffffff8021f6d4:	48 85 ff             	test   %rdi,%rdi
ffffffff8021f6d7:	0f 8e 53 03 00 00    	jle    ffffffff8021fa30 <caml_ba_fill+0x3c0>
ffffffff8021f6dd:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff8021f6e3:	31 d2                	xor    %edx,%edx
ffffffff8021f6e5:	31 c0                	xor    %eax,%eax
ffffffff8021f6e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021f6ee:	00 00 
ffffffff8021f6f0:	83 c2 01             	add    $0x1,%edx
ffffffff8021f6f3:	4c 0f af 64 c1 20    	imul   0x20(%rcx,%rax,8),%r12
ffffffff8021f6f9:	48 63 c2             	movslq %edx,%rax
ffffffff8021f6fc:	48 39 f8             	cmp    %rdi,%rax
ffffffff8021f6ff:	7c ef                	jl     ffffffff8021f6f0 <caml_ba_fill+0x80>
ffffffff8021f701:	48 8b 51 10          	mov    0x10(%rcx),%rdx
ffffffff8021f705:	4c 89 e5             	mov    %r12,%rbp
ffffffff8021f708:	0f b6 c2             	movzbl %dl,%eax
ffffffff8021f70b:	80 fa 0c             	cmp    $0xc,%dl
ffffffff8021f70e:	0f 87 3b 03 00 00    	ja     ffffffff8021fa4f <caml_ba_fill+0x3df>
ffffffff8021f714:	48 8d 0d a5 34 00 00 	lea    0x34a5(%rip),%rcx        # ffffffff80222bc0 <posix_signals+0xae0>
ffffffff8021f71b:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
ffffffff8021f71f:	48 01 c8             	add    %rcx,%rax
ffffffff8021f722:	ff e0                	jmpq   *%rax
ffffffff8021f724:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021f728:	48 d1 fe             	sar    %rsi
ffffffff8021f72b:	49 89 f5             	mov    %rsi,%r13
ffffffff8021f72e:	49 81 fc ff 0f 00 00 	cmp    $0xfff,%r12
ffffffff8021f735:	0f 8f da 02 00 00    	jg     ffffffff8021fa15 <caml_ba_fill+0x3a5>
ffffffff8021f73b:	80 e6 04             	and    $0x4,%dh
ffffffff8021f73e:	0f 85 d1 02 00 00    	jne    ffffffff8021fa15 <caml_ba_fill+0x3a5>
ffffffff8021f744:	4d 85 e4             	test   %r12,%r12
ffffffff8021f747:	7e 7b                	jle    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021f749:	31 c9                	xor    %ecx,%ecx
ffffffff8021f74b:	44 89 ee             	mov    %r13d,%esi
ffffffff8021f74e:	48 8d 14 2b          	lea    (%rbx,%rbp,1),%rdx
ffffffff8021f752:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021f758:	40 88 33             	mov    %sil,(%rbx)
ffffffff8021f75b:	48 89 d0             	mov    %rdx,%rax
ffffffff8021f75e:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8021f762:	48 29 d8             	sub    %rbx,%rax
ffffffff8021f765:	48 85 c0             	test   %rax,%rax
ffffffff8021f768:	7f ee                	jg     ffffffff8021f758 <caml_ba_fill+0xe8>
ffffffff8021f76a:	85 c9                	test   %ecx,%ecx
ffffffff8021f76c:	74 56                	je     ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021f76e:	66 90                	xchg   %ax,%ax
ffffffff8021f770:	e8 cb 4b ff ff       	callq  ffffffff80214340 <caml_leave_blocking_section>
ffffffff8021f775:	eb 4d                	jmp    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021f777:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8021f77e:	00 00 
ffffffff8021f780:	48 d1 fe             	sar    %rsi
ffffffff8021f783:	49 89 f5             	mov    %rsi,%r13
ffffffff8021f786:	49 81 fc ff 0f 00 00 	cmp    $0xfff,%r12
ffffffff8021f78d:	7f 09                	jg     ffffffff8021f798 <caml_ba_fill+0x128>
ffffffff8021f78f:	80 e6 04             	and    $0x4,%dh
ffffffff8021f792:	0f 84 8e 03 00 00    	je     ffffffff8021fb26 <caml_ba_fill+0x4b6>
ffffffff8021f798:	e8 63 4b ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021f79d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f7a2:	4d 85 e4             	test   %r12,%r12
ffffffff8021f7a5:	7e c9                	jle    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021f7a7:	44 89 ee             	mov    %r13d,%esi
ffffffff8021f7aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021f7b0:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff8021f7b4:	66 89 33             	mov    %si,(%rbx)
ffffffff8021f7b7:	48 83 c3 02          	add    $0x2,%rbx
ffffffff8021f7bb:	48 85 ed             	test   %rbp,%rbp
ffffffff8021f7be:	7f f0                	jg     ffffffff8021f7b0 <caml_ba_fill+0x140>
ffffffff8021f7c0:	85 c0                	test   %eax,%eax
ffffffff8021f7c2:	75 ac                	jne    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021f7c4:	4c 89 35 ad 48 02 00 	mov    %r14,0x248ad(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021f7cb:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
ffffffff8021f7d0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
ffffffff8021f7d7:	00 00 
ffffffff8021f7d9:	0f 85 64 05 00 00    	jne    ffffffff8021fd43 <caml_ba_fill+0x6d3>
ffffffff8021f7df:	48 83 c4 70          	add    $0x70,%rsp
ffffffff8021f7e3:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f7e8:	5b                   	pop    %rbx
ffffffff8021f7e9:	5d                   	pop    %rbp
ffffffff8021f7ea:	41 5c                	pop    %r12
ffffffff8021f7ec:	41 5d                	pop    %r13
ffffffff8021f7ee:	41 5e                	pop    %r14
ffffffff8021f7f0:	c3                   	retq   
ffffffff8021f7f1:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
ffffffff8021f7f5:	49 81 fc ff 0f 00 00 	cmp    $0xfff,%r12
ffffffff8021f7fc:	7f 09                	jg     ffffffff8021f807 <caml_ba_fill+0x197>
ffffffff8021f7fe:	80 e6 04             	and    $0x4,%dh
ffffffff8021f801:	0f 84 ff 02 00 00    	je     ffffffff8021fb06 <caml_ba_fill+0x496>
ffffffff8021f807:	e8 f4 4a ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021f80c:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f811:	4d 85 e4             	test   %r12,%r12
ffffffff8021f814:	0f 8e 56 ff ff ff    	jle    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021f81a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021f820:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff8021f824:	4c 89 2b             	mov    %r13,(%rbx)
ffffffff8021f827:	48 83 c3 08          	add    $0x8,%rbx
ffffffff8021f82b:	48 85 ed             	test   %rbp,%rbp
ffffffff8021f82e:	7f f0                	jg     ffffffff8021f820 <caml_ba_fill+0x1b0>
ffffffff8021f830:	eb 8e                	jmp    ffffffff8021f7c0 <caml_ba_fill+0x150>
ffffffff8021f832:	48 d1 fe             	sar    %rsi
ffffffff8021f835:	49 89 f5             	mov    %rsi,%r13
ffffffff8021f838:	49 81 fc ff 0f 00 00 	cmp    $0xfff,%r12
ffffffff8021f83f:	7f 09                	jg     ffffffff8021f84a <caml_ba_fill+0x1da>
ffffffff8021f841:	80 e6 04             	and    $0x4,%dh
ffffffff8021f844:	0f 84 6c 02 00 00    	je     ffffffff8021fab6 <caml_ba_fill+0x446>
ffffffff8021f84a:	e8 b1 4a ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021f84f:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f854:	4d 85 e4             	test   %r12,%r12
ffffffff8021f857:	0f 8e 13 ff ff ff    	jle    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021f85d:	0f 1f 00             	nopl   (%rax)
ffffffff8021f860:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff8021f864:	4c 89 2b             	mov    %r13,(%rbx)
ffffffff8021f867:	48 83 c3 08          	add    $0x8,%rbx
ffffffff8021f86b:	48 85 ed             	test   %rbp,%rbp
ffffffff8021f86e:	7f f0                	jg     ffffffff8021f860 <caml_ba_fill+0x1f0>
ffffffff8021f870:	e9 4b ff ff ff       	jmpq   ffffffff8021f7c0 <caml_ba_fill+0x150>
ffffffff8021f875:	4b 8d 04 24          	lea    (%r12,%r12,1),%rax
ffffffff8021f879:	f2 0f 10 06          	movsd  (%rsi),%xmm0
ffffffff8021f87d:	f2 0f 10 4e 08       	movsd  0x8(%rsi),%xmm1
ffffffff8021f882:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
ffffffff8021f888:	7f 09                	jg     ffffffff8021f893 <caml_ba_fill+0x223>
ffffffff8021f88a:	80 e6 04             	and    $0x4,%dh
ffffffff8021f88d:	0f 84 63 02 00 00    	je     ffffffff8021faf6 <caml_ba_fill+0x486>
ffffffff8021f893:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
ffffffff8021f899:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8021f89f:	e8 5c 4a ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021f8a4:	4d 85 e4             	test   %r12,%r12
ffffffff8021f8a7:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
ffffffff8021f8ad:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
ffffffff8021f8b3:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f8b8:	0f 8e b2 fe ff ff    	jle    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021f8be:	66 90                	xchg   %ax,%ax
ffffffff8021f8c0:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
ffffffff8021f8c4:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff8021f8c8:	48 83 c3 10          	add    $0x10,%rbx
ffffffff8021f8cc:	f2 0f 11 4b f8       	movsd  %xmm1,-0x8(%rbx)
ffffffff8021f8d1:	48 85 ed             	test   %rbp,%rbp
ffffffff8021f8d4:	7f ea                	jg     ffffffff8021f8c0 <caml_ba_fill+0x250>
ffffffff8021f8d6:	e9 e5 fe ff ff       	jmpq   ffffffff8021f7c0 <caml_ba_fill+0x150>
ffffffff8021f8db:	44 8b 6e 08          	mov    0x8(%rsi),%r13d
ffffffff8021f8df:	49 81 fc ff 0f 00 00 	cmp    $0xfff,%r12
ffffffff8021f8e6:	7f 09                	jg     ffffffff8021f8f1 <caml_ba_fill+0x281>
ffffffff8021f8e8:	80 e6 04             	and    $0x4,%dh
ffffffff8021f8eb:	0f 84 e5 01 00 00    	je     ffffffff8021fad6 <caml_ba_fill+0x466>
ffffffff8021f8f1:	e8 0a 4a ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021f8f6:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f8fb:	4d 85 e4             	test   %r12,%r12
ffffffff8021f8fe:	0f 8e 6c fe ff ff    	jle    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021f904:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021f908:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff8021f90c:	44 89 2b             	mov    %r13d,(%rbx)
ffffffff8021f90f:	48 83 c3 04          	add    $0x4,%rbx
ffffffff8021f913:	48 85 ed             	test   %rbp,%rbp
ffffffff8021f916:	7f f0                	jg     ffffffff8021f908 <caml_ba_fill+0x298>
ffffffff8021f918:	e9 a3 fe ff ff       	jmpq   ffffffff8021f7c0 <caml_ba_fill+0x150>
ffffffff8021f91d:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021f921:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021f925:	4b 8d 04 24          	lea    (%r12,%r12,1),%rax
ffffffff8021f929:	f2 0f 5a 06          	cvtsd2ss (%rsi),%xmm0
ffffffff8021f92d:	f2 0f 5a 4e 08       	cvtsd2ss 0x8(%rsi),%xmm1
ffffffff8021f932:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
ffffffff8021f938:	7f 09                	jg     ffffffff8021f943 <caml_ba_fill+0x2d3>
ffffffff8021f93a:	80 e6 04             	and    $0x4,%dh
ffffffff8021f93d:	0f 84 83 01 00 00    	je     ffffffff8021fac6 <caml_ba_fill+0x456>
ffffffff8021f943:	f3 0f 11 4c 24 10    	movss  %xmm1,0x10(%rsp)
ffffffff8021f949:	f3 0f 11 44 24 08    	movss  %xmm0,0x8(%rsp)
ffffffff8021f94f:	e8 ac 49 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021f954:	4d 85 e4             	test   %r12,%r12
ffffffff8021f957:	f3 0f 10 44 24 08    	movss  0x8(%rsp),%xmm0
ffffffff8021f95d:	f3 0f 10 4c 24 10    	movss  0x10(%rsp),%xmm1
ffffffff8021f963:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f968:	0f 8e 02 fe ff ff    	jle    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021f96e:	66 90                	xchg   %ax,%ax
ffffffff8021f970:	f3 0f 11 03          	movss  %xmm0,(%rbx)
ffffffff8021f974:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff8021f978:	48 83 c3 08          	add    $0x8,%rbx
ffffffff8021f97c:	f3 0f 11 4b fc       	movss  %xmm1,-0x4(%rbx)
ffffffff8021f981:	48 85 ed             	test   %rbp,%rbp
ffffffff8021f984:	7f ea                	jg     ffffffff8021f970 <caml_ba_fill+0x300>
ffffffff8021f986:	e9 35 fe ff ff       	jmpq   ffffffff8021f7c0 <caml_ba_fill+0x150>
ffffffff8021f98b:	f2 0f 10 06          	movsd  (%rsi),%xmm0
ffffffff8021f98f:	49 81 fc ff 0f 00 00 	cmp    $0xfff,%r12
ffffffff8021f996:	7f 09                	jg     ffffffff8021f9a1 <caml_ba_fill+0x331>
ffffffff8021f998:	80 e6 04             	and    $0x4,%dh
ffffffff8021f99b:	0f 84 05 01 00 00    	je     ffffffff8021faa6 <caml_ba_fill+0x436>
ffffffff8021f9a1:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8021f9a7:	e8 54 49 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021f9ac:	4d 85 e4             	test   %r12,%r12
ffffffff8021f9af:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
ffffffff8021f9b5:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f9ba:	0f 8e b0 fd ff ff    	jle    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021f9c0:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff8021f9c4:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
ffffffff8021f9c8:	48 83 c3 08          	add    $0x8,%rbx
ffffffff8021f9cc:	48 85 ed             	test   %rbp,%rbp
ffffffff8021f9cf:	7f ef                	jg     ffffffff8021f9c0 <caml_ba_fill+0x350>
ffffffff8021f9d1:	e9 ea fd ff ff       	jmpq   ffffffff8021f7c0 <caml_ba_fill+0x150>
ffffffff8021f9d6:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
ffffffff8021f9da:	49 81 fc ff 0f 00 00 	cmp    $0xfff,%r12
ffffffff8021f9e1:	7f 09                	jg     ffffffff8021f9ec <caml_ba_fill+0x37c>
ffffffff8021f9e3:	80 e6 04             	and    $0x4,%dh
ffffffff8021f9e6:	0f 84 fa 00 00 00    	je     ffffffff8021fae6 <caml_ba_fill+0x476>
ffffffff8021f9ec:	e8 0f 49 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021f9f1:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021f9f6:	4d 85 e4             	test   %r12,%r12
ffffffff8021f9f9:	0f 8e 71 fd ff ff    	jle    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021f9ff:	90                   	nop
ffffffff8021fa00:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff8021fa04:	4c 89 2b             	mov    %r13,(%rbx)
ffffffff8021fa07:	48 83 c3 08          	add    $0x8,%rbx
ffffffff8021fa0b:	48 85 ed             	test   %rbp,%rbp
ffffffff8021fa0e:	7f f0                	jg     ffffffff8021fa00 <caml_ba_fill+0x390>
ffffffff8021fa10:	e9 ab fd ff ff       	jmpq   ffffffff8021f7c0 <caml_ba_fill+0x150>
ffffffff8021fa15:	e8 e6 48 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fa1a:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8021fa1f:	4d 85 e4             	test   %r12,%r12
ffffffff8021fa22:	0f 8f 23 fd ff ff    	jg     ffffffff8021f74b <caml_ba_fill+0xdb>
ffffffff8021fa28:	e9 43 fd ff ff       	jmpq   ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021fa2d:	0f 1f 00             	nopl   (%rax)
ffffffff8021fa30:	48 8b 41 10          	mov    0x10(%rcx),%rax
ffffffff8021fa34:	0f b6 e8             	movzbl %al,%ebp
ffffffff8021fa37:	3c 0c                	cmp    $0xc,%al
ffffffff8021fa39:	0f 87 23 02 00 00    	ja     ffffffff8021fc62 <caml_ba_fill+0x5f2>
ffffffff8021fa3f:	48 8d 0d ae 31 00 00 	lea    0x31ae(%rip),%rcx        # ffffffff80222bf4 <posix_signals+0xb14>
ffffffff8021fa46:	48 63 14 a9          	movslq (%rcx,%rbp,4),%rdx
ffffffff8021fa4a:	48 01 ca             	add    %rcx,%rdx
ffffffff8021fa4d:	ff e2                	jmpq   *%rdx
ffffffff8021fa4f:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021fa53:	f2 0f 5a 06          	cvtsd2ss (%rsi),%xmm0
ffffffff8021fa57:	49 81 fc ff 0f 00 00 	cmp    $0xfff,%r12
ffffffff8021fa5e:	7f 09                	jg     ffffffff8021fa69 <caml_ba_fill+0x3f9>
ffffffff8021fa60:	80 e6 04             	and    $0x4,%dh
ffffffff8021fa63:	0f 84 ad 00 00 00    	je     ffffffff8021fb16 <caml_ba_fill+0x4a6>
ffffffff8021fa69:	f3 0f 11 44 24 08    	movss  %xmm0,0x8(%rsp)
ffffffff8021fa6f:	e8 8c 48 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fa74:	4d 85 e4             	test   %r12,%r12
ffffffff8021fa77:	f3 0f 10 44 24 08    	movss  0x8(%rsp),%xmm0
ffffffff8021fa7d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021fa82:	0f 8e e8 fc ff ff    	jle    ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021fa88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021fa8f:	00 
ffffffff8021fa90:	48 83 ed 01          	sub    $0x1,%rbp
ffffffff8021fa94:	f3 0f 11 03          	movss  %xmm0,(%rbx)
ffffffff8021fa98:	48 83 c3 04          	add    $0x4,%rbx
ffffffff8021fa9c:	48 85 ed             	test   %rbp,%rbp
ffffffff8021fa9f:	7f ef                	jg     ffffffff8021fa90 <caml_ba_fill+0x420>
ffffffff8021faa1:	e9 1a fd ff ff       	jmpq   ffffffff8021f7c0 <caml_ba_fill+0x150>
ffffffff8021faa6:	4d 85 e4             	test   %r12,%r12
ffffffff8021faa9:	0f 8e 15 fd ff ff    	jle    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021faaf:	31 c0                	xor    %eax,%eax
ffffffff8021fab1:	e9 0a ff ff ff       	jmpq   ffffffff8021f9c0 <caml_ba_fill+0x350>
ffffffff8021fab6:	4d 85 e4             	test   %r12,%r12
ffffffff8021fab9:	0f 8e 05 fd ff ff    	jle    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021fabf:	31 c0                	xor    %eax,%eax
ffffffff8021fac1:	e9 9a fd ff ff       	jmpq   ffffffff8021f860 <caml_ba_fill+0x1f0>
ffffffff8021fac6:	4d 85 e4             	test   %r12,%r12
ffffffff8021fac9:	0f 8e f5 fc ff ff    	jle    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021facf:	31 c0                	xor    %eax,%eax
ffffffff8021fad1:	e9 9a fe ff ff       	jmpq   ffffffff8021f970 <caml_ba_fill+0x300>
ffffffff8021fad6:	4d 85 e4             	test   %r12,%r12
ffffffff8021fad9:	0f 8e e5 fc ff ff    	jle    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021fadf:	31 c0                	xor    %eax,%eax
ffffffff8021fae1:	e9 22 fe ff ff       	jmpq   ffffffff8021f908 <caml_ba_fill+0x298>
ffffffff8021fae6:	4d 85 e4             	test   %r12,%r12
ffffffff8021fae9:	0f 8e d5 fc ff ff    	jle    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021faef:	31 c0                	xor    %eax,%eax
ffffffff8021faf1:	e9 0a ff ff ff       	jmpq   ffffffff8021fa00 <caml_ba_fill+0x390>
ffffffff8021faf6:	4d 85 e4             	test   %r12,%r12
ffffffff8021faf9:	0f 8e c5 fc ff ff    	jle    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021faff:	31 c0                	xor    %eax,%eax
ffffffff8021fb01:	e9 ba fd ff ff       	jmpq   ffffffff8021f8c0 <caml_ba_fill+0x250>
ffffffff8021fb06:	4d 85 e4             	test   %r12,%r12
ffffffff8021fb09:	0f 8e b5 fc ff ff    	jle    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021fb0f:	31 c0                	xor    %eax,%eax
ffffffff8021fb11:	e9 0a fd ff ff       	jmpq   ffffffff8021f820 <caml_ba_fill+0x1b0>
ffffffff8021fb16:	31 c0                	xor    %eax,%eax
ffffffff8021fb18:	4d 85 e4             	test   %r12,%r12
ffffffff8021fb1b:	0f 8f 6f ff ff ff    	jg     ffffffff8021fa90 <caml_ba_fill+0x420>
ffffffff8021fb21:	e9 9e fc ff ff       	jmpq   ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021fb26:	4d 85 e4             	test   %r12,%r12
ffffffff8021fb29:	0f 8e 95 fc ff ff    	jle    ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021fb2f:	31 c0                	xor    %eax,%eax
ffffffff8021fb31:	e9 71 fc ff ff       	jmpq   ffffffff8021f7a7 <caml_ba_fill+0x137>
ffffffff8021fb36:	48 d1 fe             	sar    %rsi
ffffffff8021fb39:	49 89 f5             	mov    %rsi,%r13
ffffffff8021fb3c:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fb3f:	0f 84 11 01 00 00    	je     ffffffff8021fc56 <caml_ba_fill+0x5e6>
ffffffff8021fb45:	e8 b6 47 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fb4a:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fb4f:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8021fb54:	e9 f2 fb ff ff       	jmpq   ffffffff8021f74b <caml_ba_fill+0xdb>
ffffffff8021fb59:	48 d1 fe             	sar    %rsi
ffffffff8021fb5c:	49 89 f5             	mov    %rsi,%r13
ffffffff8021fb5f:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fb62:	0f 84 21 01 00 00    	je     ffffffff8021fc89 <caml_ba_fill+0x619>
ffffffff8021fb68:	e8 93 47 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fb6d:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fb72:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021fb77:	e9 2b fc ff ff       	jmpq   ffffffff8021f7a7 <caml_ba_fill+0x137>
ffffffff8021fb7c:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021fb80:	66 0f ef c9          	pxor   %xmm1,%xmm1
ffffffff8021fb84:	f2 0f 5a 06          	cvtsd2ss (%rsi),%xmm0
ffffffff8021fb88:	f2 0f 5a 4e 08       	cvtsd2ss 0x8(%rsi),%xmm1
ffffffff8021fb8d:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fb90:	0f 85 08 01 00 00    	jne    ffffffff8021fc9e <caml_ba_fill+0x62e>
ffffffff8021fb96:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fb9b:	31 c0                	xor    %eax,%eax
ffffffff8021fb9d:	e9 ce fd ff ff       	jmpq   ffffffff8021f970 <caml_ba_fill+0x300>
ffffffff8021fba2:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
ffffffff8021fba6:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fba9:	0f 85 1b 01 00 00    	jne    ffffffff8021fcca <caml_ba_fill+0x65a>
ffffffff8021fbaf:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fbb4:	31 c0                	xor    %eax,%eax
ffffffff8021fbb6:	e9 65 fc ff ff       	jmpq   ffffffff8021f820 <caml_ba_fill+0x1b0>
ffffffff8021fbbb:	f2 0f 10 06          	movsd  (%rsi),%xmm0
ffffffff8021fbbf:	f2 0f 10 4e 08       	movsd  0x8(%rsi),%xmm1
ffffffff8021fbc4:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fbc7:	0f 85 11 01 00 00    	jne    ffffffff8021fcde <caml_ba_fill+0x66e>
ffffffff8021fbcd:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fbd2:	31 c0                	xor    %eax,%eax
ffffffff8021fbd4:	e9 e7 fc ff ff       	jmpq   ffffffff8021f8c0 <caml_ba_fill+0x250>
ffffffff8021fbd9:	48 d1 fe             	sar    %rsi
ffffffff8021fbdc:	49 89 f5             	mov    %rsi,%r13
ffffffff8021fbdf:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fbe2:	0f 84 53 01 00 00    	je     ffffffff8021fd3b <caml_ba_fill+0x6cb>
ffffffff8021fbe8:	e8 13 47 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fbed:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fbf2:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021fbf7:	e9 64 fc ff ff       	jmpq   ffffffff8021f860 <caml_ba_fill+0x1f0>
ffffffff8021fbfc:	f2 0f 10 06          	movsd  (%rsi),%xmm0
ffffffff8021fc00:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fc03:	0f 84 29 01 00 00    	je     ffffffff8021fd32 <caml_ba_fill+0x6c2>
ffffffff8021fc09:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8021fc0f:	e8 ec 46 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fc14:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
ffffffff8021fc1a:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021fc1f:	e9 9c fd ff ff       	jmpq   ffffffff8021f9c0 <caml_ba_fill+0x350>
ffffffff8021fc24:	44 8b 6e 08          	mov    0x8(%rsi),%r13d
ffffffff8021fc28:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fc2b:	0f 85 d9 00 00 00    	jne    ffffffff8021fd0a <caml_ba_fill+0x69a>
ffffffff8021fc31:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fc36:	31 c0                	xor    %eax,%eax
ffffffff8021fc38:	e9 cb fc ff ff       	jmpq   ffffffff8021f908 <caml_ba_fill+0x298>
ffffffff8021fc3d:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
ffffffff8021fc41:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fc44:	0f 85 d4 00 00 00    	jne    ffffffff8021fd1e <caml_ba_fill+0x6ae>
ffffffff8021fc4a:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fc4f:	31 c0                	xor    %eax,%eax
ffffffff8021fc51:	e9 aa fd ff ff       	jmpq   ffffffff8021fa00 <caml_ba_fill+0x390>
ffffffff8021fc56:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fc5b:	31 c9                	xor    %ecx,%ecx
ffffffff8021fc5d:	e9 e9 fa ff ff       	jmpq   ffffffff8021f74b <caml_ba_fill+0xdb>
ffffffff8021fc62:	66 0f ef c0          	pxor   %xmm0,%xmm0
ffffffff8021fc66:	f2 0f 5a 06          	cvtsd2ss (%rsi),%xmm0
ffffffff8021fc6a:	f6 c4 04             	test   $0x4,%ah
ffffffff8021fc6d:	74 26                	je     ffffffff8021fc95 <caml_ba_fill+0x625>
ffffffff8021fc6f:	f3 0f 11 44 24 08    	movss  %xmm0,0x8(%rsp)
ffffffff8021fc75:	e8 86 46 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fc7a:	f3 0f 10 44 24 08    	movss  0x8(%rsp),%xmm0
ffffffff8021fc80:	f3 0f 11 03          	movss  %xmm0,(%rbx)
ffffffff8021fc84:	e9 e7 fa ff ff       	jmpq   ffffffff8021f770 <caml_ba_fill+0x100>
ffffffff8021fc89:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fc8e:	31 c0                	xor    %eax,%eax
ffffffff8021fc90:	e9 12 fb ff ff       	jmpq   ffffffff8021f7a7 <caml_ba_fill+0x137>
ffffffff8021fc95:	f3 0f 11 03          	movss  %xmm0,(%rbx)
ffffffff8021fc99:	e9 26 fb ff ff       	jmpq   ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021fc9e:	f3 0f 11 4c 24 10    	movss  %xmm1,0x10(%rsp)
ffffffff8021fca4:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fca9:	f3 0f 11 44 24 08    	movss  %xmm0,0x8(%rsp)
ffffffff8021fcaf:	e8 4c 46 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fcb4:	f3 0f 10 44 24 08    	movss  0x8(%rsp),%xmm0
ffffffff8021fcba:	f3 0f 10 4c 24 10    	movss  0x10(%rsp),%xmm1
ffffffff8021fcc0:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021fcc5:	e9 a6 fc ff ff       	jmpq   ffffffff8021f970 <caml_ba_fill+0x300>
ffffffff8021fcca:	e8 31 46 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fccf:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fcd4:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021fcd9:	e9 42 fb ff ff       	jmpq   ffffffff8021f820 <caml_ba_fill+0x1b0>
ffffffff8021fcde:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
ffffffff8021fce4:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fce9:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
ffffffff8021fcef:	e8 0c 46 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fcf4:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
ffffffff8021fcfa:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
ffffffff8021fd00:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021fd05:	e9 b6 fb ff ff       	jmpq   ffffffff8021f8c0 <caml_ba_fill+0x250>
ffffffff8021fd0a:	e8 f1 45 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fd0f:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fd14:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021fd19:	e9 ea fb ff ff       	jmpq   ffffffff8021f908 <caml_ba_fill+0x298>
ffffffff8021fd1e:	e8 dd 45 ff ff       	callq  ffffffff80214300 <caml_enter_blocking_section>
ffffffff8021fd23:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8021fd28:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8021fd2d:	e9 ce fc ff ff       	jmpq   ffffffff8021fa00 <caml_ba_fill+0x390>
ffffffff8021fd32:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
ffffffff8021fd36:	e9 89 fa ff ff       	jmpq   ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021fd3b:	48 89 33             	mov    %rsi,(%rbx)
ffffffff8021fd3e:	e9 81 fa ff ff       	jmpq   ffffffff8021f7c4 <caml_ba_fill+0x154>
ffffffff8021fd43:	e8 58 03 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021fd48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8021fd4f:	00 

ffffffff8021fd50 <caml_ba_reshape>:
ffffffff8021fd50:	53                   	push   %rbx
ffffffff8021fd51:	48 89 f2             	mov    %rsi,%rdx
ffffffff8021fd54:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
ffffffff8021fd5b:	48 8b 1d 16 43 02 00 	mov    0x24316(%rip),%rbx        # ffffffff80244078 <caml_local_roots>
ffffffff8021fd62:	48 89 34 24          	mov    %rsi,(%rsp)
ffffffff8021fd66:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8021fd6b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff8021fd72:	00 00 
ffffffff8021fd74:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
ffffffff8021fd7b:	00 
ffffffff8021fd7c:	31 c0                	xor    %eax,%eax
ffffffff8021fd7e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
ffffffff8021fd83:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8021fd88:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
ffffffff8021fd8d:	48 89 e0             	mov    %rsp,%rax
ffffffff8021fd90:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
ffffffff8021fd95:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
ffffffff8021fd9a:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
ffffffff8021fd9f:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
ffffffff8021fda4:	48 89 05 cd 42 02 00 	mov    %rax,0x242cd(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021fdab:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
ffffffff8021fdb0:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
ffffffff8021fdb7:	00 00 
ffffffff8021fdb9:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
ffffffff8021fdc0:	00 00 
ffffffff8021fdc2:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
ffffffff8021fdc9:	00 00 
ffffffff8021fdcb:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
ffffffff8021fdd2:	00 00 
ffffffff8021fdd4:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
ffffffff8021fddb:	00 00 
ffffffff8021fddd:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff8021fde2:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
ffffffff8021fde6:	48 89 c6             	mov    %rax,%rsi
ffffffff8021fde9:	48 c1 ee 0a          	shr    $0xa,%rsi
ffffffff8021fded:	48 3d ff 43 00 00    	cmp    $0x43ff,%rax
ffffffff8021fdf3:	0f 87 17 01 00 00    	ja     ffffffff8021ff10 <caml_ba_reshape+0x1c0>
ffffffff8021fdf9:	48 85 f6             	test   %rsi,%rsi
ffffffff8021fdfc:	0f 84 e2 00 00 00    	je     ffffffff8021fee4 <caml_ba_reshape+0x194>
ffffffff8021fe02:	48 8d bc 24 a0 00 00 	lea    0xa0(%rsp),%rdi
ffffffff8021fe09:	00 
ffffffff8021fe0a:	4c 8d 04 f2          	lea    (%rdx,%rsi,8),%r8
ffffffff8021fe0e:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8021fe13:	48 29 d7             	sub    %rdx,%rdi
ffffffff8021fe16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8021fe1d:	00 00 00 
ffffffff8021fe20:	48 8b 02             	mov    (%rdx),%rax
ffffffff8021fe23:	48 d1 f8             	sar    %rax
ffffffff8021fe26:	48 89 04 17          	mov    %rax,(%rdi,%rdx,1)
ffffffff8021fe2a:	0f 88 d4 00 00 00    	js     ffffffff8021ff04 <caml_ba_reshape+0x1b4>
ffffffff8021fe30:	48 83 c2 08          	add    $0x8,%rdx
ffffffff8021fe34:	48 0f af c8          	imul   %rax,%rcx
ffffffff8021fe38:	49 39 d0             	cmp    %rdx,%r8
ffffffff8021fe3b:	75 e3                	jne    ffffffff8021fe20 <caml_ba_reshape+0xd0>
ffffffff8021fe3d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021fe42:	4c 8b 48 10          	mov    0x10(%rax),%r9
ffffffff8021fe46:	4c 8d 40 08          	lea    0x8(%rax),%r8
ffffffff8021fe4a:	4d 85 c9             	test   %r9,%r9
ffffffff8021fe4d:	0f 8e 8a 00 00 00    	jle    ffffffff8021fedd <caml_ba_reshape+0x18d>
ffffffff8021fe53:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8021fe58:	31 d2                	xor    %edx,%edx
ffffffff8021fe5a:	31 c0                	xor    %eax,%eax
ffffffff8021fe5c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8021fe60:	83 c2 01             	add    $0x1,%edx
ffffffff8021fe63:	49 0f af 7c c0 20    	imul   0x20(%r8,%rax,8),%rdi
ffffffff8021fe69:	48 63 c2             	movslq %edx,%rax
ffffffff8021fe6c:	4c 39 c8             	cmp    %r9,%rax
ffffffff8021fe6f:	7c ef                	jl     ffffffff8021fe60 <caml_ba_reshape+0x110>
ffffffff8021fe71:	48 39 cf             	cmp    %rcx,%rdi
ffffffff8021fe74:	0f 85 a7 00 00 00    	jne    ffffffff8021ff21 <caml_ba_reshape+0x1d1>
ffffffff8021fe7a:	49 8b 78 10          	mov    0x10(%r8),%rdi
ffffffff8021fe7e:	49 8b 10             	mov    (%r8),%rdx
ffffffff8021fe81:	48 8d 8c 24 a0 00 00 	lea    0xa0(%rsp),%rcx
ffffffff8021fe88:	00 
ffffffff8021fe89:	e8 c2 e5 ff ff       	callq  ffffffff8021e450 <caml_ba_alloc>
ffffffff8021fe8e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff8021fe93:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8021fe98:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8021fe9b:	48 89 10             	mov    %rdx,(%rax)
ffffffff8021fe9e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021fea3:	48 8d 70 08          	lea    0x8(%rax),%rsi
ffffffff8021fea7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021feac:	48 8d 78 08          	lea    0x8(%rax),%rdi
ffffffff8021feb0:	e8 9b da ff ff       	callq  ffffffff8021d950 <caml_ba_update_proxy>
ffffffff8021feb5:	48 89 1d bc 41 02 00 	mov    %rbx,0x241bc(%rip)        # ffffffff80244078 <caml_local_roots>
ffffffff8021febc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8021fec1:	48 8b 9c 24 28 01 00 	mov    0x128(%rsp),%rbx
ffffffff8021fec8:	00 
ffffffff8021fec9:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
ffffffff8021fed0:	00 00 
ffffffff8021fed2:	75 48                	jne    ffffffff8021ff1c <caml_ba_reshape+0x1cc>
ffffffff8021fed4:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
ffffffff8021fedb:	5b                   	pop    %rbx
ffffffff8021fedc:	c3                   	retq   
ffffffff8021fedd:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8021fee2:	eb 8d                	jmp    ffffffff8021fe71 <caml_ba_reshape+0x121>
ffffffff8021fee4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8021fee9:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8021feee:	4c 8b 48 10          	mov    0x10(%rax),%r9
ffffffff8021fef2:	4c 8d 40 08          	lea    0x8(%rax),%r8
ffffffff8021fef6:	4d 85 c9             	test   %r9,%r9
ffffffff8021fef9:	0f 8f 54 ff ff ff    	jg     ffffffff8021fe53 <caml_ba_reshape+0x103>
ffffffff8021feff:	e9 76 ff ff ff       	jmpq   ffffffff8021fe7a <caml_ba_reshape+0x12a>
ffffffff8021ff04:	48 8d 3d ed 2e 00 00 	lea    0x2eed(%rip),%rdi        # ffffffff80222df8 <posix_signals+0xd18>
ffffffff8021ff0b:	e8 70 75 fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021ff10:	48 8d 3d b1 2e 00 00 	lea    0x2eb1(%rip),%rdi        # ffffffff80222dc8 <posix_signals+0xce8>
ffffffff8021ff17:	e8 64 75 fe ff       	callq  ffffffff80207480 <caml_invalid_argument>
ffffffff8021ff1c:	e8 7f 01 fe ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8021ff21:	48 8d 3d f8 2e 00 00 	lea    0x2ef8(%rip),%rdi        # ffffffff80222e20 <posix_signals+0xd40>
ffffffff8021ff28:	e8 53 75 fe ff       	callq  ffffffff80207480 <caml_invalid_argument>

ffffffff8021ff2d <caml_ba_compare.cold>:
ffffffff8021ff2d:	31 c0                	xor    %eax,%eax
ffffffff8021ff2f:	c3                   	retq   

ffffffff8021ff30 <caml_ba_hash.cold>:
ffffffff8021ff30:	31 c0                	xor    %eax,%eax
ffffffff8021ff32:	e9 73 dc ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021ff37:	31 c0                	xor    %eax,%eax
ffffffff8021ff39:	e9 6c dc ff ff       	jmpq   ffffffff8021dbaa <caml_ba_hash+0x13a>
ffffffff8021ff3e:	66 90                	xchg   %ax,%ax

ffffffff8021ff40 <hash_aux>:
ffffffff8021ff40:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8021ff44:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8021ff48:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
ffffffff8021ff4d:	48 89 47 08          	mov    %rax,0x8(%rdi)
ffffffff8021ff51:	0f 88 6e 02 00 00    	js     ffffffff802201c5 <hash_aux+0x285>
ffffffff8021ff57:	41 55                	push   %r13
ffffffff8021ff59:	4c 8d 2d 14 2f 00 00 	lea    0x2f14(%rip),%r13        # ffffffff80222e74 <posix_signals+0xd94>
ffffffff8021ff60:	41 54                	push   %r12
ffffffff8021ff62:	55                   	push   %rbp
ffffffff8021ff63:	48 89 f5             	mov    %rsi,%rbp
ffffffff8021ff66:	53                   	push   %rbx
ffffffff8021ff67:	48 89 fb             	mov    %rdi,%rbx
ffffffff8021ff6a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8021ff6e:	48 85 c0             	test   %rax,%rax
ffffffff8021ff71:	78 6c                	js     ffffffff8021ffdf <hash_aux+0x9f>
ffffffff8021ff73:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff8021ff77:	0f 85 49 01 00 00    	jne    ffffffff802200c6 <hash_aux+0x186>
ffffffff8021ff7d:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021ff80:	49 89 ec             	mov    %rbp,%r12
ffffffff8021ff83:	e8 98 04 ff ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff8021ff88:	a8 07                	test   $0x7,%al
ffffffff8021ff8a:	0f 84 23 02 00 00    	je     ffffffff802201b3 <hash_aux+0x273>
ffffffff8021ff90:	0f b6 55 f8          	movzbl -0x8(%rbp),%edx
ffffffff8021ff94:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
ffffffff8021ff98:	8d 42 08             	lea    0x8(%rdx),%eax
ffffffff8021ff9b:	80 fa f8             	cmp    $0xf8,%dl
ffffffff8021ff9e:	0f 82 c4 01 00 00    	jb     ffffffff80220168 <hash_aux+0x228>
ffffffff8021ffa4:	0f b6 c0             	movzbl %al,%eax
ffffffff8021ffa7:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
ffffffff8021ffac:	4c 01 e8             	add    %r13,%rax
ffffffff8021ffaf:	ff e0                	jmpq   *%rax
ffffffff8021ffb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8021ffb8:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff8021ffbc:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
ffffffff8021ffc1:	74 1c                	je     ffffffff8021ffdf <hash_aux+0x9f>
ffffffff8021ffc3:	48 83 6b 10 01       	subq   $0x1,0x10(%rbx)
ffffffff8021ffc8:	4c 69 23 3f 00 01 00 	imul   $0x1003f,(%rbx),%r12
ffffffff8021ffcf:	48 89 ef             	mov    %rbp,%rdi
ffffffff8021ffd2:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff8021ffd6:	ff 50 18             	callq  *0x18(%rax)
ffffffff8021ffd9:	4c 01 e0             	add    %r12,%rax
ffffffff8021ffdc:	48 89 03             	mov    %rax,(%rbx)
ffffffff8021ffdf:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8021ffe3:	5b                   	pop    %rbx
ffffffff8021ffe4:	5d                   	pop    %rbp
ffffffff8021ffe5:	41 5c                	pop    %r12
ffffffff8021ffe7:	41 5d                	pop    %r13
ffffffff8021ffe9:	c3                   	retq   
ffffffff8021ffea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8021fff0:	48 83 6b 10 01       	subq   $0x1,0x10(%rbx)
ffffffff8021fff5:	48 8b 07             	mov    (%rdi),%rax
ffffffff8021fff8:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8021fffc:	74 e1                	je     ffffffff8021ffdf <hash_aux+0x9f>
ffffffff8021fffe:	49 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%r8
ffffffff80220005:	48 8b 03             	mov    (%rbx),%rax
ffffffff80220008:	48 8d 75 08          	lea    0x8(%rbp),%rsi
ffffffff8022000c:	49 29 e8             	sub    %rbp,%r8
ffffffff8022000f:	90                   	nop
ffffffff80220010:	48 8d 56 f8          	lea    -0x8(%rsi),%rdx
ffffffff80220014:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80220018:	48 8d 0c c0          	lea    (%rax,%rax,8),%rcx
ffffffff8022001c:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80220020:	48 8d 04 48          	lea    (%rax,%rcx,2),%rax
ffffffff80220024:	0f b6 4a ff          	movzbl -0x1(%rdx),%ecx
ffffffff80220028:	48 01 c8             	add    %rcx,%rax
ffffffff8022002b:	48 89 03             	mov    %rax,(%rbx)
ffffffff8022002e:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80220031:	75 e5                	jne    ffffffff80220018 <hash_aux+0xd8>
ffffffff80220033:	48 8b 17             	mov    (%rdi),%rdx
ffffffff80220036:	48 83 c6 08          	add    $0x8,%rsi
ffffffff8022003a:	49 8d 0c 30          	lea    (%r8,%rsi,1),%rcx
ffffffff8022003e:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80220042:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff80220046:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80220049:	77 c5                	ja     ffffffff80220010 <hash_aux+0xd0>
ffffffff8022004b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8022004f:	5b                   	pop    %rbx
ffffffff80220050:	5d                   	pop    %rbp
ffffffff80220051:	41 5c                	pop    %r12
ffffffff80220053:	41 5d                	pop    %r13
ffffffff80220055:	c3                   	retq   
ffffffff80220056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022005d:	00 00 00 
ffffffff80220060:	48 83 6b 10 01       	subq   $0x1,0x10(%rbx)
ffffffff80220065:	48 69 13 3f 00 01 00 	imul   $0x1003f,(%rbx),%rdx
ffffffff8022006c:	48 8b 45 08          	mov    0x8(%rbp),%rax
ffffffff80220070:	48 d1 f8             	sar    %rax
ffffffff80220073:	48 01 d0             	add    %rdx,%rax
ffffffff80220076:	48 89 03             	mov    %rax,(%rbx)
ffffffff80220079:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8022007d:	5b                   	pop    %rbx
ffffffff8022007e:	5d                   	pop    %rbp
ffffffff8022007f:	41 5c                	pop    %r12
ffffffff80220081:	41 5d                	pop    %r13
ffffffff80220083:	c3                   	retq   
ffffffff80220084:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80220088:	48 8b 07             	mov    (%rdi),%rax
ffffffff8022008b:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff8022008f:	48 c1 e0 03          	shl    $0x3,%rax
ffffffff80220093:	48 29 c5             	sub    %rax,%rbp
ffffffff80220096:	48 8b 43 08          	mov    0x8(%rbx),%rax
ffffffff8022009a:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8022009e:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
ffffffff802200a3:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff802200a7:	0f 89 c1 fe ff ff    	jns    ffffffff8021ff6e <hash_aux+0x2e>
ffffffff802200ad:	e9 2d ff ff ff       	jmpq   ffffffff8021ffdf <hash_aux+0x9f>
ffffffff802200b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802200b8:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
ffffffff802200bc:	40 f6 c5 01          	test   $0x1,%bpl
ffffffff802200c0:	0f 84 b7 fe ff ff    	je     ffffffff8021ff7d <hash_aux+0x3d>
ffffffff802200c6:	48 69 03 3f 00 01 00 	imul   $0x1003f,(%rbx),%rax
ffffffff802200cd:	48 d1 fd             	sar    %rbp
ffffffff802200d0:	48 83 6b 10 01       	subq   $0x1,0x10(%rbx)
ffffffff802200d5:	48 01 e8             	add    %rbp,%rax
ffffffff802200d8:	48 89 03             	mov    %rax,(%rbx)
ffffffff802200db:	e9 ff fe ff ff       	jmpq   ffffffff8021ffdf <hash_aux+0x9f>
ffffffff802200e0:	48 83 6b 10 01       	subq   $0x1,0x10(%rbx)
ffffffff802200e5:	48 89 ef             	mov    %rbp,%rdi
ffffffff802200e8:	e8 c3 4c ff ff       	callq  ffffffff80214db0 <caml_string_length>
ffffffff802200ed:	48 85 c0             	test   %rax,%rax
ffffffff802200f0:	0f 84 e9 fe ff ff    	je     ffffffff8021ffdf <hash_aux+0x9f>
ffffffff802200f6:	48 8b 13             	mov    (%rbx),%rdx
ffffffff802200f9:	48 01 c5             	add    %rax,%rbp
ffffffff802200fc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80220100:	48 8d 04 d2          	lea    (%rdx,%rdx,8),%rax
ffffffff80220104:	49 83 c4 01          	add    $0x1,%r12
ffffffff80220108:	48 8d 14 42          	lea    (%rdx,%rax,2),%rdx
ffffffff8022010c:	41 0f b6 44 24 ff    	movzbl -0x1(%r12),%eax
ffffffff80220112:	48 01 c2             	add    %rax,%rdx
ffffffff80220115:	48 89 13             	mov    %rdx,(%rbx)
ffffffff80220118:	4c 39 e5             	cmp    %r12,%rbp
ffffffff8022011b:	75 e3                	jne    ffffffff80220100 <hash_aux+0x1c0>
ffffffff8022011d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80220121:	5b                   	pop    %rbx
ffffffff80220122:	5d                   	pop    %rbp
ffffffff80220123:	41 5c                	pop    %r12
ffffffff80220125:	41 5d                	pop    %r13
ffffffff80220127:	c3                   	retq   
ffffffff80220128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8022012f:	00 
ffffffff80220130:	48 83 6b 10 01       	subq   $0x1,0x10(%rbx)
ffffffff80220135:	48 8b 03             	mov    (%rbx),%rax
ffffffff80220138:	48 83 c5 08          	add    $0x8,%rbp
ffffffff8022013c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80220140:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
ffffffff80220144:	49 83 c4 01          	add    $0x1,%r12
ffffffff80220148:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
ffffffff8022014c:	41 0f b6 54 24 ff    	movzbl -0x1(%r12),%edx
ffffffff80220152:	48 01 d0             	add    %rdx,%rax
ffffffff80220155:	48 89 03             	mov    %rax,(%rbx)
ffffffff80220158:	4c 39 e5             	cmp    %r12,%rbp
ffffffff8022015b:	75 e3                	jne    ffffffff80220140 <hash_aux+0x200>
ffffffff8022015d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80220161:	5b                   	pop    %rbx
ffffffff80220162:	5d                   	pop    %rbp
ffffffff80220163:	41 5c                	pop    %r12
ffffffff80220165:	41 5d                	pop    %r13
ffffffff80220167:	c3                   	retq   
ffffffff80220168:	48 8b 03             	mov    (%rbx),%rax
ffffffff8022016b:	48 83 6b 10 01       	subq   $0x1,0x10(%rbx)
ffffffff80220170:	48 8d 0c c0          	lea    (%rax,%rax,8),%rcx
ffffffff80220174:	48 8d 04 48          	lea    (%rax,%rcx,2),%rax
ffffffff80220178:	48 01 c2             	add    %rax,%rdx
ffffffff8022017b:	48 89 13             	mov    %rdx,(%rbx)
ffffffff8022017e:	48 8b 07             	mov    (%rdi),%rax
ffffffff80220181:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80220185:	0f 84 54 fe ff ff    	je     ffffffff8021ffdf <hash_aux+0x9f>
ffffffff8022018b:	4c 8d 64 c5 f8       	lea    -0x8(%rbp,%rax,8),%r12
ffffffff80220190:	49 8b 34 24          	mov    (%r12),%rsi
ffffffff80220194:	48 89 df             	mov    %rbx,%rdi
ffffffff80220197:	e8 a4 fd ff ff       	callq  ffffffff8021ff40 <hash_aux>
ffffffff8022019c:	4c 89 e0             	mov    %r12,%rax
ffffffff8022019f:	49 83 ec 08          	sub    $0x8,%r12
ffffffff802201a3:	48 39 e8             	cmp    %rbp,%rax
ffffffff802201a6:	75 e8                	jne    ffffffff80220190 <hash_aux+0x250>
ffffffff802201a8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802201ac:	5b                   	pop    %rbx
ffffffff802201ad:	5d                   	pop    %rbp
ffffffff802201ae:	41 5c                	pop    %r12
ffffffff802201b0:	41 5d                	pop    %r13
ffffffff802201b2:	c3                   	retq   
ffffffff802201b3:	48 69 03 3f 00 01 00 	imul   $0x1003f,(%rbx),%rax
ffffffff802201ba:	48 01 c5             	add    %rax,%rbp
ffffffff802201bd:	48 89 2b             	mov    %rbp,(%rbx)
ffffffff802201c0:	e9 1a fe ff ff       	jmpq   ffffffff8021ffdf <hash_aux+0x9f>
ffffffff802201c5:	c3                   	retq   
ffffffff802201c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802201cd:	00 00 00 

ffffffff802201d0 <caml_hash_mix_uint32>:
ffffffff802201d0:	69 f6 51 2d 9e cc    	imul   $0xcc9e2d51,%esi,%esi
ffffffff802201d6:	41 89 f8             	mov    %edi,%r8d
ffffffff802201d9:	c1 c6 0f             	rol    $0xf,%esi
ffffffff802201dc:	69 fe 93 35 87 1b    	imul   $0x1b873593,%esi,%edi
ffffffff802201e2:	44 31 c7             	xor    %r8d,%edi
ffffffff802201e5:	c1 c7 0d             	rol    $0xd,%edi
ffffffff802201e8:	8d 84 bf 64 6b 54 e6 	lea    -0x19ab949c(%rdi,%rdi,4),%eax
ffffffff802201ef:	c3                   	retq   

ffffffff802201f0 <caml_hash_mix_intnat>:
ffffffff802201f0:	48 89 f0             	mov    %rsi,%rax
ffffffff802201f3:	41 89 f8             	mov    %edi,%r8d
ffffffff802201f6:	48 c1 fe 20          	sar    $0x20,%rsi
ffffffff802201fa:	48 89 c7             	mov    %rax,%rdi
ffffffff802201fd:	48 c1 ff 3f          	sar    $0x3f,%rdi
ffffffff80220201:	31 fe                	xor    %edi,%esi
ffffffff80220203:	31 c6                	xor    %eax,%esi
ffffffff80220205:	69 f6 51 2d 9e cc    	imul   $0xcc9e2d51,%esi,%esi
ffffffff8022020b:	c1 c6 0f             	rol    $0xf,%esi
ffffffff8022020e:	69 fe 93 35 87 1b    	imul   $0x1b873593,%esi,%edi
ffffffff80220214:	44 31 c7             	xor    %r8d,%edi
ffffffff80220217:	c1 c7 0d             	rol    $0xd,%edi
ffffffff8022021a:	8d 84 bf 64 6b 54 e6 	lea    -0x19ab949c(%rdi,%rdi,4),%eax
ffffffff80220221:	c3                   	retq   
ffffffff80220222:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80220229:	00 00 00 00 
ffffffff8022022d:	0f 1f 00             	nopl   (%rax)

ffffffff80220230 <caml_hash_mix_int64>:
ffffffff80220230:	48 89 f2             	mov    %rsi,%rdx
ffffffff80220233:	69 f6 51 2d 9e cc    	imul   $0xcc9e2d51,%esi,%esi
ffffffff80220239:	41 89 f8             	mov    %edi,%r8d
ffffffff8022023c:	48 c1 fa 20          	sar    $0x20,%rdx
ffffffff80220240:	69 d2 51 2d 9e cc    	imul   $0xcc9e2d51,%edx,%edx
ffffffff80220246:	c1 c6 0f             	rol    $0xf,%esi
ffffffff80220249:	69 fe 93 35 87 1b    	imul   $0x1b873593,%esi,%edi
ffffffff8022024f:	c1 c2 0f             	rol    $0xf,%edx
ffffffff80220252:	69 c2 93 35 87 1b    	imul   $0x1b873593,%edx,%eax
ffffffff80220258:	44 31 c7             	xor    %r8d,%edi
ffffffff8022025b:	c1 c7 0d             	rol    $0xd,%edi
ffffffff8022025e:	8d 8c bf 64 6b 54 e6 	lea    -0x19ab949c(%rdi,%rdi,4),%ecx
ffffffff80220265:	31 c8                	xor    %ecx,%eax
ffffffff80220267:	c1 c0 0d             	rol    $0xd,%eax
ffffffff8022026a:	8d 84 80 64 6b 54 e6 	lea    -0x19ab949c(%rax,%rax,4),%eax
ffffffff80220271:	c3                   	retq   
ffffffff80220272:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80220279:	00 00 00 00 
ffffffff8022027d:	0f 1f 00             	nopl   (%rax)

ffffffff80220280 <caml_hash_mix_double>:
ffffffff80220280:	66 48 0f 7e c6       	movq   %xmm0,%rsi
ffffffff80220285:	66 48 0f 7e c2       	movq   %xmm0,%rdx
ffffffff8022028a:	48 c1 ee 20          	shr    $0x20,%rsi
ffffffff8022028e:	89 f0                	mov    %esi,%eax
ffffffff80220290:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
ffffffff80220295:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
ffffffff8022029a:	74 54                	je     ffffffff802202f0 <caml_hash_mix_double+0x70>
ffffffff8022029c:	69 ca 51 2d 9e cc    	imul   $0xcc9e2d51,%edx,%ecx
ffffffff802202a2:	c1 c1 0f             	rol    $0xf,%ecx
ffffffff802202a5:	69 c9 93 35 87 1b    	imul   $0x1b873593,%ecx,%ecx
ffffffff802202ab:	81 fe 00 00 00 80    	cmp    $0x80000000,%esi
ffffffff802202b1:	75 25                	jne    ffffffff802202d8 <caml_hash_mix_double+0x58>
ffffffff802202b3:	45 31 c0             	xor    %r8d,%r8d
ffffffff802202b6:	85 d2                	test   %edx,%edx
ffffffff802202b8:	75 1e                	jne    ffffffff802202d8 <caml_hash_mix_double+0x58>
ffffffff802202ba:	31 cf                	xor    %ecx,%edi
ffffffff802202bc:	c1 c7 0d             	rol    $0xd,%edi
ffffffff802202bf:	8d 84 bf 64 6b 54 e6 	lea    -0x19ab949c(%rdi,%rdi,4),%eax
ffffffff802202c6:	44 31 c0             	xor    %r8d,%eax
ffffffff802202c9:	c1 c0 0d             	rol    $0xd,%eax
ffffffff802202cc:	8d 84 80 64 6b 54 e6 	lea    -0x19ab949c(%rax,%rax,4),%eax
ffffffff802202d3:	c3                   	retq   
ffffffff802202d4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802202d8:	69 f6 51 2d 9e cc    	imul   $0xcc9e2d51,%esi,%esi
ffffffff802202de:	c1 c6 0f             	rol    $0xf,%esi
ffffffff802202e1:	44 69 c6 93 35 87 1b 	imul   $0x1b873593,%esi,%r8d
ffffffff802202e8:	eb d0                	jmp    ffffffff802202ba <caml_hash_mix_double+0x3a>
ffffffff802202ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802202f0:	89 f0                	mov    %esi,%eax
ffffffff802202f2:	25 ff ff 0f 00       	and    $0xfffff,%eax
ffffffff802202f7:	09 d0                	or     %edx,%eax
ffffffff802202f9:	74 a1                	je     ffffffff8022029c <caml_hash_mix_double+0x1c>
ffffffff802202fb:	41 b8 e8 eb 2a cc    	mov    $0xcc2aebe8,%r8d
ffffffff80220301:	b9 5d 9a 53 c3       	mov    $0xc3539a5d,%ecx
ffffffff80220306:	eb b2                	jmp    ffffffff802202ba <caml_hash_mix_double+0x3a>
ffffffff80220308:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8022030f:	00 

ffffffff80220310 <caml_hash_mix_float>:
ffffffff80220310:	66 0f 7e c2          	movd   %xmm0,%edx
ffffffff80220314:	66 0f 7e c0          	movd   %xmm0,%eax
ffffffff80220318:	81 e2 00 00 80 7f    	and    $0x7f800000,%edx
ffffffff8022031e:	81 fa 00 00 80 7f    	cmp    $0x7f800000,%edx
ffffffff80220324:	74 2a                	je     ffffffff80220350 <caml_hash_mix_float+0x40>
ffffffff80220326:	3d 00 00 00 80       	cmp    $0x80000000,%eax
ffffffff8022032b:	74 11                	je     ffffffff8022033e <caml_hash_mix_float+0x2e>
ffffffff8022032d:	69 c0 51 2d 9e cc    	imul   $0xcc9e2d51,%eax,%eax
ffffffff80220333:	c1 c0 0f             	rol    $0xf,%eax
ffffffff80220336:	69 c0 93 35 87 1b    	imul   $0x1b873593,%eax,%eax
ffffffff8022033c:	31 c7                	xor    %eax,%edi
ffffffff8022033e:	c1 c7 0d             	rol    $0xd,%edi
ffffffff80220341:	8d 84 bf 64 6b 54 e6 	lea    -0x19ab949c(%rdi,%rdi,4),%eax
ffffffff80220348:	c3                   	retq   
ffffffff80220349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80220350:	a9 ff ff 7f 00       	test   $0x7fffff,%eax
ffffffff80220355:	74 cf                	je     ffffffff80220326 <caml_hash_mix_float+0x16>
ffffffff80220357:	81 f7 9d b9 56 51    	xor    $0x5156b99d,%edi
ffffffff8022035d:	c1 c7 0d             	rol    $0xd,%edi
ffffffff80220360:	8d 84 bf 64 6b 54 e6 	lea    -0x19ab949c(%rdi,%rdi,4),%eax
ffffffff80220367:	c3                   	retq   
ffffffff80220368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8022036f:	00 

ffffffff80220370 <caml_hash_mix_string>:
ffffffff80220370:	55                   	push   %rbp
ffffffff80220371:	48 89 f5             	mov    %rsi,%rbp
ffffffff80220374:	53                   	push   %rbx
ffffffff80220375:	89 fb                	mov    %edi,%ebx
ffffffff80220377:	48 89 f7             	mov    %rsi,%rdi
ffffffff8022037a:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8022037e:	e8 2d 4a ff ff       	callq  ffffffff80214db0 <caml_string_length>
ffffffff80220383:	48 83 f8 03          	cmp    $0x3,%rax
ffffffff80220387:	0f 86 ab 00 00 00    	jbe    ffffffff80220438 <caml_hash_mix_string+0xc8>
ffffffff8022038d:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffff80220392:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80220398:	69 7c 2a fc 51 2d 9e 	imul   $0xcc9e2d51,-0x4(%rdx,%rbp,1),%edi
ffffffff8022039f:	cc 
ffffffff802203a0:	48 89 d1             	mov    %rdx,%rcx
ffffffff802203a3:	48 83 c2 04          	add    $0x4,%rdx
ffffffff802203a7:	c1 c7 0f             	rol    $0xf,%edi
ffffffff802203aa:	69 ff 93 35 87 1b    	imul   $0x1b873593,%edi,%edi
ffffffff802203b0:	31 df                	xor    %ebx,%edi
ffffffff802203b2:	c1 c7 0d             	rol    $0xd,%edi
ffffffff802203b5:	8d 9c bf 64 6b 54 e6 	lea    -0x19ab949c(%rdi,%rdi,4),%ebx
ffffffff802203bc:	48 39 d0             	cmp    %rdx,%rax
ffffffff802203bf:	73 d7                	jae    ffffffff80220398 <caml_hash_mix_string+0x28>
ffffffff802203c1:	48 89 c2             	mov    %rax,%rdx
ffffffff802203c4:	83 e2 03             	and    $0x3,%edx
ffffffff802203c7:	48 83 fa 02          	cmp    $0x2,%rdx
ffffffff802203cb:	74 1b                	je     ffffffff802203e8 <caml_hash_mix_string+0x78>
ffffffff802203cd:	48 83 fa 03          	cmp    $0x3,%rdx
ffffffff802203d1:	74 55                	je     ffffffff80220428 <caml_hash_mix_string+0xb8>
ffffffff802203d3:	48 83 fa 01          	cmp    $0x1,%rdx
ffffffff802203d7:	74 47                	je     ffffffff80220420 <caml_hash_mix_string+0xb0>
ffffffff802203d9:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802203dd:	31 d8                	xor    %ebx,%eax
ffffffff802203df:	5b                   	pop    %rbx
ffffffff802203e0:	5d                   	pop    %rbp
ffffffff802203e1:	c3                   	retq   
ffffffff802203e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802203e8:	31 d2                	xor    %edx,%edx
ffffffff802203ea:	0f b6 7c 29 01       	movzbl 0x1(%rcx,%rbp,1),%edi
ffffffff802203ef:	c1 e7 08             	shl    $0x8,%edi
ffffffff802203f2:	09 fa                	or     %edi,%edx
ffffffff802203f4:	0f b6 3c 29          	movzbl (%rcx,%rbp,1),%edi
ffffffff802203f8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802203fc:	09 d7                	or     %edx,%edi
ffffffff802203fe:	69 ff 51 2d 9e cc    	imul   $0xcc9e2d51,%edi,%edi
ffffffff80220404:	c1 c7 0f             	rol    $0xf,%edi
ffffffff80220407:	69 ff 93 35 87 1b    	imul   $0x1b873593,%edi,%edi
ffffffff8022040d:	31 df                	xor    %ebx,%edi
ffffffff8022040f:	c1 c7 0d             	rol    $0xd,%edi
ffffffff80220412:	8d 9c bf 64 6b 54 e6 	lea    -0x19ab949c(%rdi,%rdi,4),%ebx
ffffffff80220419:	31 d8                	xor    %ebx,%eax
ffffffff8022041b:	5b                   	pop    %rbx
ffffffff8022041c:	5d                   	pop    %rbp
ffffffff8022041d:	c3                   	retq   
ffffffff8022041e:	66 90                	xchg   %ax,%ax
ffffffff80220420:	31 d2                	xor    %edx,%edx
ffffffff80220422:	eb d0                	jmp    ffffffff802203f4 <caml_hash_mix_string+0x84>
ffffffff80220424:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80220428:	0f b6 54 29 02       	movzbl 0x2(%rcx,%rbp,1),%edx
ffffffff8022042d:	c1 e2 10             	shl    $0x10,%edx
ffffffff80220430:	eb b8                	jmp    ffffffff802203ea <caml_hash_mix_string+0x7a>
ffffffff80220432:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80220438:	31 c9                	xor    %ecx,%ecx
ffffffff8022043a:	e9 82 ff ff ff       	jmpq   ffffffff802203c1 <caml_hash_mix_string+0x51>
ffffffff8022043f:	90                   	nop

ffffffff80220440 <caml_hash>:
ffffffff80220440:	41 57                	push   %r15
ffffffff80220442:	49 89 cf             	mov    %rcx,%r15
ffffffff80220445:	48 89 f1             	mov    %rsi,%rcx
ffffffff80220448:	41 56                	push   %r14
ffffffff8022044a:	48 d1 f9             	sar    %rcx
ffffffff8022044d:	41 55                	push   %r13
ffffffff8022044f:	41 54                	push   %r12
ffffffff80220451:	55                   	push   %rbp
ffffffff80220452:	53                   	push   %rbx
ffffffff80220453:	48 89 fb             	mov    %rdi,%rbx
ffffffff80220456:	48 81 ec 28 08 00 00 	sub    $0x828,%rsp
ffffffff8022045d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80220464:	00 00 
ffffffff80220466:	48 89 84 24 18 08 00 	mov    %rax,0x818(%rsp)
ffffffff8022046d:	00 
ffffffff8022046e:	31 c0                	xor    %eax,%eax
ffffffff80220470:	48 81 fe 01 02 00 00 	cmp    $0x201,%rsi
ffffffff80220477:	b8 00 01 00 00       	mov    $0x100,%eax
ffffffff8022047c:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
ffffffff80220481:	48 0f 46 c1          	cmovbe %rcx,%rax
ffffffff80220485:	48 d1 fa             	sar    %rdx
ffffffff80220488:	48 d1 fb             	sar    %rbx
ffffffff8022048b:	89 d5                	mov    %edx,%ebp
ffffffff8022048d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80220492:	48 85 db             	test   %rbx,%rbx
ffffffff80220495:	0f 8e d1 01 00 00    	jle    ffffffff8022066c <caml_hash+0x22c>
ffffffff8022049b:	45 31 f6             	xor    %r14d,%r14d
ffffffff8022049e:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff802204a4:	49 83 c6 01          	add    $0x1,%r14
ffffffff802204a8:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff802204ac:	0f 85 a3 00 00 00    	jne    ffffffff80220555 <caml_hash+0x115>
ffffffff802204b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802204b8:	4c 89 ff             	mov    %r15,%rdi
ffffffff802204bb:	e8 60 ff fe ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802204c0:	a8 07                	test   $0x7,%al
ffffffff802204c2:	0f 84 e8 00 00 00    	je     ffffffff802205b0 <caml_hash+0x170>
ffffffff802204c8:	41 0f b6 57 f8       	movzbl -0x8(%r15),%edx
ffffffff802204cd:	4d 89 f9             	mov    %r15,%r9
ffffffff802204d0:	49 8d 4f f8          	lea    -0x8(%r15),%rcx
ffffffff802204d4:	8d 42 08             	lea    0x8(%rdx),%eax
ffffffff802204d7:	80 fa f8             	cmp    $0xf8,%dl
ffffffff802204da:	0f 82 15 02 00 00    	jb     ffffffff802206f5 <caml_hash+0x2b5>
ffffffff802204e0:	48 8d 35 ad 29 00 00 	lea    0x29ad(%rip),%rsi        # ffffffff80222e94 <posix_signals+0xdb4>
ffffffff802204e7:	0f b6 c0             	movzbl %al,%eax
ffffffff802204ea:	48 63 04 86          	movslq (%rsi,%rax,4),%rax
ffffffff802204ee:	48 01 f0             	add    %rsi,%rax
ffffffff802204f1:	ff e0                	jmpq   *%rax
ffffffff802204f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802204f8:	49 8b 57 08          	mov    0x8(%r15),%rdx
ffffffff802204fc:	48 89 d0             	mov    %rdx,%rax
ffffffff802204ff:	48 89 d1             	mov    %rdx,%rcx
ffffffff80220502:	48 d1 fa             	sar    %rdx
ffffffff80220505:	48 c1 f8 21          	sar    $0x21,%rax
ffffffff80220509:	48 c1 f9 3f          	sar    $0x3f,%rcx
ffffffff8022050d:	31 c8                	xor    %ecx,%eax
ffffffff8022050f:	31 d0                	xor    %edx,%eax
ffffffff80220511:	69 c0 51 2d 9e cc    	imul   $0xcc9e2d51,%eax,%eax
ffffffff80220517:	c1 c0 0f             	rol    $0xf,%eax
ffffffff8022051a:	48 83 eb 01          	sub    $0x1,%rbx
ffffffff8022051e:	69 c0 93 35 87 1b    	imul   $0x1b873593,%eax,%eax
ffffffff80220524:	31 c5                	xor    %eax,%ebp
ffffffff80220526:	c1 c5 0d             	rol    $0xd,%ebp
ffffffff80220529:	8d ac ad 64 6b 54 e6 	lea    -0x19ab949c(%rbp,%rbp,4),%ebp
ffffffff80220530:	4d 39 f4             	cmp    %r14,%r12
ffffffff80220533:	0f 8e 33 01 00 00    	jle    ffffffff8022066c <caml_hash+0x22c>
ffffffff80220539:	48 85 db             	test   %rbx,%rbx
ffffffff8022053c:	0f 8e 2a 01 00 00    	jle    ffffffff8022066c <caml_hash+0x22c>
ffffffff80220542:	4e 8b 7c f4 10       	mov    0x10(%rsp,%r14,8),%r15
ffffffff80220547:	49 83 c6 01          	add    $0x1,%r14
ffffffff8022054b:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff8022054f:	0f 84 63 ff ff ff    	je     ffffffff802204b8 <caml_hash+0x78>
ffffffff80220555:	4c 89 f8             	mov    %r15,%rax
ffffffff80220558:	4c 89 fa             	mov    %r15,%rdx
ffffffff8022055b:	48 c1 f8 3f          	sar    $0x3f,%rax
ffffffff8022055f:	48 c1 fa 20          	sar    $0x20,%rdx
ffffffff80220563:	31 d0                	xor    %edx,%eax
ffffffff80220565:	44 31 f8             	xor    %r15d,%eax
ffffffff80220568:	69 c0 51 2d 9e cc    	imul   $0xcc9e2d51,%eax,%eax
ffffffff8022056e:	eb a7                	jmp    ffffffff80220517 <caml_hash+0xd7>
ffffffff80220570:	48 8b 11             	mov    (%rcx),%rdx
ffffffff80220573:	48 c1 ea 0a          	shr    $0xa,%rdx
ffffffff80220577:	69 c2 88 6a f1 64    	imul   $0x64f16a88,%edx,%eax
ffffffff8022057d:	48 c1 e2 03          	shl    $0x3,%rdx
ffffffff80220581:	49 29 d7             	sub    %rdx,%r15
ffffffff80220584:	c1 c0 0f             	rol    $0xf,%eax
ffffffff80220587:	69 c0 93 35 87 1b    	imul   $0x1b873593,%eax,%eax
ffffffff8022058d:	31 c5                	xor    %eax,%ebp
ffffffff8022058f:	c1 c5 0d             	rol    $0xd,%ebp
ffffffff80220592:	8d ac ad 64 6b 54 e6 	lea    -0x19ab949c(%rbp,%rbp,4),%ebp
ffffffff80220599:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff8022059d:	75 b6                	jne    ffffffff80220555 <caml_hash+0x115>
ffffffff8022059f:	4c 89 ff             	mov    %r15,%rdi
ffffffff802205a2:	e8 79 fe fe ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802205a7:	a8 07                	test   $0x7,%al
ffffffff802205a9:	0f 85 19 ff ff ff    	jne    ffffffff802204c8 <caml_hash+0x88>
ffffffff802205af:	90                   	nop
ffffffff802205b0:	4c 89 f8             	mov    %r15,%rax
ffffffff802205b3:	4c 89 fa             	mov    %r15,%rdx
ffffffff802205b6:	48 c1 f8 20          	sar    $0x20,%rax
ffffffff802205ba:	48 c1 fa 3f          	sar    $0x3f,%rdx
ffffffff802205be:	eb a3                	jmp    ffffffff80220563 <caml_hash+0x123>
ffffffff802205c0:	41 bd e8 03 00 00    	mov    $0x3e8,%r13d
ffffffff802205c6:	eb 2d                	jmp    ffffffff802205f5 <caml_hash+0x1b5>
ffffffff802205c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802205cf:	00 
ffffffff802205d0:	4c 89 ff             	mov    %r15,%rdi
ffffffff802205d3:	e8 48 fe fe ff       	callq  ffffffff80210420 <caml_page_table_lookup>
ffffffff802205d8:	a8 07                	test   $0x7,%al
ffffffff802205da:	0f 84 d8 fe ff ff    	je     ffffffff802204b8 <caml_hash+0x78>
ffffffff802205e0:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
ffffffff802205e5:	0f 85 cd fe ff ff    	jne    ffffffff802204b8 <caml_hash+0x78>
ffffffff802205eb:	49 83 ed 01          	sub    $0x1,%r13
ffffffff802205ef:	0f 84 3b ff ff ff    	je     ffffffff80220530 <caml_hash+0xf0>
ffffffff802205f5:	4d 8b 3f             	mov    (%r15),%r15
ffffffff802205f8:	41 f6 c7 01          	test   $0x1,%r15b
ffffffff802205fc:	74 d2                	je     ffffffff802205d0 <caml_hash+0x190>
ffffffff802205fe:	e9 52 ff ff ff       	jmpq   ffffffff80220555 <caml_hash+0x115>
ffffffff80220603:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80220608:	49 8b 07             	mov    (%r15),%rax
ffffffff8022060b:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8022060f:	48 85 c0             	test   %rax,%rax
ffffffff80220612:	0f 84 18 ff ff ff    	je     ffffffff80220530 <caml_hash+0xf0>
ffffffff80220618:	4c 89 ff             	mov    %r15,%rdi
ffffffff8022061b:	ff d0                	callq  *%rax
ffffffff8022061d:	69 c0 51 2d 9e cc    	imul   $0xcc9e2d51,%eax,%eax
ffffffff80220623:	e9 ef fe ff ff       	jmpq   ffffffff80220517 <caml_hash+0xd7>
ffffffff80220628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8022062f:	00 
ffffffff80220630:	48 8b 01             	mov    (%rcx),%rax
ffffffff80220633:	48 c1 e8 0a          	shr    $0xa,%rax
ffffffff80220637:	0f 84 f3 fe ff ff    	je     ffffffff80220530 <caml_hash+0xf0>
ffffffff8022063d:	49 89 da             	mov    %rbx,%r10
ffffffff80220640:	49 29 c2             	sub    %rax,%r10
ffffffff80220643:	eb 10                	jmp    ffffffff80220655 <caml_hash+0x215>
ffffffff80220645:	0f 1f 00             	nopl   (%rax)
ffffffff80220648:	49 83 c1 08          	add    $0x8,%r9
ffffffff8022064c:	4c 39 d3             	cmp    %r10,%rbx
ffffffff8022064f:	0f 84 db fe ff ff    	je     ffffffff80220530 <caml_hash+0xf0>
ffffffff80220655:	f2 41 0f 10 01       	movsd  (%r9),%xmm0
ffffffff8022065a:	89 ef                	mov    %ebp,%edi
ffffffff8022065c:	48 83 eb 01          	sub    $0x1,%rbx
ffffffff80220660:	e8 1b fc ff ff       	callq  ffffffff80220280 <caml_hash_mix_double>
ffffffff80220665:	89 c5                	mov    %eax,%ebp
ffffffff80220667:	48 85 db             	test   %rbx,%rbx
ffffffff8022066a:	7f dc                	jg     ffffffff80220648 <caml_hash+0x208>
ffffffff8022066c:	89 e8                	mov    %ebp,%eax
ffffffff8022066e:	c1 e8 10             	shr    $0x10,%eax
ffffffff80220671:	31 e8                	xor    %ebp,%eax
ffffffff80220673:	69 d0 6b ca eb 85    	imul   $0x85ebca6b,%eax,%edx
ffffffff80220679:	89 d0                	mov    %edx,%eax
ffffffff8022067b:	c1 e8 0d             	shr    $0xd,%eax
ffffffff8022067e:	31 d0                	xor    %edx,%eax
ffffffff80220680:	69 d0 35 ae b2 c2    	imul   $0xc2b2ae35,%eax,%edx
ffffffff80220686:	89 d0                	mov    %edx,%eax
ffffffff80220688:	c1 e8 10             	shr    $0x10,%eax
ffffffff8022068b:	31 d0                	xor    %edx,%eax
ffffffff8022068d:	48 01 c0             	add    %rax,%rax
ffffffff80220690:	25 fe ff ff 7f       	and    $0x7ffffffe,%eax
ffffffff80220695:	48 83 c0 01          	add    $0x1,%rax
ffffffff80220699:	48 8b 8c 24 18 08 00 	mov    0x818(%rsp),%rcx
ffffffff802206a0:	00 
ffffffff802206a1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff802206a8:	00 00 
ffffffff802206aa:	0f 85 b8 00 00 00    	jne    ffffffff80220768 <caml_hash+0x328>
ffffffff802206b0:	48 81 c4 28 08 00 00 	add    $0x828,%rsp
ffffffff802206b7:	5b                   	pop    %rbx
ffffffff802206b8:	5d                   	pop    %rbp
ffffffff802206b9:	41 5c                	pop    %r12
ffffffff802206bb:	41 5d                	pop    %r13
ffffffff802206bd:	41 5e                	pop    %r14
ffffffff802206bf:	41 5f                	pop    %r15
ffffffff802206c1:	c3                   	retq   
ffffffff802206c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff802206c8:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
ffffffff802206cd:	89 ef                	mov    %ebp,%edi
ffffffff802206cf:	48 83 eb 01          	sub    $0x1,%rbx
ffffffff802206d3:	e8 a8 fb ff ff       	callq  ffffffff80220280 <caml_hash_mix_double>
ffffffff802206d8:	89 c5                	mov    %eax,%ebp
ffffffff802206da:	e9 51 fe ff ff       	jmpq   ffffffff80220530 <caml_hash+0xf0>
ffffffff802206df:	90                   	nop
ffffffff802206e0:	89 ef                	mov    %ebp,%edi
ffffffff802206e2:	4c 89 fe             	mov    %r15,%rsi
ffffffff802206e5:	48 83 eb 01          	sub    $0x1,%rbx
ffffffff802206e9:	e8 82 fc ff ff       	callq  ffffffff80220370 <caml_hash_mix_string>
ffffffff802206ee:	89 c5                	mov    %eax,%ebp
ffffffff802206f0:	e9 3b fe ff ff       	jmpq   ffffffff80220530 <caml_hash+0xf0>
ffffffff802206f5:	48 8b 09             	mov    (%rcx),%rcx
ffffffff802206f8:	89 c8                	mov    %ecx,%eax
ffffffff802206fa:	48 c1 e9 0a          	shr    $0xa,%rcx
ffffffff802206fe:	80 e4 fc             	and    $0xfc,%ah
ffffffff80220701:	69 c0 51 2d 9e cc    	imul   $0xcc9e2d51,%eax,%eax
ffffffff80220707:	c1 c0 0f             	rol    $0xf,%eax
ffffffff8022070a:	69 c0 93 35 87 1b    	imul   $0x1b873593,%eax,%eax
ffffffff80220710:	31 c5                	xor    %eax,%ebp
ffffffff80220712:	c1 c5 0d             	rol    $0xd,%ebp
ffffffff80220715:	8d ac ad 64 6b 54 e6 	lea    -0x19ab949c(%rbp,%rbp,4),%ebp
ffffffff8022071c:	4c 39 64 24 08       	cmp    %r12,0x8(%rsp)
ffffffff80220721:	0f 8e 09 fe ff ff    	jle    ffffffff80220530 <caml_hash+0xf0>
ffffffff80220727:	48 85 c9             	test   %rcx,%rcx
ffffffff8022072a:	0f 84 00 fe ff ff    	je     ffffffff80220530 <caml_hash+0xf0>
ffffffff80220730:	4a 8d 74 e4 10       	lea    0x10(%rsp,%r12,8),%rsi
ffffffff80220735:	31 c0                	xor    %eax,%eax
ffffffff80220737:	eb 10                	jmp    ffffffff80220749 <caml_hash+0x309>
ffffffff80220739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80220740:	48 39 c1             	cmp    %rax,%rcx
ffffffff80220743:	0f 86 e7 fd ff ff    	jbe    ffffffff80220530 <caml_hash+0xf0>
ffffffff80220749:	49 8b 11             	mov    (%r9),%rdx
ffffffff8022074c:	49 83 c4 01          	add    $0x1,%r12
ffffffff80220750:	49 83 c1 08          	add    $0x8,%r9
ffffffff80220754:	48 89 14 c6          	mov    %rdx,(%rsi,%rax,8)
ffffffff80220758:	48 83 c0 01          	add    $0x1,%rax
ffffffff8022075c:	4c 39 64 24 08       	cmp    %r12,0x8(%rsp)
ffffffff80220761:	7f dd                	jg     ffffffff80220740 <caml_hash+0x300>
ffffffff80220763:	e9 c8 fd ff ff       	jmpq   ffffffff80220530 <caml_hash+0xf0>
ffffffff80220768:	e8 33 f9 fd ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff8022076d:	0f 1f 00             	nopl   (%rax)

ffffffff80220770 <caml_hash_univ_param>:
ffffffff80220770:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80220774:	48 d1 ff             	sar    %rdi
ffffffff80220777:	49 89 f0             	mov    %rsi,%r8
ffffffff8022077a:	48 89 d6             	mov    %rdx,%rsi
ffffffff8022077d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
ffffffff80220784:	00 00 
ffffffff80220786:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8022078b:	31 c0                	xor    %eax,%eax
ffffffff8022078d:	49 d1 f8             	sar    %r8
ffffffff80220790:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff80220795:	48 89 e7             	mov    %rsp,%rdi
ffffffff80220798:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
ffffffff8022079d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
ffffffff802207a4:	00 
ffffffff802207a5:	e8 96 f7 ff ff       	callq  ffffffff8021ff40 <hash_aux>
ffffffff802207aa:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff802207ae:	48 01 c0             	add    %rax,%rax
ffffffff802207b1:	25 fe ff ff 7f       	and    $0x7ffffffe,%eax
ffffffff802207b6:	48 83 c0 01          	add    $0x1,%rax
ffffffff802207ba:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
ffffffff802207bf:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
ffffffff802207c6:	00 00 
ffffffff802207c8:	75 05                	jne    ffffffff802207cf <caml_hash_univ_param+0x5f>
ffffffff802207ca:	48 83 c4 28          	add    $0x28,%rsp
ffffffff802207ce:	c3                   	retq   
ffffffff802207cf:	e8 cc f8 fd ff       	callq  ffffffff802000a0 <__stack_chk_fail>
ffffffff802207d4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff802207db:	00 00 00 00 
ffffffff802207df:	90                   	nop

ffffffff802207e0 <caml_hash_variant>:
ffffffff802207e0:	0f b6 17             	movzbl (%rdi),%edx
ffffffff802207e3:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802207e8:	84 d2                	test   %dl,%dl
ffffffff802207ea:	74 24                	je     ffffffff80220810 <caml_hash_variant+0x30>
ffffffff802207ec:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802207f0:	48 d1 f8             	sar    %rax
ffffffff802207f3:	48 83 c7 01          	add    $0x1,%rdi
ffffffff802207f7:	69 c0 df 00 00 00    	imul   $0xdf,%eax,%eax
ffffffff802207fd:	01 d0                	add    %edx,%eax
ffffffff802207ff:	0f b6 17             	movzbl (%rdi),%edx
ffffffff80220802:	48 98                	cltq   
ffffffff80220804:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
ffffffff80220809:	84 d2                	test   %dl,%dl
ffffffff8022080b:	75 e3                	jne    ffffffff802207f0 <caml_hash_variant+0x10>
ffffffff8022080d:	48 98                	cltq   
ffffffff8022080f:	c3                   	retq   
ffffffff80220810:	c3                   	retq   
ffffffff80220811:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220818:	00 00 00 
ffffffff8022081b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220822:	00 00 00 
ffffffff80220825:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022082c:	00 00 00 
ffffffff8022082f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220836:	00 00 00 
ffffffff80220839:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220840:	00 00 00 
ffffffff80220843:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022084a:	00 00 00 
ffffffff8022084d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220854:	00 00 00 
ffffffff80220857:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022085e:	00 00 00 
ffffffff80220861:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220868:	00 00 00 
ffffffff8022086b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220872:	00 00 00 
ffffffff80220875:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022087c:	00 00 00 
ffffffff8022087f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220886:	00 00 00 
ffffffff80220889:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220890:	00 00 00 
ffffffff80220893:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022089a:	00 00 00 
ffffffff8022089d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208a4:	00 00 00 
ffffffff802208a7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208ae:	00 00 00 
ffffffff802208b1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208b8:	00 00 00 
ffffffff802208bb:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208c2:	00 00 00 
ffffffff802208c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208cc:	00 00 00 
ffffffff802208cf:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208d6:	00 00 00 
ffffffff802208d9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208e0:	00 00 00 
ffffffff802208e3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208ea:	00 00 00 
ffffffff802208ed:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208f4:	00 00 00 
ffffffff802208f7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802208fe:	00 00 00 
ffffffff80220901:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220908:	00 00 00 
ffffffff8022090b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220912:	00 00 00 
ffffffff80220915:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022091c:	00 00 00 
ffffffff8022091f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220926:	00 00 00 
ffffffff80220929:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220930:	00 00 00 
ffffffff80220933:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022093a:	00 00 00 
ffffffff8022093d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220944:	00 00 00 
ffffffff80220947:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022094e:	00 00 00 
ffffffff80220951:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220958:	00 00 00 
ffffffff8022095b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220962:	00 00 00 
ffffffff80220965:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022096c:	00 00 00 
ffffffff8022096f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220976:	00 00 00 
ffffffff80220979:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220980:	00 00 00 
ffffffff80220983:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022098a:	00 00 00 
ffffffff8022098d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220994:	00 00 00 
ffffffff80220997:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8022099e:	00 00 00 
ffffffff802209a1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802209a8:	00 00 00 
ffffffff802209ab:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802209b2:	00 00 00 
ffffffff802209b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802209bc:	00 00 00 
ffffffff802209bf:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802209c6:	00 00 00 
ffffffff802209c9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802209d0:	00 00 00 
ffffffff802209d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802209da:	00 00 00 
ffffffff802209dd:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802209e4:	00 00 00 
ffffffff802209e7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802209ee:	00 00 00 
ffffffff802209f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802209f8:	00 00 00 
ffffffff802209fb:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a02:	00 00 00 
ffffffff80220a05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a0c:	00 00 00 
ffffffff80220a0f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a16:	00 00 00 
ffffffff80220a19:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a20:	00 00 00 
ffffffff80220a23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a2a:	00 00 00 
ffffffff80220a2d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a34:	00 00 00 
ffffffff80220a37:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a3e:	00 00 00 
ffffffff80220a41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a48:	00 00 00 
ffffffff80220a4b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a52:	00 00 00 
ffffffff80220a55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a5c:	00 00 00 
ffffffff80220a5f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a66:	00 00 00 
ffffffff80220a69:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a70:	00 00 00 
ffffffff80220a73:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a7a:	00 00 00 
ffffffff80220a7d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a84:	00 00 00 
ffffffff80220a87:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a8e:	00 00 00 
ffffffff80220a91:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220a98:	00 00 00 
ffffffff80220a9b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220aa2:	00 00 00 
ffffffff80220aa5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220aac:	00 00 00 
ffffffff80220aaf:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ab6:	00 00 00 
ffffffff80220ab9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ac0:	00 00 00 
ffffffff80220ac3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220aca:	00 00 00 
ffffffff80220acd:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ad4:	00 00 00 
ffffffff80220ad7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ade:	00 00 00 
ffffffff80220ae1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ae8:	00 00 00 
ffffffff80220aeb:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220af2:	00 00 00 
ffffffff80220af5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220afc:	00 00 00 
ffffffff80220aff:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b06:	00 00 00 
ffffffff80220b09:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b10:	00 00 00 
ffffffff80220b13:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b1a:	00 00 00 
ffffffff80220b1d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b24:	00 00 00 
ffffffff80220b27:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b2e:	00 00 00 
ffffffff80220b31:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b38:	00 00 00 
ffffffff80220b3b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b42:	00 00 00 
ffffffff80220b45:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b4c:	00 00 00 
ffffffff80220b4f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b56:	00 00 00 
ffffffff80220b59:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b60:	00 00 00 
ffffffff80220b63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b6a:	00 00 00 
ffffffff80220b6d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b74:	00 00 00 
ffffffff80220b77:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b7e:	00 00 00 
ffffffff80220b81:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b88:	00 00 00 
ffffffff80220b8b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b92:	00 00 00 
ffffffff80220b95:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220b9c:	00 00 00 
ffffffff80220b9f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ba6:	00 00 00 
ffffffff80220ba9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220bb0:	00 00 00 
ffffffff80220bb3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220bba:	00 00 00 
ffffffff80220bbd:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220bc4:	00 00 00 
ffffffff80220bc7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220bce:	00 00 00 
ffffffff80220bd1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220bd8:	00 00 00 
ffffffff80220bdb:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220be2:	00 00 00 
ffffffff80220be5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220bec:	00 00 00 
ffffffff80220bef:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220bf6:	00 00 00 
ffffffff80220bf9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c00:	00 00 00 
ffffffff80220c03:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c0a:	00 00 00 
ffffffff80220c0d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c14:	00 00 00 
ffffffff80220c17:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c1e:	00 00 00 
ffffffff80220c21:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c28:	00 00 00 
ffffffff80220c2b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c32:	00 00 00 
ffffffff80220c35:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c3c:	00 00 00 
ffffffff80220c3f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c46:	00 00 00 
ffffffff80220c49:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c50:	00 00 00 
ffffffff80220c53:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c5a:	00 00 00 
ffffffff80220c5d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c64:	00 00 00 
ffffffff80220c67:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c6e:	00 00 00 
ffffffff80220c71:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c78:	00 00 00 
ffffffff80220c7b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c82:	00 00 00 
ffffffff80220c85:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c8c:	00 00 00 
ffffffff80220c8f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220c96:	00 00 00 
ffffffff80220c99:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ca0:	00 00 00 
ffffffff80220ca3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220caa:	00 00 00 
ffffffff80220cad:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220cb4:	00 00 00 
ffffffff80220cb7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220cbe:	00 00 00 
ffffffff80220cc1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220cc8:	00 00 00 
ffffffff80220ccb:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220cd2:	00 00 00 
ffffffff80220cd5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220cdc:	00 00 00 
ffffffff80220cdf:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ce6:	00 00 00 
ffffffff80220ce9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220cf0:	00 00 00 
ffffffff80220cf3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220cfa:	00 00 00 
ffffffff80220cfd:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d04:	00 00 00 
ffffffff80220d07:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d0e:	00 00 00 
ffffffff80220d11:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d18:	00 00 00 
ffffffff80220d1b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d22:	00 00 00 
ffffffff80220d25:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d2c:	00 00 00 
ffffffff80220d2f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d36:	00 00 00 
ffffffff80220d39:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d40:	00 00 00 
ffffffff80220d43:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d4a:	00 00 00 
ffffffff80220d4d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d54:	00 00 00 
ffffffff80220d57:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d5e:	00 00 00 
ffffffff80220d61:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d68:	00 00 00 
ffffffff80220d6b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d72:	00 00 00 
ffffffff80220d75:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d7c:	00 00 00 
ffffffff80220d7f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d86:	00 00 00 
ffffffff80220d89:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d90:	00 00 00 
ffffffff80220d93:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220d9a:	00 00 00 
ffffffff80220d9d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220da4:	00 00 00 
ffffffff80220da7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220dae:	00 00 00 
ffffffff80220db1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220db8:	00 00 00 
ffffffff80220dbb:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220dc2:	00 00 00 
ffffffff80220dc5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220dcc:	00 00 00 
ffffffff80220dcf:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220dd6:	00 00 00 
ffffffff80220dd9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220de0:	00 00 00 
ffffffff80220de3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220dea:	00 00 00 
ffffffff80220ded:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220df4:	00 00 00 
ffffffff80220df7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220dfe:	00 00 00 
ffffffff80220e01:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e08:	00 00 00 
ffffffff80220e0b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e12:	00 00 00 
ffffffff80220e15:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e1c:	00 00 00 
ffffffff80220e1f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e26:	00 00 00 
ffffffff80220e29:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e30:	00 00 00 
ffffffff80220e33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e3a:	00 00 00 
ffffffff80220e3d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e44:	00 00 00 
ffffffff80220e47:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e4e:	00 00 00 
ffffffff80220e51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e58:	00 00 00 
ffffffff80220e5b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e62:	00 00 00 
ffffffff80220e65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e6c:	00 00 00 
ffffffff80220e6f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e76:	00 00 00 
ffffffff80220e79:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e80:	00 00 00 
ffffffff80220e83:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e8a:	00 00 00 
ffffffff80220e8d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e94:	00 00 00 
ffffffff80220e97:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220e9e:	00 00 00 
ffffffff80220ea1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ea8:	00 00 00 
ffffffff80220eab:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220eb2:	00 00 00 
ffffffff80220eb5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ebc:	00 00 00 
ffffffff80220ebf:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ec6:	00 00 00 
ffffffff80220ec9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ed0:	00 00 00 
ffffffff80220ed3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220eda:	00 00 00 
ffffffff80220edd:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ee4:	00 00 00 
ffffffff80220ee7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220eee:	00 00 00 
ffffffff80220ef1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ef8:	00 00 00 
ffffffff80220efb:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f02:	00 00 00 
ffffffff80220f05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f0c:	00 00 00 
ffffffff80220f0f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f16:	00 00 00 
ffffffff80220f19:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f20:	00 00 00 
ffffffff80220f23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f2a:	00 00 00 
ffffffff80220f2d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f34:	00 00 00 
ffffffff80220f37:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f3e:	00 00 00 
ffffffff80220f41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f48:	00 00 00 
ffffffff80220f4b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f52:	00 00 00 
ffffffff80220f55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f5c:	00 00 00 
ffffffff80220f5f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f66:	00 00 00 
ffffffff80220f69:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f70:	00 00 00 
ffffffff80220f73:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f7a:	00 00 00 
ffffffff80220f7d:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f84:	00 00 00 
ffffffff80220f87:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f8e:	00 00 00 
ffffffff80220f91:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220f98:	00 00 00 
ffffffff80220f9b:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220fa2:	00 00 00 
ffffffff80220fa5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220fac:	00 00 00 
ffffffff80220faf:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220fb6:	00 00 00 
ffffffff80220fb9:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220fc0:	00 00 00 
ffffffff80220fc3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220fca:	00 00 00 
ffffffff80220fcd:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220fd4:	00 00 00 
ffffffff80220fd7:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220fde:	00 00 00 
ffffffff80220fe1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220fe8:	00 00 00 
ffffffff80220feb:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ff2:	00 00 00 
ffffffff80220ff5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80220ffc:	00 00 00 
ffffffff80220fff:	90                   	nop
